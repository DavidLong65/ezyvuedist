{"version":3,"file":"static/js/528.996e3d86.chunk.js","mappings":"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","sources":["ezyvuecore/three/examples/jsm/loaders/OBJLoader.js"],"sourcesContent":["import {\r\n\tBufferGeometry,\r\n\tFileLoader,\r\n\tFloat32BufferAttribute,\r\n\tGroup,\r\n\tLineBasicMaterial,\r\n\tLineSegments,\r\n\tLoader,\r\n\tMaterial,\r\n\tMesh,\r\n\tMeshPhongMaterial,\r\n\tPoints,\r\n\tPointsMaterial,\r\n\tVector3,\r\n\tColor\r\n} from '../../../build/three';\r\n\r\n// o object_name | g group_name\r\nconst _object_pattern = /^[og]\\s*(.+)?/;\r\n// mtllib file_reference\r\nconst _material_library_pattern = /^mtllib /;\r\n// usemtl material_name\r\nconst _material_use_pattern = /^usemtl /;\r\n// usemap map_name\r\nconst _map_use_pattern = /^usemap /;\r\nconst _face_vertex_data_separator_pattern = /\\s+/;\r\n\r\nconst _vA = new Vector3();\r\nconst _vB = new Vector3();\r\nconst _vC = new Vector3();\r\n\r\nconst _ab = new Vector3();\r\nconst _cb = new Vector3();\r\n\r\nconst _color = new Color();\r\n\r\nfunction ParserState() {\r\n\r\n\tconst state = {\r\n\t\tobjects: [],\r\n\t\tobject: {},\r\n\r\n\t\tvertices: [],\r\n\t\tnormals: [],\r\n\t\tcolors: [],\r\n\t\tuvs: [],\r\n\r\n\t\tmaterials: {},\r\n\t\tmaterialLibraries: [],\r\n\r\n\t\tstartObject: function ( name, fromDeclaration ) {\r\n\r\n\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\r\n\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\r\n\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\r\n\r\n\t\t\t\tthis.object.name = name;\r\n\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\r\n\r\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\r\n\r\n\t\t\t\tthis.object._finalize( true );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.object = {\r\n\t\t\t\tname: name || '',\r\n\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\r\n\r\n\t\t\t\tgeometry: {\r\n\t\t\t\t\tvertices: [],\r\n\t\t\t\t\tnormals: [],\r\n\t\t\t\t\tcolors: [],\r\n\t\t\t\t\tuvs: [],\r\n\t\t\t\t\thasUVIndices: false\r\n\t\t\t\t},\r\n\t\t\t\tmaterials: [],\r\n\t\t\t\tsmooth: true,\r\n\r\n\t\t\t\tstartMaterial: function ( name, libraries ) {\r\n\r\n\t\t\t\t\tconst previous = this._finalize( false );\r\n\r\n\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\r\n\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\r\n\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\r\n\r\n\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst material = {\r\n\t\t\t\t\t\tindex: this.materials.length,\r\n\t\t\t\t\t\tname: name || '',\r\n\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\r\n\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\r\n\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\r\n\t\t\t\t\t\tgroupEnd: - 1,\r\n\t\t\t\t\t\tgroupCount: - 1,\r\n\t\t\t\t\t\tinherited: false,\r\n\r\n\t\t\t\t\t\tclone: function ( index ) {\r\n\r\n\t\t\t\t\t\t\tconst cloned = {\r\n\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\r\n\t\t\t\t\t\t\t\tname: this.name,\r\n\t\t\t\t\t\t\t\tmtllib: this.mtllib,\r\n\t\t\t\t\t\t\t\tsmooth: this.smooth,\r\n\t\t\t\t\t\t\t\tgroupStart: 0,\r\n\t\t\t\t\t\t\t\tgroupEnd: - 1,\r\n\t\t\t\t\t\t\t\tgroupCount: - 1,\r\n\t\t\t\t\t\t\t\tinherited: false\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\r\n\t\t\t\t\t\t\treturn cloned;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tthis.materials.push( material );\r\n\r\n\t\t\t\t\treturn material;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tcurrentMaterial: function () {\r\n\r\n\t\t\t\t\tif ( this.materials.length > 0 ) {\r\n\r\n\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn undefined;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\t_finalize: function ( end ) {\r\n\r\n\t\t\t\t\tconst lastMultiMaterial = this.currentMaterial();\r\n\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\r\n\r\n\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\r\n\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\r\n\t\t\t\t\t\tlastMultiMaterial.inherited = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\r\n\t\t\t\t\tif ( end && this.materials.length > 1 ) {\r\n\r\n\t\t\t\t\t\tfor ( let mi = this.materials.length - 1; mi >= 0; mi -- ) {\r\n\r\n\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\r\n\r\n\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\r\n\t\t\t\t\tif ( end && this.materials.length === 0 ) {\r\n\r\n\t\t\t\t\t\tthis.materials.push( {\r\n\t\t\t\t\t\t\tname: '',\r\n\t\t\t\t\t\t\tsmooth: this.smooth\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn lastMultiMaterial;\r\n\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// Inherit previous objects material.\r\n\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\r\n\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\r\n\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\r\n\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\r\n\r\n\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\r\n\r\n\t\t\t\tconst declared = previousMaterial.clone( 0 );\r\n\t\t\t\tdeclared.inherited = true;\r\n\t\t\t\tthis.object.materials.push( declared );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.objects.push( this.object );\r\n\r\n\t\t},\r\n\r\n\t\tfinalize: function () {\r\n\r\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\r\n\r\n\t\t\t\tthis.object._finalize( true );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tparseVertexIndex: function ( value, len ) {\r\n\r\n\t\t\tconst index = parseInt( value, 10 );\r\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\r\n\r\n\t\t},\r\n\r\n\t\tparseNormalIndex: function ( value, len ) {\r\n\r\n\t\t\tconst index = parseInt( value, 10 );\r\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\r\n\r\n\t\t},\r\n\r\n\t\tparseUVIndex: function ( value, len ) {\r\n\r\n\t\t\tconst index = parseInt( value, 10 );\r\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\r\n\r\n\t\t},\r\n\r\n\t\taddVertex: function ( a, b, c ) {\r\n\r\n\t\t\tconst src = this.vertices;\r\n\t\t\tconst dst = this.object.geometry.vertices;\r\n\r\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\r\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddVertexPoint: function ( a ) {\r\n\r\n\t\t\tconst src = this.vertices;\r\n\t\t\tconst dst = this.object.geometry.vertices;\r\n\r\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddVertexLine: function ( a ) {\r\n\r\n\t\t\tconst src = this.vertices;\r\n\t\t\tconst dst = this.object.geometry.vertices;\r\n\r\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddNormal: function ( a, b, c ) {\r\n\r\n\t\t\tconst src = this.normals;\r\n\t\t\tconst dst = this.object.geometry.normals;\r\n\r\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\r\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddFaceNormal: function ( a, b, c ) {\r\n\r\n\t\t\tconst src = this.vertices;\r\n\t\t\tconst dst = this.object.geometry.normals;\r\n\r\n\t\t\t_vA.fromArray( src, a );\r\n\t\t\t_vB.fromArray( src, b );\r\n\t\t\t_vC.fromArray( src, c );\r\n\r\n\t\t\t_cb.subVectors( _vC, _vB );\r\n\t\t\t_ab.subVectors( _vA, _vB );\r\n\t\t\t_cb.cross( _ab );\r\n\r\n\t\t\t_cb.normalize();\r\n\r\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\r\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\r\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\r\n\r\n\t\t},\r\n\r\n\t\taddColor: function ( a, b, c ) {\r\n\r\n\t\t\tconst src = this.colors;\r\n\t\t\tconst dst = this.object.geometry.colors;\r\n\r\n\t\t\tif ( src[ a ] !== undefined ) dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\t\t\tif ( src[ b ] !== undefined ) dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\r\n\t\t\tif ( src[ c ] !== undefined ) dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddUV: function ( a, b, c ) {\r\n\r\n\t\t\tconst src = this.uvs;\r\n\t\t\tconst dst = this.object.geometry.uvs;\r\n\r\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\r\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\r\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddDefaultUV: function () {\r\n\r\n\t\t\tconst dst = this.object.geometry.uvs;\r\n\r\n\t\t\tdst.push( 0, 0 );\r\n\t\t\tdst.push( 0, 0 );\r\n\t\t\tdst.push( 0, 0 );\r\n\r\n\t\t},\r\n\r\n\t\taddUVLine: function ( a ) {\r\n\r\n\t\t\tconst src = this.uvs;\r\n\t\t\tconst dst = this.object.geometry.uvs;\r\n\r\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\r\n\r\n\t\t\tconst vLen = this.vertices.length;\r\n\r\n\t\t\tlet ia = this.parseVertexIndex( a, vLen );\r\n\t\t\tlet ib = this.parseVertexIndex( b, vLen );\r\n\t\t\tlet ic = this.parseVertexIndex( c, vLen );\r\n\r\n\t\t\tthis.addVertex( ia, ib, ic );\r\n\t\t\tthis.addColor( ia, ib, ic );\r\n\r\n\t\t\t// normals\r\n\r\n\t\t\tif ( na !== undefined && na !== '' ) {\r\n\r\n\t\t\t\tconst nLen = this.normals.length;\r\n\r\n\t\t\t\tia = this.parseNormalIndex( na, nLen );\r\n\t\t\t\tib = this.parseNormalIndex( nb, nLen );\r\n\t\t\t\tic = this.parseNormalIndex( nc, nLen );\r\n\r\n\t\t\t\tthis.addNormal( ia, ib, ic );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.addFaceNormal( ia, ib, ic );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// uvs\r\n\r\n\t\t\tif ( ua !== undefined && ua !== '' ) {\r\n\r\n\t\t\t\tconst uvLen = this.uvs.length;\r\n\r\n\t\t\t\tia = this.parseUVIndex( ua, uvLen );\r\n\t\t\t\tib = this.parseUVIndex( ub, uvLen );\r\n\t\t\t\tic = this.parseUVIndex( uc, uvLen );\r\n\r\n\t\t\t\tthis.addUV( ia, ib, ic );\r\n\r\n\t\t\t\tthis.object.geometry.hasUVIndices = true;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// add placeholder values (for inconsistent face definitions)\r\n\r\n\t\t\t\tthis.addDefaultUV();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\taddPointGeometry: function ( vertices ) {\r\n\r\n\t\t\tthis.object.geometry.type = 'Points';\r\n\r\n\t\t\tconst vLen = this.vertices.length;\r\n\r\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\r\n\r\n\t\t\t\tconst index = this.parseVertexIndex( vertices[ vi ], vLen );\r\n\r\n\t\t\t\tthis.addVertexPoint( index );\r\n\t\t\t\tthis.addColor( index );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\taddLineGeometry: function ( vertices, uvs ) {\r\n\r\n\t\t\tthis.object.geometry.type = 'Line';\r\n\r\n\t\t\tconst vLen = this.vertices.length;\r\n\t\t\tconst uvLen = this.uvs.length;\r\n\r\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\r\n\r\n\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\r\n\r\n\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tstate.startObject( '', false );\r\n\r\n\treturn state;\r\n\r\n}\r\n\r\n//\r\n\r\nclass OBJLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t\tthis.materials = null;\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( text ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tsetMaterials( materials ) {\r\n\r\n\t\tthis.materials = materials;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tparse( text ) {\r\n\r\n\t\tconst state = new ParserState();\r\n\r\n\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\r\n\r\n\t\t\t// This is faster than String.split with regex that splits on both\r\n\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\r\n\r\n\t\t\t// join lines separated by a line continuation character (\\)\r\n\t\t\ttext = text.replace( /\\\\\\n/g, '' );\r\n\r\n\t\t}\r\n\r\n\t\tconst lines = text.split( '\\n' );\r\n\t\tlet result = [];\r\n\r\n\t\tfor ( let i = 0, l = lines.length; i < l; i ++ ) {\r\n\r\n\t\t\tconst line = lines[ i ].trimStart();\r\n\r\n\t\t\tif ( line.length === 0 ) continue;\r\n\r\n\t\t\tconst lineFirstChar = line.charAt( 0 );\r\n\r\n\t\t\t// @todo invoke passed in handler if any\r\n\t\t\tif ( lineFirstChar === '#' ) continue;\r\n\r\n\t\t\tif ( lineFirstChar === 'v' ) {\r\n\r\n\t\t\t\tconst data = line.split( _face_vertex_data_separator_pattern );\r\n\r\n\t\t\t\tswitch ( data[ 0 ] ) {\r\n\r\n\t\t\t\t\tcase 'v':\r\n\t\t\t\t\t\tstate.vertices.push(\r\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\r\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\r\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tif ( data.length >= 7 ) {\r\n\r\n\t\t\t\t\t\t\t_color.setRGB(\r\n\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\r\n\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\r\n\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\r\n\t\t\t\t\t\t\t).convertSRGBToLinear();\r\n\r\n\t\t\t\t\t\t\tstate.colors.push( _color.r, _color.g, _color.b );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// if no colors are defined, add placeholders so color and vertex indices match\r\n\r\n\t\t\t\t\t\t\tstate.colors.push( undefined, undefined, undefined );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'vn':\r\n\t\t\t\t\t\tstate.normals.push(\r\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\r\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\r\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'vt':\r\n\t\t\t\t\t\tstate.uvs.push(\r\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\r\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( lineFirstChar === 'f' ) {\r\n\r\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\r\n\t\t\t\tconst vertexData = lineData.split( _face_vertex_data_separator_pattern );\r\n\t\t\t\tconst faceVertices = [];\r\n\r\n\t\t\t\t// Parse the face vertex data into an easy to work with format\r\n\r\n\t\t\t\tfor ( let j = 0, jl = vertexData.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tconst vertex = vertexData[ j ];\r\n\r\n\t\t\t\t\tif ( vertex.length > 0 ) {\r\n\r\n\t\t\t\t\t\tconst vertexParts = vertex.split( '/' );\r\n\t\t\t\t\t\tfaceVertices.push( vertexParts );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\r\n\r\n\t\t\t\tconst v1 = faceVertices[ 0 ];\r\n\r\n\t\t\t\tfor ( let j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tconst v2 = faceVertices[ j ];\r\n\t\t\t\t\tconst v3 = faceVertices[ j + 1 ];\r\n\r\n\t\t\t\t\tstate.addFace(\r\n\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\r\n\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\r\n\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( lineFirstChar === 'l' ) {\r\n\r\n\t\t\t\tconst lineParts = line.substring( 1 ).trim().split( ' ' );\r\n\t\t\t\tlet lineVertices = [];\r\n\t\t\t\tconst lineUVs = [];\r\n\r\n\t\t\t\tif ( line.indexOf( '/' ) === - 1 ) {\r\n\r\n\t\t\t\t\tlineVertices = lineParts;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( let li = 0, llen = lineParts.length; li < llen; li ++ ) {\r\n\r\n\t\t\t\t\t\tconst parts = lineParts[ li ].split( '/' );\r\n\r\n\t\t\t\t\t\tif ( parts[ 0 ] !== '' ) lineVertices.push( parts[ 0 ] );\r\n\t\t\t\t\t\tif ( parts[ 1 ] !== '' ) lineUVs.push( parts[ 1 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\r\n\r\n\t\t\t} else if ( lineFirstChar === 'p' ) {\r\n\r\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\r\n\t\t\t\tconst pointData = lineData.split( ' ' );\r\n\r\n\t\t\t\tstate.addPointGeometry( pointData );\r\n\r\n\t\t\t} else if ( ( result = _object_pattern.exec( line ) ) !== null ) {\r\n\r\n\t\t\t\t// o object_name\r\n\t\t\t\t// or\r\n\t\t\t\t// g group_name\r\n\r\n\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\r\n\t\t\t\t// let name = result[ 0 ].slice( 1 ).trim();\r\n\t\t\t\tconst name = ( ' ' + result[ 0 ].slice( 1 ).trim() ).slice( 1 );\r\n\r\n\t\t\t\tstate.startObject( name );\r\n\r\n\t\t\t} else if ( _material_use_pattern.test( line ) ) {\r\n\r\n\t\t\t\t// material\r\n\r\n\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\r\n\r\n\t\t\t} else if ( _material_library_pattern.test( line ) ) {\r\n\r\n\t\t\t\t// mtl file\r\n\r\n\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\r\n\r\n\t\t\t} else if ( _map_use_pattern.test( line ) ) {\r\n\r\n\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\r\n\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\r\n\r\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\r\n\r\n\t\t\t} else if ( lineFirstChar === 's' ) {\r\n\r\n\t\t\t\tresult = line.split( ' ' );\r\n\r\n\t\t\t\t// smooth shading\r\n\r\n\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\r\n\t\t\t\t// but does not define a usemtl for each face set.\r\n\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\r\n\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\r\n\t\t\t\t// where explicit usemtl defines geometry groups.\r\n\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\r\n\t\t\t\t\t *\r\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\r\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\r\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\r\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\r\n\t\t\t\t\t * than 0.\"\r\n\t\t\t\t\t */\r\n\t\t\t\tif ( result.length > 1 ) {\r\n\r\n\t\t\t\t\tconst value = result[ 1 ].trim().toLowerCase();\r\n\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\r\n\t\t\t\t\tstate.object.smooth = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst material = state.object.currentMaterial();\r\n\t\t\t\tif ( material ) material.smooth = state.object.smooth;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Handle null terminated files without exception\r\n\t\t\t\tif ( line === '\\0' ) continue;\r\n\r\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.finalize();\r\n\r\n\t\tconst container = new Group();\r\n\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\r\n\r\n\t\tconst hasPrimitives = ! ( state.objects.length === 1 && state.objects[ 0 ].geometry.vertices.length === 0 );\r\n\r\n\t\tif ( hasPrimitives === true ) {\r\n\r\n\t\t\tfor ( let i = 0, l = state.objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst object = state.objects[ i ];\r\n\t\t\t\tconst geometry = object.geometry;\r\n\t\t\t\tconst materials = object.materials;\r\n\t\t\t\tconst isLine = ( geometry.type === 'Line' );\r\n\t\t\t\tconst isPoints = ( geometry.type === 'Points' );\r\n\t\t\t\tlet hasVertexColors = false;\r\n\r\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\r\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\r\n\r\n\t\t\t\tconst buffergeometry = new BufferGeometry();\r\n\r\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\r\n\r\n\t\t\t\tif ( geometry.normals.length > 0 ) {\r\n\r\n\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geometry.colors.length > 0 ) {\r\n\r\n\t\t\t\t\thasVertexColors = true;\r\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geometry.hasUVIndices === true ) {\r\n\r\n\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create materials\r\n\r\n\t\t\t\tconst createdMaterials = [];\r\n\r\n\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\r\n\r\n\t\t\t\t\tconst sourceMaterial = materials[ mi ];\r\n\t\t\t\t\tconst materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\r\n\t\t\t\t\tlet material = state.materials[ materialHash ];\r\n\r\n\t\t\t\t\tif ( this.materials !== null ) {\r\n\r\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\r\n\r\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\r\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\r\n\r\n\t\t\t\t\t\t\tconst materialLine = new LineBasicMaterial();\r\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\r\n\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\r\n\t\t\t\t\t\t\tmaterial = materialLine;\r\n\r\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\r\n\r\n\t\t\t\t\t\t\tconst materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\r\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\r\n\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\r\n\t\t\t\t\t\t\tmaterialPoints.map = material.map;\r\n\t\t\t\t\t\t\tmaterial = materialPoints;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( material === undefined ) {\r\n\r\n\t\t\t\t\t\tif ( isLine ) {\r\n\r\n\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\r\n\r\n\t\t\t\t\t\t} else if ( isPoints ) {\r\n\r\n\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\r\n\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\r\n\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\r\n\r\n\t\t\t\t\t\tstate.materials[ materialHash ] = material;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcreatedMaterials.push( material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create mesh\r\n\r\n\t\t\t\tlet mesh;\r\n\r\n\t\t\t\tif ( createdMaterials.length > 1 ) {\r\n\r\n\t\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\r\n\r\n\t\t\t\t\t\tconst sourceMaterial = materials[ mi ];\r\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( isLine ) {\r\n\r\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\r\n\r\n\t\t\t\t\t} else if ( isPoints ) {\r\n\r\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( isLine ) {\r\n\r\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\r\n\r\n\t\t\t\t\t} else if ( isPoints ) {\r\n\r\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmesh.name = object.name;\r\n\r\n\t\t\t\tcontainer.add( mesh );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// if there is only the default parser state object with no geometry data, interpret data as point cloud\r\n\r\n\t\t\tif ( state.vertices.length > 0 ) {\r\n\r\n\t\t\t\tconst material = new PointsMaterial( { size: 1, sizeAttenuation: false } );\r\n\r\n\t\t\t\tconst buffergeometry = new BufferGeometry();\r\n\r\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( state.vertices, 3 ) );\r\n\r\n\t\t\t\tif ( state.colors.length > 0 && state.colors[ 0 ] !== undefined ) {\r\n\r\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( state.colors, 3 ) );\r\n\t\t\t\t\tmaterial.vertexColors = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst points = new Points( buffergeometry, material );\r\n\t\t\t\tcontainer.add( points );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn container;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { OBJLoader };\r\n"],"names":["_object_pattern","_material_library_pattern","_material_use_pattern","_map_use_pattern","_face_vertex_data_separator_pattern","_vA","Vector3","_vB","_vC","_ab","_cb","_color","Color","ParserState","state","objects","object","vertices","normals","colors","uvs","materials","materialLibraries","startObject","name","fromDeclaration","this","previousMaterial","currentMaterial","undefined","_finalize","geometry","hasUVIndices","smooth","startMaterial","libraries","previous","inherited","groupCount","splice","index","material","length","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","push","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","value","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexPoint","addVertexLine","addNormal","addFaceNormal","fromArray","subVectors","cross","normalize","x","y","z","addColor","addUV","addDefaultUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","nLen","uvLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","OBJLoader","_Loader","_inherits","_super","_createSuper","manager","_this","_classCallCheck","call","_createClass","key","url","onLoad","onProgress","onError","scope","loader","FileLoader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","text","parse","e","console","error","itemError","indexOf","replace","lines","split","result","i","line","trimStart","lineFirstChar","charAt","data","parseFloat","setRGB","convertSRGBToLinear","r","g","vertexData","slice","trim","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","substring","lineVertices","lineUVs","li","llen","parts","pointData","exec","test","warn","toLowerCase","container","Group","concat","isLine","isPoints","hasVertexColors","buffergeometry","BufferGeometry","setAttribute","Float32BufferAttribute","createdMaterials","miLen","sourceMaterial","materialHash","create","LineBasicMaterial","PointsMaterial","materialPoints","size","sizeAttenuation","Material","prototype","copy","color","map","materialLine","MeshPhongMaterial","flatShading","vertexColors","mesh","addGroup","LineSegments","Points","Mesh","add","points","Loader"],"sourceRoot":""}