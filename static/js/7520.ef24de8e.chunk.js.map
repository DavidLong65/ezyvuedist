{"version":3,"file":"static/js/7520.ef24de8e.chunk.js","mappings":"oOAOMA,EAAS,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GAAA,SAAAA,IAAA,OAAAK,EAAAA,EAAAA,GAAA,KAAAL,GAAAG,EAAAG,MAAA,KAAAC,UAAA,CAwFb,OAxFaC,EAAAA,EAAAA,GAAAR,EAAA,EAAAS,IAAA,OAAAC,MAEd,SAAMC,EAAKC,EAAQC,EAAYC,GAE9B,IAAMC,EAAQC,KAERC,EAAS,IAAIC,EAAAA,IAAYF,KAAKG,SACpCF,EAAOG,QAASJ,KAAKK,MACrBJ,EAAOK,iBAAkBN,KAAKO,eAC9BN,EAAOO,mBAAoBR,KAAKS,iBAChCR,EAAOS,KAAMf,GAAK,SAAWgB,GAE5B,IAECf,EAAQG,EAAMa,MAAOD,GAEtB,CAAE,MAAQE,GAEJf,EAEJA,EAASe,GAITC,QAAQC,MAAOF,GAIhBd,EAAMI,QAAQa,UAAWrB,EAE1B,CAED,GAAGE,EAAYC,EAEhB,GAAC,CAAAL,IAAA,QAAAC,MAED,SAAOiB,GAEN,IAKuBM,EALjBC,EAAQP,EAAKQ,MAAO,MAEpBC,EAAW,GACXC,EAAS,GAAGC,GAAAC,EAAAA,EAAAA,GAEAL,GAAK,IAAvB,IAAAI,EAAAE,MAAAP,EAAAK,EAAAG,KAAAC,MAA0B,CAAC,IAAjBC,EAAIV,EAAAvB,MAIb,GAA0B,OAF1BiC,EAAOA,EAAKC,QAEFC,OAAQ,GAAlB,CAEA,IAAMC,EAAaH,EAAKR,MAAO,OAEJ,IAAtBW,EAAWC,SAIfX,EAASY,KAAMC,WAAYH,EAAY,KACvCV,EAASY,KAAMC,WAAYH,EAAY,KACvCV,EAASY,KAAMC,WAAYH,EAAY,MAIb,IAAtBA,EAAWC,SAIfX,EAASY,KAAMC,WAAYH,EAAY,KACvCV,EAASY,KAAMC,WAAYH,EAAY,KACvCV,EAASY,KAAMC,WAAYH,EAAY,KAEvCT,EAAOW,KAAMC,WAAYH,EAAY,IAAQ,KAC7CT,EAAOW,KAAMC,WAAYH,EAAY,IAAQ,KAC7CT,EAAOW,KAAMC,WAAYH,EAAY,IAAQ,KAxBN,CA4BzC,CAAC,OAAAI,GAAAZ,EAAAT,EAAAqB,EAAA,SAAAZ,EAAAa,GAAA,CAED,IAAMC,EAAW,IAAIC,EAAAA,IASrB,OARAD,EAASE,aAAc,WAAY,IAAIC,EAAAA,IAAwBnB,EAAU,IAEpEC,EAAOU,OAAS,GAEpBK,EAASE,aAAc,QAAS,IAAIC,EAAAA,IAAwBlB,EAAQ,IAI9De,CAER,KAACpD,CAAA,CAxFa,CAASwD,EAAAA,I","sources":["ezyvuecore/three/examples/jsm/loaders/XYZLoader.js"],"sourcesContent":["import {\r\n\tBufferGeometry,\r\n\tFileLoader,\r\n\tFloat32BufferAttribute,\r\n\tLoader\r\n} from '../../../build/three';\r\n\r\nclass XYZLoader extends Loader {\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( text ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tparse( text ) {\r\n\r\n\t\tconst lines = text.split( '\\n' );\r\n\r\n\t\tconst vertices = [];\r\n\t\tconst colors = [];\r\n\r\n\t\tfor ( let line of lines ) {\r\n\r\n\t\t\tline = line.trim();\r\n\r\n\t\t\tif ( line.charAt( 0 ) === '#' ) continue; // skip comments\r\n\r\n\t\t\tconst lineValues = line.split( /\\s+/ );\r\n\r\n\t\t\tif ( lineValues.length === 3 ) {\r\n\r\n\t\t\t\t// XYZ\r\n\r\n\t\t\t\tvertices.push( parseFloat( lineValues[ 0 ] ) );\r\n\t\t\t\tvertices.push( parseFloat( lineValues[ 1 ] ) );\r\n\t\t\t\tvertices.push( parseFloat( lineValues[ 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( lineValues.length === 6 ) {\r\n\r\n\t\t\t\t// XYZRGB\r\n\r\n\t\t\t\tvertices.push( parseFloat( lineValues[ 0 ] ) );\r\n\t\t\t\tvertices.push( parseFloat( lineValues[ 1 ] ) );\r\n\t\t\t\tvertices.push( parseFloat( lineValues[ 2 ] ) );\r\n\r\n\t\t\t\tcolors.push( parseFloat( lineValues[ 3 ] ) / 255 );\r\n\t\t\t\tcolors.push( parseFloat( lineValues[ 4 ] ) / 255 );\r\n\t\t\t\tcolors.push( parseFloat( lineValues[ 5 ] ) / 255 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\r\n\r\n\t\tif ( colors.length > 0 ) {\r\n\r\n\t\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { XYZLoader };\r\n"],"names":["XYZLoader","_Loader","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","url","onLoad","onProgress","onError","scope","this","loader","FileLoader","manager","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","text","parse","e","console","error","itemError","_step","lines","split","vertices","colors","_iterator","_createForOfIteratorHelper","s","n","done","line","trim","charAt","lineValues","length","push","parseFloat","err","f","geometry","BufferGeometry","setAttribute","Float32BufferAttribute","Loader"],"sourceRoot":""}