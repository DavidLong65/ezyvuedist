{"version":3,"file":"static/js/7552.7da689df.chunk.js","mappings":"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","sources":["members/help/productConfigurator.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","../node_modules/@material-ui/core/esm/Typography/Typography.js"],"sourcesContent":["import React from \"react\"\r\nimport { appConfig } from '../../config/appConfig';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class ProductConfiguratorHelp extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='help-page'>\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <Link to=\"/help\">\r\n                        Help Center\r\n                    </Link>\r\n                    <Link to=\"/help/editing\">\r\n                        Editing\r\n                    </Link>\r\n                    <Link to=\"/help/ProductConfigurator\">\r\n                        Product Configurator\r\n                    </Link>\r\n                </Breadcrumbs>\r\n                    <h1>Product Configurator Panel</h1>\r\n                    In the configurator panel you can create product variants. \r\n                    In addition to variants with different material attributes such as color you can also create variants with different models.\r\n                    The chair demo is an example of this where different seat and leg model variants can be swapped in.\r\n                    As you create parts and variants an on-screen configurator control for selecting variants is built automatically. <br />\r\n                    <Link to='/modelViewer?productId=626651cea786f2e2a89170b4&enablear'>\r\n                        <div className='homepage-button'>\r\n                            View the demo\r\n                        </div>\r\n                    </Link>\r\n                    <h2>Terminology</h2>\r\n                    <h4>Part</h4>\r\n                    A part represents a part of a model to be customized. \r\n                    The body of a car that can be customized with different colors is an example of a part.<br/>\r\n                    There are two types of parts, a normal part which usually has material variants and a component part. \r\n                    <h4>Component Part</h4>\r\n                    An example of a component part is the metal legs of a chair.\r\n                    You could create wooden and metal component parts, each with their own 3d model.\r\n                    When a user clicks the component part in the controller, the model will replace the current part model.<br/>\r\n                    See the chair demo to see component parts in action.<br/>\r\n                    Component parts are added to a normal part, see the component parts section below.\r\n                    <h4>Variant</h4>\r\n                    Variant represents a single customized part of a model. For example it may be the red paint variant of a car body part.\r\n                    <h2>Model Prerequisites</h2>\r\n                    To create product variants, a material (or materials) is needed for each part\r\n                    of the model that you want to customize. For example to show a car with different paint colors\r\n                    you could create a material and apply this to the car body mesh.\r\n                    <h2>Controller Options</h2>\r\n                    <h4>Show control in the viewer</h4>\r\n                    Hide/Show the control<br/> \r\n                    <h4>Compact view</h4>\r\n                    Select compact/expanded view. Compact view is automatically activated for mobile screen sizes in the viewer.\r\n                    <h4>Position</h4>\r\n                    Set the position of the control panel in the viewer.\r\n                    <h4>Icon size</h4>\r\n                    Change the icon size.<br/> \r\n                    <h4>Icon border radius</h4>\r\n                    Change the roundness of the icon corners.<br/>\r\n                    <h4>Variant icon size</h4>\r\n                    Change the icon size for variants.<br/> \r\n                    <h4>Variant icon border radius</h4>\r\n                    Change the roundness of the icon corners for variants.<br/>\r\n                    <h4>Title text</h4>\r\n                    Set text for the control panel header<br/>\r\n                    <h2>Part panel</h2>\r\n                    To add a part click the add part button\r\n                    <h3>Part Settings</h3>\r\n                    <img style={{ width: '300px' }} alt='add group' src={require('assets/images/help/partsettings.jpg')} />\r\n                    <h4>Name</h4>\r\n                    Change the name of the part<br/> \r\n                    <h4>Icon image</h4>\r\n                    Click the icon next to the name to upload and select a part icon.<br/> \r\n                    <h4>Delete</h4>\r\n                    Click the bin icon to delete this part.<br/>\r\n                    <h4>Component part</h4>\r\n                    Select the checkbox to make this part a component part.<br/>\r\n                    <img style={{ width: '300px' }} alt='add group' src={require('assets/images/help/swappablesettings.JPG')} />\r\n                    <h4>Node name</h4>\r\n                    Enter the name of the node on the model that will be swapped. This id the parent node of the mesh to be swapped.\r\n                    <h4>Part name</h4>\r\n                    Select the name of the model uploaded in the Project Settings page.\r\n                    <h3>Component parts</h3>\r\n                    <img style={{ width: '300px' }} alt='group name' src={require('assets/images/help/swappableparts.jpg')} />\r\n                    <h4>Add part</h4>\r\n                    Select a part in the dropdown and click the add part button to add a part to the list\r\n                    <h4>Remove part</h4>\r\n                    Click the bin icon to remove a part from the list.<br/>\r\n                    <h2>Variants panel</h2>\r\n                    The variant panel shows the variants for a given part. To add a variant click the add variant button.\r\n                    <h2>Variant panel</h2>\r\n                    <img style={{ width: '300px' }} alt='add group' src={require('assets/images/help/variantpanel.jpg')} />\r\n                    <h3>Variant settings</h3>\r\n                    <h4>Name</h4>\r\n                    Change the name of the variant<br/> \r\n                    <h4>Color</h4>\r\n                    Click the color selector to set a color.<br/> \r\n                    <h4>Icon image</h4>\r\n                    Click the icon to upload and select an image.<br/> \r\n                    <h4>Delete</h4>\r\n                    Click the bin icon to delete this part.<br/>\r\n                    <h3>Materials</h3>\r\n                    To add a material select the material name from the dropdown and click the add material button.\r\n                    <h3>Material Settings</h3>\r\n                    <p>\r\n                        The variant material editor shares most of the functionality of the editor in the material tab.\r\n                        See the <a href='/help/editMaterials'>Material Editor</a> page for more information.\r\n                        The properties of the variant material override those of the native model material.\r\n                    </p>\r\n                    <img style={{ width: '300px' }} alt='group name' src={require('assets/images/help/variantmaterial.jpg')} />\r\n                    <h4>Select Texture</h4>\r\n                    Click on the texture image to upload and select a texture\r\n                    <h4>Reset</h4>\r\n                    Click the reset button in the material properties window to change all the properties back to the original values.<br />\r\n                    NOTE: This operation cannot be undone.\r\n                    <h4>Delete</h4>\r\n                    Click the delete button in the material properties window to delete the material<br />\r\n                    NOTE: This operation cannot be undone.\r\n                </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"names":["ProductConfiguratorHelp","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_jsxs","className","children","Breadcrumbs","_jsx","Link","to","style","width","alt","src","require","href","React","createSvgIcon","d","withStyles","theme","root","display","marginLeft","spacing","marginRight","backgroundColor","palette","grey","color","borderRadius","cursor","boxShadow","shadows","emphasize","icon","height","name","props","classes","other","_objectWithoutProperties","ButtonBase","_extends","component","focusRipple","MoreHorizIcon","ref","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","concat","Typography","clsx","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","padding","margin","listStyle","userSelect","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","_props$align","align","_props$color","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","capitalize","typography","caption","button","overline","srOnly","position","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock"],"sourceRoot":""}