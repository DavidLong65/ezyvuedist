{"version":3,"file":"static/js/3963.c8f3b18f.chunk.js","mappings":"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","sources":["common/loading/circularProgressWithLabel.js","common/loading/loadingOverlay.js","public/customerFeedback.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default function CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress {...props} />\r\n      {\r\n        props.variant === 'determinate' &&\r\n        <Box\r\n          top={0}\r\n          left={0}\r\n          bottom={0}\r\n          right={0}\r\n          position=\"absolute\"\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">\r\n            <span style={{ fontSize: props.fontSize }}>\r\n              {\r\n                `${Math.round(props.value)}%`\r\n              }\r\n            </span>\r\n          </Typography>\r\n        </Box>\r\n      }\r\n    </Box>\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  fontSize: PropTypes.string,\r\n  variant: PropTypes.string\r\n};\r\n","import React, {Fragment} from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgressWithLabel from './circularProgressWithLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  backdrop: {\r\n    zIndex: 5,\r\n    color: 'white',\r\n    backgroundColor: 'rgb(255, 255, 255)'\r\n  },\r\n}));\r\n\r\nexport default function LoadingOverlay(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <Fragment>\r\n        <Backdrop className={classes.backdrop} open={props.show} transitionDuration={{exit: 1000, enter: 0, appear: 0}}>\r\n            <div style={{textAlign: \"center\"}}>\r\n                <CircularProgressWithLabel variant={props.variant} color=\"primary\" value={props.value} size={85} fontSize='24px' />\r\n            </div>\r\n        </Backdrop>\r\n        {props.children}\r\n      </Fragment>\r\n  );\r\n}\r\n\r\nLoadingOverlay.defaultProps = {\r\n  variant: 'indeterminate',\r\n  value: 0\r\n};\r\n\r\nLoadingOverlay.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  value: PropTypes.number,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.array,\r\n    PropTypes.object\r\n  ]),\r\n  variant: PropTypes.string // indeterminate or determinate\r\n};","import React from 'react'\r\nimport Services from 'ezyvuecore/services/services';\r\nimport LoadingOverlay from 'common/loading/loadingOverlay'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport AuthManager from 'ezyvuecore/core/auth/authManager';\r\n\r\nexport default class CustomerFeedback extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error: '',\r\n            submitted: false,\r\n            showLoadingScreen: false\r\n        };\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    displayError(error) {\r\n        this.setState({ error: error, showLoadingScreen: false });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ showLoadingScreen: true });\r\n\r\n        const { userId } = AuthManager.getAuthCookie();\r\n\r\n        this.user = await Services.accountService.getUserById(userId);\r\n        \r\n        this.setState({ showLoadingScreen: false });\r\n    }\r\n\r\n    async onSubmit(e) {\r\n        try {\r\n            this.setState({ showLoadingScreen: true });\r\n\r\n            const resp = await Services.adminService.sendMessage({\r\n                firstName: this.user.FirstName,\r\n                lastName: this.user.LastName,\r\n                email: this.user.Email,\r\n                message: `Customer Feedback: ${e.target.message.value} Rating: ${e.target.ratings.value}`\r\n            });\r\n\r\n            if (!resp.ok)\r\n                throw Error();\r\n\r\n            this.setState({ submitted: true, showLoadingScreen: false });\r\n        }\r\n        catch (e) {\r\n            this.displayError('An error occured submitting the form. Please try again.');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.submitted)\r\n            return (\r\n                <div className='center-page-xy center std-page'>\r\n                    <div className='centered-page-box' style={{ textAlign: 'center' }}>\r\n                        <div>\r\n                            <img src={require('assets/images/emailsent.jpg')} alt='' style={{ width: '128px', marginBottom: '60px' }} />\r\n                        </div>\r\n                        <h3>Thank you for providing feedback.</h3>\r\n                    </div>\r\n                </div>\r\n            );\r\n        return (\r\n            <LoadingOverlay show={this.state.showLoadingScreen}>\r\n                <div className='center-page-xy center std-page'>\r\n                    <div className='centered-page-box' style={{ textAlign: 'center' }}>\r\n                    <div style={{ textAlign: 'center' }}>\r\n                        <h1>Feedback Form</h1>\r\n                        Please take a few moments to let us know about your experience using Ezyvue.\r\n                    </div>\r\n                    <br />\r\n                    <form  onSubmit={\r\n                        e => {\r\n                            e.preventDefault();\r\n\r\n                            if(e.target.message.value.length < 25) {\r\n                                alert('please enter at least 25 characters');\r\n                                return false;\r\n                            }\r\n\r\n                            if(!e.target.ratings.value) {\r\n                                alert(\"Please rate the service\");\r\n                                return false;\r\n                            }\r\n\r\n                            this.onSubmit(e);\r\n                        }\r\n                    }>\r\n                        <h4>How do you rate the service?</h4>\r\n                        <div>\r\n                            <FormControl>\r\n                                <RadioGroup name='ratings' row onChange={this.onRatingChange}>\r\n                                    <FormControlLabel style={{width: '125px'}} value=\"1\" control={<Radio />} label=\"Excellent\" />\r\n                                    <FormControlLabel style={{width: '125px'}} value=\"2\" control={<Radio />} label=\"Very Good\" />\r\n                                    <FormControlLabel style={{width: '125px'}} value=\"3\" control={<Radio />} label=\"Good\" />\r\n                                    <FormControlLabel style={{width: '125px'}} value=\"4\" control={<Radio />} label=\"Average\" />\r\n                                    <FormControlLabel style={{width: '125px'}} value=\"5\" control={<Radio />} label=\"Poor\" />\r\n                                </RadioGroup>\r\n                            </FormControl>\r\n                            <br/>\r\n                            <br/>\r\n                        </div>\r\n                        <h4>Please let us know how we can improve the service</h4>\r\n                        <div>\r\n                            <TextField\r\n                                style={{ width: \"100%\" }}\r\n                                label=\"Message\"\r\n                                variant='outlined'\r\n                                required\r\n                                multiline\r\n                                rows={8}\r\n                                name='message'></TextField>\r\n                        </div>\r\n                        <div style={{display: 'flex'}}>\r\n                            <Button\r\n                                className='center'\r\n                                type='submit'\r\n                                variant='contained'\r\n                                color='primary'\r\n                                size='large'>\r\n                                Submit\r\n                            </Button>\r\n                        </div>\r\n\r\n                    </form>\r\n                    <br />\r\n                    </div>\r\n                </div>\r\n\r\n            </LoadingOverlay>\r\n        );\r\n    }\r\n}"],"names":["CircularProgressWithLabel","props","_jsxs","Box","position","display","children","_jsx","CircularProgress","_objectSpread","variant","top","left","bottom","right","alignItems","justifyContent","Typography","component","color","style","fontSize","concat","Math","round","value","useStyles","makeStyles","backdrop","zIndex","backgroundColor","LoadingOverlay","classes","Fragment","Backdrop","className","open","show","transitionDuration","exit","enter","appear","textAlign","size","defaultProps","CustomerFeedback","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","state","error","submitted","showLoadingScreen","onSubmit","bind","_assertThisInitialized","_createClass","key","this","setState","_componentDidMount","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_AuthManager$getAuthC","userId","wrap","_context","prev","next","AuthManager","getAuthCookie","Services","accountService","getUserById","user","sent","stop","apply","arguments","_onSubmit","_callee2","e","_context2","adminService","sendMessage","firstName","FirstName","lastName","LastName","email","Email","message","target","ratings","ok","Error","t0","displayError","_x","_this2","src","require","alt","width","marginBottom","preventDefault","length","alert","FormControl","RadioGroup","name","row","onChange","onRatingChange","FormControlLabel","control","Radio","label","TextField","required","multiline","rows","Button","type","React"],"sourceRoot":""}