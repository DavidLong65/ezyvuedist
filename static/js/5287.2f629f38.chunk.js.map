{"version":3,"file":"static/js/5287.2f629f38.chunk.js","mappings":"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","sources":["members/help/editMaterials.js","../node_modules/@material-ui/core/esm/internal/svg-icons/MoreHoriz.js","../node_modules/@material-ui/core/esm/Breadcrumbs/BreadcrumbCollapsed.js","../node_modules/@material-ui/core/esm/Breadcrumbs/Breadcrumbs.js","../node_modules/@material-ui/core/esm/Typography/Typography.js"],"sourcesContent":["import React from \"react\"\r\nimport { Link } from 'react-router-dom';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\n\r\nexport default class EditMaterials extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='help-page'>\r\n                <Breadcrumbs aria-label=\"breadcrumb\">\r\n                    <Link to=\"/help\">\r\n                        Help Center\r\n                    </Link>\r\n                    <Link to=\"/help/editing\">\r\n                        Editing\r\n                    </Link>\r\n                    <Link to=\"/help/editMaterials\">\r\n                        Edit Materials\r\n                    </Link>\r\n                </Breadcrumbs>\r\n                <h1>Editing Materials</h1>\r\n                <p>\r\n                    The material panel shows a list of PBR materials for the model which can edited.\r\n                    Clicking on a material reveals a user interface for editing the material properties.\r\n                </p>\r\n                <img style={{ width: '300px' }} alt='mterial' src={require('assets/images/help/material.jpg')} />\r\n\r\n                <h2>Textures</h2>\r\n                <p>\r\n                    The textures window shows all the texures assigned to the material as thumbnail images. <br />\r\n                    Clicking on an image shows a larger version of the thumbnail in a separate window.<br />\r\n                </p>\r\n                <img style={{ width: '300px' }} alt='textures' src={require('assets/images/help/textures.jpg')} />\r\n                <p style={{ color: 'grey' }}>\r\n                    The following maps will be shown if present <br />\r\n                    Base Map<br />\r\n                    Normal Map<br />\r\n                    Light Map<br />\r\n                    Alpha Map<br />\r\n                    Ambient Occlusion Map<br />\r\n                    Displacement Map<br />\r\n                    Roughness Map<br />\r\n                    Emissive Map<br />\r\n                </p>\r\n\r\n\r\n                <h2>Material Properties</h2>\r\n                <h4>Diffuse colour</h4>\r\n                Change the base color of the material using the color input control.\r\n                The color will be multplied by the base map texture.<br/><br/> \r\n                <h4>Roughness</h4>\r\n                The roughness slider controls how reflective the material is.\r\n                If the scene has an environment map this will be used for relections.\r\n                To make an object very reflective set the metalness to a high value.<br />\r\n                Note: has no effect when refraction is enabled.<br/><br/> \r\n                <img style={{ width: '300px' }} alt='roughness' src={require('assets/images/help/reflective.jpg')} />\r\n                <img style={{ width: '300px' }} alt='roughness1' src={require('assets/images/help/rough.jpg')} />\r\n                <h4>Metalness</h4>\r\n                The metalness slider controls how metallic the material looks. To make an object very reflective set the metalness to a high value.<br />\r\n                Note: has no effect when refraction is enabled.<br/><br/> \r\n                <img style={{ width: '300px' }} alt='metalness' src={require('assets/images/help/metallic.jpg')}/>\r\n                <h4>Emissive</h4>\r\n                Change the emissive light color of the material using the color input control.<br />\r\n                Note: has no effect when refraction is enabled.<br/><br/> \r\n                <h4>Transparency</h4>\r\n                The transparency options control the transparency/translucency of a material.<br />\r\n                Note: changing the opacity property will change the material brightness when transparency is not selected.\r\n                <img style={{ width: '300px' }} alt='transparency' src={require('assets/images/help/transparent.jpg')} />\r\n                <h4>Side</h4>\r\n                The side option controls the visibility of geometry that faces towards or away from the viewer.\r\n                Transparency issues caused by this value set to &apos;Both&apos; can be resolved by setting the value to &apos;Front&apos;.<br/><br/> \r\n                <div style={{ display: 'block' }}>\r\n                    <h2>Refraction</h2>\r\n                    <img style={{ width: '300px' }} alt='refraction' src={require('assets/images/help/refraction.jpg')} />\r\n                    Refraction gives a glass-like appearance to a material.<br />\r\n                    Refraction can be enabled by adding custom material properties in Blender.<br />\r\n                    Import your scene file into Blender and add the following values to the material Custom Properties panel:<br /><br />\r\n                    <b>Property Name: </b>refractive<br />\r\n                    <b>Property Value: </b>1<br /><br />\r\n                    <b>Property Name: </b>refractionRatio<br />\r\n                    <b>Property Value: </b>0 - 1.0 (smaller values give greater refraction, 0.95 is a good value to try) <br /><br />\r\n                    Export your scene as a gltf file. Before clicking export expand the include tab and tick the Custom Properties check box.<br />\r\n                    In Ezyvue Studio select a refraction map and 3d objects will have a glass-like appearance where the material is applied.<br/><br/> \r\n                </div>\r\n                <h2>Gemstone Effect</h2>\r\n                <img style={{ width: '300px' }} alt='gemstone' src={require('assets/images/help/gemstone.jpg')} />\r\n                To give a material a gemstone reflection effect include the word &apos;gemstone&apos; in the material name and turn on bloom in the\r\n                effects panel.\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 10c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm12 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm-6 0c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"\n}), 'MoreHoriz');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '../styles/withStyles';\nimport { emphasize } from '../styles/colorManipulator';\nimport MoreHorizIcon from '../internal/svg-icons/MoreHoriz';\nimport ButtonBase from '../ButtonBase';\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      display: 'flex',\n      marginLeft: theme.spacing(0.5),\n      marginRight: theme.spacing(0.5),\n      backgroundColor: theme.palette.grey[100],\n      color: theme.palette.grey[700],\n      borderRadius: 2,\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: theme.palette.grey[200]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[0],\n        backgroundColor: emphasize(theme.palette.grey[200], 0.12)\n      }\n    },\n    icon: {\n      width: 24,\n      height: 16\n    }\n  };\n};\n/**\n * @ignore - internal component.\n */\n\n\nfunction BreadcrumbCollapsed(props) {\n  var classes = props.classes,\n      other = _objectWithoutProperties(props, [\"classes\"]);\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    component: \"li\",\n    className: classes.root,\n    focusRipple: true\n  }, other), /*#__PURE__*/React.createElement(MoreHorizIcon, {\n    className: classes.icon\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? BreadcrumbCollapsed.propTypes = {\n  /**\n   * @ignore\n   */\n  classes: PropTypes.object.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateBreadcrumbCollapsed'\n})(BreadcrumbCollapsed);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport BreadcrumbCollapsed from './BreadcrumbCollapsed';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {},\n\n  /* Styles applied to the ol element. */\n  ol: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    padding: 0,\n    margin: 0,\n    listStyle: 'none'\n  },\n\n  /* Styles applied to the li element. */\n  li: {},\n\n  /* Styles applied to the separator element. */\n  separator: {\n    display: 'flex',\n    userSelect: 'none',\n    marginLeft: 8,\n    marginRight: 8\n  }\n};\n\nfunction insertSeparators(items, className, separator) {\n  return items.reduce(function (acc, current, index) {\n    if (index < items.length - 1) {\n      acc = acc.concat(current, /*#__PURE__*/React.createElement(\"li\", {\n        \"aria-hidden\": true,\n        key: \"separator-\".concat(index),\n        className: className\n      }, separator));\n    } else {\n      acc.push(current);\n    }\n\n    return acc;\n  }, []);\n}\n\nvar Breadcrumbs = /*#__PURE__*/React.forwardRef(function Breadcrumbs(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'nav' : _props$component,\n      _props$expandText = props.expandText,\n      expandText = _props$expandText === void 0 ? 'Show path' : _props$expandText,\n      _props$itemsAfterColl = props.itemsAfterCollapse,\n      itemsAfterCollapse = _props$itemsAfterColl === void 0 ? 1 : _props$itemsAfterColl,\n      _props$itemsBeforeCol = props.itemsBeforeCollapse,\n      itemsBeforeCollapse = _props$itemsBeforeCol === void 0 ? 1 : _props$itemsBeforeCol,\n      _props$maxItems = props.maxItems,\n      maxItems = _props$maxItems === void 0 ? 8 : _props$maxItems,\n      _props$separator = props.separator,\n      separator = _props$separator === void 0 ? '/' : _props$separator,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"component\", \"expandText\", \"itemsAfterCollapse\", \"itemsBeforeCollapse\", \"maxItems\", \"separator\"]);\n\n  var _React$useState = React.useState(false),\n      expanded = _React$useState[0],\n      setExpanded = _React$useState[1];\n\n  var renderItemsBeforeAndAfter = function renderItemsBeforeAndAfter(allItems) {\n    var handleClickExpand = function handleClickExpand(event) {\n      setExpanded(true); // The clicked element received the focus but gets removed from the DOM.\n      // Let's keep the focus in the component after expanding.\n\n      var focusable = event.currentTarget.parentNode.querySelector('a[href],button,[tabindex]');\n\n      if (focusable) {\n        focusable.focus();\n      }\n    }; // This defends against someone passing weird input, to ensure that if all\n    // items would be shown anyway, we just show all items without the EllipsisItem\n\n\n    if (itemsBeforeCollapse + itemsAfterCollapse >= allItems.length) {\n      if (process.env.NODE_ENV !== 'production') {\n        console.error(['Material-UI: You have provided an invalid combination of props to the Breadcrumbs.', \"itemsAfterCollapse={\".concat(itemsAfterCollapse, \"} + itemsBeforeCollapse={\").concat(itemsBeforeCollapse, \"} >= maxItems={\").concat(maxItems, \"}\")].join('\\n'));\n      }\n\n      return allItems;\n    }\n\n    return [].concat(_toConsumableArray(allItems.slice(0, itemsBeforeCollapse)), [/*#__PURE__*/React.createElement(BreadcrumbCollapsed, {\n      \"aria-label\": expandText,\n      key: \"ellipsis\",\n      onClick: handleClickExpand\n    })], _toConsumableArray(allItems.slice(allItems.length - itemsAfterCollapse, allItems.length)));\n  };\n\n  var allItems = React.Children.toArray(children).filter(function (child) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Breadcrumbs component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.isValidElement(child);\n  }).map(function (child, index) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      className: classes.li,\n      key: \"child-\".concat(index)\n    }, child);\n  });\n  return /*#__PURE__*/React.createElement(Typography, _extends({\n    ref: ref,\n    component: Component,\n    color: \"textSecondary\",\n    className: clsx(classes.root, className)\n  }, other), /*#__PURE__*/React.createElement(\"ol\", {\n    className: classes.ol\n  }, insertSeparators(expanded || maxItems && allItems.length <= maxItems ? allItems : renderItemsBeforeAndAfter(allItems), classes.separator, separator)));\n});\nprocess.env.NODE_ENV !== \"production\" ? Breadcrumbs.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The breadcrumb children.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default label for the expand button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  expandText: PropTypes.string,\n\n  /**\n   * If max items is exceeded, the number of items to show after the ellipsis.\n   */\n  itemsAfterCollapse: PropTypes.number,\n\n  /**\n   * If max items is exceeded, the number of items to show before the ellipsis.\n   */\n  itemsBeforeCollapse: PropTypes.number,\n\n  /**\n   * Specifies the maximum number of breadcrumbs to display. When there are more\n   * than the maximum number, only the first `itemsBeforeCollapse` and last `itemsAfterCollapse`\n   * will be shown, with an ellipsis in between.\n   */\n  maxItems: PropTypes.number,\n\n  /**\n   * Custom separator node.\n   */\n  separator: PropTypes.node\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiBreadcrumbs'\n})(Breadcrumbs);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      margin: 0\n    },\n\n    /* Styles applied to the root element if `variant=\"body2\"`. */\n    body2: theme.typography.body2,\n\n    /* Styles applied to the root element if `variant=\"body1\"`. */\n    body1: theme.typography.body1,\n\n    /* Styles applied to the root element if `variant=\"caption\"`. */\n    caption: theme.typography.caption,\n\n    /* Styles applied to the root element if `variant=\"button\"`. */\n    button: theme.typography.button,\n\n    /* Styles applied to the root element if `variant=\"h1\"`. */\n    h1: theme.typography.h1,\n\n    /* Styles applied to the root element if `variant=\"h2\"`. */\n    h2: theme.typography.h2,\n\n    /* Styles applied to the root element if `variant=\"h3\"`. */\n    h3: theme.typography.h3,\n\n    /* Styles applied to the root element if `variant=\"h4\"`. */\n    h4: theme.typography.h4,\n\n    /* Styles applied to the root element if `variant=\"h5\"`. */\n    h5: theme.typography.h5,\n\n    /* Styles applied to the root element if `variant=\"h6\"`. */\n    h6: theme.typography.h6,\n\n    /* Styles applied to the root element if `variant=\"subtitle1\"`. */\n    subtitle1: theme.typography.subtitle1,\n\n    /* Styles applied to the root element if `variant=\"subtitle2\"`. */\n    subtitle2: theme.typography.subtitle2,\n\n    /* Styles applied to the root element if `variant=\"overline\"`. */\n    overline: theme.typography.overline,\n\n    /* Styles applied to the root element if `variant=\"srOnly\"`. Only accessible to screen readers. */\n    srOnly: {\n      position: 'absolute',\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    },\n\n    /* Styles applied to the root element if `align=\"left\"`. */\n    alignLeft: {\n      textAlign: 'left'\n    },\n\n    /* Styles applied to the root element if `align=\"center\"`. */\n    alignCenter: {\n      textAlign: 'center'\n    },\n\n    /* Styles applied to the root element if `align=\"right\"`. */\n    alignRight: {\n      textAlign: 'right'\n    },\n\n    /* Styles applied to the root element if `align=\"justify\"`. */\n    alignJustify: {\n      textAlign: 'justify'\n    },\n\n    /* Styles applied to the root element if `nowrap={true}`. */\n    noWrap: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `gutterBottom={true}`. */\n    gutterBottom: {\n      marginBottom: '0.35em'\n    },\n\n    /* Styles applied to the root element if `paragraph={true}`. */\n    paragraph: {\n      marginBottom: 16\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"textPrimary\"`. */\n    colorTextPrimary: {\n      color: theme.palette.text.primary\n    },\n\n    /* Styles applied to the root element if `color=\"textSecondary\"`. */\n    colorTextSecondary: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `display=\"inline\"`. */\n    displayInline: {\n      display: 'inline'\n    },\n\n    /* Styles applied to the root element if `display=\"block\"`. */\n    displayBlock: {\n      display: 'block'\n    }\n  };\n};\nvar defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p'\n};\nvar Typography = /*#__PURE__*/React.forwardRef(function Typography(props, ref) {\n  var _props$align = props.align,\n      align = _props$align === void 0 ? 'inherit' : _props$align,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'initial' : _props$color,\n      component = props.component,\n      _props$display = props.display,\n      display = _props$display === void 0 ? 'initial' : _props$display,\n      _props$gutterBottom = props.gutterBottom,\n      gutterBottom = _props$gutterBottom === void 0 ? false : _props$gutterBottom,\n      _props$noWrap = props.noWrap,\n      noWrap = _props$noWrap === void 0 ? false : _props$noWrap,\n      _props$paragraph = props.paragraph,\n      paragraph = _props$paragraph === void 0 ? false : _props$paragraph,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'body1' : _props$variant,\n      _props$variantMapping = props.variantMapping,\n      variantMapping = _props$variantMapping === void 0 ? defaultVariantMapping : _props$variantMapping,\n      other = _objectWithoutProperties(props, [\"align\", \"classes\", \"className\", \"color\", \"component\", \"display\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"]);\n\n  var Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant !== 'inherit' && classes[variant], color !== 'initial' && classes[\"color\".concat(capitalize(color))], noWrap && classes.noWrap, gutterBottom && classes.gutterBottom, paragraph && classes.paragraph, align !== 'inherit' && classes[\"align\".concat(capitalize(align))], display !== 'initial' && classes[\"display\".concat(capitalize(display))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes = {\n  /**\n   * Set the text-align on the component.\n   */\n  align: PropTypes.oneOf(['inherit', 'left', 'center', 'right', 'justify']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['initial', 'inherit', 'primary', 'secondary', 'textPrimary', 'textSecondary', 'error']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   * Overrides the behavior of the `variantMapping` prop.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Controls the display type\n   */\n  display: PropTypes.oneOf(['initial', 'block', 'inline']),\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * Applies the theme typography styles.\n   */\n  variant: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'caption', 'button', 'overline', 'srOnly', 'inherit']),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   */\n  variantMapping: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTypography'\n})(Typography);"],"names":["EditMaterials","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","_jsxs","className","children","Breadcrumbs","_jsx","Link","to","style","width","alt","src","require","color","display","React","createSvgIcon","d","withStyles","theme","root","marginLeft","spacing","marginRight","backgroundColor","palette","grey","borderRadius","cursor","boxShadow","shadows","emphasize","icon","height","name","props","classes","other","_objectWithoutProperties","ButtonBase","_extends","component","focusRipple","MoreHorizIcon","ref","_props$component","Component","_props$expandText","expandText","_props$itemsAfterColl","itemsAfterCollapse","_props$itemsBeforeCol","itemsBeforeCollapse","_props$maxItems","maxItems","_props$separator","separator","_React$useState","expanded","setExpanded","allItems","toArray","filter","child","map","index","li","concat","Typography","clsx","ol","items","reduce","acc","current","length","push","insertSeparators","_toConsumableArray","slice","BreadcrumbCollapsed","onClick","event","focusable","currentTarget","parentNode","querySelector","focus","renderItemsBeforeAndAfter","flexWrap","alignItems","padding","margin","listStyle","userSelect","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","_props$align","align","_props$color","_props$display","_props$gutterBottom","gutterBottom","_props$noWrap","noWrap","_props$paragraph","paragraph","_props$variant","variant","_props$variantMapping","variantMapping","capitalize","typography","caption","button","overline","srOnly","position","overflow","alignLeft","textAlign","alignCenter","alignRight","alignJustify","textOverflow","whiteSpace","marginBottom","colorInherit","colorPrimary","primary","main","colorSecondary","secondary","colorTextPrimary","text","colorTextSecondary","colorError","error","displayInline","displayBlock"],"sourceRoot":""}