{"version":3,"file":"static/js/7152.84f50008.chunk.js","mappings":"gJAAO,IASMA,EAAc,CACzBC,cAAe,EACfC,oBAAqB,EACrBC,aAAc,EACdC,aAAc,EACdC,oBAAqB,GACrBC,MAAO,E,4MCiBIC,EAAc,CACvBC,sBAAuB,EACvBC,OAAQ,EACRC,UAAW,EACXC,OAAQ,G,uDCxBSC,EAAK,SAAAC,IAAAC,EAAAA,EAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,EAAAA,GAAAJ,GACtB,SAAAA,EAAYK,GAAQ,IAADC,EAsBd,OAtBcC,EAAAA,EAAAA,GAAA,KAAAP,IACfM,EAAAH,EAAAK,KAAA,KAAMH,IAEDI,MAAQ,CACTC,mBAAmB,EACnBC,cAAc,EACdC,YAAY,EACZC,eAAgB,KAChBC,mBAAmB,EACnBC,UAAU,EACVC,cAAc,EACdC,cAAc,EACdC,gBAAgB,EAChBC,eAAgB,UAChBC,oBAAoB,EACpBC,gBAAiB,GACjBC,SAAU,GACVC,aAAc,IACdC,kBAAmB,IACnBC,cAAe,KACfC,oBAAoB,EACpBC,UAAW,IACdrB,CACL,CAyVC,OAzVAsB,EAAAA,EAAAA,GAAA5B,EAAA,EAAA6B,IAAA,oBAAAC,MAAA,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAED,SAAAC,IAAA,IAAAC,EAAAC,EAAAf,EAAA,OAAAW,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAImD,GAH/CC,KAAKC,SAAS,CAAEC,oBAAoB,IAAQL,EAAAC,KAAA,EAGlCJ,EAASS,EAAAA,GAAYC,gBACf,CAADP,EAAAE,KAAA,QAC4B,OAAnCM,OAAOC,SAAW,iBAAiBT,EAAAU,OAAA,iBAIgE,OAAjGZ,EAAWD,EAAOc,YAAYC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,eAAiBjE,EAAAA,GAAYE,mBAAmB,IAACiD,EAAAE,KAAA,EAEhFa,EAAAA,EAASC,eAAeC,YAAYpB,EAAOqB,gBAAgB,KAAD,EAA3EnC,EAAQiB,EAAAmB,KAEdhB,KAAKC,SAAS,CACVrB,SAAUA,EACVZ,kBAAmB0B,EAAOuB,gBAAkBhE,EAAcE,QAAUwC,GAAYA,EAASuB,UAG1FtC,EAASuC,QACRnB,KAAKC,SAAS,CAAChB,UAAWL,EAAS,GAAGwC,MAE1CpB,KAAKqB,mBAAmBxB,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAyB,GAAAzB,EAAA,SAGxBG,KAAKC,SAAS,CAAEsB,MAAO1B,EAAAyB,GAAEE,UAAW,QAGS,OAHT3B,EAAAC,KAAA,GAGpCE,KAAKC,SAAS,CAAEC,oBAAoB,IAASL,EAAA4B,OAAA,6BAAA5B,EAAA6B,OAAA,GAAAjC,EAAA,yBAEpD,yBAAAJ,EAAAsC,MAAA,KAAAC,UAAA,EAhCA,IAgCA,CAAAzC,IAAA,qBAAAC,MAED,WACI,GAAIY,KAAKjC,MAAMwD,MACX,MAAMM,MAAM7B,KAAKjC,MAAMwD,MAE/B,GAAC,CAAApC,IAAA,mBAAAC,MAED,WACI,IAAI0C,EAAS,GAAAC,OAAMC,yBAAgC,YAE/ChC,KAAKjC,MAAMkB,UACX6C,GAAS,aAAAC,OAAiB/B,KAAKjC,MAAMkB,WAErC6C,GAAa,wCAEjBA,EAAYA,EAAS,GAAAC,OACd/B,KAAKjC,MAAMG,WAAa,cAAgB,IAAI,GAAA6D,OAC5C/B,KAAKjC,MAAMK,kBAAoB,qBAAuB,IAAI,GAAA2D,OAC1D/B,KAAKjC,MAAMI,eAAc,mBAAA4D,OAAsB/B,KAAKjC,MAAMI,gBAAmB,IAAI,GAAA4D,OACjF/B,KAAKjC,MAAMM,SAAW,YAAc,IAAI,GAAA0D,OACxC/B,KAAKjC,MAAMQ,aAAe,gBAAkB,IAAI,GAAAwD,OAChD/B,KAAKjC,MAAMO,aAAe,gBAAkB,IAAI,GAAAyD,OAChD/B,KAAKjC,MAAMkE,gBAAkB,mBAAqB,IAAI,GAAAF,OACtD/B,KAAKjC,MAAMmE,oBAAsB,uBAAyB,IAAI,GAAAH,OAC9D/B,KAAKjC,MAAMS,eAAiB,uBAAyB,yBAAyB,GAAAuD,OAC9E/B,KAAKjC,MAAMU,eAAc,mBAAAsD,OAAsB/B,KAAKjC,MAAMU,gBAAmB,IAAI,GAAAsD,OACjF/B,KAAKjC,MAAMY,gBAAe,oBAAAoD,OAAuBI,UAAUnC,KAAKjC,MAAMY,kBAAqB,IAElG,IAAMyD,EAAiB,GAAAL,OAAMC,yBAAgC,oDAE7DhC,KAAKC,SAAS,CACVoC,WAAW,qBAADN,OAAuB/B,KAAKjC,MAAMc,aAAemB,KAAKjC,MAAMe,kBAAiB,uDAAAiD,OAClD/B,KAAKjC,MAAMgB,cAAa,4FAG7DuD,YAAY,uCAIZC,WAAW,mCAADR,OAAqCD,EAAS,6MACxDU,aAAa,gBAADT,OAAkBK,EAAiB,0EAEvD,GAAC,CAAAjD,IAAA,eAAAC,MAED,SAAaqD,EAAMrD,GAAQ,IAADsD,EAAA,KACtB1C,KAAKC,UAAQ0C,EAAAA,EAAAA,GAAC,CAAC,EAAEF,EAAOrD,IAAS,WAAQsD,EAAKrB,kBAAoB,GACtE,GAAC,CAAAlC,IAAA,cAAAC,MAED,WACI,IAAMwD,EAAWC,SAASC,eAAe,eAEzCF,EAASG,SACTH,EAASI,kBAAkB,EAAG,OAE9BH,SAASI,YAAY,OACzB,GAAC,CAAA9D,IAAA,4BAAAC,MAED,WACI,IAAMwD,EAAWC,SAASC,eAAe,gBAEzCF,EAASG,SACTH,EAASI,kBAAkB,EAAG,OAE9BH,SAASI,YAAY,OACzB,GAAC,CAAA9D,IAAA,SAAAC,MAED,WAAU,IAAD8D,EAAA,KACL,OACIC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gCAA+BC,SAAA,EAC1CC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,gCACJF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,aAAYC,SAAA,EACvBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,sBACJF,EAAAA,EAAAA,MAAA,KAAAE,SAAA,CAAG,YACSC,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAACC,GAAG,QAAOH,SAAC,uBAAyB,+GAEtDC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,oBAAoB,oFACwDC,EAAAA,EAAAA,KAAA,UAAMA,EAAAA,EAAAA,KAAA,UACtFH,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBACJF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CACLC,QAAS1D,KAAKjC,MAAMG,WACpByF,SAAU,SAACC,EAAGxE,GAAY8D,EAAKW,aAAa,aAAczE,EAAQ,IAAK,wBAG/E+D,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CACLC,QAAS1D,KAAKjC,MAAMK,kBACpBuF,SAAU,SAACC,EAAGxE,GAAY8D,EAAKW,aAAa,oBAAqBzE,EAAQ,IAAK,2BAGtF+D,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,uBACLF,EAAAA,EAAAA,MAACW,EAAAA,EAAM,CACH1E,MAAOY,KAAKjC,MAAMI,eAClBwF,SAAU,SAACC,GACPV,EAAKW,aAAa,iBAAkBD,EAAEG,OAAO3E,OAC7C8D,EAAKjD,SAAS,CAAE9B,eAAgByF,EAAEG,OAAO3E,OAC7C,EACA4E,MAAO,CAAEC,SAAU,QAASC,YAAa,QAASb,SAAA,EAClDC,EAAAA,EAAAA,KAAA,UAAQlE,MAAO,OAAOiE,SAAC,UACvBC,EAAAA,EAAAA,KAAA,UAAQlE,MAAO,OAAOiE,SAAC,UACvBC,EAAAA,EAAAA,KAAA,UAAQlE,MAAO,KAAKiE,SAAC,cAG7BC,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAAD,SAAI,UACJF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CACLC,QAAS1D,KAAKjC,MAAMM,SACpBsF,SAAU,SAACC,EAAGxE,GAAY8D,EAAKW,aAAa,WAAYzE,EAAQ,IAAK,eAG7E+D,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CACLC,QAAS1D,KAAKjC,MAAMQ,aACpBoF,SAAU,SAACC,EAAGxE,GAAY8D,EAAKW,aAAa,eAAgBzE,EAAQ,IAAK,gBAGjF+D,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CACLC,QAAS1D,KAAKjC,MAAMO,aACpBqF,SAAU,SAACC,EAAGxE,GAAY8D,EAAKW,aAAa,eAAgBzE,EAAQ,IAAK,gBAGjF+D,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CACLC,QAAS1D,KAAKjC,MAAMkE,gBACpB0B,SAAU,SAACC,EAAGxE,GAAY8D,EAAKW,aAAa,kBAAmBzE,EAAQ,IAAK,mBAGpFkE,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,MAAAD,SAAI,aACJF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CACLC,QAAS1D,KAAKjC,MAAMmE,oBACpByB,SAAU,SAACC,EAAGxE,GAAY8D,EAAKW,aAAa,sBAAuBzE,EAAQ,IAAK,0BAGxFkE,EAAAA,EAAAA,KAAA,OAAAD,UACIF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CACLC,QAAS1D,KAAKjC,MAAMS,eACpBmF,SAAU,SAACC,EAAGxE,GAAY8D,EAAKW,aAAa,iBAAkBzE,EAAQ,IACxE,8BAGVkE,EAAAA,EAAAA,KAAA,SAEItD,KAAKjC,MAAMS,iBACX2E,EAAAA,EAAAA,MAACgB,EAAAA,SAAQ,CAAAd,SAAA,EACLF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,0BACLC,EAAAA,EAAAA,KAAA,OAAAD,UACIC,EAAAA,EAAAA,KAAA,SACIlE,MAAOY,KAAKjC,MAAMY,iBAAmB,GACrCgF,SAAU,SAACC,GAAQV,EAAKW,aAAa,kBAAmBD,EAAEG,OAAO3E,MAAQ,OAGjFkE,EAAAA,EAAAA,KAAA,QAAMU,MAAO,CAAEI,SAAU,SAAUf,SAAC,wDAAyDC,EAAAA,EAAAA,KAAA,UAAMA,EAAAA,EAAAA,KAAA,aAEvGH,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,uBACLF,EAAAA,EAAAA,MAACW,EAAAA,EAAM,CACH1E,MAAOY,KAAKjC,MAAMU,eAClBkF,SAAU,SAACC,GACPV,EAAKW,aAAa,iBAAkBD,EAAEG,OAAO3E,OAC7C8D,EAAKjD,SAAS,CAAExB,eAAgBmF,EAAEG,OAAO3E,OAC7C,EACA4E,MAAO,CAAEC,SAAU,QAASC,YAAa,QAASb,SAAA,EAClDC,EAAAA,EAAAA,KAAA,UAAQlE,MAAO,QAAQiE,SAAC,WACxBC,EAAAA,EAAAA,KAAA,UAAQlE,MAAO,UAAUiE,SAAC,sBAK1CC,EAAAA,EAAAA,KAAA,aAEJA,EAAAA,EAAAA,KAAA,MAAAD,SAAI,cAAc,0EACoDC,EAAAA,EAAAA,KAAA,UAAMA,EAAAA,EAAAA,KAAA,UAC5EH,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAAAhB,SAAC,aACZF,EAAAA,EAAAA,MAACW,EAAAA,EAAM,CACH1E,MAAOY,KAAKjC,MAAMkB,UAClB0E,SAAU,SAACC,GACHV,EAAKW,aAAa,YAAaD,EAAEG,OAAO3E,OACxC8D,EAAKjD,SAAS,CAAEhB,UAAW2E,EAAEG,OAAO3E,OAC5C,EACA4E,MAAO,CAAEC,SAAU,QAASC,YAAa,QAASb,SAAA,EAClDC,EAAAA,EAAAA,KAAA,UAAQlE,MAAO,KAEXY,KAAKjC,MAAMa,SAAS0F,KAAI,SAACC,EAASC,GAC9B,OACIlB,EAAAA,EAAAA,KAAA,UAAgBlE,MAAOmF,EAAQnD,IAAK4C,MAAO,CAAES,SAAU,SAAUpB,SAAEkB,EAAQG,MAA9DF,EAErB,WAIZlB,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,UACpBF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAASC,SAAA,EAiBpBF,EAAAA,EAAAA,MAAA,OAAAE,SAAA,EACIC,EAAAA,EAAAA,KAACG,EAAAA,EAAQ,CACLC,QAAS1D,KAAKjC,MAAMiB,mBACpB2E,SAAU,SAAAC,GAAOV,EAAKjD,SAAS,CAAEjB,mBAAoB4E,EAAEG,OAAOL,SAAY,IAC5E,2BAGF1D,KAAKjC,MAAMiB,qBACXmE,EAAAA,EAAAA,MAACgB,EAAAA,SAAQ,CAAAd,SAAA,EACLF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAAUY,MAAO,CAAEW,aAAc,OAAQtB,SAAA,EACpDC,EAAAA,EAAAA,KAAA,OAAKU,MAAO,CAAEY,MAAO,SAAUvB,SAAC,eAGhCC,EAAAA,EAAAA,KAAA,SAAOlE,MAAOY,KAAKjC,MAAMc,aAAcmF,MAAO,CAAEY,MAAO,QACnDjB,SACI,SAAAC,GACIV,EAAKjD,SAAS,CAAEpB,aAAc+E,EAAEG,OAAO3E,QAAS,WAAQ8D,EAAK7B,kBAAmB,GACpF,IACA,QAER8B,EAAAA,EAAAA,MAAA,UAAQ/D,MAAOY,KAAKjC,MAAMe,kBAAmBkF,MAAO,CAAEa,OAAQ,QAC1DlB,SACI,SAAAC,GACIV,EAAKjD,SAAS,CAAEnB,kBAAmB8E,EAAEG,OAAO3E,QAAS,WAAQ8D,EAAK7B,kBAAmB,GACzF,EACHgC,SAAA,EACDC,EAAAA,EAAAA,KAAA,UAAQlE,MAAM,IAAGiE,SAAC,OAGlBC,EAAAA,EAAAA,KAAA,UAAQlE,MAAM,KAAIiE,SAAC,cAK3BF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,UAAUY,MAAO,CAAEW,aAAc,OAAQtB,SAAA,EACpDC,EAAAA,EAAAA,KAAA,OAAKU,MAAO,CAAEY,MAAO,SAAUvB,SAAC,sBAGhCF,EAAAA,EAAAA,MAAA,UAAQ/D,MAAOY,KAAKjC,MAAMgB,cAAeiF,MAAO,CAAEa,OAAQ,QACtDlB,SACI,SAAAC,GACIV,EAAKjD,SAAS,CAAElB,cAAe6E,EAAEG,OAAO3E,QAAS,WAAQ8D,EAAK7B,kBAAmB,GACrF,EACHgC,SAAA,EACDC,EAAAA,EAAAA,KAAA,UAAQlE,MAAM,MAAKiE,SAAC,WACpBC,EAAAA,EAAAA,KAAA,UAAQlE,MAAM,KAAIiE,SAAC,WACnBC,EAAAA,EAAAA,KAAA,UAAQlE,MAAM,KAAIiE,SAAC,WACnBC,EAAAA,EAAAA,KAAA,UAAQlE,MAAM,QAAOiE,SAAC,WACtBC,EAAAA,EAAAA,KAAA,UAAQlE,MAAM,KAAIiE,SAAC,YACnBC,EAAAA,EAAAA,KAAA,UAAQlE,MAAM,KAAIiE,SAAC,WACnBC,EAAAA,EAAAA,KAAA,UAAQlE,MAAM,QAAOiE,SAAC,WACtBC,EAAAA,EAAAA,KAAA,UAAQlE,MAAM,MAAKiE,SAAC,WACpBC,EAAAA,EAAAA,KAAA,UAAQlE,MAAM,MAAKiE,SAAC,WACpBC,EAAAA,EAAAA,KAAA,UAAQlE,MAAM,MAAKiE,SAAC,WACpBC,EAAAA,EAAAA,KAAA,UAAQlE,MAAM,MAAKiE,SAAC,cAExBC,EAAAA,EAAAA,KAAA,OAAKU,MAAO,CACRY,MAAO,OACPC,OAASC,WAAW9E,KAAKjC,MAAMgB,eAAiB,IAAO,GAAK,KAC5DgG,gBAAiB,OACjBC,WAAY,OACZC,OAAQ,4BAMxB3B,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,UACpBC,EAAAA,EAAAA,KAAA,YAAU4B,GAAG,cAAc9F,MAAOY,KAAKjC,MAAMiB,mBAAqBgB,KAAKjC,MAAMsE,WAAarC,KAAKjC,MAAMwE,WAAavC,KAAKjC,MAAMuE,YAActC,KAAKjC,MAAMwE,gBAE1Je,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,UACpBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAACC,KAAK,QAAQC,QAASrF,KAAKsF,YAAaC,MAAM,UAASlC,SAAC,oBAKhFC,EAAAA,EAAAA,KAAA,OAAAD,UACIF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yBACJC,EAAAA,EAAAA,KAAA,OAAKU,MAAO,CAAEwB,OAAQ,UAAWnC,UAC7BC,EAAAA,EAAAA,KAAA,OAAKmC,IAAKC,EAAQ,OAAkCC,IAAI,QAE5DrC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,UACpBC,EAAAA,EAAAA,KAAA,YAAU4B,GAAG,eAAe9F,MAAOY,KAAKjC,MAAMyE,kBAElDc,EAAAA,EAAAA,KAAA,OAAKF,UAAU,UAASC,UACpBC,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAACC,KAAK,QAAQC,QAASrF,KAAK4F,0BAA2BL,MAAM,UAASlC,SAAC,qBAO1G,KAAC/F,CAAA,CAjXqB,CAASuI,EAAAA,U","sources":["ezyvuecore/models/user.js","ezyvuecore/models/account.js","members/embed.js"],"sourcesContent":["export const UserRoles = {\r\n  USER: 1,\r\n  DESIGNER: 2,\r\n  ADMINISTRATOR: 3,\r\n  WEBSITE_ADMINISTRATOR: 4,\r\n  WEBSITE_OWNER: 5,\r\n  COUNT: 5,\r\n};\r\n\r\nexport const Permissions = {\r\n  MEMBER_ACCESS: 1,\r\n  CREATE_UPDATE_ASSET: 2,\r\n  DELETE_ASSET: 3,              // DEPRECATED\r\n  ADMIN_ACCESS: 4,\r\n  MASTER_ADMIN_ACCESS: 10,\r\n  COUNT: 5,\r\n};\r\n\r\nexport class User {\r\n  constructor(FirstName, LastName, Email, Password, LastAccessed, StoreAccountId, RoleIdCode, PrimaryAccountHolder) {\r\n    this.FirstName = FirstName;\r\n    this.LastName = LastName;\r\n    this.Email = Email;\r\n    this.Password = Password;\r\n    this.LastAccessed = LastAccessed;\r\n    this.StoreAccountId = StoreAccountId;\r\n    this.RoleIdCode = RoleIdCode;\r\n    this.PrimaryAccountHolder = PrimaryAccountHolder;\r\n  }\r\n}\r\n\r\n// Permission value for a given role in a store account\r\nexport class UserRolePermission {\r\n  constructor(UserRoleId, PermissionId, StoreAccountId, Granted) {\r\n    this.UserRoleId = UserRoleId;\r\n    this.PermissionId = PermissionId;\r\n    this.StoreAccountId = StoreAccountId; // Store Account\r\n    this.Granted = Granted;\r\n  }\r\n}\r\n","export default class Account \r\n{\r\n    constructor(CompanyName, Phone, Mobile, AddressLine1, AddressLine2, City, \r\n                    State, Country, PostalCode, Activated, ActivationToken, AssetFolderName, \r\n                    WebsiteUrl, accountNumber) {\r\n        this.CompanyName = CompanyName;\r\n        this.Phone = Phone;\r\n        this.Mobile = Mobile;\r\n        this.AddressLine1 = AddressLine1;\r\n        this.AddressLine2 = AddressLine2;\r\n        this.City = City;\r\n        this.State = State;\r\n        this.Country = Country;\r\n        this.PostalCode = PostalCode;\r\n        this.Activated = Activated;\r\n        this.ActivationToken = ActivationToken;\r\n        this.AssetFolderName = AssetFolderName;\r\n        this.WebsiteUrl = WebsiteUrl;\r\n        this.accountNumber = accountNumber;\r\n\r\n        this.subscriptionHistory = [];\r\n\r\n        this.subscriptionHistory.push({\r\n            subscriptionId: null,\r\n            planId: 'P-TRIAL',\r\n        });\r\n\r\n        this.status = AccountStatus.AWAITING_VERIFICATION;\r\n        this.totalAssetSize = 0;\r\n    }\r\n}\r\n\r\nexport const AccountStatus={\r\n    AWAITING_VERIFICATION: 1,       // email not verified \r\n    ACTIVE: 2,                      // activated\r\n    SUSPENDED: 3,                   // suspended due to trial expiry or subscription cancellation\r\n    CLOSED: 4                       // user requested close \r\n};","import React from 'react';\r\nimport AuthManager from 'ezyvuecore/core/auth/authManager';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Fragment } from 'react';\r\nimport { Permissions } from 'ezyvuecore/models/user';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { AccountStatus } from 'ezyvuecore/models/account';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Link } from 'react-router-dom';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Services from 'ezyvuecore/services/services';\r\n\r\nexport default class Embed extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            hasEditPermission: true,\r\n            noAutorotate: false,\r\n            playButton: true,\r\n            playButtonType: '3d',\r\n            animatePlayButton: true,\r\n            hideMenu: false,\r\n            hideMenuInfo: false,\r\n            hideMenuHelp: false,\r\n            showBackground: true,\r\n            backgroundSize: 'contain',\r\n            hideLoadingPercent: false,\r\n            backgroundImage: '',\r\n            projects: [],\r\n            wrapperWidth: 100,\r\n            wrapperWidthUnits: '%',\r\n            wrapperAspect: '80',\r\n            includeWrapperCode: true,\r\n            productId: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ showLoadingOverlay: true });\r\n\r\n        try {\r\n            const cookie = AuthManager.getAuthCookie();\r\n            if (!cookie) {\r\n                window.location = '/account/login';\r\n                return;\r\n            }\r\n\r\n            const editPerm = cookie.permissions.find(perm => perm.PermissionId === Permissions.CREATE_UPDATE_ASSET);\r\n\r\n            const projects = await Services.projectService.getProjects(cookie.storeAccountId);\r\n\r\n            this.setState({\r\n                projects: projects,\r\n                hasEditPermission: cookie.accountStatus === AccountStatus.ACTIVE && editPerm && editPerm.Granted,\r\n            });\r\n\r\n            if(projects.length)\r\n                this.setState({productId: projects[0]._id});\r\n\r\n            this.updateScriptCode();\r\n        }\r\n        catch (e) {\r\n            this.setState({ error: e.message });\r\n        }\r\n        finally {\r\n            this.setState({ showLoadingOverlay: false });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.error) {\r\n            throw Error(this.state.error);\r\n        }\r\n    }\r\n\r\n    updateScriptCode() {\r\n        let iframeSrc = `${process.env.REACT_APP_CLIENT_URL}/viewer?`;\r\n\r\n        if (this.state.productId)\r\n            iframeSrc += `productId=${this.state.productId}`;\r\n        else\r\n            iframeSrc += 'productId=<<Replace with project id>>';\r\n\r\n        iframeSrc = iframeSrc +\r\n            `${this.state.playButton ? \"&playbutton\" : \"\"}` +\r\n            `${this.state.animatePlayButton ? \"&animateplaybutton\" : \"\"}` +\r\n            `${this.state.playButtonType ? `&playbuttontype=${this.state.playButtonType}` : \"\"}` +\r\n            `${this.state.hideMenu ? \"&hidemenu\" : \"\"}` +\r\n            `${this.state.hideMenuHelp ? \"&hidemenuhelp\" : \"\"}` +\r\n            `${this.state.hideMenuInfo ? \"&hidemenuinfo\" : \"\"}` +\r\n            `${this.state.hideMenuOptions ? \"&hidemenuoptions\" : \"\"}` +\r\n            `${this.state.hideProgressPercent ? \"&hideprogresspercent\" : \"\"}` +\r\n            `${this.state.showBackground ? \"&showbackground=true\" : \"&showbackground=false\"}` +\r\n            `${this.state.backgroundSize ? `&backgroundsize=${this.state.backgroundSize}` : \"\"}` +\r\n            `${this.state.backgroundImage ? `&backgroundimage=${encodeURI(this.state.backgroundImage)}` : \"\"}`;\r\n\r\n        const arButtonsframeSrc = `${process.env.REACT_APP_CLIENT_URL}/arbuttons?productId=<<Replace with project id>>`;\r\n\r\n        this.setState({\r\n            wrapperPre: `<div style=\"width:${this.state.wrapperWidth + this.state.wrapperWidthUnits}\">\r\n    <div style=\"position: relative;padding-top:${this.state.wrapperAspect}%\">\r\n        <div style=\"position:absolute;left:0;right:0;top:0;bottom:0\">\r\n            `,\r\n            wrapperPost: `\r\n        </div>\r\n    </div>\r\n</div>`,\r\n            scriptCode: `<iframe id=\"ezyvue-viewer\" src=\"${iframeSrc}\" width=\"100%\" height=\"100%\" style=\"border:none; \"frameborder=\"0\" xr-spatial-tracking=\"true\" autoplay allowfullscreen mozallowfullscreen=\"true\" webkitallowfullscreen=\"true\" allow=\"fullscreen\"></iframe>`,\r\n            arButtonCode: `<iframe src=\"${arButtonsframeSrc}\" width=\"155px\" height=\"55px\" style=\"border:none; \"frameborder=\"0\" />`\r\n        });\r\n    }\r\n\r\n    setUrlOption(name, value) {\r\n        this.setState({ [name]: value }, () => { this.updateScriptCode(); });\r\n    }\r\n\r\n    onCopyClick() {\r\n        const copyText = document.getElementById('script-text');\r\n\r\n        copyText.select();\r\n        copyText.setSelectionRange(0, 99999); /* For mobile devices */\r\n\r\n        document.execCommand(\"copy\");\r\n    }\r\n\r\n    onCopyArButtonScriptClick() {\r\n        const copyText = document.getElementById('ar-html-text');\r\n\r\n        copyText.select();\r\n        copyText.setSelectionRange(0, 99999); /* For mobile devices */\r\n\r\n        document.execCommand(\"copy\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='std-page center-page-x center'>\r\n                <h1>Integrate Viewer/AR Button</h1>\r\n                <div className='embed-page'>\r\n                    <div className='centered-page-box'>\r\n                        <h2>Integrate Viewer</h2>\r\n                        <p>\r\n                            See the <Link to='/help'>integration guides</Link> in the Help Centre for more information on how to integrate the viewer on your website or site builder.\r\n                        </p>\r\n                        <h3>Viewer Settings</h3>\r\n                        Note: some settings are project-specific. See the settings tab in Ezyvue Studio.<br /><br />\r\n                        <div>\r\n                            <h4>Start Button</h4>\r\n                            <div>\r\n                                <Checkbox\r\n                                    checked={this.state.playButton}\r\n                                    onChange={(e, value) => { this.setUrlOption('playButton', value); }} />\r\n                                Show start button\r\n                            </div>\r\n                            <div>\r\n                                <Checkbox\r\n                                    checked={this.state.animatePlayButton}\r\n                                    onChange={(e, value) => { this.setUrlOption('animatePlayButton', value); }} />\r\n                                Animate start button\r\n                            </div>\r\n                            <div>\r\n                                <div>Start button type</div>\r\n                                <Select\r\n                                    value={this.state.playButtonType}\r\n                                    onChange={(e) => {\r\n                                        this.setUrlOption('playbuttontype', e.target.value);\r\n                                        this.setState({ playButtonType: e.target.value });\r\n                                    }}\r\n                                    style={{ minWidth: '200px', marginRight: '25px' }} >\r\n                                    <option value={'play'}>Play</option>\r\n                                    <option value={'hand'}>Hand</option>\r\n                                    <option value={'3d'}>3d</option>\r\n                                </Select>\r\n                            </div>\r\n                            <br />\r\n                            <h4>Menu</h4>\r\n                            <div>\r\n                                <Checkbox\r\n                                    checked={this.state.hideMenu}\r\n                                    onChange={(e, value) => { this.setUrlOption('hideMenu', value); }} />\r\n                                Hide all\r\n                            </div>\r\n                            <div>\r\n                                <Checkbox\r\n                                    checked={this.state.hideMenuHelp}\r\n                                    onChange={(e, value) => { this.setUrlOption('hideMenuHelp', value); }} />\r\n                                Hide help\r\n                            </div>\r\n                            <div>\r\n                                <Checkbox\r\n                                    checked={this.state.hideMenuInfo}\r\n                                    onChange={(e, value) => { this.setUrlOption('hideMenuInfo', value); }} />\r\n                                Hide info\r\n                            </div>\r\n                            <div>\r\n                                <Checkbox\r\n                                    checked={this.state.hideMenuOptions}\r\n                                    onChange={(e, value) => { this.setUrlOption('hideMenuOptions', value); }} />\r\n                                Hide options\r\n                            </div>\r\n                            <br />\r\n                            <h4>Loading</h4>\r\n                            <div>\r\n                                <Checkbox\r\n                                    checked={this.state.hideProgressPercent}\r\n                                    onChange={(e, value) => { this.setUrlOption('hideProgressPercent', value); }} />\r\n                                Hide progress value\r\n                            </div>\r\n                            <div>\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={this.state.showBackground}\r\n                                        onChange={(e, value) => { this.setUrlOption('showBackground', value); }}\r\n                                    />Show background image\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                            {\r\n                                this.state.showBackground &&\r\n                                <Fragment>\r\n                                    <div>\r\n                                        <div>Background Image Url</div>\r\n                                        <div>\r\n                                            <input\r\n                                                value={this.state.backgroundImage || ''}\r\n                                                onChange={(e) => { this.setUrlOption('backgroundImage', e.target.value); }}\r\n                                            />\r\n                                        </div>\r\n                                        <span style={{ fontSize: 'small' }}>(if no url is specified the default image is used)</span><br /><br />\r\n                                    </div>\r\n                                    <div>\r\n                                        <div>Background Sizing</div>\r\n                                        <Select\r\n                                            value={this.state.backgroundSize}\r\n                                            onChange={(e) => {\r\n                                                this.setUrlOption('backgroundSize', e.target.value);\r\n                                                this.setState({ backgroundSize: e.target.value });\r\n                                            }}\r\n                                            style={{ minWidth: '200px', marginRight: '25px' }} >\r\n                                            <option value={'cover'}>cover</option>\r\n                                            <option value={'contain'}>contain</option>\r\n                                        </Select>\r\n                                    </div>\r\n                                </Fragment>\r\n                            }\r\n                            <br />\r\n                        </div>\r\n                        <h3>HTML code</h3>\r\n                        Select a project and copy and paste the code below onto your web page.<br /><br />\r\n                        <div>\r\n                            <InputLabel>Project</InputLabel>\r\n                            <Select\r\n                                value={this.state.productId}\r\n                                onChange={(e) => {\r\n                                        this.setUrlOption('productId', e.target.value)\r\n                                        this.setState({ productId: e.target.value });\r\n                                }}\r\n                                style={{ minWidth: '200px', marginRight: '25px' }} >\r\n                                <option value={''}></option>\r\n                                {\r\n                                    this.state.projects.map((project, i) => {\r\n                                        return (\r\n                                            <option key={i} value={project._id} style={{ maxWidth: '280px' }}>{project.Name}</option>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </Select>\r\n                        </div>\r\n                        <br />\r\n                        <div className='flexrow'>\r\n                            <div className='flexcol'>\r\n                                {/* <div className='flexrow'>\r\n                                    <Checkbox\r\n                                        checked={this.state.publishToShopify}\r\n                                        onChange={(e, value) => { this.setUrlOption('publishToShopify', value); }}\r\n                                    />Publish to Shopify\r\n                                </div>\r\n                                {\r\n                                    this.state.publishToShopify ?\r\n                                        <div className='flexrow'>\r\n                                            See the&nbsp;<Link to='/help/embedViewerOnShopify'>Embedding the viewer on Shopify</Link>&nbsp;tutorial for more information.\r\n                                            <br/>\r\n                                        </div>\r\n                                        :\r\n                                        <div></div>\r\n                                }\r\n                                <br /> */}\r\n                                <div>\r\n                                    <Checkbox\r\n                                        checked={this.state.includeWrapperCode}\r\n                                        onChange={e => { this.setState({ includeWrapperCode: e.target.checked }); }}\r\n                                    /> Include wrapper code\r\n                                </div>\r\n                                {\r\n                                    this.state.includeWrapperCode &&\r\n                                    <Fragment>\r\n                                        <div className='flexrow' style={{ marginBottom: '5px' }}>\r\n                                            <div style={{ width: '100px' }}>\r\n                                                Width&nbsp;\r\n                                            </div>\r\n                                            <input value={this.state.wrapperWidth} style={{ width: '60px' }}\r\n                                                onChange={\r\n                                                    e => {\r\n                                                        this.setState({ wrapperWidth: e.target.value }, () => { this.updateScriptCode() });\r\n                                                    }\r\n                                                } />\r\n                                            &nbsp;\r\n                                            <select value={this.state.wrapperWidthUnits} style={{ height: '30px' }}\r\n                                                onChange={\r\n                                                    e => {\r\n                                                        this.setState({ wrapperWidthUnits: e.target.value }, () => { this.updateScriptCode() });\r\n                                                    }\r\n                                                }>\r\n                                                <option value='%'>\r\n                                                    %\r\n                                                </option>\r\n                                                <option value='px'>\r\n                                                    px\r\n                                                </option>\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className='flexrow' style={{ marginBottom: '5px' }}>\r\n                                            <div style={{ width: '100px' }}>\r\n                                                Aspect Ratio&nbsp;\r\n                                            </div>\r\n                                            <select value={this.state.wrapperAspect} style={{ height: '30px' }}\r\n                                                onChange={\r\n                                                    e => {\r\n                                                        this.setState({ wrapperAspect: e.target.value }, () => { this.updateScriptCode() });\r\n                                                    }\r\n                                                }>\r\n                                                <option value='100'>1 : 1</option>\r\n                                                <option value='80'>5 : 4</option>\r\n                                                <option value='75'>4 : 3</option>\r\n                                                <option value='66.67'>3 : 2</option>\r\n                                                <option value='56'>16 : 9</option>\r\n                                                <option value='50'>2 : 1</option>\r\n                                                <option value='33.33'>3 : 1</option>\r\n                                                <option value='133'>3 : 4</option>\r\n                                                <option value='150'>2 : 3</option>\r\n                                                <option value='200'>1 : 2</option>\r\n                                                <option value='300'>1 : 3</option>\r\n                                            </select>\r\n                                            <div style={{\r\n                                                width: '50px',\r\n                                                height: (parseFloat(this.state.wrapperAspect) / 100) * 50 + 'px',\r\n                                                backgroundColor: '#eee',\r\n                                                marginLeft: '10px',\r\n                                                border: '1px solid black'\r\n                                            }} >\r\n                                            </div>\r\n                                        </div>\r\n                                    </Fragment>\r\n                                }\r\n                                <div className='flexrow'>\r\n                                    <textarea id='script-text' value={this.state.includeWrapperCode ? this.state.wrapperPre + this.state.scriptCode + this.state.wrapperPost : this.state.scriptCode} />\r\n                                </div>\r\n                                <div className='flexrow'>\r\n                                    <Button size='small' onClick={this.onCopyClick} color=\"primary\">copy</Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div className='centered-page-box'>\r\n                            <h2>Integrate AR Button</h2>\r\n                            <div style={{ margin: '10px 0' }}>\r\n                                <img src={require('assets/images/arkitbutton.png')} alt='' />\r\n                            </div>\r\n                            <div className='flexrow'>\r\n                                <textarea id='ar-html-text' value={this.state.arButtonCode} />\r\n                            </div>\r\n                            <div className='flexrow'>\r\n                                <Button size='small' onClick={this.onCopyArButtonScriptClick} color=\"primary\">copy</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n            </div>\r\n        );\r\n    }\r\n}"],"names":["Permissions","MEMBER_ACCESS","CREATE_UPDATE_ASSET","DELETE_ASSET","ADMIN_ACCESS","MASTER_ADMIN_ACCESS","COUNT","AccountStatus","AWAITING_VERIFICATION","ACTIVE","SUSPENDED","CLOSED","Embed","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","hasEditPermission","noAutorotate","playButton","playButtonType","animatePlayButton","hideMenu","hideMenuInfo","hideMenuHelp","showBackground","backgroundSize","hideLoadingPercent","backgroundImage","projects","wrapperWidth","wrapperWidthUnits","wrapperAspect","includeWrapperCode","productId","_createClass","key","value","_componentDidMount","_asyncToGenerator","_regeneratorRuntime","mark","_callee","cookie","editPerm","wrap","_context","prev","next","this","setState","showLoadingOverlay","AuthManager","getAuthCookie","window","location","abrupt","permissions","find","perm","PermissionId","Services","projectService","getProjects","storeAccountId","sent","accountStatus","Granted","length","_id","updateScriptCode","t0","error","message","finish","stop","apply","arguments","Error","iframeSrc","concat","process","hideMenuOptions","hideProgressPercent","encodeURI","arButtonsframeSrc","wrapperPre","wrapperPost","scriptCode","arButtonCode","name","_this2","_defineProperty","copyText","document","getElementById","select","setSelectionRange","execCommand","_this3","_jsxs","className","children","_jsx","Link","to","Checkbox","checked","onChange","e","setUrlOption","Select","target","style","minWidth","marginRight","Fragment","fontSize","InputLabel","map","project","i","maxWidth","Name","marginBottom","width","height","parseFloat","backgroundColor","marginLeft","border","id","Button","size","onClick","onCopyClick","color","margin","src","require","alt","onCopyArButtonScriptClick","React"],"sourceRoot":""}