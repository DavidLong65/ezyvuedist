{"version":3,"file":"static/js/702.6f88fb07.chunk.js","mappings":"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","sources":["ezyvuecore/three/examples/jsm/loaders/ifc/web-ifc-api.js","ezyvuecore/three/examples/jsm/loaders/IFCLoader.js","ezyvuecore/three/examples/jsm/loaders/ifc|sync"],"sourcesContent":["var __defProp = Object.defineProperty;\r\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __spreadValues = (a, b) => {\r\n  for (var prop in b || (b = {}))\r\n    if (__hasOwnProp.call(b, prop))\r\n      __defNormalProp(a, prop, b[prop]);\r\n  if (__getOwnPropSymbols)\r\n    for (var prop of __getOwnPropSymbols(b)) {\r\n      if (__propIsEnum.call(b, prop))\r\n        __defNormalProp(a, prop, b[prop]);\r\n    }\r\n  return a;\r\n};\r\nvar __require = (x) => {\r\n  if (typeof require !== \"undefined\")\r\n    return require(x);\r\n  throw new Error('Dynamic require of \"' + x + '\" is not supported');\r\n};\r\nvar __commonJS = (cb, mod) => function __require2() {\r\n  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;\r\n};\r\nvar __async = (__this, __arguments, generator) => {\r\n  return new Promise((resolve, reject) => {\r\n    var fulfilled = (value) => {\r\n      try {\r\n        step(generator.next(value));\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    };\r\n    var rejected = (value) => {\r\n      try {\r\n        step(generator.throw(value));\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    };\r\n    var step = (x) => x.done ? resolve(x.value) : Promise.resolve(x.value).then(fulfilled, rejected);\r\n    step((generator = generator.apply(__this, __arguments)).next());\r\n  });\r\n};\r\n\r\n// (disabled):crypto\r\nvar require_crypto = __commonJS({\r\n  \"(disabled):crypto\"() {\r\n  }\r\n});\r\n\r\n// dist/web-ifc.js\r\nvar require_web_ifc = __commonJS({\r\n  \"dist/web-ifc.js\"(exports, module) {\r\n    var WebIFCWasm2 = function() {\r\n      var _scriptDir = typeof document !== \"undefined\" && document.currentScript ? document.currentScript.src : void 0;\r\n      if (typeof __filename !== \"undefined\")\r\n        _scriptDir = _scriptDir || __filename;\r\n      return function(WebIFCWasm3) {\r\n        WebIFCWasm3 = WebIFCWasm3 || {};\r\n        var Module = typeof WebIFCWasm3 !== \"undefined\" ? WebIFCWasm3 : {};\r\n        var readyPromiseResolve, readyPromiseReject;\r\n        Module[\"ready\"] = new Promise(function(resolve, reject) {\r\n          readyPromiseResolve = resolve;\r\n          readyPromiseReject = reject;\r\n        });\r\n        var moduleOverrides = {};\r\n        var key;\r\n        for (key in Module) {\r\n          if (Module.hasOwnProperty(key)) {\r\n            moduleOverrides[key] = Module[key];\r\n          }\r\n        }\r\n        var arguments_ = [];\r\n        var thisProgram = \"./this.program\";\r\n        var quit_ = function(status, toThrow) {\r\n          throw toThrow;\r\n        };\r\n        var ENVIRONMENT_IS_WEB = false;\r\n        var ENVIRONMENT_IS_WORKER = false;\r\n        var ENVIRONMENT_IS_NODE = false;\r\n        var ENVIRONMENT_IS_SHELL = false;\r\n        ENVIRONMENT_IS_WEB = typeof window === \"object\";\r\n        ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\r\n        ENVIRONMENT_IS_NODE = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node === \"string\";\r\n        ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\r\n        var scriptDirectory = \"\";\r\n        function locateFile(path) {\r\n          if (Module[\"locateFile\"]) {\r\n            return Module[\"locateFile\"](path, scriptDirectory);\r\n          }\r\n          return scriptDirectory + path;\r\n        }\r\n        var read_, readAsync, readBinary, setWindowTitle;\r\n        var nodeFS;\r\n        var nodePath;\r\n        if (ENVIRONMENT_IS_NODE) {\r\n          if (ENVIRONMENT_IS_WORKER) {\r\n            scriptDirectory = __require(\"path\").dirname(scriptDirectory) + \"/\";\r\n          } else {\r\n            scriptDirectory = __dirname + \"/\";\r\n          }\r\n          read_ = function shell_read(filename, binary) {\r\n            if (!nodeFS)\r\n              nodeFS = __require(\"fs\");\r\n            if (!nodePath)\r\n              nodePath = __require(\"path\");\r\n            filename = nodePath[\"normalize\"](filename);\r\n            return nodeFS[\"readFileSync\"](filename, binary ? null : \"utf8\");\r\n          };\r\n          readBinary = function readBinary2(filename) {\r\n            var ret = read_(filename, true);\r\n            if (!ret.buffer) {\r\n              ret = new Uint8Array(ret);\r\n            }\r\n            assert(ret.buffer);\r\n            return ret;\r\n          };\r\n          if (process[\"argv\"].length > 1) {\r\n            thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\r\n          }\r\n          arguments_ = process[\"argv\"].slice(2);\r\n          process[\"on\"](\"uncaughtException\", function(ex) {\r\n            if (!(ex instanceof ExitStatus)) {\r\n              throw ex;\r\n            }\r\n          });\r\n          process[\"on\"](\"unhandledRejection\", abort);\r\n          quit_ = function(status) {\r\n            process[\"exit\"](status);\r\n          };\r\n          Module[\"inspect\"] = function() {\r\n            return \"[Emscripten Module object]\";\r\n          };\r\n        } else if (ENVIRONMENT_IS_SHELL) {\r\n          if (typeof read != \"undefined\") {\r\n            read_ = function shell_read(f) {\r\n              return read(f);\r\n            };\r\n          }\r\n          readBinary = function readBinary2(f) {\r\n            var data;\r\n            if (typeof readbuffer === \"function\") {\r\n              return new Uint8Array(readbuffer(f));\r\n            }\r\n            data = read(f, \"binary\");\r\n            assert(typeof data === \"object\");\r\n            return data;\r\n          };\r\n          if (typeof scriptArgs != \"undefined\") {\r\n            arguments_ = scriptArgs;\r\n          } else if (typeof arguments != \"undefined\") {\r\n            arguments_ = arguments;\r\n          }\r\n          if (typeof quit === \"function\") {\r\n            quit_ = function(status) {\r\n              quit(status);\r\n            };\r\n          }\r\n          if (typeof print !== \"undefined\") {\r\n            if (typeof console === \"undefined\")\r\n              console = {};\r\n            console.log = print;\r\n            console.warn = console.error = typeof printErr !== \"undefined\" ? printErr : print;\r\n          }\r\n        } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\r\n          if (ENVIRONMENT_IS_WORKER) {\r\n            scriptDirectory = self.location.href;\r\n          } else if (typeof document !== \"undefined\" && document.currentScript) {\r\n            scriptDirectory = document.currentScript.src;\r\n          }\r\n          if (_scriptDir) {\r\n            scriptDirectory = _scriptDir;\r\n          }\r\n          if (scriptDirectory.indexOf(\"blob:\") !== 0) {\r\n            scriptDirectory = scriptDirectory.slice(0, scriptDirectory.lastIndexOf(\"/\") + 1);\r\n          } else {\r\n            scriptDirectory = \"\";\r\n          }\r\n          {\r\n            read_ = function shell_read(url) {\r\n              var xhr = new XMLHttpRequest();\r\n              xhr.open(\"GET\", url, false);\r\n              xhr.send(null);\r\n              return xhr.responseText;\r\n            };\r\n            if (ENVIRONMENT_IS_WORKER) {\r\n              readBinary = function readBinary2(url) {\r\n                var xhr = new XMLHttpRequest();\r\n                xhr.open(\"GET\", url, false);\r\n                xhr.responseType = \"arraybuffer\";\r\n                xhr.send(null);\r\n                return new Uint8Array(xhr.response);\r\n              };\r\n            }\r\n            readAsync = function readAsync2(url, onload, onerror) {\r\n              var xhr = new XMLHttpRequest();\r\n              xhr.open(\"GET\", url, true);\r\n              xhr.responseType = \"arraybuffer\";\r\n              xhr.onload = function xhr_onload() {\r\n                if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\r\n                  onload(xhr.response);\r\n                  return;\r\n                }\r\n                onerror();\r\n              };\r\n              xhr.onerror = onerror;\r\n              xhr.send(null);\r\n            };\r\n          }\r\n          setWindowTitle = function(title) {\r\n            document.title = title;\r\n          };\r\n        } else {\r\n        }\r\n        var out = Module[\"print\"] || console.log.bind(console);\r\n        var err = Module[\"printErr\"] || console.warn.bind(console);\r\n        for (key in moduleOverrides) {\r\n          if (moduleOverrides.hasOwnProperty(key)) {\r\n            Module[key] = moduleOverrides[key];\r\n          }\r\n        }\r\n        moduleOverrides = null;\r\n        if (Module[\"arguments\"])\r\n          arguments_ = Module[\"arguments\"];\r\n        if (Module[\"thisProgram\"])\r\n          thisProgram = Module[\"thisProgram\"];\r\n        if (Module[\"quit\"])\r\n          quit_ = Module[\"quit\"];\r\n        var STACK_ALIGN = 16;\r\n        function alignMemory(size, factor) {\r\n          if (!factor)\r\n            factor = STACK_ALIGN;\r\n          return Math.ceil(size / factor) * factor;\r\n        }\r\n        var tempRet0 = 0;\r\n        var setTempRet0 = function(value) {\r\n          tempRet0 = value;\r\n        };\r\n        var wasmBinary;\r\n        if (Module[\"wasmBinary\"])\r\n          wasmBinary = Module[\"wasmBinary\"];\r\n        var noExitRuntime;\r\n        if (Module[\"noExitRuntime\"])\r\n          noExitRuntime = Module[\"noExitRuntime\"];\r\n        if (typeof WebAssembly !== \"object\") {\r\n          abort(\"no native wasm support detected\");\r\n        }\r\n        var wasmMemory;\r\n        var ABORT = false;\r\n        var EXITSTATUS = 0;\r\n        function assert(condition, text) {\r\n          if (!condition) {\r\n            abort(\"Assertion failed: \" + text);\r\n          }\r\n        }\r\n        var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : void 0;\r\n        function UTF8ArrayToString(heap, idx, maxBytesToRead) {\r\n          idx >>>= 0;\r\n          var endIdx = idx + maxBytesToRead;\r\n          var endPtr = idx;\r\n          while (heap[endPtr >>> 0] && !(endPtr >= endIdx))\r\n            ++endPtr;\r\n          if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\r\n            return UTF8Decoder.decode(heap.subarray(idx >>> 0, endPtr >>> 0));\r\n          } else {\r\n            var str = \"\";\r\n            while (idx < endPtr) {\r\n              var u0 = heap[idx++ >>> 0];\r\n              if (!(u0 & 128)) {\r\n                str += String.fromCharCode(u0);\r\n                continue;\r\n              }\r\n              var u1 = heap[idx++ >>> 0] & 63;\r\n              if ((u0 & 224) == 192) {\r\n                str += String.fromCharCode((u0 & 31) << 6 | u1);\r\n                continue;\r\n              }\r\n              var u2 = heap[idx++ >>> 0] & 63;\r\n              if ((u0 & 240) == 224) {\r\n                u0 = (u0 & 15) << 12 | u1 << 6 | u2;\r\n              } else {\r\n                u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++ >>> 0] & 63;\r\n              }\r\n              if (u0 < 65536) {\r\n                str += String.fromCharCode(u0);\r\n              } else {\r\n                var ch = u0 - 65536;\r\n                str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\r\n              }\r\n            }\r\n          }\r\n          return str;\r\n        }\r\n        function UTF8ToString(ptr, maxBytesToRead) {\r\n          ptr >>>= 0;\r\n          return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\r\n        }\r\n        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\r\n          outIdx >>>= 0;\r\n          if (!(maxBytesToWrite > 0))\r\n            return 0;\r\n          var startIdx = outIdx;\r\n          var endIdx = outIdx + maxBytesToWrite - 1;\r\n          for (var i = 0; i < str.length; ++i) {\r\n            var u = str.charCodeAt(i);\r\n            if (u >= 55296 && u <= 57343) {\r\n              var u1 = str.charCodeAt(++i);\r\n              u = 65536 + ((u & 1023) << 10) | u1 & 1023;\r\n            }\r\n            if (u <= 127) {\r\n              if (outIdx >= endIdx)\r\n                break;\r\n              heap[outIdx++ >>> 0] = u;\r\n            } else if (u <= 2047) {\r\n              if (outIdx + 1 >= endIdx)\r\n                break;\r\n              heap[outIdx++ >>> 0] = 192 | u >> 6;\r\n              heap[outIdx++ >>> 0] = 128 | u & 63;\r\n            } else if (u <= 65535) {\r\n              if (outIdx + 2 >= endIdx)\r\n                break;\r\n              heap[outIdx++ >>> 0] = 224 | u >> 12;\r\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\r\n              heap[outIdx++ >>> 0] = 128 | u & 63;\r\n            } else {\r\n              if (outIdx + 3 >= endIdx)\r\n                break;\r\n              heap[outIdx++ >>> 0] = 240 | u >> 18;\r\n              heap[outIdx++ >>> 0] = 128 | u >> 12 & 63;\r\n              heap[outIdx++ >>> 0] = 128 | u >> 6 & 63;\r\n              heap[outIdx++ >>> 0] = 128 | u & 63;\r\n            }\r\n          }\r\n          heap[outIdx >>> 0] = 0;\r\n          return outIdx - startIdx;\r\n        }\r\n        function stringToUTF8(str, outPtr, maxBytesToWrite) {\r\n          return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\r\n        }\r\n        function lengthBytesUTF8(str) {\r\n          var len = 0;\r\n          for (var i = 0; i < str.length; ++i) {\r\n            var u = str.charCodeAt(i);\r\n            if (u >= 55296 && u <= 57343)\r\n              u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\r\n            if (u <= 127)\r\n              ++len;\r\n            else if (u <= 2047)\r\n              len += 2;\r\n            else if (u <= 65535)\r\n              len += 3;\r\n            else\r\n              len += 4;\r\n          }\r\n          return len;\r\n        }\r\n        var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : void 0;\r\n        function UTF16ToString(ptr, maxBytesToRead) {\r\n          var endPtr = ptr;\r\n          var idx = endPtr >> 1;\r\n          var maxIdx = idx + maxBytesToRead / 2;\r\n          while (!(idx >= maxIdx) && HEAPU16[idx >>> 0])\r\n            ++idx;\r\n          endPtr = idx << 1;\r\n          if (endPtr - ptr > 32 && UTF16Decoder) {\r\n            return UTF16Decoder.decode(HEAPU8.subarray(ptr >>> 0, endPtr >>> 0));\r\n          } else {\r\n            var str = \"\";\r\n            for (var i = 0; !(i >= maxBytesToRead / 2); ++i) {\r\n              var codeUnit = HEAP16[ptr + i * 2 >>> 1];\r\n              if (codeUnit == 0)\r\n                break;\r\n              str += String.fromCharCode(codeUnit);\r\n            }\r\n            return str;\r\n          }\r\n        }\r\n        function stringToUTF16(str, outPtr, maxBytesToWrite) {\r\n          if (maxBytesToWrite === void 0) {\r\n            maxBytesToWrite = 2147483647;\r\n          }\r\n          if (maxBytesToWrite < 2)\r\n            return 0;\r\n          maxBytesToWrite -= 2;\r\n          var startPtr = outPtr;\r\n          var numCharsToWrite = maxBytesToWrite < str.length * 2 ? maxBytesToWrite / 2 : str.length;\r\n          for (var i = 0; i < numCharsToWrite; ++i) {\r\n            var codeUnit = str.charCodeAt(i);\r\n            HEAP16[outPtr >>> 1] = codeUnit;\r\n            outPtr += 2;\r\n          }\r\n          HEAP16[outPtr >>> 1] = 0;\r\n          return outPtr - startPtr;\r\n        }\r\n        function lengthBytesUTF16(str) {\r\n          return str.length * 2;\r\n        }\r\n        function UTF32ToString(ptr, maxBytesToRead) {\r\n          var i = 0;\r\n          var str = \"\";\r\n          while (!(i >= maxBytesToRead / 4)) {\r\n            var utf32 = HEAP32[ptr + i * 4 >>> 2];\r\n            if (utf32 == 0)\r\n              break;\r\n            ++i;\r\n            if (utf32 >= 65536) {\r\n              var ch = utf32 - 65536;\r\n              str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\r\n            } else {\r\n              str += String.fromCharCode(utf32);\r\n            }\r\n          }\r\n          return str;\r\n        }\r\n        function stringToUTF32(str, outPtr, maxBytesToWrite) {\r\n          outPtr >>>= 0;\r\n          if (maxBytesToWrite === void 0) {\r\n            maxBytesToWrite = 2147483647;\r\n          }\r\n          if (maxBytesToWrite < 4)\r\n            return 0;\r\n          var startPtr = outPtr;\r\n          var endPtr = startPtr + maxBytesToWrite - 4;\r\n          for (var i = 0; i < str.length; ++i) {\r\n            var codeUnit = str.charCodeAt(i);\r\n            if (codeUnit >= 55296 && codeUnit <= 57343) {\r\n              var trailSurrogate = str.charCodeAt(++i);\r\n              codeUnit = 65536 + ((codeUnit & 1023) << 10) | trailSurrogate & 1023;\r\n            }\r\n            HEAP32[outPtr >>> 2] = codeUnit;\r\n            outPtr += 4;\r\n            if (outPtr + 4 > endPtr)\r\n              break;\r\n          }\r\n          HEAP32[outPtr >>> 2] = 0;\r\n          return outPtr - startPtr;\r\n        }\r\n        function lengthBytesUTF32(str) {\r\n          var len = 0;\r\n          for (var i = 0; i < str.length; ++i) {\r\n            var codeUnit = str.charCodeAt(i);\r\n            if (codeUnit >= 55296 && codeUnit <= 57343)\r\n              ++i;\r\n            len += 4;\r\n          }\r\n          return len;\r\n        }\r\n        function writeArrayToMemory(array, buffer2) {\r\n          HEAP8.set(array, buffer2 >>> 0);\r\n        }\r\n        function writeAsciiToMemory(str, buffer2, dontAddNull) {\r\n          for (var i = 0; i < str.length; ++i) {\r\n            HEAP8[buffer2++ >>> 0] = str.charCodeAt(i);\r\n          }\r\n          if (!dontAddNull)\r\n            HEAP8[buffer2 >>> 0] = 0;\r\n        }\r\n        function alignUp(x, multiple) {\r\n          if (x % multiple > 0) {\r\n            x += multiple - x % multiple;\r\n          }\r\n          return x;\r\n        }\r\n        var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\r\n        function updateGlobalBufferAndViews(buf) {\r\n          buffer = buf;\r\n          Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\r\n          Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\r\n          Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\r\n          Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\r\n          Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\r\n          Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\r\n          Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\r\n          Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\r\n        }\r\n        var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\r\n        if (Module[\"wasmMemory\"]) {\r\n          wasmMemory = Module[\"wasmMemory\"];\r\n        } else {\r\n          wasmMemory = new WebAssembly.Memory({ \"initial\": INITIAL_MEMORY / 65536, \"maximum\": 4294967296 / 65536 });\r\n        }\r\n        if (wasmMemory) {\r\n          buffer = wasmMemory.buffer;\r\n        }\r\n        INITIAL_MEMORY = buffer.byteLength;\r\n        updateGlobalBufferAndViews(buffer);\r\n        var wasmTable;\r\n        var __ATPRERUN__ = [];\r\n        var __ATINIT__ = [];\r\n        var __ATMAIN__ = [];\r\n        var __ATPOSTRUN__ = [];\r\n        var runtimeInitialized = false;\r\n        var runtimeExited = false;\r\n        function preRun() {\r\n          if (Module[\"preRun\"]) {\r\n            if (typeof Module[\"preRun\"] == \"function\")\r\n              Module[\"preRun\"] = [Module[\"preRun\"]];\r\n            while (Module[\"preRun\"].length) {\r\n              addOnPreRun(Module[\"preRun\"].shift());\r\n            }\r\n          }\r\n          callRuntimeCallbacks(__ATPRERUN__);\r\n        }\r\n        function initRuntime() {\r\n          runtimeInitialized = true;\r\n          if (!Module[\"noFSInit\"] && !FS.init.initialized)\r\n            FS.init();\r\n          TTY.init();\r\n          callRuntimeCallbacks(__ATINIT__);\r\n        }\r\n        function preMain() {\r\n          FS.ignorePermissions = false;\r\n          callRuntimeCallbacks(__ATMAIN__);\r\n        }\r\n        function exitRuntime() {\r\n          runtimeExited = true;\r\n        }\r\n        function postRun() {\r\n          if (Module[\"postRun\"]) {\r\n            if (typeof Module[\"postRun\"] == \"function\")\r\n              Module[\"postRun\"] = [Module[\"postRun\"]];\r\n            while (Module[\"postRun\"].length) {\r\n              addOnPostRun(Module[\"postRun\"].shift());\r\n            }\r\n          }\r\n          callRuntimeCallbacks(__ATPOSTRUN__);\r\n        }\r\n        function addOnPreRun(cb) {\r\n          __ATPRERUN__.unshift(cb);\r\n        }\r\n        function addOnPostRun(cb) {\r\n          __ATPOSTRUN__.unshift(cb);\r\n        }\r\n        var runDependencies = 0;\r\n        var runDependencyWatcher = null;\r\n        var dependenciesFulfilled = null;\r\n        function getUniqueRunDependency(id) {\r\n          return id;\r\n        }\r\n        function addRunDependency(id) {\r\n          runDependencies++;\r\n          if (Module[\"monitorRunDependencies\"]) {\r\n            Module[\"monitorRunDependencies\"](runDependencies);\r\n          }\r\n        }\r\n        function removeRunDependency(id) {\r\n          runDependencies--;\r\n          if (Module[\"monitorRunDependencies\"]) {\r\n            Module[\"monitorRunDependencies\"](runDependencies);\r\n          }\r\n          if (runDependencies == 0) {\r\n            if (runDependencyWatcher !== null) {\r\n              clearInterval(runDependencyWatcher);\r\n              runDependencyWatcher = null;\r\n            }\r\n            if (dependenciesFulfilled) {\r\n              var callback = dependenciesFulfilled;\r\n              dependenciesFulfilled = null;\r\n              callback();\r\n            }\r\n          }\r\n        }\r\n        Module[\"preloadedImages\"] = {};\r\n        Module[\"preloadedAudios\"] = {};\r\n        function abort(what) {\r\n          if (Module[\"onAbort\"]) {\r\n            Module[\"onAbort\"](what);\r\n          }\r\n          what += \"\";\r\n          err(what);\r\n          ABORT = true;\r\n          EXITSTATUS = 1;\r\n          what = \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\r\n          var e = new WebAssembly.RuntimeError(what);\r\n          readyPromiseReject(e);\r\n          throw e;\r\n        }\r\n        function hasPrefix(str, prefix) {\r\n          return String.prototype.startsWith ? str.startsWith(prefix) : str.indexOf(prefix) === 0;\r\n        }\r\n        var dataURIPrefix = \"data:application/octet-stream;base64,\";\r\n        function isDataURI(filename) {\r\n          return hasPrefix(filename, dataURIPrefix);\r\n        }\r\n        var fileURIPrefix = \"file://\";\r\n        function isFileURI(filename) {\r\n          return hasPrefix(filename, fileURIPrefix);\r\n        }\r\n        var wasmBinaryFile = WasmPath + \"web-ifc.wasm\";\r\n        if (!isDataURI(wasmBinaryFile)) {\r\n          wasmBinaryFile = locateFile(wasmBinaryFile);\r\n        }\r\n        function getBinary() {\r\n          try {\r\n            if (wasmBinary) {\r\n              return new Uint8Array(wasmBinary);\r\n            }\r\n            if (readBinary) {\r\n              return readBinary(wasmBinaryFile);\r\n            } else {\r\n              throw \"both async and sync fetching of the wasm failed\";\r\n            }\r\n          } catch (err2) {\r\n            abort(err2);\r\n          }\r\n        }\r\n        function getBinaryPromise() {\r\n          if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) && typeof fetch === \"function\" && !isFileURI(wasmBinaryFile)) {\r\n            return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\r\n              if (!response[\"ok\"]) {\r\n                throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\r\n              }\r\n              return response[\"arrayBuffer\"]();\r\n            }).catch(function() {\r\n              return getBinary();\r\n            });\r\n          }\r\n          return Promise.resolve().then(getBinary);\r\n        }\r\n        function createWasm() {\r\n          var info = { \"a\": asmLibraryArg };\r\n          function receiveInstance(instance, module2) {\r\n            var exports3 = instance.exports;\r\n            Module[\"asm\"] = exports3;\r\n            wasmTable = Module[\"asm\"][\"X\"];\r\n            removeRunDependency(\"wasm-instantiate\");\r\n          }\r\n          addRunDependency(\"wasm-instantiate\");\r\n          function receiveInstantiatedSource(output) {\r\n            receiveInstance(output[\"instance\"]);\r\n          }\r\n          function instantiateArrayBuffer(receiver) {\r\n            return getBinaryPromise().then(function(binary) {\r\n              return WebAssembly.instantiate(binary, info);\r\n            }).then(receiver, function(reason) {\r\n              err(\"failed to asynchronously prepare wasm: \" + reason);\r\n              abort(reason);\r\n            });\r\n          }\r\n          function instantiateAsync() {\r\n            if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && !isFileURI(wasmBinaryFile) && typeof fetch === \"function\") {\r\n              return fetch(wasmBinaryFile, { credentials: \"same-origin\" }).then(function(response) {\r\n                var result = WebAssembly.instantiateStreaming(response, info);\r\n                return result.then(receiveInstantiatedSource, function(reason) {\r\n                  err(\"wasm streaming compile failed: \" + reason);\r\n                  err(\"falling back to ArrayBuffer instantiation\");\r\n                  return instantiateArrayBuffer(receiveInstantiatedSource);\r\n                });\r\n              });\r\n            } else {\r\n              return instantiateArrayBuffer(receiveInstantiatedSource);\r\n            }\r\n          }\r\n          if (Module[\"instantiateWasm\"]) {\r\n            try {\r\n              var exports2 = Module[\"instantiateWasm\"](info, receiveInstance);\r\n              return exports2;\r\n            } catch (e) {\r\n              err(\"Module.instantiateWasm callback failed with error: \" + e);\r\n              return false;\r\n            }\r\n          }\r\n          instantiateAsync().catch(readyPromiseReject);\r\n          return {};\r\n        }\r\n        var tempDouble;\r\n        var tempI64;\r\n        function callRuntimeCallbacks(callbacks) {\r\n          while (callbacks.length > 0) {\r\n            var callback = callbacks.shift();\r\n            if (typeof callback == \"function\") {\r\n              callback(Module);\r\n              continue;\r\n            }\r\n            var func = callback.func;\r\n            if (typeof func === \"number\") {\r\n              if (callback.arg === void 0) {\r\n                wasmTable.get(func)();\r\n              } else {\r\n                wasmTable.get(func)(callback.arg);\r\n              }\r\n            } else {\r\n              func(callback.arg === void 0 ? null : callback.arg);\r\n            }\r\n          }\r\n        }\r\n        function dynCallLegacy(sig, ptr, args) {\r\n          if (args && args.length) {\r\n            return Module[\"dynCall_\" + sig].apply(null, [ptr].concat(args));\r\n          }\r\n          return Module[\"dynCall_\" + sig].call(null, ptr);\r\n        }\r\n        function dynCall(sig, ptr, args) {\r\n          if (sig.indexOf(\"j\") != -1) {\r\n            return dynCallLegacy(sig, ptr, args);\r\n          }\r\n          return wasmTable.get(ptr).apply(null, args);\r\n        }\r\n        function ___assert_fail(condition, filename, line, func) {\r\n          abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [filename ? UTF8ToString(filename) : \"unknown filename\", line, func ? UTF8ToString(func) : \"unknown function\"]);\r\n        }\r\n        function setErrNo(value) {\r\n          HEAP32[___errno_location() >>> 2] = value;\r\n          return value;\r\n        }\r\n        var PATH = { splitPath: function(filename) {\r\n          var splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n          return splitPathRe.exec(filename).slice(1);\r\n        }, normalizeArray: function(parts, allowAboveRoot) {\r\n          var up = 0;\r\n          for (var i = parts.length - 1; i >= 0; i--) {\r\n            var last = parts[i];\r\n            if (last === \".\") {\r\n              parts.splice(i, 1);\r\n            } else if (last === \"..\") {\r\n              parts.splice(i, 1);\r\n              up++;\r\n            } else if (up) {\r\n              parts.splice(i, 1);\r\n              up--;\r\n            }\r\n          }\r\n          if (allowAboveRoot) {\r\n            for (; up; up--) {\r\n              parts.unshift(\"..\");\r\n            }\r\n          }\r\n          return parts;\r\n        }, normalize: function(path) {\r\n          var isAbsolute = path.charAt(0) === \"/\", trailingSlash = path.slice(-1) === \"/\";\r\n          path = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\r\n            return !!p;\r\n          }), !isAbsolute).join(\"/\");\r\n          if (!path && !isAbsolute) {\r\n            path = \".\";\r\n          }\r\n          if (path && trailingSlash) {\r\n            path += \"/\";\r\n          }\r\n          return (isAbsolute ? \"/\" : \"\") + path;\r\n        }, dirname: function(path) {\r\n          var result = PATH.splitPath(path), root = result[0], dir = result[1];\r\n          if (!root && !dir) {\r\n            return \".\";\r\n          }\r\n          if (dir) {\r\n            dir = dir.slice(0, dir.length - 1);\r\n          }\r\n          return root + dir;\r\n        }, basename: function(path) {\r\n          if (path === \"/\")\r\n            return \"/\";\r\n          path = PATH.normalize(path);\r\n          path = path.replace(/\\/$/, \"\");\r\n          var lastSlash = path.lastIndexOf(\"/\");\r\n          if (lastSlash === -1)\r\n            return path;\r\n          return path.slice(lastSlash + 1);\r\n        }, extname: function(path) {\r\n          return PATH.splitPath(path)[3];\r\n        }, join: function() {\r\n          var paths = Array.prototype.slice.call(arguments, 0);\r\n          return PATH.normalize(paths.join(\"/\"));\r\n        }, join2: function(l, r) {\r\n          return PATH.normalize(l + \"/\" + r);\r\n        } };\r\n        function getRandomDevice() {\r\n          if (typeof crypto === \"object\" && typeof crypto[\"getRandomValues\"] === \"function\") {\r\n            var randomBuffer = new Uint8Array(1);\r\n            return function() {\r\n              crypto.getRandomValues(randomBuffer);\r\n              return randomBuffer[0];\r\n            };\r\n          } else if (ENVIRONMENT_IS_NODE) {\r\n            try {\r\n              var crypto_module = require_crypto();\r\n              return function() {\r\n                return crypto_module[\"randomBytes\"](1)[0];\r\n              };\r\n            } catch (e) {\r\n            }\r\n          }\r\n          return function() {\r\n            abort(\"randomDevice\");\r\n          };\r\n        }\r\n        var PATH_FS = { resolve: function() {\r\n          var resolvedPath = \"\", resolvedAbsolute = false;\r\n          for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n            var path = i >= 0 ? arguments[i] : FS.cwd();\r\n            if (typeof path !== \"string\") {\r\n              throw new TypeError(\"Arguments to path.resolve must be strings\");\r\n            } else if (!path) {\r\n              return \"\";\r\n            }\r\n            resolvedPath = path + \"/\" + resolvedPath;\r\n            resolvedAbsolute = path.charAt(0) === \"/\";\r\n          }\r\n          resolvedPath = PATH.normalizeArray(resolvedPath.split(\"/\").filter(function(p) {\r\n            return !!p;\r\n          }), !resolvedAbsolute).join(\"/\");\r\n          return (resolvedAbsolute ? \"/\" : \"\") + resolvedPath || \".\";\r\n        }, relative: function(from, to) {\r\n          from = PATH_FS.resolve(from).slice(1);\r\n          to = PATH_FS.resolve(to).slice(1);\r\n          function trim(arr) {\r\n            var start = 0;\r\n            for (; start < arr.length; start++) {\r\n              if (arr[start] !== \"\")\r\n                break;\r\n            }\r\n            var end = arr.length - 1;\r\n            for (; end >= 0; end--) {\r\n              if (arr[end] !== \"\")\r\n                break;\r\n            }\r\n            if (start > end)\r\n              return [];\r\n            return arr.slice(start, end - start + 1);\r\n          }\r\n          var fromParts = trim(from.split(\"/\"));\r\n          var toParts = trim(to.split(\"/\"));\r\n          var length = Math.min(fromParts.length, toParts.length);\r\n          var samePartsLength = length;\r\n          for (var i = 0; i < length; i++) {\r\n            if (fromParts[i] !== toParts[i]) {\r\n              samePartsLength = i;\r\n              break;\r\n            }\r\n          }\r\n          var outputParts = [];\r\n          for (var i = samePartsLength; i < fromParts.length; i++) {\r\n            outputParts.push(\"..\");\r\n          }\r\n          outputParts = outputParts.concat(toParts.slice(samePartsLength));\r\n          return outputParts.join(\"/\");\r\n        } };\r\n        var TTY = { ttys: [], init: function() {\r\n        }, shutdown: function() {\r\n        }, register: function(dev, ops) {\r\n          TTY.ttys[dev] = { input: [], output: [], ops };\r\n          FS.registerDevice(dev, TTY.stream_ops);\r\n        }, stream_ops: { open: function(stream) {\r\n          var tty = TTY.ttys[stream.node.rdev];\r\n          if (!tty) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          stream.tty = tty;\r\n          stream.seekable = false;\r\n        }, close: function(stream) {\r\n          stream.tty.ops.flush(stream.tty);\r\n        }, flush: function(stream) {\r\n          stream.tty.ops.flush(stream.tty);\r\n        }, read: function(stream, buffer2, offset, length, pos) {\r\n          if (!stream.tty || !stream.tty.ops.get_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          var bytesRead = 0;\r\n          for (var i = 0; i < length; i++) {\r\n            var result;\r\n            try {\r\n              result = stream.tty.ops.get_char(stream.tty);\r\n            } catch (e) {\r\n              throw new FS.ErrnoError(29);\r\n            }\r\n            if (result === void 0 && bytesRead === 0) {\r\n              throw new FS.ErrnoError(6);\r\n            }\r\n            if (result === null || result === void 0)\r\n              break;\r\n            bytesRead++;\r\n            buffer2[offset + i] = result;\r\n          }\r\n          if (bytesRead) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return bytesRead;\r\n        }, write: function(stream, buffer2, offset, length, pos) {\r\n          if (!stream.tty || !stream.tty.ops.put_char) {\r\n            throw new FS.ErrnoError(60);\r\n          }\r\n          try {\r\n            for (var i = 0; i < length; i++) {\r\n              stream.tty.ops.put_char(stream.tty, buffer2[offset + i]);\r\n            }\r\n          } catch (e) {\r\n            throw new FS.ErrnoError(29);\r\n          }\r\n          if (length) {\r\n            stream.node.timestamp = Date.now();\r\n          }\r\n          return i;\r\n        } }, default_tty_ops: { get_char: function(tty) {\r\n          if (!tty.input.length) {\r\n            var result = null;\r\n            if (ENVIRONMENT_IS_NODE) {\r\n              var BUFSIZE = 256;\r\n              var buf = Buffer.alloc ? Buffer.alloc(BUFSIZE) : new Buffer(BUFSIZE);\r\n              var bytesRead = 0;\r\n              try {\r\n                bytesRead = nodeFS.readSync(process.stdin.fd, buf, 0, BUFSIZE, null);\r\n              } catch (e) {\r\n                if (e.toString().indexOf(\"EOF\") != -1)\r\n                  bytesRead = 0;\r\n                else\r\n                  throw e;\r\n              }\r\n              if (bytesRead > 0) {\r\n                result = buf.slice(0, bytesRead).toString(\"utf-8\");\r\n              } else {\r\n                result = null;\r\n              }\r\n            } else if (typeof window != \"undefined\" && typeof window.prompt == \"function\") {\r\n              result = window.prompt(\"Input: \");\r\n              if (result !== null) {\r\n                result += \"\\n\";\r\n              }\r\n            } else if (typeof readline == \"function\") {\r\n              result = readline();\r\n              if (result !== null) {\r\n                result += \"\\n\";\r\n              }\r\n            }\r\n            if (!result) {\r\n              return null;\r\n            }\r\n            tty.input = intArrayFromString(result, true);\r\n          }\r\n          return tty.input.shift();\r\n        }, put_char: function(tty, val) {\r\n          if (val === null || val === 10) {\r\n            out(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0)\r\n              tty.output.push(val);\r\n          }\r\n        }, flush: function(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            out(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          }\r\n        } }, default_tty1_ops: { put_char: function(tty, val) {\r\n          if (val === null || val === 10) {\r\n            err(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          } else {\r\n            if (val != 0)\r\n              tty.output.push(val);\r\n          }\r\n        }, flush: function(tty) {\r\n          if (tty.output && tty.output.length > 0) {\r\n            err(UTF8ArrayToString(tty.output, 0));\r\n            tty.output = [];\r\n          }\r\n        } } };\r\n        function mmapAlloc(size) {\r\n          var alignedSize = alignMemory(size, 16384);\r\n          var ptr = _malloc(alignedSize);\r\n          while (size < alignedSize)\r\n            HEAP8[ptr + size++ >>> 0] = 0;\r\n          return ptr;\r\n        }\r\n        var MEMFS = { ops_table: null, mount: function(mount) {\r\n          return MEMFS.createNode(null, \"/\", 16384 | 511, 0);\r\n        }, createNode: function(parent, name2, mode, dev) {\r\n          if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {\r\n            throw new FS.ErrnoError(63);\r\n          }\r\n          if (!MEMFS.ops_table) {\r\n            MEMFS.ops_table = { dir: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, lookup: MEMFS.node_ops.lookup, mknod: MEMFS.node_ops.mknod, rename: MEMFS.node_ops.rename, unlink: MEMFS.node_ops.unlink, rmdir: MEMFS.node_ops.rmdir, readdir: MEMFS.node_ops.readdir, symlink: MEMFS.node_ops.symlink }, stream: { llseek: MEMFS.stream_ops.llseek } }, file: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: { llseek: MEMFS.stream_ops.llseek, read: MEMFS.stream_ops.read, write: MEMFS.stream_ops.write, allocate: MEMFS.stream_ops.allocate, mmap: MEMFS.stream_ops.mmap, msync: MEMFS.stream_ops.msync } }, link: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr, readlink: MEMFS.node_ops.readlink }, stream: {} }, chrdev: { node: { getattr: MEMFS.node_ops.getattr, setattr: MEMFS.node_ops.setattr }, stream: FS.chrdev_stream_ops } };\r\n          }\r\n          var node = FS.createNode(parent, name2, mode, dev);\r\n          if (FS.isDir(node.mode)) {\r\n            node.node_ops = MEMFS.ops_table.dir.node;\r\n            node.stream_ops = MEMFS.ops_table.dir.stream;\r\n            node.contents = {};\r\n          } else if (FS.isFile(node.mode)) {\r\n            node.node_ops = MEMFS.ops_table.file.node;\r\n            node.stream_ops = MEMFS.ops_table.file.stream;\r\n            node.usedBytes = 0;\r\n            node.contents = null;\r\n          } else if (FS.isLink(node.mode)) {\r\n            node.node_ops = MEMFS.ops_table.link.node;\r\n            node.stream_ops = MEMFS.ops_table.link.stream;\r\n          } else if (FS.isChrdev(node.mode)) {\r\n            node.node_ops = MEMFS.ops_table.chrdev.node;\r\n            node.stream_ops = MEMFS.ops_table.chrdev.stream;\r\n          }\r\n          node.timestamp = Date.now();\r\n          if (parent) {\r\n            parent.contents[name2] = node;\r\n          }\r\n          return node;\r\n        }, getFileDataAsRegularArray: function(node) {\r\n          if (node.contents && node.contents.subarray) {\r\n            var arr = [];\r\n            for (var i = 0; i < node.usedBytes; ++i)\r\n              arr.push(node.contents[i]);\r\n            return arr;\r\n          }\r\n          return node.contents;\r\n        }, getFileDataAsTypedArray: function(node) {\r\n          if (!node.contents)\r\n            return new Uint8Array(0);\r\n          if (node.contents.subarray)\r\n            return node.contents.subarray(0, node.usedBytes);\r\n          return new Uint8Array(node.contents);\r\n        }, expandFileStorage: function(node, newCapacity) {\r\n          newCapacity >>>= 0;\r\n          var prevCapacity = node.contents ? node.contents.length : 0;\r\n          if (prevCapacity >= newCapacity)\r\n            return;\r\n          var CAPACITY_DOUBLING_MAX = 1024 * 1024;\r\n          newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);\r\n          if (prevCapacity != 0)\r\n            newCapacity = Math.max(newCapacity, 256);\r\n          var oldContents = node.contents;\r\n          node.contents = new Uint8Array(newCapacity);\r\n          if (node.usedBytes > 0)\r\n            node.contents.set(oldContents.subarray(0, node.usedBytes), 0);\r\n          return;\r\n        }, resizeFileStorage: function(node, newSize) {\r\n          newSize >>>= 0;\r\n          if (node.usedBytes == newSize)\r\n            return;\r\n          if (newSize == 0) {\r\n            node.contents = null;\r\n            node.usedBytes = 0;\r\n            return;\r\n          }\r\n          if (!node.contents || node.contents.subarray) {\r\n            var oldContents = node.contents;\r\n            node.contents = new Uint8Array(newSize);\r\n            if (oldContents) {\r\n              node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));\r\n            }\r\n            node.usedBytes = newSize;\r\n            return;\r\n          }\r\n          if (!node.contents)\r\n            node.contents = [];\r\n          if (node.contents.length > newSize)\r\n            node.contents.length = newSize;\r\n          else\r\n            while (node.contents.length < newSize)\r\n              node.contents.push(0);\r\n          node.usedBytes = newSize;\r\n        }, node_ops: { getattr: function(node) {\r\n          var attr = {};\r\n          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;\r\n          attr.ino = node.id;\r\n          attr.mode = node.mode;\r\n          attr.nlink = 1;\r\n          attr.uid = 0;\r\n          attr.gid = 0;\r\n          attr.rdev = node.rdev;\r\n          if (FS.isDir(node.mode)) {\r\n            attr.size = 4096;\r\n          } else if (FS.isFile(node.mode)) {\r\n            attr.size = node.usedBytes;\r\n          } else if (FS.isLink(node.mode)) {\r\n            attr.size = node.link.length;\r\n          } else {\r\n            attr.size = 0;\r\n          }\r\n          attr.atime = new Date(node.timestamp);\r\n          attr.mtime = new Date(node.timestamp);\r\n          attr.ctime = new Date(node.timestamp);\r\n          attr.blksize = 4096;\r\n          attr.blocks = Math.ceil(attr.size / attr.blksize);\r\n          return attr;\r\n        }, setattr: function(node, attr) {\r\n          if (attr.mode !== void 0) {\r\n            node.mode = attr.mode;\r\n          }\r\n          if (attr.timestamp !== void 0) {\r\n            node.timestamp = attr.timestamp;\r\n          }\r\n          if (attr.size !== void 0) {\r\n            MEMFS.resizeFileStorage(node, attr.size);\r\n          }\r\n        }, lookup: function(parent, name2) {\r\n          throw FS.genericErrors[44];\r\n        }, mknod: function(parent, name2, mode, dev) {\r\n          return MEMFS.createNode(parent, name2, mode, dev);\r\n        }, rename: function(old_node, new_dir, new_name) {\r\n          if (FS.isDir(old_node.mode)) {\r\n            var new_node;\r\n            try {\r\n              new_node = FS.lookupNode(new_dir, new_name);\r\n            } catch (e) {\r\n            }\r\n            if (new_node) {\r\n              for (var i in new_node.contents) {\r\n                throw new FS.ErrnoError(55);\r\n              }\r\n            }\r\n          }\r\n          delete old_node.parent.contents[old_node.name];\r\n          old_node.name = new_name;\r\n          new_dir.contents[new_name] = old_node;\r\n          old_node.parent = new_dir;\r\n        }, unlink: function(parent, name2) {\r\n          delete parent.contents[name2];\r\n        }, rmdir: function(parent, name2) {\r\n          var node = FS.lookupNode(parent, name2);\r\n          for (var i in node.contents) {\r\n            throw new FS.ErrnoError(55);\r\n          }\r\n          delete parent.contents[name2];\r\n        }, readdir: function(node) {\r\n          var entries = [\".\", \"..\"];\r\n          for (var key2 in node.contents) {\r\n            if (!node.contents.hasOwnProperty(key2)) {\r\n              continue;\r\n            }\r\n            entries.push(key2);\r\n          }\r\n          return entries;\r\n        }, symlink: function(parent, newname, oldpath) {\r\n          var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);\r\n          node.link = oldpath;\r\n          return node;\r\n        }, readlink: function(node) {\r\n          if (!FS.isLink(node.mode)) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return node.link;\r\n        } }, stream_ops: { read: function(stream, buffer2, offset, length, position) {\r\n          var contents = stream.node.contents;\r\n          if (position >= stream.node.usedBytes)\r\n            return 0;\r\n          var size = Math.min(stream.node.usedBytes - position, length);\r\n          if (size > 8 && contents.subarray) {\r\n            buffer2.set(contents.subarray(position, position + size), offset);\r\n          } else {\r\n            for (var i = 0; i < size; i++)\r\n              buffer2[offset + i] = contents[position + i];\r\n          }\r\n          return size;\r\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\r\n          if (buffer2.buffer === HEAP8.buffer) {\r\n            canOwn = false;\r\n          }\r\n          if (!length)\r\n            return 0;\r\n          var node = stream.node;\r\n          node.timestamp = Date.now();\r\n          if (buffer2.subarray && (!node.contents || node.contents.subarray)) {\r\n            if (canOwn) {\r\n              node.contents = buffer2.subarray(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (node.usedBytes === 0 && position === 0) {\r\n              node.contents = buffer2.slice(offset, offset + length);\r\n              node.usedBytes = length;\r\n              return length;\r\n            } else if (position + length <= node.usedBytes) {\r\n              node.contents.set(buffer2.subarray(offset, offset + length), position);\r\n              return length;\r\n            }\r\n          }\r\n          MEMFS.expandFileStorage(node, position + length);\r\n          if (node.contents.subarray && buffer2.subarray) {\r\n            node.contents.set(buffer2.subarray(offset, offset + length), position);\r\n          } else {\r\n            for (var i = 0; i < length; i++) {\r\n              node.contents[position + i] = buffer2[offset + i];\r\n            }\r\n          }\r\n          node.usedBytes = Math.max(node.usedBytes, position + length);\r\n          return length;\r\n        }, llseek: function(stream, offset, whence) {\r\n          var position = offset;\r\n          if (whence === 1) {\r\n            position += stream.position;\r\n          } else if (whence === 2) {\r\n            if (FS.isFile(stream.node.mode)) {\r\n              position += stream.node.usedBytes;\r\n            }\r\n          }\r\n          if (position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return position;\r\n        }, allocate: function(stream, offset, length) {\r\n          MEMFS.expandFileStorage(stream.node, offset + length);\r\n          stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);\r\n        }, mmap: function(stream, address, length, position, prot, flags) {\r\n          assert(address === 0);\r\n          if (!FS.isFile(stream.node.mode)) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          var ptr;\r\n          var allocated;\r\n          var contents = stream.node.contents;\r\n          if (!(flags & 2) && contents.buffer === buffer) {\r\n            allocated = false;\r\n            ptr = contents.byteOffset;\r\n          } else {\r\n            if (position > 0 || position + length < contents.length) {\r\n              if (contents.subarray) {\r\n                contents = contents.subarray(position, position + length);\r\n              } else {\r\n                contents = Array.prototype.slice.call(contents, position, position + length);\r\n              }\r\n            }\r\n            allocated = true;\r\n            ptr = mmapAlloc(length);\r\n            if (!ptr) {\r\n              throw new FS.ErrnoError(48);\r\n            }\r\n            ptr >>>= 0;\r\n            HEAP8.set(contents, ptr >>> 0);\r\n          }\r\n          return { ptr, allocated };\r\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\r\n          if (!FS.isFile(stream.node.mode)) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          if (mmapFlags & 2) {\r\n            return 0;\r\n          }\r\n          var bytesWritten = MEMFS.stream_ops.write(stream, buffer2, 0, length, offset, false);\r\n          return 0;\r\n        } } };\r\n        var FS = { root: null, mounts: [], devices: {}, streams: [], nextInode: 1, nameTable: null, currentPath: \"/\", initialized: false, ignorePermissions: true, trackingDelegate: {}, tracking: { openFlags: { READ: 1, WRITE: 2 } }, ErrnoError: null, genericErrors: {}, filesystems: null, syncFSRequests: 0, lookupPath: function(path, opts) {\r\n          path = PATH_FS.resolve(FS.cwd(), path);\r\n          opts = opts || {};\r\n          if (!path)\r\n            return { path: \"\", node: null };\r\n          var defaults = { follow_mount: true, recurse_count: 0 };\r\n          for (var key2 in defaults) {\r\n            if (opts[key2] === void 0) {\r\n              opts[key2] = defaults[key2];\r\n            }\r\n          }\r\n          if (opts.recurse_count > 8) {\r\n            throw new FS.ErrnoError(32);\r\n          }\r\n          var parts = PATH.normalizeArray(path.split(\"/\").filter(function(p) {\r\n            return !!p;\r\n          }), false);\r\n          var current = FS.root;\r\n          var current_path = \"/\";\r\n          for (var i = 0; i < parts.length; i++) {\r\n            var islast = i === parts.length - 1;\r\n            if (islast && opts.parent) {\r\n              break;\r\n            }\r\n            current = FS.lookupNode(current, parts[i]);\r\n            current_path = PATH.join2(current_path, parts[i]);\r\n            if (FS.isMountpoint(current)) {\r\n              if (!islast || islast && opts.follow_mount) {\r\n                current = current.mounted.root;\r\n              }\r\n            }\r\n            if (!islast || opts.follow) {\r\n              var count = 0;\r\n              while (FS.isLink(current.mode)) {\r\n                var link = FS.readlink(current_path);\r\n                current_path = PATH_FS.resolve(PATH.dirname(current_path), link);\r\n                var lookup = FS.lookupPath(current_path, { recurse_count: opts.recurse_count });\r\n                current = lookup.node;\r\n                if (count++ > 40) {\r\n                  throw new FS.ErrnoError(32);\r\n                }\r\n              }\r\n            }\r\n          }\r\n          return { path: current_path, node: current };\r\n        }, getPath: function(node) {\r\n          var path;\r\n          while (true) {\r\n            if (FS.isRoot(node)) {\r\n              var mount = node.mount.mountpoint;\r\n              if (!path)\r\n                return mount;\r\n              return mount[mount.length - 1] !== \"/\" ? mount + \"/\" + path : mount + path;\r\n            }\r\n            path = path ? node.name + \"/\" + path : node.name;\r\n            node = node.parent;\r\n          }\r\n        }, hashName: function(parentid, name2) {\r\n          var hash = 0;\r\n          for (var i = 0; i < name2.length; i++) {\r\n            hash = (hash << 5) - hash + name2.charCodeAt(i) | 0;\r\n          }\r\n          return (parentid + hash >>> 0) % FS.nameTable.length;\r\n        }, hashAddNode: function(node) {\r\n          var hash = FS.hashName(node.parent.id, node.name);\r\n          node.name_next = FS.nameTable[hash];\r\n          FS.nameTable[hash] = node;\r\n        }, hashRemoveNode: function(node) {\r\n          var hash = FS.hashName(node.parent.id, node.name);\r\n          if (FS.nameTable[hash] === node) {\r\n            FS.nameTable[hash] = node.name_next;\r\n          } else {\r\n            var current = FS.nameTable[hash];\r\n            while (current) {\r\n              if (current.name_next === node) {\r\n                current.name_next = node.name_next;\r\n                break;\r\n              }\r\n              current = current.name_next;\r\n            }\r\n          }\r\n        }, lookupNode: function(parent, name2) {\r\n          var errCode = FS.mayLookup(parent);\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode, parent);\r\n          }\r\n          var hash = FS.hashName(parent.id, name2);\r\n          for (var node = FS.nameTable[hash]; node; node = node.name_next) {\r\n            var nodeName = node.name;\r\n            if (node.parent.id === parent.id && nodeName === name2) {\r\n              return node;\r\n            }\r\n          }\r\n          return FS.lookup(parent, name2);\r\n        }, createNode: function(parent, name2, mode, rdev) {\r\n          var node = new FS.FSNode(parent, name2, mode, rdev);\r\n          FS.hashAddNode(node);\r\n          return node;\r\n        }, destroyNode: function(node) {\r\n          FS.hashRemoveNode(node);\r\n        }, isRoot: function(node) {\r\n          return node === node.parent;\r\n        }, isMountpoint: function(node) {\r\n          return !!node.mounted;\r\n        }, isFile: function(mode) {\r\n          return (mode & 61440) === 32768;\r\n        }, isDir: function(mode) {\r\n          return (mode & 61440) === 16384;\r\n        }, isLink: function(mode) {\r\n          return (mode & 61440) === 40960;\r\n        }, isChrdev: function(mode) {\r\n          return (mode & 61440) === 8192;\r\n        }, isBlkdev: function(mode) {\r\n          return (mode & 61440) === 24576;\r\n        }, isFIFO: function(mode) {\r\n          return (mode & 61440) === 4096;\r\n        }, isSocket: function(mode) {\r\n          return (mode & 49152) === 49152;\r\n        }, flagModes: { \"r\": 0, \"r+\": 2, \"w\": 577, \"w+\": 578, \"a\": 1089, \"a+\": 1090 }, modeStringToFlags: function(str) {\r\n          var flags = FS.flagModes[str];\r\n          if (typeof flags === \"undefined\") {\r\n            throw new Error(\"Unknown file open mode: \" + str);\r\n          }\r\n          return flags;\r\n        }, flagsToPermissionString: function(flag) {\r\n          var perms = [\"r\", \"w\", \"rw\"][flag & 3];\r\n          if (flag & 512) {\r\n            perms += \"w\";\r\n          }\r\n          return perms;\r\n        }, nodePermissions: function(node, perms) {\r\n          if (FS.ignorePermissions) {\r\n            return 0;\r\n          }\r\n          if (perms.indexOf(\"r\") !== -1 && !(node.mode & 292)) {\r\n            return 2;\r\n          } else if (perms.indexOf(\"w\") !== -1 && !(node.mode & 146)) {\r\n            return 2;\r\n          } else if (perms.indexOf(\"x\") !== -1 && !(node.mode & 73)) {\r\n            return 2;\r\n          }\r\n          return 0;\r\n        }, mayLookup: function(dir) {\r\n          var errCode = FS.nodePermissions(dir, \"x\");\r\n          if (errCode)\r\n            return errCode;\r\n          if (!dir.node_ops.lookup)\r\n            return 2;\r\n          return 0;\r\n        }, mayCreate: function(dir, name2) {\r\n          try {\r\n            var node = FS.lookupNode(dir, name2);\r\n            return 20;\r\n          } catch (e) {\r\n          }\r\n          return FS.nodePermissions(dir, \"wx\");\r\n        }, mayDelete: function(dir, name2, isdir) {\r\n          var node;\r\n          try {\r\n            node = FS.lookupNode(dir, name2);\r\n          } catch (e) {\r\n            return e.errno;\r\n          }\r\n          var errCode = FS.nodePermissions(dir, \"wx\");\r\n          if (errCode) {\r\n            return errCode;\r\n          }\r\n          if (isdir) {\r\n            if (!FS.isDir(node.mode)) {\r\n              return 54;\r\n            }\r\n            if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {\r\n              return 10;\r\n            }\r\n          } else {\r\n            if (FS.isDir(node.mode)) {\r\n              return 31;\r\n            }\r\n          }\r\n          return 0;\r\n        }, mayOpen: function(node, flags) {\r\n          if (!node) {\r\n            return 44;\r\n          }\r\n          if (FS.isLink(node.mode)) {\r\n            return 32;\r\n          } else if (FS.isDir(node.mode)) {\r\n            if (FS.flagsToPermissionString(flags) !== \"r\" || flags & 512) {\r\n              return 31;\r\n            }\r\n          }\r\n          return FS.nodePermissions(node, FS.flagsToPermissionString(flags));\r\n        }, MAX_OPEN_FDS: 4096, nextfd: function(fd_start, fd_end) {\r\n          fd_start = fd_start || 0;\r\n          fd_end = fd_end || FS.MAX_OPEN_FDS;\r\n          for (var fd = fd_start; fd <= fd_end; fd++) {\r\n            if (!FS.streams[fd]) {\r\n              return fd;\r\n            }\r\n          }\r\n          throw new FS.ErrnoError(33);\r\n        }, getStream: function(fd) {\r\n          return FS.streams[fd];\r\n        }, createStream: function(stream, fd_start, fd_end) {\r\n          if (!FS.FSStream) {\r\n            FS.FSStream = function() {\r\n            };\r\n            FS.FSStream.prototype = { object: { get: function() {\r\n              return this.node;\r\n            }, set: function(val) {\r\n              this.node = val;\r\n            } }, isRead: { get: function() {\r\n              return (this.flags & 2097155) !== 1;\r\n            } }, isWrite: { get: function() {\r\n              return (this.flags & 2097155) !== 0;\r\n            } }, isAppend: { get: function() {\r\n              return this.flags & 1024;\r\n            } } };\r\n          }\r\n          var newStream = new FS.FSStream();\r\n          for (var p in stream) {\r\n            newStream[p] = stream[p];\r\n          }\r\n          stream = newStream;\r\n          var fd = FS.nextfd(fd_start, fd_end);\r\n          stream.fd = fd;\r\n          FS.streams[fd] = stream;\r\n          return stream;\r\n        }, closeStream: function(fd) {\r\n          FS.streams[fd] = null;\r\n        }, chrdev_stream_ops: { open: function(stream) {\r\n          var device = FS.getDevice(stream.node.rdev);\r\n          stream.stream_ops = device.stream_ops;\r\n          if (stream.stream_ops.open) {\r\n            stream.stream_ops.open(stream);\r\n          }\r\n        }, llseek: function() {\r\n          throw new FS.ErrnoError(70);\r\n        } }, major: function(dev) {\r\n          return dev >> 8;\r\n        }, minor: function(dev) {\r\n          return dev & 255;\r\n        }, makedev: function(ma, mi) {\r\n          return ma << 8 | mi;\r\n        }, registerDevice: function(dev, ops) {\r\n          FS.devices[dev] = { stream_ops: ops };\r\n        }, getDevice: function(dev) {\r\n          return FS.devices[dev];\r\n        }, getMounts: function(mount) {\r\n          var mounts = [];\r\n          var check = [mount];\r\n          while (check.length) {\r\n            var m = check.pop();\r\n            mounts.push(m);\r\n            check.push.apply(check, m.mounts);\r\n          }\r\n          return mounts;\r\n        }, syncfs: function(populate, callback) {\r\n          if (typeof populate === \"function\") {\r\n            callback = populate;\r\n            populate = false;\r\n          }\r\n          FS.syncFSRequests++;\r\n          if (FS.syncFSRequests > 1) {\r\n            err(\"warning: \" + FS.syncFSRequests + \" FS.syncfs operations in flight at once, probably just doing extra work\");\r\n          }\r\n          var mounts = FS.getMounts(FS.root.mount);\r\n          var completed = 0;\r\n          function doCallback(errCode) {\r\n            FS.syncFSRequests--;\r\n            return callback(errCode);\r\n          }\r\n          function done(errCode) {\r\n            if (errCode) {\r\n              if (!done.errored) {\r\n                done.errored = true;\r\n                return doCallback(errCode);\r\n              }\r\n              return;\r\n            }\r\n            if (++completed >= mounts.length) {\r\n              doCallback(null);\r\n            }\r\n          }\r\n          mounts.forEach(function(mount) {\r\n            if (!mount.type.syncfs) {\r\n              return done(null);\r\n            }\r\n            mount.type.syncfs(mount, populate, done);\r\n          });\r\n        }, mount: function(type, opts, mountpoint) {\r\n          var root = mountpoint === \"/\";\r\n          var pseudo = !mountpoint;\r\n          var node;\r\n          if (root && FS.root) {\r\n            throw new FS.ErrnoError(10);\r\n          } else if (!root && !pseudo) {\r\n            var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n            mountpoint = lookup.path;\r\n            node = lookup.node;\r\n            if (FS.isMountpoint(node)) {\r\n              throw new FS.ErrnoError(10);\r\n            }\r\n            if (!FS.isDir(node.mode)) {\r\n              throw new FS.ErrnoError(54);\r\n            }\r\n          }\r\n          var mount = { type, opts, mountpoint, mounts: [] };\r\n          var mountRoot = type.mount(mount);\r\n          mountRoot.mount = mount;\r\n          mount.root = mountRoot;\r\n          if (root) {\r\n            FS.root = mountRoot;\r\n          } else if (node) {\r\n            node.mounted = mount;\r\n            if (node.mount) {\r\n              node.mount.mounts.push(mount);\r\n            }\r\n          }\r\n          return mountRoot;\r\n        }, unmount: function(mountpoint) {\r\n          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });\r\n          if (!FS.isMountpoint(lookup.node)) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          var node = lookup.node;\r\n          var mount = node.mounted;\r\n          var mounts = FS.getMounts(mount);\r\n          Object.keys(FS.nameTable).forEach(function(hash) {\r\n            var current = FS.nameTable[hash];\r\n            while (current) {\r\n              var next = current.name_next;\r\n              if (mounts.indexOf(current.mount) !== -1) {\r\n                FS.destroyNode(current);\r\n              }\r\n              current = next;\r\n            }\r\n          });\r\n          node.mounted = null;\r\n          var idx = node.mount.mounts.indexOf(mount);\r\n          node.mount.mounts.splice(idx, 1);\r\n        }, lookup: function(parent, name2) {\r\n          return parent.node_ops.lookup(parent, name2);\r\n        }, mknod: function(path, mode, dev) {\r\n          var lookup = FS.lookupPath(path, { parent: true });\r\n          var parent = lookup.node;\r\n          var name2 = PATH.basename(path);\r\n          if (!name2 || name2 === \".\" || name2 === \"..\") {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          var errCode = FS.mayCreate(parent, name2);\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n          if (!parent.node_ops.mknod) {\r\n            throw new FS.ErrnoError(63);\r\n          }\r\n          return parent.node_ops.mknod(parent, name2, mode, dev);\r\n        }, create: function(path, mode) {\r\n          mode = mode !== void 0 ? mode : 438;\r\n          mode &= 4095;\r\n          mode |= 32768;\r\n          return FS.mknod(path, mode, 0);\r\n        }, mkdir: function(path, mode) {\r\n          mode = mode !== void 0 ? mode : 511;\r\n          mode &= 511 | 512;\r\n          mode |= 16384;\r\n          return FS.mknod(path, mode, 0);\r\n        }, mkdirTree: function(path, mode) {\r\n          var dirs = path.split(\"/\");\r\n          var d = \"\";\r\n          for (var i = 0; i < dirs.length; ++i) {\r\n            if (!dirs[i])\r\n              continue;\r\n            d += \"/\" + dirs[i];\r\n            try {\r\n              FS.mkdir(d, mode);\r\n            } catch (e) {\r\n              if (e.errno != 20)\r\n                throw e;\r\n            }\r\n          }\r\n        }, mkdev: function(path, mode, dev) {\r\n          if (typeof dev === \"undefined\") {\r\n            dev = mode;\r\n            mode = 438;\r\n          }\r\n          mode |= 8192;\r\n          return FS.mknod(path, mode, dev);\r\n        }, symlink: function(oldpath, newpath) {\r\n          if (!PATH_FS.resolve(oldpath)) {\r\n            throw new FS.ErrnoError(44);\r\n          }\r\n          var lookup = FS.lookupPath(newpath, { parent: true });\r\n          var parent = lookup.node;\r\n          if (!parent) {\r\n            throw new FS.ErrnoError(44);\r\n          }\r\n          var newname = PATH.basename(newpath);\r\n          var errCode = FS.mayCreate(parent, newname);\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n          if (!parent.node_ops.symlink) {\r\n            throw new FS.ErrnoError(63);\r\n          }\r\n          return parent.node_ops.symlink(parent, newname, oldpath);\r\n        }, rename: function(old_path, new_path) {\r\n          var old_dirname = PATH.dirname(old_path);\r\n          var new_dirname = PATH.dirname(new_path);\r\n          var old_name = PATH.basename(old_path);\r\n          var new_name = PATH.basename(new_path);\r\n          var lookup, old_dir, new_dir;\r\n          lookup = FS.lookupPath(old_path, { parent: true });\r\n          old_dir = lookup.node;\r\n          lookup = FS.lookupPath(new_path, { parent: true });\r\n          new_dir = lookup.node;\r\n          if (!old_dir || !new_dir)\r\n            throw new FS.ErrnoError(44);\r\n          if (old_dir.mount !== new_dir.mount) {\r\n            throw new FS.ErrnoError(75);\r\n          }\r\n          var old_node = FS.lookupNode(old_dir, old_name);\r\n          var relative = PATH_FS.relative(old_path, new_dirname);\r\n          if (relative.charAt(0) !== \".\") {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          relative = PATH_FS.relative(new_path, old_dirname);\r\n          if (relative.charAt(0) !== \".\") {\r\n            throw new FS.ErrnoError(55);\r\n          }\r\n          var new_node;\r\n          try {\r\n            new_node = FS.lookupNode(new_dir, new_name);\r\n          } catch (e) {\r\n          }\r\n          if (old_node === new_node) {\r\n            return;\r\n          }\r\n          var isdir = FS.isDir(old_node.mode);\r\n          var errCode = FS.mayDelete(old_dir, old_name, isdir);\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n          errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n          if (!old_dir.node_ops.rename) {\r\n            throw new FS.ErrnoError(63);\r\n          }\r\n          if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {\r\n            throw new FS.ErrnoError(10);\r\n          }\r\n          if (new_dir !== old_dir) {\r\n            errCode = FS.nodePermissions(old_dir, \"w\");\r\n            if (errCode) {\r\n              throw new FS.ErrnoError(errCode);\r\n            }\r\n          }\r\n          try {\r\n            if (FS.trackingDelegate[\"willMovePath\"]) {\r\n              FS.trackingDelegate[\"willMovePath\"](old_path, new_path);\r\n            }\r\n          } catch (e) {\r\n            err(\"FS.trackingDelegate['willMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\r\n          }\r\n          FS.hashRemoveNode(old_node);\r\n          try {\r\n            old_dir.node_ops.rename(old_node, new_dir, new_name);\r\n          } catch (e) {\r\n            throw e;\r\n          } finally {\r\n            FS.hashAddNode(old_node);\r\n          }\r\n          try {\r\n            if (FS.trackingDelegate[\"onMovePath\"])\r\n              FS.trackingDelegate[\"onMovePath\"](old_path, new_path);\r\n          } catch (e) {\r\n            err(\"FS.trackingDelegate['onMovePath']('\" + old_path + \"', '\" + new_path + \"') threw an exception: \" + e.message);\r\n          }\r\n        }, rmdir: function(path) {\r\n          var lookup = FS.lookupPath(path, { parent: true });\r\n          var parent = lookup.node;\r\n          var name2 = PATH.basename(path);\r\n          var node = FS.lookupNode(parent, name2);\r\n          var errCode = FS.mayDelete(parent, name2, true);\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n          if (!parent.node_ops.rmdir) {\r\n            throw new FS.ErrnoError(63);\r\n          }\r\n          if (FS.isMountpoint(node)) {\r\n            throw new FS.ErrnoError(10);\r\n          }\r\n          try {\r\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\r\n              FS.trackingDelegate[\"willDeletePath\"](path);\r\n            }\r\n          } catch (e) {\r\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\r\n          }\r\n          parent.node_ops.rmdir(parent, name2);\r\n          FS.destroyNode(node);\r\n          try {\r\n            if (FS.trackingDelegate[\"onDeletePath\"])\r\n              FS.trackingDelegate[\"onDeletePath\"](path);\r\n          } catch (e) {\r\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\r\n          }\r\n        }, readdir: function(path) {\r\n          var lookup = FS.lookupPath(path, { follow: true });\r\n          var node = lookup.node;\r\n          if (!node.node_ops.readdir) {\r\n            throw new FS.ErrnoError(54);\r\n          }\r\n          return node.node_ops.readdir(node);\r\n        }, unlink: function(path) {\r\n          var lookup = FS.lookupPath(path, { parent: true });\r\n          var parent = lookup.node;\r\n          var name2 = PATH.basename(path);\r\n          var node = FS.lookupNode(parent, name2);\r\n          var errCode = FS.mayDelete(parent, name2, false);\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n          if (!parent.node_ops.unlink) {\r\n            throw new FS.ErrnoError(63);\r\n          }\r\n          if (FS.isMountpoint(node)) {\r\n            throw new FS.ErrnoError(10);\r\n          }\r\n          try {\r\n            if (FS.trackingDelegate[\"willDeletePath\"]) {\r\n              FS.trackingDelegate[\"willDeletePath\"](path);\r\n            }\r\n          } catch (e) {\r\n            err(\"FS.trackingDelegate['willDeletePath']('\" + path + \"') threw an exception: \" + e.message);\r\n          }\r\n          parent.node_ops.unlink(parent, name2);\r\n          FS.destroyNode(node);\r\n          try {\r\n            if (FS.trackingDelegate[\"onDeletePath\"])\r\n              FS.trackingDelegate[\"onDeletePath\"](path);\r\n          } catch (e) {\r\n            err(\"FS.trackingDelegate['onDeletePath']('\" + path + \"') threw an exception: \" + e.message);\r\n          }\r\n        }, readlink: function(path) {\r\n          var lookup = FS.lookupPath(path);\r\n          var link = lookup.node;\r\n          if (!link) {\r\n            throw new FS.ErrnoError(44);\r\n          }\r\n          if (!link.node_ops.readlink) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));\r\n        }, stat: function(path, dontFollow) {\r\n          var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n          var node = lookup.node;\r\n          if (!node) {\r\n            throw new FS.ErrnoError(44);\r\n          }\r\n          if (!node.node_ops.getattr) {\r\n            throw new FS.ErrnoError(63);\r\n          }\r\n          return node.node_ops.getattr(node);\r\n        }, lstat: function(path) {\r\n          return FS.stat(path, true);\r\n        }, chmod: function(path, mode, dontFollow) {\r\n          var node;\r\n          if (typeof path === \"string\") {\r\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n            node = lookup.node;\r\n          } else {\r\n            node = path;\r\n          }\r\n          if (!node.node_ops.setattr) {\r\n            throw new FS.ErrnoError(63);\r\n          }\r\n          node.node_ops.setattr(node, { mode: mode & 4095 | node.mode & ~4095, timestamp: Date.now() });\r\n        }, lchmod: function(path, mode) {\r\n          FS.chmod(path, mode, true);\r\n        }, fchmod: function(fd, mode) {\r\n          var stream = FS.getStream(fd);\r\n          if (!stream) {\r\n            throw new FS.ErrnoError(8);\r\n          }\r\n          FS.chmod(stream.node, mode);\r\n        }, chown: function(path, uid, gid, dontFollow) {\r\n          var node;\r\n          if (typeof path === \"string\") {\r\n            var lookup = FS.lookupPath(path, { follow: !dontFollow });\r\n            node = lookup.node;\r\n          } else {\r\n            node = path;\r\n          }\r\n          if (!node.node_ops.setattr) {\r\n            throw new FS.ErrnoError(63);\r\n          }\r\n          node.node_ops.setattr(node, { timestamp: Date.now() });\r\n        }, lchown: function(path, uid, gid) {\r\n          FS.chown(path, uid, gid, true);\r\n        }, fchown: function(fd, uid, gid) {\r\n          var stream = FS.getStream(fd);\r\n          if (!stream) {\r\n            throw new FS.ErrnoError(8);\r\n          }\r\n          FS.chown(stream.node, uid, gid);\r\n        }, truncate: function(path, len) {\r\n          if (len < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          var node;\r\n          if (typeof path === \"string\") {\r\n            var lookup = FS.lookupPath(path, { follow: true });\r\n            node = lookup.node;\r\n          } else {\r\n            node = path;\r\n          }\r\n          if (!node.node_ops.setattr) {\r\n            throw new FS.ErrnoError(63);\r\n          }\r\n          if (FS.isDir(node.mode)) {\r\n            throw new FS.ErrnoError(31);\r\n          }\r\n          if (!FS.isFile(node.mode)) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          var errCode = FS.nodePermissions(node, \"w\");\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n          node.node_ops.setattr(node, { size: len, timestamp: Date.now() });\r\n        }, ftruncate: function(fd, len) {\r\n          var stream = FS.getStream(fd);\r\n          if (!stream) {\r\n            throw new FS.ErrnoError(8);\r\n          }\r\n          if ((stream.flags & 2097155) === 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          FS.truncate(stream.node, len);\r\n        }, utime: function(path, atime, mtime) {\r\n          var lookup = FS.lookupPath(path, { follow: true });\r\n          var node = lookup.node;\r\n          node.node_ops.setattr(node, { timestamp: Math.max(atime, mtime) });\r\n        }, open: function(path, flags, mode, fd_start, fd_end) {\r\n          if (path === \"\") {\r\n            throw new FS.ErrnoError(44);\r\n          }\r\n          flags = typeof flags === \"string\" ? FS.modeStringToFlags(flags) : flags;\r\n          mode = typeof mode === \"undefined\" ? 438 : mode;\r\n          if (flags & 64) {\r\n            mode = mode & 4095 | 32768;\r\n          } else {\r\n            mode = 0;\r\n          }\r\n          var node;\r\n          if (typeof path === \"object\") {\r\n            node = path;\r\n          } else {\r\n            path = PATH.normalize(path);\r\n            try {\r\n              var lookup = FS.lookupPath(path, { follow: !(flags & 131072) });\r\n              node = lookup.node;\r\n            } catch (e) {\r\n            }\r\n          }\r\n          var created = false;\r\n          if (flags & 64) {\r\n            if (node) {\r\n              if (flags & 128) {\r\n                throw new FS.ErrnoError(20);\r\n              }\r\n            } else {\r\n              node = FS.mknod(path, mode, 0);\r\n              created = true;\r\n            }\r\n          }\r\n          if (!node) {\r\n            throw new FS.ErrnoError(44);\r\n          }\r\n          if (FS.isChrdev(node.mode)) {\r\n            flags &= ~512;\r\n          }\r\n          if (flags & 65536 && !FS.isDir(node.mode)) {\r\n            throw new FS.ErrnoError(54);\r\n          }\r\n          if (!created) {\r\n            var errCode = FS.mayOpen(node, flags);\r\n            if (errCode) {\r\n              throw new FS.ErrnoError(errCode);\r\n            }\r\n          }\r\n          if (flags & 512) {\r\n            FS.truncate(node, 0);\r\n          }\r\n          flags &= ~(128 | 512 | 131072);\r\n          var stream = FS.createStream({ node, path: FS.getPath(node), flags, seekable: true, position: 0, stream_ops: node.stream_ops, ungotten: [], error: false }, fd_start, fd_end);\r\n          if (stream.stream_ops.open) {\r\n            stream.stream_ops.open(stream);\r\n          }\r\n          if (Module[\"logReadFiles\"] && !(flags & 1)) {\r\n            if (!FS.readFiles)\r\n              FS.readFiles = {};\r\n            if (!(path in FS.readFiles)) {\r\n              FS.readFiles[path] = 1;\r\n              err(\"FS.trackingDelegate error on read file: \" + path);\r\n            }\r\n          }\r\n          try {\r\n            if (FS.trackingDelegate[\"onOpenFile\"]) {\r\n              var trackingFlags = 0;\r\n              if ((flags & 2097155) !== 1) {\r\n                trackingFlags |= FS.tracking.openFlags.READ;\r\n              }\r\n              if ((flags & 2097155) !== 0) {\r\n                trackingFlags |= FS.tracking.openFlags.WRITE;\r\n              }\r\n              FS.trackingDelegate[\"onOpenFile\"](path, trackingFlags);\r\n            }\r\n          } catch (e) {\r\n            err(\"FS.trackingDelegate['onOpenFile']('\" + path + \"', flags) threw an exception: \" + e.message);\r\n          }\r\n          return stream;\r\n        }, close: function(stream) {\r\n          if (FS.isClosed(stream)) {\r\n            throw new FS.ErrnoError(8);\r\n          }\r\n          if (stream.getdents)\r\n            stream.getdents = null;\r\n          try {\r\n            if (stream.stream_ops.close) {\r\n              stream.stream_ops.close(stream);\r\n            }\r\n          } catch (e) {\r\n            throw e;\r\n          } finally {\r\n            FS.closeStream(stream.fd);\r\n          }\r\n          stream.fd = null;\r\n        }, isClosed: function(stream) {\r\n          return stream.fd === null;\r\n        }, llseek: function(stream, offset, whence) {\r\n          if (FS.isClosed(stream)) {\r\n            throw new FS.ErrnoError(8);\r\n          }\r\n          if (!stream.seekable || !stream.stream_ops.llseek) {\r\n            throw new FS.ErrnoError(70);\r\n          }\r\n          if (whence != 0 && whence != 1 && whence != 2) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          stream.position = stream.stream_ops.llseek(stream, offset, whence);\r\n          stream.ungotten = [];\r\n          return stream.position;\r\n        }, read: function(stream, buffer2, offset, length, position) {\r\n          offset >>>= 0;\r\n          if (length < 0 || position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          if (FS.isClosed(stream)) {\r\n            throw new FS.ErrnoError(8);\r\n          }\r\n          if ((stream.flags & 2097155) === 1) {\r\n            throw new FS.ErrnoError(8);\r\n          }\r\n          if (FS.isDir(stream.node.mode)) {\r\n            throw new FS.ErrnoError(31);\r\n          }\r\n          if (!stream.stream_ops.read) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          var seeking = typeof position !== \"undefined\";\r\n          if (!seeking) {\r\n            position = stream.position;\r\n          } else if (!stream.seekable) {\r\n            throw new FS.ErrnoError(70);\r\n          }\r\n          var bytesRead = stream.stream_ops.read(stream, buffer2, offset, length, position);\r\n          if (!seeking)\r\n            stream.position += bytesRead;\r\n          return bytesRead;\r\n        }, write: function(stream, buffer2, offset, length, position, canOwn) {\r\n          offset >>>= 0;\r\n          if (length < 0 || position < 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          if (FS.isClosed(stream)) {\r\n            throw new FS.ErrnoError(8);\r\n          }\r\n          if ((stream.flags & 2097155) === 0) {\r\n            throw new FS.ErrnoError(8);\r\n          }\r\n          if (FS.isDir(stream.node.mode)) {\r\n            throw new FS.ErrnoError(31);\r\n          }\r\n          if (!stream.stream_ops.write) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          if (stream.seekable && stream.flags & 1024) {\r\n            FS.llseek(stream, 0, 2);\r\n          }\r\n          var seeking = typeof position !== \"undefined\";\r\n          if (!seeking) {\r\n            position = stream.position;\r\n          } else if (!stream.seekable) {\r\n            throw new FS.ErrnoError(70);\r\n          }\r\n          var bytesWritten = stream.stream_ops.write(stream, buffer2, offset, length, position, canOwn);\r\n          if (!seeking)\r\n            stream.position += bytesWritten;\r\n          try {\r\n            if (stream.path && FS.trackingDelegate[\"onWriteToFile\"])\r\n              FS.trackingDelegate[\"onWriteToFile\"](stream.path);\r\n          } catch (e) {\r\n            err(\"FS.trackingDelegate['onWriteToFile']('\" + stream.path + \"') threw an exception: \" + e.message);\r\n          }\r\n          return bytesWritten;\r\n        }, allocate: function(stream, offset, length) {\r\n          if (FS.isClosed(stream)) {\r\n            throw new FS.ErrnoError(8);\r\n          }\r\n          if (offset < 0 || length <= 0) {\r\n            throw new FS.ErrnoError(28);\r\n          }\r\n          if ((stream.flags & 2097155) === 0) {\r\n            throw new FS.ErrnoError(8);\r\n          }\r\n          if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          if (!stream.stream_ops.allocate) {\r\n            throw new FS.ErrnoError(138);\r\n          }\r\n          stream.stream_ops.allocate(stream, offset, length);\r\n        }, mmap: function(stream, address, length, position, prot, flags) {\r\n          address >>>= 0;\r\n          if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {\r\n            throw new FS.ErrnoError(2);\r\n          }\r\n          if ((stream.flags & 2097155) === 1) {\r\n            throw new FS.ErrnoError(2);\r\n          }\r\n          if (!stream.stream_ops.mmap) {\r\n            throw new FS.ErrnoError(43);\r\n          }\r\n          return stream.stream_ops.mmap(stream, address, length, position, prot, flags);\r\n        }, msync: function(stream, buffer2, offset, length, mmapFlags) {\r\n          offset >>>= 0;\r\n          if (!stream || !stream.stream_ops.msync) {\r\n            return 0;\r\n          }\r\n          return stream.stream_ops.msync(stream, buffer2, offset, length, mmapFlags);\r\n        }, munmap: function(stream) {\r\n          return 0;\r\n        }, ioctl: function(stream, cmd, arg) {\r\n          if (!stream.stream_ops.ioctl) {\r\n            throw new FS.ErrnoError(59);\r\n          }\r\n          return stream.stream_ops.ioctl(stream, cmd, arg);\r\n        }, readFile: function(path, opts) {\r\n          opts = opts || {};\r\n          opts.flags = opts.flags || 0;\r\n          opts.encoding = opts.encoding || \"binary\";\r\n          if (opts.encoding !== \"utf8\" && opts.encoding !== \"binary\") {\r\n            throw new Error('Invalid encoding type \"' + opts.encoding + '\"');\r\n          }\r\n          var ret;\r\n          var stream = FS.open(path, opts.flags);\r\n          var stat = FS.stat(path);\r\n          var length = stat.size;\r\n          var buf = new Uint8Array(length);\r\n          FS.read(stream, buf, 0, length, 0);\r\n          if (opts.encoding === \"utf8\") {\r\n            ret = UTF8ArrayToString(buf, 0);\r\n          } else if (opts.encoding === \"binary\") {\r\n            ret = buf;\r\n          }\r\n          FS.close(stream);\r\n          return ret;\r\n        }, writeFile: function(path, data, opts) {\r\n          opts = opts || {};\r\n          opts.flags = opts.flags || 577;\r\n          var stream = FS.open(path, opts.flags, opts.mode);\r\n          if (typeof data === \"string\") {\r\n            var buf = new Uint8Array(lengthBytesUTF8(data) + 1);\r\n            var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);\r\n            FS.write(stream, buf, 0, actualNumBytes, void 0, opts.canOwn);\r\n          } else if (ArrayBuffer.isView(data)) {\r\n            FS.write(stream, data, 0, data.byteLength, void 0, opts.canOwn);\r\n          } else {\r\n            throw new Error(\"Unsupported data type\");\r\n          }\r\n          FS.close(stream);\r\n        }, cwd: function() {\r\n          return FS.currentPath;\r\n        }, chdir: function(path) {\r\n          var lookup = FS.lookupPath(path, { follow: true });\r\n          if (lookup.node === null) {\r\n            throw new FS.ErrnoError(44);\r\n          }\r\n          if (!FS.isDir(lookup.node.mode)) {\r\n            throw new FS.ErrnoError(54);\r\n          }\r\n          var errCode = FS.nodePermissions(lookup.node, \"x\");\r\n          if (errCode) {\r\n            throw new FS.ErrnoError(errCode);\r\n          }\r\n          FS.currentPath = lookup.path;\r\n        }, createDefaultDirectories: function() {\r\n          FS.mkdir(\"/tmp\");\r\n          FS.mkdir(\"/home\");\r\n          FS.mkdir(\"/home/web_user\");\r\n        }, createDefaultDevices: function() {\r\n          FS.mkdir(\"/dev\");\r\n          FS.registerDevice(FS.makedev(1, 3), { read: function() {\r\n            return 0;\r\n          }, write: function(stream, buffer2, offset, length, pos) {\r\n            return length;\r\n          } });\r\n          FS.mkdev(\"/dev/null\", FS.makedev(1, 3));\r\n          TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);\r\n          TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);\r\n          FS.mkdev(\"/dev/tty\", FS.makedev(5, 0));\r\n          FS.mkdev(\"/dev/tty1\", FS.makedev(6, 0));\r\n          var random_device = getRandomDevice();\r\n          FS.createDevice(\"/dev\", \"random\", random_device);\r\n          FS.createDevice(\"/dev\", \"urandom\", random_device);\r\n          FS.mkdir(\"/dev/shm\");\r\n          FS.mkdir(\"/dev/shm/tmp\");\r\n        }, createSpecialDirectories: function() {\r\n          FS.mkdir(\"/proc\");\r\n          FS.mkdir(\"/proc/self\");\r\n          FS.mkdir(\"/proc/self/fd\");\r\n          FS.mount({ mount: function() {\r\n            var node = FS.createNode(\"/proc/self\", \"fd\", 16384 | 511, 73);\r\n            node.node_ops = { lookup: function(parent, name2) {\r\n              var fd = +name2;\r\n              var stream = FS.getStream(fd);\r\n              if (!stream)\r\n                throw new FS.ErrnoError(8);\r\n              var ret = { parent: null, mount: { mountpoint: \"fake\" }, node_ops: { readlink: function() {\r\n                return stream.path;\r\n              } } };\r\n              ret.parent = ret;\r\n              return ret;\r\n            } };\r\n            return node;\r\n          } }, {}, \"/proc/self/fd\");\r\n        }, createStandardStreams: function() {\r\n          if (Module[\"stdin\"]) {\r\n            FS.createDevice(\"/dev\", \"stdin\", Module[\"stdin\"]);\r\n          } else {\r\n            FS.symlink(\"/dev/tty\", \"/dev/stdin\");\r\n          }\r\n          if (Module[\"stdout\"]) {\r\n            FS.createDevice(\"/dev\", \"stdout\", null, Module[\"stdout\"]);\r\n          } else {\r\n            FS.symlink(\"/dev/tty\", \"/dev/stdout\");\r\n          }\r\n          if (Module[\"stderr\"]) {\r\n            FS.createDevice(\"/dev\", \"stderr\", null, Module[\"stderr\"]);\r\n          } else {\r\n            FS.symlink(\"/dev/tty1\", \"/dev/stderr\");\r\n          }\r\n          var stdin = FS.open(\"/dev/stdin\", 0);\r\n          var stdout = FS.open(\"/dev/stdout\", 1);\r\n          var stderr = FS.open(\"/dev/stderr\", 1);\r\n        }, ensureErrnoError: function() {\r\n          if (FS.ErrnoError)\r\n            return;\r\n          FS.ErrnoError = function ErrnoError(errno, node) {\r\n            this.node = node;\r\n            this.setErrno = function(errno2) {\r\n              this.errno = errno2;\r\n            };\r\n            this.setErrno(errno);\r\n            this.message = \"FS error\";\r\n          };\r\n          FS.ErrnoError.prototype = new Error();\r\n          FS.ErrnoError.prototype.constructor = FS.ErrnoError;\r\n          [44].forEach(function(code) {\r\n            FS.genericErrors[code] = new FS.ErrnoError(code);\r\n            FS.genericErrors[code].stack = \"<generic error, no stack>\";\r\n          });\r\n        }, staticInit: function() {\r\n          FS.ensureErrnoError();\r\n          FS.nameTable = new Array(4096);\r\n          FS.mount(MEMFS, {}, \"/\");\r\n          FS.createDefaultDirectories();\r\n          FS.createDefaultDevices();\r\n          FS.createSpecialDirectories();\r\n          FS.filesystems = { \"MEMFS\": MEMFS };\r\n        }, init: function(input, output, error) {\r\n          FS.init.initialized = true;\r\n          FS.ensureErrnoError();\r\n          Module[\"stdin\"] = input || Module[\"stdin\"];\r\n          Module[\"stdout\"] = output || Module[\"stdout\"];\r\n          Module[\"stderr\"] = error || Module[\"stderr\"];\r\n          FS.createStandardStreams();\r\n        }, quit: function() {\r\n          FS.init.initialized = false;\r\n          var fflush = Module[\"_fflush\"];\r\n          if (fflush)\r\n            fflush(0);\r\n          for (var i = 0; i < FS.streams.length; i++) {\r\n            var stream = FS.streams[i];\r\n            if (!stream) {\r\n              continue;\r\n            }\r\n            FS.close(stream);\r\n          }\r\n        }, getMode: function(canRead, canWrite) {\r\n          var mode = 0;\r\n          if (canRead)\r\n            mode |= 292 | 73;\r\n          if (canWrite)\r\n            mode |= 146;\r\n          return mode;\r\n        }, findObject: function(path, dontResolveLastLink) {\r\n          var ret = FS.analyzePath(path, dontResolveLastLink);\r\n          if (ret.exists) {\r\n            return ret.object;\r\n          } else {\r\n            return null;\r\n          }\r\n        }, analyzePath: function(path, dontResolveLastLink) {\r\n          try {\r\n            var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n            path = lookup.path;\r\n          } catch (e) {\r\n          }\r\n          var ret = { isRoot: false, exists: false, error: 0, name: null, path: null, object: null, parentExists: false, parentPath: null, parentObject: null };\r\n          try {\r\n            var lookup = FS.lookupPath(path, { parent: true });\r\n            ret.parentExists = true;\r\n            ret.parentPath = lookup.path;\r\n            ret.parentObject = lookup.node;\r\n            ret.name = PATH.basename(path);\r\n            lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });\r\n            ret.exists = true;\r\n            ret.path = lookup.path;\r\n            ret.object = lookup.node;\r\n            ret.name = lookup.node.name;\r\n            ret.isRoot = lookup.path === \"/\";\r\n          } catch (e) {\r\n            ret.error = e.errno;\r\n          }\r\n          return ret;\r\n        }, createPath: function(parent, path, canRead, canWrite) {\r\n          parent = typeof parent === \"string\" ? parent : FS.getPath(parent);\r\n          var parts = path.split(\"/\").reverse();\r\n          while (parts.length) {\r\n            var part = parts.pop();\r\n            if (!part)\r\n              continue;\r\n            var current = PATH.join2(parent, part);\r\n            try {\r\n              FS.mkdir(current);\r\n            } catch (e) {\r\n            }\r\n            parent = current;\r\n          }\r\n          return current;\r\n        }, createFile: function(parent, name2, properties, canRead, canWrite) {\r\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\r\n          var mode = FS.getMode(canRead, canWrite);\r\n          return FS.create(path, mode);\r\n        }, createDataFile: function(parent, name2, data, canRead, canWrite, canOwn) {\r\n          var path = name2 ? PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2) : parent;\r\n          var mode = FS.getMode(canRead, canWrite);\r\n          var node = FS.create(path, mode);\r\n          if (data) {\r\n            if (typeof data === \"string\") {\r\n              var arr = new Array(data.length);\r\n              for (var i = 0, len = data.length; i < len; ++i)\r\n                arr[i] = data.charCodeAt(i);\r\n              data = arr;\r\n            }\r\n            FS.chmod(node, mode | 146);\r\n            var stream = FS.open(node, 577);\r\n            FS.write(stream, data, 0, data.length, 0, canOwn);\r\n            FS.close(stream);\r\n            FS.chmod(node, mode);\r\n          }\r\n          return node;\r\n        }, createDevice: function(parent, name2, input, output) {\r\n          var path = PATH.join2(typeof parent === \"string\" ? parent : FS.getPath(parent), name2);\r\n          var mode = FS.getMode(!!input, !!output);\r\n          if (!FS.createDevice.major)\r\n            FS.createDevice.major = 64;\r\n          var dev = FS.makedev(FS.createDevice.major++, 0);\r\n          FS.registerDevice(dev, { open: function(stream) {\r\n            stream.seekable = false;\r\n          }, close: function(stream) {\r\n            if (output && output.buffer && output.buffer.length) {\r\n              output(10);\r\n            }\r\n          }, read: function(stream, buffer2, offset, length, pos) {\r\n            var bytesRead = 0;\r\n            for (var i = 0; i < length; i++) {\r\n              var result;\r\n              try {\r\n                result = input();\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n              if (result === void 0 && bytesRead === 0) {\r\n                throw new FS.ErrnoError(6);\r\n              }\r\n              if (result === null || result === void 0)\r\n                break;\r\n              bytesRead++;\r\n              buffer2[offset + i] = result;\r\n            }\r\n            if (bytesRead) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return bytesRead;\r\n          }, write: function(stream, buffer2, offset, length, pos) {\r\n            for (var i = 0; i < length; i++) {\r\n              try {\r\n                output(buffer2[offset + i]);\r\n              } catch (e) {\r\n                throw new FS.ErrnoError(29);\r\n              }\r\n            }\r\n            if (length) {\r\n              stream.node.timestamp = Date.now();\r\n            }\r\n            return i;\r\n          } });\r\n          return FS.mkdev(path, mode, dev);\r\n        }, forceLoadFile: function(obj) {\r\n          if (obj.isDevice || obj.isFolder || obj.link || obj.contents)\r\n            return true;\r\n          if (typeof XMLHttpRequest !== \"undefined\") {\r\n            throw new Error(\"Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.\");\r\n          } else if (read_) {\r\n            try {\r\n              obj.contents = intArrayFromString(read_(obj.url), true);\r\n              obj.usedBytes = obj.contents.length;\r\n            } catch (e) {\r\n              throw new FS.ErrnoError(29);\r\n            }\r\n          } else {\r\n            throw new Error(\"Cannot load without read() or XMLHttpRequest.\");\r\n          }\r\n        }, createLazyFile: function(parent, name2, url, canRead, canWrite) {\r\n          function LazyUint8Array() {\r\n            this.lengthKnown = false;\r\n            this.chunks = [];\r\n          }\r\n          LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {\r\n            if (idx > this.length - 1 || idx < 0) {\r\n              return void 0;\r\n            }\r\n            var chunkOffset = idx % this.chunkSize;\r\n            var chunkNum = idx / this.chunkSize | 0;\r\n            return this.getter(chunkNum)[chunkOffset];\r\n          };\r\n          LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {\r\n            this.getter = getter;\r\n          };\r\n          LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.open(\"HEAD\", url, false);\r\n            xhr.send(null);\r\n            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304))\r\n              throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr.status);\r\n            var datalength = Number(xhr.getResponseHeader(\"Content-length\"));\r\n            var header;\r\n            var hasByteServing = (header = xhr.getResponseHeader(\"Accept-Ranges\")) && header === \"bytes\";\r\n            var usesGzip = (header = xhr.getResponseHeader(\"Content-Encoding\")) && header === \"gzip\";\r\n            var chunkSize = 1024 * 1024;\r\n            if (!hasByteServing)\r\n              chunkSize = datalength;\r\n            var doXHR = function(from, to) {\r\n              if (from > to)\r\n                throw new Error(\"invalid range (\" + from + \", \" + to + \") or no bytes requested!\");\r\n              if (to > datalength - 1)\r\n                throw new Error(\"only \" + datalength + \" bytes available! programmer error!\");\r\n              var xhr2 = new XMLHttpRequest();\r\n              xhr2.open(\"GET\", url, false);\r\n              if (datalength !== chunkSize)\r\n                xhr2.setRequestHeader(\"Range\", \"bytes=\" + from + \"-\" + to);\r\n              if (typeof Uint8Array != \"undefined\")\r\n                xhr2.responseType = \"arraybuffer\";\r\n              if (xhr2.overrideMimeType) {\r\n                xhr2.overrideMimeType(\"text/plain; charset=x-user-defined\");\r\n              }\r\n              xhr2.send(null);\r\n              if (!(xhr2.status >= 200 && xhr2.status < 300 || xhr2.status === 304))\r\n                throw new Error(\"Couldn't load \" + url + \". Status: \" + xhr2.status);\r\n              if (xhr2.response !== void 0) {\r\n                return new Uint8Array(xhr2.response || []);\r\n              } else {\r\n                return intArrayFromString(xhr2.responseText || \"\", true);\r\n              }\r\n            };\r\n            var lazyArray2 = this;\r\n            lazyArray2.setDataGetter(function(chunkNum) {\r\n              var start = chunkNum * chunkSize;\r\n              var end = (chunkNum + 1) * chunkSize - 1;\r\n              end = Math.min(end, datalength - 1);\r\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\") {\r\n                lazyArray2.chunks[chunkNum] = doXHR(start, end);\r\n              }\r\n              if (typeof lazyArray2.chunks[chunkNum] === \"undefined\")\r\n                throw new Error(\"doXHR failed!\");\r\n              return lazyArray2.chunks[chunkNum];\r\n            });\r\n            if (usesGzip || !datalength) {\r\n              chunkSize = datalength = 1;\r\n              datalength = this.getter(0).length;\r\n              chunkSize = datalength;\r\n              out(\"LazyFiles on gzip forces download of the whole file when length is accessed\");\r\n            }\r\n            this._length = datalength;\r\n            this._chunkSize = chunkSize;\r\n            this.lengthKnown = true;\r\n          };\r\n          if (typeof XMLHttpRequest !== \"undefined\") {\r\n            if (!ENVIRONMENT_IS_WORKER)\r\n              throw \"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc\";\r\n            var lazyArray = new LazyUint8Array();\r\n            Object.defineProperties(lazyArray, { length: { get: function() {\r\n              if (!this.lengthKnown) {\r\n                this.cacheLength();\r\n              }\r\n              return this._length;\r\n            } }, chunkSize: { get: function() {\r\n              if (!this.lengthKnown) {\r\n                this.cacheLength();\r\n              }\r\n              return this._chunkSize;\r\n            } } });\r\n            var properties = { isDevice: false, contents: lazyArray };\r\n          } else {\r\n            var properties = { isDevice: false, url };\r\n          }\r\n          var node = FS.createFile(parent, name2, properties, canRead, canWrite);\r\n          if (properties.contents) {\r\n            node.contents = properties.contents;\r\n          } else if (properties.url) {\r\n            node.contents = null;\r\n            node.url = properties.url;\r\n          }\r\n          Object.defineProperties(node, { usedBytes: { get: function() {\r\n            return this.contents.length;\r\n          } } });\r\n          var stream_ops = {};\r\n          var keys = Object.keys(node.stream_ops);\r\n          keys.forEach(function(key2) {\r\n            var fn = node.stream_ops[key2];\r\n            stream_ops[key2] = function forceLoadLazyFile() {\r\n              FS.forceLoadFile(node);\r\n              return fn.apply(null, arguments);\r\n            };\r\n          });\r\n          stream_ops.read = function stream_ops_read(stream, buffer2, offset, length, position) {\r\n            FS.forceLoadFile(node);\r\n            var contents = stream.node.contents;\r\n            if (position >= contents.length)\r\n              return 0;\r\n            var size = Math.min(contents.length - position, length);\r\n            if (contents.slice) {\r\n              for (var i = 0; i < size; i++) {\r\n                buffer2[offset + i] = contents[position + i];\r\n              }\r\n            } else {\r\n              for (var i = 0; i < size; i++) {\r\n                buffer2[offset + i] = contents.get(position + i);\r\n              }\r\n            }\r\n            return size;\r\n          };\r\n          node.stream_ops = stream_ops;\r\n          return node;\r\n        }, createPreloadedFile: function(parent, name2, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {\r\n          Browser.init();\r\n          var fullname = name2 ? PATH_FS.resolve(PATH.join2(parent, name2)) : parent;\r\n          var dep = getUniqueRunDependency(\"cp \" + fullname);\r\n          function processData(byteArray) {\r\n            function finish(byteArray2) {\r\n              if (preFinish)\r\n                preFinish();\r\n              if (!dontCreateFile) {\r\n                FS.createDataFile(parent, name2, byteArray2, canRead, canWrite, canOwn);\r\n              }\r\n              if (onload)\r\n                onload();\r\n              removeRunDependency(dep);\r\n            }\r\n            var handled = false;\r\n            Module[\"preloadPlugins\"].forEach(function(plugin) {\r\n              if (handled)\r\n                return;\r\n              if (plugin[\"canHandle\"](fullname)) {\r\n                plugin[\"handle\"](byteArray, fullname, finish, function() {\r\n                  if (onerror)\r\n                    onerror();\r\n                  removeRunDependency(dep);\r\n                });\r\n                handled = true;\r\n              }\r\n            });\r\n            if (!handled)\r\n              finish(byteArray);\r\n          }\r\n          addRunDependency(dep);\r\n          if (typeof url == \"string\") {\r\n            Browser.asyncLoad(url, function(byteArray) {\r\n              processData(byteArray);\r\n            }, onerror);\r\n          } else {\r\n            processData(url);\r\n          }\r\n        }, indexedDB: function() {\r\n          return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;\r\n        }, DB_NAME: function() {\r\n          return \"EM_FS_\" + window.location.pathname;\r\n        }, DB_VERSION: 20, DB_STORE_NAME: \"FILE_DATA\", saveFilesToDB: function(paths, onload, onerror) {\r\n          onload = onload || function() {\r\n          };\r\n          onerror = onerror || function() {\r\n          };\r\n          var indexedDB = FS.indexedDB();\r\n          try {\r\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\r\n          } catch (e) {\r\n            return onerror(e);\r\n          }\r\n          openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {\r\n            out(\"creating db\");\r\n            var db = openRequest.result;\r\n            db.createObjectStore(FS.DB_STORE_NAME);\r\n          };\r\n          openRequest.onsuccess = function openRequest_onsuccess() {\r\n            var db = openRequest.result;\r\n            var transaction = db.transaction([FS.DB_STORE_NAME], \"readwrite\");\r\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\r\n            var ok = 0, fail = 0, total = paths.length;\r\n            function finish() {\r\n              if (fail == 0)\r\n                onload();\r\n              else\r\n                onerror();\r\n            }\r\n            paths.forEach(function(path) {\r\n              var putRequest = files.put(FS.analyzePath(path).object.contents, path);\r\n              putRequest.onsuccess = function putRequest_onsuccess() {\r\n                ok++;\r\n                if (ok + fail == total)\r\n                  finish();\r\n              };\r\n              putRequest.onerror = function putRequest_onerror() {\r\n                fail++;\r\n                if (ok + fail == total)\r\n                  finish();\r\n              };\r\n            });\r\n            transaction.onerror = onerror;\r\n          };\r\n          openRequest.onerror = onerror;\r\n        }, loadFilesFromDB: function(paths, onload, onerror) {\r\n          onload = onload || function() {\r\n          };\r\n          onerror = onerror || function() {\r\n          };\r\n          var indexedDB = FS.indexedDB();\r\n          try {\r\n            var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);\r\n          } catch (e) {\r\n            return onerror(e);\r\n          }\r\n          openRequest.onupgradeneeded = onerror;\r\n          openRequest.onsuccess = function openRequest_onsuccess() {\r\n            var db = openRequest.result;\r\n            try {\r\n              var transaction = db.transaction([FS.DB_STORE_NAME], \"readonly\");\r\n            } catch (e) {\r\n              onerror(e);\r\n              return;\r\n            }\r\n            var files = transaction.objectStore(FS.DB_STORE_NAME);\r\n            var ok = 0, fail = 0, total = paths.length;\r\n            function finish() {\r\n              if (fail == 0)\r\n                onload();\r\n              else\r\n                onerror();\r\n            }\r\n            paths.forEach(function(path) {\r\n              var getRequest = files.get(path);\r\n              getRequest.onsuccess = function getRequest_onsuccess() {\r\n                if (FS.analyzePath(path).exists) {\r\n                  FS.unlink(path);\r\n                }\r\n                FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);\r\n                ok++;\r\n                if (ok + fail == total)\r\n                  finish();\r\n              };\r\n              getRequest.onerror = function getRequest_onerror() {\r\n                fail++;\r\n                if (ok + fail == total)\r\n                  finish();\r\n              };\r\n            });\r\n            transaction.onerror = onerror;\r\n          };\r\n          openRequest.onerror = onerror;\r\n        } };\r\n        var SYSCALLS = { mappings: {}, DEFAULT_POLLMASK: 5, umask: 511, calculateAt: function(dirfd, path) {\r\n          if (path[0] !== \"/\") {\r\n            var dir;\r\n            if (dirfd === -100) {\r\n              dir = FS.cwd();\r\n            } else {\r\n              var dirstream = FS.getStream(dirfd);\r\n              if (!dirstream)\r\n                throw new FS.ErrnoError(8);\r\n              dir = dirstream.path;\r\n            }\r\n            path = PATH.join2(dir, path);\r\n          }\r\n          return path;\r\n        }, doStat: function(func, path, buf) {\r\n          try {\r\n            var stat = func(path);\r\n          } catch (e) {\r\n            if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {\r\n              return -54;\r\n            }\r\n            throw e;\r\n          }\r\n          HEAP32[buf >>> 2] = stat.dev;\r\n          HEAP32[buf + 4 >>> 2] = 0;\r\n          HEAP32[buf + 8 >>> 2] = stat.ino;\r\n          HEAP32[buf + 12 >>> 2] = stat.mode;\r\n          HEAP32[buf + 16 >>> 2] = stat.nlink;\r\n          HEAP32[buf + 20 >>> 2] = stat.uid;\r\n          HEAP32[buf + 24 >>> 2] = stat.gid;\r\n          HEAP32[buf + 28 >>> 2] = stat.rdev;\r\n          HEAP32[buf + 32 >>> 2] = 0;\r\n          tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >>> 2] = tempI64[0], HEAP32[buf + 44 >>> 2] = tempI64[1];\r\n          HEAP32[buf + 48 >>> 2] = 4096;\r\n          HEAP32[buf + 52 >>> 2] = stat.blocks;\r\n          HEAP32[buf + 56 >>> 2] = stat.atime.getTime() / 1e3 | 0;\r\n          HEAP32[buf + 60 >>> 2] = 0;\r\n          HEAP32[buf + 64 >>> 2] = stat.mtime.getTime() / 1e3 | 0;\r\n          HEAP32[buf + 68 >>> 2] = 0;\r\n          HEAP32[buf + 72 >>> 2] = stat.ctime.getTime() / 1e3 | 0;\r\n          HEAP32[buf + 76 >>> 2] = 0;\r\n          tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 80 >>> 2] = tempI64[0], HEAP32[buf + 84 >>> 2] = tempI64[1];\r\n          return 0;\r\n        }, doMsync: function(addr, stream, len, flags, offset) {\r\n          var buffer2 = HEAPU8.slice(addr, addr + len);\r\n          FS.msync(stream, buffer2, offset, len, flags);\r\n        }, doMkdir: function(path, mode) {\r\n          path = PATH.normalize(path);\r\n          if (path[path.length - 1] === \"/\")\r\n            path = path.slice(0, path.length - 1);\r\n          FS.mkdir(path, mode, 0);\r\n          return 0;\r\n        }, doMknod: function(path, mode, dev) {\r\n          switch (mode & 61440) {\r\n            case 32768:\r\n            case 8192:\r\n            case 24576:\r\n            case 4096:\r\n            case 49152:\r\n              break;\r\n            default:\r\n              return -28;\r\n          }\r\n          FS.mknod(path, mode, dev);\r\n          return 0;\r\n        }, doReadlink: function(path, buf, bufsize) {\r\n          if (bufsize <= 0)\r\n            return -28;\r\n          var ret = FS.readlink(path);\r\n          var len = Math.min(bufsize, lengthBytesUTF8(ret));\r\n          var endChar = HEAP8[buf + len >>> 0];\r\n          stringToUTF8(ret, buf, bufsize + 1);\r\n          HEAP8[buf + len >>> 0] = endChar;\r\n          return len;\r\n        }, doAccess: function(path, amode) {\r\n          if (amode & ~7) {\r\n            return -28;\r\n          }\r\n          var node;\r\n          var lookup = FS.lookupPath(path, { follow: true });\r\n          node = lookup.node;\r\n          if (!node) {\r\n            return -44;\r\n          }\r\n          var perms = \"\";\r\n          if (amode & 4)\r\n            perms += \"r\";\r\n          if (amode & 2)\r\n            perms += \"w\";\r\n          if (amode & 1)\r\n            perms += \"x\";\r\n          if (perms && FS.nodePermissions(node, perms)) {\r\n            return -2;\r\n          }\r\n          return 0;\r\n        }, doDup: function(path, flags, suggestFD) {\r\n          var suggest = FS.getStream(suggestFD);\r\n          if (suggest)\r\n            FS.close(suggest);\r\n          return FS.open(path, flags, 0, suggestFD, suggestFD).fd;\r\n        }, doReadv: function(stream, iov, iovcnt, offset) {\r\n          var ret = 0;\r\n          for (var i = 0; i < iovcnt; i++) {\r\n            var ptr = HEAP32[iov + i * 8 >>> 2];\r\n            var len = HEAP32[iov + (i * 8 + 4) >>> 2];\r\n            var curr = FS.read(stream, HEAP8, ptr, len, offset);\r\n            if (curr < 0)\r\n              return -1;\r\n            ret += curr;\r\n            if (curr < len)\r\n              break;\r\n          }\r\n          return ret;\r\n        }, doWritev: function(stream, iov, iovcnt, offset) {\r\n          var ret = 0;\r\n          for (var i = 0; i < iovcnt; i++) {\r\n            var ptr = HEAP32[iov + i * 8 >>> 2];\r\n            var len = HEAP32[iov + (i * 8 + 4) >>> 2];\r\n            var curr = FS.write(stream, HEAP8, ptr, len, offset);\r\n            if (curr < 0)\r\n              return -1;\r\n            ret += curr;\r\n          }\r\n          return ret;\r\n        }, varargs: void 0, get: function() {\r\n          SYSCALLS.varargs += 4;\r\n          var ret = HEAP32[SYSCALLS.varargs - 4 >>> 2];\r\n          return ret;\r\n        }, getStr: function(ptr) {\r\n          var ret = UTF8ToString(ptr);\r\n          return ret;\r\n        }, getStreamFromFD: function(fd) {\r\n          var stream = FS.getStream(fd);\r\n          if (!stream)\r\n            throw new FS.ErrnoError(8);\r\n          return stream;\r\n        }, get64: function(low, high) {\r\n          return low;\r\n        } };\r\n        function ___sys_fcntl64(fd, cmd, varargs) {\r\n          SYSCALLS.varargs = varargs;\r\n          try {\r\n            var stream = SYSCALLS.getStreamFromFD(fd);\r\n            switch (cmd) {\r\n              case 0: {\r\n                var arg = SYSCALLS.get();\r\n                if (arg < 0) {\r\n                  return -28;\r\n                }\r\n                var newStream;\r\n                newStream = FS.open(stream.path, stream.flags, 0, arg);\r\n                return newStream.fd;\r\n              }\r\n              case 1:\r\n              case 2:\r\n                return 0;\r\n              case 3:\r\n                return stream.flags;\r\n              case 4: {\r\n                var arg = SYSCALLS.get();\r\n                stream.flags |= arg;\r\n                return 0;\r\n              }\r\n              case 12: {\r\n                var arg = SYSCALLS.get();\r\n                var offset = 0;\r\n                HEAP16[arg + offset >>> 1] = 2;\r\n                return 0;\r\n              }\r\n              case 13:\r\n              case 14:\r\n                return 0;\r\n              case 16:\r\n              case 8:\r\n                return -28;\r\n              case 9:\r\n                setErrNo(28);\r\n                return -1;\r\n              default: {\r\n                return -28;\r\n              }\r\n            }\r\n          } catch (e) {\r\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\r\n              abort(e);\r\n            return -e.errno;\r\n          }\r\n        }\r\n        function ___sys_ioctl(fd, op, varargs) {\r\n          SYSCALLS.varargs = varargs;\r\n          try {\r\n            var stream = SYSCALLS.getStreamFromFD(fd);\r\n            switch (op) {\r\n              case 21509:\r\n              case 21505: {\r\n                if (!stream.tty)\r\n                  return -59;\r\n                return 0;\r\n              }\r\n              case 21510:\r\n              case 21511:\r\n              case 21512:\r\n              case 21506:\r\n              case 21507:\r\n              case 21508: {\r\n                if (!stream.tty)\r\n                  return -59;\r\n                return 0;\r\n              }\r\n              case 21519: {\r\n                if (!stream.tty)\r\n                  return -59;\r\n                var argp = SYSCALLS.get();\r\n                HEAP32[argp >>> 2] = 0;\r\n                return 0;\r\n              }\r\n              case 21520: {\r\n                if (!stream.tty)\r\n                  return -59;\r\n                return -28;\r\n              }\r\n              case 21531: {\r\n                var argp = SYSCALLS.get();\r\n                return FS.ioctl(stream, op, argp);\r\n              }\r\n              case 21523: {\r\n                if (!stream.tty)\r\n                  return -59;\r\n                return 0;\r\n              }\r\n              case 21524: {\r\n                if (!stream.tty)\r\n                  return -59;\r\n                return 0;\r\n              }\r\n              default:\r\n                abort(\"bad ioctl syscall \" + op);\r\n            }\r\n          } catch (e) {\r\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\r\n              abort(e);\r\n            return -e.errno;\r\n          }\r\n        }\r\n        function ___sys_open(path, flags, varargs) {\r\n          SYSCALLS.varargs = varargs;\r\n          try {\r\n            var pathname = SYSCALLS.getStr(path);\r\n            var mode = SYSCALLS.get();\r\n            var stream = FS.open(pathname, flags, mode);\r\n            return stream.fd;\r\n          } catch (e) {\r\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\r\n              abort(e);\r\n            return -e.errno;\r\n          }\r\n        }\r\n        var tupleRegistrations = {};\r\n        function runDestructors(destructors) {\r\n          while (destructors.length) {\r\n            var ptr = destructors.pop();\r\n            var del = destructors.pop();\r\n            del(ptr);\r\n          }\r\n        }\r\n        function simpleReadValueFromPointer(pointer) {\r\n          return this[\"fromWireType\"](HEAPU32[pointer >>> 2]);\r\n        }\r\n        var awaitingDependencies = {};\r\n        var registeredTypes = {};\r\n        var typeDependencies = {};\r\n        var char_0 = 48;\r\n        var char_9 = 57;\r\n        function makeLegalFunctionName(name2) {\r\n          if (name2 === void 0) {\r\n            return \"_unknown\";\r\n          }\r\n          name2 = name2.replace(/[^a-zA-Z0-9_]/g, \"$\");\r\n          var f = name2.charCodeAt(0);\r\n          if (f >= char_0 && f <= char_9) {\r\n            return \"_\" + name2;\r\n          } else {\r\n            return name2;\r\n          }\r\n        }\r\n        function createNamedFunction(name2, body) {\r\n          name2 = makeLegalFunctionName(name2);\r\n          return new Function(\"body\", \"return function \" + name2 + '() {\\n    \"use strict\";    return body.apply(this, arguments);\\n};\\n')(body);\r\n        }\r\n        function extendError(baseErrorType, errorName) {\r\n          var errorClass = createNamedFunction(errorName, function(message) {\r\n            this.name = errorName;\r\n            this.message = message;\r\n            var stack = new Error(message).stack;\r\n            if (stack !== void 0) {\r\n              this.stack = this.toString() + \"\\n\" + stack.replace(/^Error(:[^\\n]*)?\\n/, \"\");\r\n            }\r\n          });\r\n          errorClass.prototype = Object.create(baseErrorType.prototype);\r\n          errorClass.prototype.constructor = errorClass;\r\n          errorClass.prototype.toString = function() {\r\n            if (this.message === void 0) {\r\n              return this.name;\r\n            } else {\r\n              return this.name + \": \" + this.message;\r\n            }\r\n          };\r\n          return errorClass;\r\n        }\r\n        var InternalError = void 0;\r\n        function throwInternalError(message) {\r\n          throw new InternalError(message);\r\n        }\r\n        function whenDependentTypesAreResolved(myTypes, dependentTypes, getTypeConverters) {\r\n          myTypes.forEach(function(type) {\r\n            typeDependencies[type] = dependentTypes;\r\n          });\r\n          function onComplete(typeConverters2) {\r\n            var myTypeConverters = getTypeConverters(typeConverters2);\r\n            if (myTypeConverters.length !== myTypes.length) {\r\n              throwInternalError(\"Mismatched type converter count\");\r\n            }\r\n            for (var i = 0; i < myTypes.length; ++i) {\r\n              registerType(myTypes[i], myTypeConverters[i]);\r\n            }\r\n          }\r\n          var typeConverters = new Array(dependentTypes.length);\r\n          var unregisteredTypes = [];\r\n          var registered = 0;\r\n          dependentTypes.forEach(function(dt, i) {\r\n            if (registeredTypes.hasOwnProperty(dt)) {\r\n              typeConverters[i] = registeredTypes[dt];\r\n            } else {\r\n              unregisteredTypes.push(dt);\r\n              if (!awaitingDependencies.hasOwnProperty(dt)) {\r\n                awaitingDependencies[dt] = [];\r\n              }\r\n              awaitingDependencies[dt].push(function() {\r\n                typeConverters[i] = registeredTypes[dt];\r\n                ++registered;\r\n                if (registered === unregisteredTypes.length) {\r\n                  onComplete(typeConverters);\r\n                }\r\n              });\r\n            }\r\n          });\r\n          if (unregisteredTypes.length === 0) {\r\n            onComplete(typeConverters);\r\n          }\r\n        }\r\n        function __embind_finalize_value_array(rawTupleType) {\r\n          var reg = tupleRegistrations[rawTupleType];\r\n          delete tupleRegistrations[rawTupleType];\r\n          var elements = reg.elements;\r\n          var elementsLength = elements.length;\r\n          var elementTypes = elements.map(function(elt) {\r\n            return elt.getterReturnType;\r\n          }).concat(elements.map(function(elt) {\r\n            return elt.setterArgumentType;\r\n          }));\r\n          var rawConstructor = reg.rawConstructor;\r\n          var rawDestructor = reg.rawDestructor;\r\n          whenDependentTypesAreResolved([rawTupleType], elementTypes, function(elementTypes2) {\r\n            elements.forEach(function(elt, i) {\r\n              var getterReturnType = elementTypes2[i];\r\n              var getter = elt.getter;\r\n              var getterContext = elt.getterContext;\r\n              var setterArgumentType = elementTypes2[i + elementsLength];\r\n              var setter = elt.setter;\r\n              var setterContext = elt.setterContext;\r\n              elt.read = function(ptr) {\r\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\r\n              };\r\n              elt.write = function(ptr, o) {\r\n                var destructors = [];\r\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\r\n                runDestructors(destructors);\r\n              };\r\n            });\r\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\r\n              var rv = new Array(elementsLength);\r\n              for (var i = 0; i < elementsLength; ++i) {\r\n                rv[i] = elements[i].read(ptr);\r\n              }\r\n              rawDestructor(ptr);\r\n              return rv;\r\n            }, \"toWireType\": function(destructors, o) {\r\n              if (elementsLength !== o.length) {\r\n                throw new TypeError(\"Incorrect number of tuple elements for \" + reg.name + \": expected=\" + elementsLength + \", actual=\" + o.length);\r\n              }\r\n              var ptr = rawConstructor();\r\n              for (var i = 0; i < elementsLength; ++i) {\r\n                elements[i].write(ptr, o[i]);\r\n              }\r\n              if (destructors !== null) {\r\n                destructors.push(rawDestructor, ptr);\r\n              }\r\n              return ptr;\r\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\r\n          });\r\n        }\r\n        var structRegistrations = {};\r\n        function __embind_finalize_value_object(structType) {\r\n          var reg = structRegistrations[structType];\r\n          delete structRegistrations[structType];\r\n          var rawConstructor = reg.rawConstructor;\r\n          var rawDestructor = reg.rawDestructor;\r\n          var fieldRecords = reg.fields;\r\n          var fieldTypes = fieldRecords.map(function(field) {\r\n            return field.getterReturnType;\r\n          }).concat(fieldRecords.map(function(field) {\r\n            return field.setterArgumentType;\r\n          }));\r\n          whenDependentTypesAreResolved([structType], fieldTypes, function(fieldTypes2) {\r\n            var fields = {};\r\n            fieldRecords.forEach(function(field, i) {\r\n              var fieldName = field.fieldName;\r\n              var getterReturnType = fieldTypes2[i];\r\n              var getter = field.getter;\r\n              var getterContext = field.getterContext;\r\n              var setterArgumentType = fieldTypes2[i + fieldRecords.length];\r\n              var setter = field.setter;\r\n              var setterContext = field.setterContext;\r\n              fields[fieldName] = { read: function(ptr) {\r\n                return getterReturnType[\"fromWireType\"](getter(getterContext, ptr));\r\n              }, write: function(ptr, o) {\r\n                var destructors = [];\r\n                setter(setterContext, ptr, setterArgumentType[\"toWireType\"](destructors, o));\r\n                runDestructors(destructors);\r\n              } };\r\n            });\r\n            return [{ name: reg.name, \"fromWireType\": function(ptr) {\r\n              var rv = {};\r\n              for (var i in fields) {\r\n                rv[i] = fields[i].read(ptr);\r\n              }\r\n              rawDestructor(ptr);\r\n              return rv;\r\n            }, \"toWireType\": function(destructors, o) {\r\n              for (var fieldName in fields) {\r\n                if (!(fieldName in o)) {\r\n                  throw new TypeError('Missing field:  \"' + fieldName + '\"');\r\n                }\r\n              }\r\n              var ptr = rawConstructor();\r\n              for (fieldName in fields) {\r\n                fields[fieldName].write(ptr, o[fieldName]);\r\n              }\r\n              if (destructors !== null) {\r\n                destructors.push(rawDestructor, ptr);\r\n              }\r\n              return ptr;\r\n            }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: rawDestructor }];\r\n          });\r\n        }\r\n        function getShiftFromSize(size) {\r\n          switch (size) {\r\n            case 1:\r\n              return 0;\r\n            case 2:\r\n              return 1;\r\n            case 4:\r\n              return 2;\r\n            case 8:\r\n              return 3;\r\n            default:\r\n              throw new TypeError(\"Unknown type size: \" + size);\r\n          }\r\n        }\r\n        function embind_init_charCodes() {\r\n          var codes = new Array(256);\r\n          for (var i = 0; i < 256; ++i) {\r\n            codes[i] = String.fromCharCode(i);\r\n          }\r\n          embind_charCodes = codes;\r\n        }\r\n        var embind_charCodes = void 0;\r\n        function readLatin1String(ptr) {\r\n          var ret = \"\";\r\n          var c = ptr;\r\n          while (HEAPU8[c >>> 0]) {\r\n            ret += embind_charCodes[HEAPU8[c++ >>> 0]];\r\n          }\r\n          return ret;\r\n        }\r\n        var BindingError = void 0;\r\n        function throwBindingError(message) {\r\n          throw new BindingError(message);\r\n        }\r\n        function registerType(rawType, registeredInstance, options) {\r\n          options = options || {};\r\n          if (!(\"argPackAdvance\" in registeredInstance)) {\r\n            throw new TypeError(\"registerType registeredInstance requires argPackAdvance\");\r\n          }\r\n          var name2 = registeredInstance.name;\r\n          if (!rawType) {\r\n            throwBindingError('type \"' + name2 + '\" must have a positive integer typeid pointer');\r\n          }\r\n          if (registeredTypes.hasOwnProperty(rawType)) {\r\n            if (options.ignoreDuplicateRegistrations) {\r\n              return;\r\n            } else {\r\n              throwBindingError(\"Cannot register type '\" + name2 + \"' twice\");\r\n            }\r\n          }\r\n          registeredTypes[rawType] = registeredInstance;\r\n          delete typeDependencies[rawType];\r\n          if (awaitingDependencies.hasOwnProperty(rawType)) {\r\n            var callbacks = awaitingDependencies[rawType];\r\n            delete awaitingDependencies[rawType];\r\n            callbacks.forEach(function(cb) {\r\n              cb();\r\n            });\r\n          }\r\n        }\r\n        function __embind_register_bool(rawType, name2, size, trueValue, falseValue) {\r\n          var shift = getShiftFromSize(size);\r\n          name2 = readLatin1String(name2);\r\n          registerType(rawType, { name: name2, \"fromWireType\": function(wt) {\r\n            return !!wt;\r\n          }, \"toWireType\": function(destructors, o) {\r\n            return o ? trueValue : falseValue;\r\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": function(pointer) {\r\n            var heap;\r\n            if (size === 1) {\r\n              heap = HEAP8;\r\n            } else if (size === 2) {\r\n              heap = HEAP16;\r\n            } else if (size === 4) {\r\n              heap = HEAP32;\r\n            } else {\r\n              throw new TypeError(\"Unknown boolean type size: \" + name2);\r\n            }\r\n            return this[\"fromWireType\"](heap[pointer >>> shift]);\r\n          }, destructorFunction: null });\r\n        }\r\n        function ClassHandle_isAliasOf(other) {\r\n          if (!(this instanceof ClassHandle)) {\r\n            return false;\r\n          }\r\n          if (!(other instanceof ClassHandle)) {\r\n            return false;\r\n          }\r\n          var leftClass = this.$$.ptrType.registeredClass;\r\n          var left = this.$$.ptr;\r\n          var rightClass = other.$$.ptrType.registeredClass;\r\n          var right = other.$$.ptr;\r\n          while (leftClass.baseClass) {\r\n            left = leftClass.upcast(left);\r\n            leftClass = leftClass.baseClass;\r\n          }\r\n          while (rightClass.baseClass) {\r\n            right = rightClass.upcast(right);\r\n            rightClass = rightClass.baseClass;\r\n          }\r\n          return leftClass === rightClass && left === right;\r\n        }\r\n        function shallowCopyInternalPointer(o) {\r\n          return { count: o.count, deleteScheduled: o.deleteScheduled, preservePointerOnDelete: o.preservePointerOnDelete, ptr: o.ptr, ptrType: o.ptrType, smartPtr: o.smartPtr, smartPtrType: o.smartPtrType };\r\n        }\r\n        function throwInstanceAlreadyDeleted(obj) {\r\n          function getInstanceTypeName(handle) {\r\n            return handle.$$.ptrType.registeredClass.name;\r\n          }\r\n          throwBindingError(getInstanceTypeName(obj) + \" instance already deleted\");\r\n        }\r\n        var finalizationGroup = false;\r\n        function detachFinalizer(handle) {\r\n        }\r\n        function runDestructor($$) {\r\n          if ($$.smartPtr) {\r\n            $$.smartPtrType.rawDestructor($$.smartPtr);\r\n          } else {\r\n            $$.ptrType.registeredClass.rawDestructor($$.ptr);\r\n          }\r\n        }\r\n        function releaseClassHandle($$) {\r\n          $$.count.value -= 1;\r\n          var toDelete = $$.count.value === 0;\r\n          if (toDelete) {\r\n            runDestructor($$);\r\n          }\r\n        }\r\n        function attachFinalizer(handle) {\r\n          if (typeof FinalizationGroup === \"undefined\") {\r\n            attachFinalizer = function(handle2) {\r\n              return handle2;\r\n            };\r\n            return handle;\r\n          }\r\n          finalizationGroup = new FinalizationGroup(function(iter) {\r\n            for (var result = iter.next(); !result.done; result = iter.next()) {\r\n              var $$ = result.value;\r\n              if (!$$.ptr) {\r\n                console.warn(\"object already deleted: \" + $$.ptr);\r\n              } else {\r\n                releaseClassHandle($$);\r\n              }\r\n            }\r\n          });\r\n          attachFinalizer = function(handle2) {\r\n            finalizationGroup.register(handle2, handle2.$$, handle2.$$);\r\n            return handle2;\r\n          };\r\n          detachFinalizer = function(handle2) {\r\n            finalizationGroup.unregister(handle2.$$);\r\n          };\r\n          return attachFinalizer(handle);\r\n        }\r\n        function ClassHandle_clone() {\r\n          if (!this.$$.ptr) {\r\n            throwInstanceAlreadyDeleted(this);\r\n          }\r\n          if (this.$$.preservePointerOnDelete) {\r\n            this.$$.count.value += 1;\r\n            return this;\r\n          } else {\r\n            var clone = attachFinalizer(Object.create(Object.getPrototypeOf(this), { $$: { value: shallowCopyInternalPointer(this.$$) } }));\r\n            clone.$$.count.value += 1;\r\n            clone.$$.deleteScheduled = false;\r\n            return clone;\r\n          }\r\n        }\r\n        function ClassHandle_delete() {\r\n          if (!this.$$.ptr) {\r\n            throwInstanceAlreadyDeleted(this);\r\n          }\r\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\r\n            throwBindingError(\"Object already scheduled for deletion\");\r\n          }\r\n          detachFinalizer(this);\r\n          releaseClassHandle(this.$$);\r\n          if (!this.$$.preservePointerOnDelete) {\r\n            this.$$.smartPtr = void 0;\r\n            this.$$.ptr = void 0;\r\n          }\r\n        }\r\n        function ClassHandle_isDeleted() {\r\n          return !this.$$.ptr;\r\n        }\r\n        var delayFunction = void 0;\r\n        var deletionQueue = [];\r\n        function flushPendingDeletes() {\r\n          while (deletionQueue.length) {\r\n            var obj = deletionQueue.pop();\r\n            obj.$$.deleteScheduled = false;\r\n            obj[\"delete\"]();\r\n          }\r\n        }\r\n        function ClassHandle_deleteLater() {\r\n          if (!this.$$.ptr) {\r\n            throwInstanceAlreadyDeleted(this);\r\n          }\r\n          if (this.$$.deleteScheduled && !this.$$.preservePointerOnDelete) {\r\n            throwBindingError(\"Object already scheduled for deletion\");\r\n          }\r\n          deletionQueue.push(this);\r\n          if (deletionQueue.length === 1 && delayFunction) {\r\n            delayFunction(flushPendingDeletes);\r\n          }\r\n          this.$$.deleteScheduled = true;\r\n          return this;\r\n        }\r\n        function init_ClassHandle() {\r\n          ClassHandle.prototype[\"isAliasOf\"] = ClassHandle_isAliasOf;\r\n          ClassHandle.prototype[\"clone\"] = ClassHandle_clone;\r\n          ClassHandle.prototype[\"delete\"] = ClassHandle_delete;\r\n          ClassHandle.prototype[\"isDeleted\"] = ClassHandle_isDeleted;\r\n          ClassHandle.prototype[\"deleteLater\"] = ClassHandle_deleteLater;\r\n        }\r\n        function ClassHandle() {\r\n        }\r\n        var registeredPointers = {};\r\n        function ensureOverloadTable(proto, methodName, humanName) {\r\n          if (proto[methodName].overloadTable === void 0) {\r\n            var prevFunc = proto[methodName];\r\n            proto[methodName] = function() {\r\n              if (!proto[methodName].overloadTable.hasOwnProperty(arguments.length)) {\r\n                throwBindingError(\"Function '\" + humanName + \"' called with an invalid number of arguments (\" + arguments.length + \") - expects one of (\" + proto[methodName].overloadTable + \")!\");\r\n              }\r\n              return proto[methodName].overloadTable[arguments.length].apply(this, arguments);\r\n            };\r\n            proto[methodName].overloadTable = [];\r\n            proto[methodName].overloadTable[prevFunc.argCount] = prevFunc;\r\n          }\r\n        }\r\n        function exposePublicSymbol(name2, value, numArguments) {\r\n          if (Module.hasOwnProperty(name2)) {\r\n            if (numArguments === void 0 || Module[name2].overloadTable !== void 0 && Module[name2].overloadTable[numArguments] !== void 0) {\r\n              throwBindingError(\"Cannot register public name '\" + name2 + \"' twice\");\r\n            }\r\n            ensureOverloadTable(Module, name2, name2);\r\n            if (Module.hasOwnProperty(numArguments)) {\r\n              throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\" + numArguments + \")!\");\r\n            }\r\n            Module[name2].overloadTable[numArguments] = value;\r\n          } else {\r\n            Module[name2] = value;\r\n            if (numArguments !== void 0) {\r\n              Module[name2].numArguments = numArguments;\r\n            }\r\n          }\r\n        }\r\n        function RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast) {\r\n          this.name = name2;\r\n          this.constructor = constructor;\r\n          this.instancePrototype = instancePrototype;\r\n          this.rawDestructor = rawDestructor;\r\n          this.baseClass = baseClass;\r\n          this.getActualType = getActualType;\r\n          this.upcast = upcast;\r\n          this.downcast = downcast;\r\n          this.pureVirtualFunctions = [];\r\n        }\r\n        function upcastPointer(ptr, ptrClass, desiredClass) {\r\n          while (ptrClass !== desiredClass) {\r\n            if (!ptrClass.upcast) {\r\n              throwBindingError(\"Expected null or instance of \" + desiredClass.name + \", got an instance of \" + ptrClass.name);\r\n            }\r\n            ptr = ptrClass.upcast(ptr);\r\n            ptrClass = ptrClass.baseClass;\r\n          }\r\n          return ptr;\r\n        }\r\n        function constNoSmartPtrRawPointerToWireType(destructors, handle) {\r\n          if (handle === null) {\r\n            if (this.isReference) {\r\n              throwBindingError(\"null is not a valid \" + this.name);\r\n            }\r\n            return 0;\r\n          }\r\n          if (!handle.$$) {\r\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\r\n          }\r\n          if (!handle.$$.ptr) {\r\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\r\n          }\r\n          var handleClass = handle.$$.ptrType.registeredClass;\r\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\r\n          return ptr;\r\n        }\r\n        function genericPointerToWireType(destructors, handle) {\r\n          var ptr;\r\n          if (handle === null) {\r\n            if (this.isReference) {\r\n              throwBindingError(\"null is not a valid \" + this.name);\r\n            }\r\n            if (this.isSmartPointer) {\r\n              ptr = this.rawConstructor();\r\n              if (destructors !== null) {\r\n                destructors.push(this.rawDestructor, ptr);\r\n              }\r\n              return ptr;\r\n            } else {\r\n              return 0;\r\n            }\r\n          }\r\n          if (!handle.$$) {\r\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\r\n          }\r\n          if (!handle.$$.ptr) {\r\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\r\n          }\r\n          if (!this.isConst && handle.$$.ptrType.isConst) {\r\n            throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\r\n          }\r\n          var handleClass = handle.$$.ptrType.registeredClass;\r\n          ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\r\n          if (this.isSmartPointer) {\r\n            if (handle.$$.smartPtr === void 0) {\r\n              throwBindingError(\"Passing raw pointer to smart pointer is illegal\");\r\n            }\r\n            switch (this.sharingPolicy) {\r\n              case 0:\r\n                if (handle.$$.smartPtrType === this) {\r\n                  ptr = handle.$$.smartPtr;\r\n                } else {\r\n                  throwBindingError(\"Cannot convert argument of type \" + (handle.$$.smartPtrType ? handle.$$.smartPtrType.name : handle.$$.ptrType.name) + \" to parameter type \" + this.name);\r\n                }\r\n                break;\r\n              case 1:\r\n                ptr = handle.$$.smartPtr;\r\n                break;\r\n              case 2:\r\n                if (handle.$$.smartPtrType === this) {\r\n                  ptr = handle.$$.smartPtr;\r\n                } else {\r\n                  var clonedHandle = handle[\"clone\"]();\r\n                  ptr = this.rawShare(ptr, __emval_register(function() {\r\n                    clonedHandle[\"delete\"]();\r\n                  }));\r\n                  if (destructors !== null) {\r\n                    destructors.push(this.rawDestructor, ptr);\r\n                  }\r\n                }\r\n                break;\r\n              default:\r\n                throwBindingError(\"Unsupporting sharing policy\");\r\n            }\r\n          }\r\n          return ptr;\r\n        }\r\n        function nonConstNoSmartPtrRawPointerToWireType(destructors, handle) {\r\n          if (handle === null) {\r\n            if (this.isReference) {\r\n              throwBindingError(\"null is not a valid \" + this.name);\r\n            }\r\n            return 0;\r\n          }\r\n          if (!handle.$$) {\r\n            throwBindingError('Cannot pass \"' + _embind_repr(handle) + '\" as a ' + this.name);\r\n          }\r\n          if (!handle.$$.ptr) {\r\n            throwBindingError(\"Cannot pass deleted object as a pointer of type \" + this.name);\r\n          }\r\n          if (handle.$$.ptrType.isConst) {\r\n            throwBindingError(\"Cannot convert argument of type \" + handle.$$.ptrType.name + \" to parameter type \" + this.name);\r\n          }\r\n          var handleClass = handle.$$.ptrType.registeredClass;\r\n          var ptr = upcastPointer(handle.$$.ptr, handleClass, this.registeredClass);\r\n          return ptr;\r\n        }\r\n        function RegisteredPointer_getPointee(ptr) {\r\n          if (this.rawGetPointee) {\r\n            ptr = this.rawGetPointee(ptr);\r\n          }\r\n          return ptr;\r\n        }\r\n        function RegisteredPointer_destructor(ptr) {\r\n          if (this.rawDestructor) {\r\n            this.rawDestructor(ptr);\r\n          }\r\n        }\r\n        function RegisteredPointer_deleteObject(handle) {\r\n          if (handle !== null) {\r\n            handle[\"delete\"]();\r\n          }\r\n        }\r\n        function downcastPointer(ptr, ptrClass, desiredClass) {\r\n          if (ptrClass === desiredClass) {\r\n            return ptr;\r\n          }\r\n          if (desiredClass.baseClass === void 0) {\r\n            return null;\r\n          }\r\n          var rv = downcastPointer(ptr, ptrClass, desiredClass.baseClass);\r\n          if (rv === null) {\r\n            return null;\r\n          }\r\n          return desiredClass.downcast(rv);\r\n        }\r\n        function getInheritedInstanceCount() {\r\n          return Object.keys(registeredInstances).length;\r\n        }\r\n        function getLiveInheritedInstances() {\r\n          var rv = [];\r\n          for (var k in registeredInstances) {\r\n            if (registeredInstances.hasOwnProperty(k)) {\r\n              rv.push(registeredInstances[k]);\r\n            }\r\n          }\r\n          return rv;\r\n        }\r\n        function setDelayFunction(fn) {\r\n          delayFunction = fn;\r\n          if (deletionQueue.length && delayFunction) {\r\n            delayFunction(flushPendingDeletes);\r\n          }\r\n        }\r\n        function init_embind() {\r\n          Module[\"getInheritedInstanceCount\"] = getInheritedInstanceCount;\r\n          Module[\"getLiveInheritedInstances\"] = getLiveInheritedInstances;\r\n          Module[\"flushPendingDeletes\"] = flushPendingDeletes;\r\n          Module[\"setDelayFunction\"] = setDelayFunction;\r\n        }\r\n        var registeredInstances = {};\r\n        function getBasestPointer(class_, ptr) {\r\n          if (ptr === void 0) {\r\n            throwBindingError(\"ptr should not be undefined\");\r\n          }\r\n          while (class_.baseClass) {\r\n            ptr = class_.upcast(ptr);\r\n            class_ = class_.baseClass;\r\n          }\r\n          return ptr;\r\n        }\r\n        function getInheritedInstance(class_, ptr) {\r\n          ptr = getBasestPointer(class_, ptr);\r\n          return registeredInstances[ptr];\r\n        }\r\n        function makeClassHandle(prototype, record) {\r\n          if (!record.ptrType || !record.ptr) {\r\n            throwInternalError(\"makeClassHandle requires ptr and ptrType\");\r\n          }\r\n          var hasSmartPtrType = !!record.smartPtrType;\r\n          var hasSmartPtr = !!record.smartPtr;\r\n          if (hasSmartPtrType !== hasSmartPtr) {\r\n            throwInternalError(\"Both smartPtrType and smartPtr must be specified\");\r\n          }\r\n          record.count = { value: 1 };\r\n          return attachFinalizer(Object.create(prototype, { $$: { value: record } }));\r\n        }\r\n        function RegisteredPointer_fromWireType(ptr) {\r\n          var rawPointer = this.getPointee(ptr);\r\n          if (!rawPointer) {\r\n            this.destructor(ptr);\r\n            return null;\r\n          }\r\n          var registeredInstance = getInheritedInstance(this.registeredClass, rawPointer);\r\n          if (registeredInstance !== void 0) {\r\n            if (registeredInstance.$$.count.value === 0) {\r\n              registeredInstance.$$.ptr = rawPointer;\r\n              registeredInstance.$$.smartPtr = ptr;\r\n              return registeredInstance[\"clone\"]();\r\n            } else {\r\n              var rv = registeredInstance[\"clone\"]();\r\n              this.destructor(ptr);\r\n              return rv;\r\n            }\r\n          }\r\n          function makeDefaultHandle() {\r\n            if (this.isSmartPointer) {\r\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this.pointeeType, ptr: rawPointer, smartPtrType: this, smartPtr: ptr });\r\n            } else {\r\n              return makeClassHandle(this.registeredClass.instancePrototype, { ptrType: this, ptr });\r\n            }\r\n          }\r\n          var actualType = this.registeredClass.getActualType(rawPointer);\r\n          var registeredPointerRecord = registeredPointers[actualType];\r\n          if (!registeredPointerRecord) {\r\n            return makeDefaultHandle.call(this);\r\n          }\r\n          var toType;\r\n          if (this.isConst) {\r\n            toType = registeredPointerRecord.constPointerType;\r\n          } else {\r\n            toType = registeredPointerRecord.pointerType;\r\n          }\r\n          var dp = downcastPointer(rawPointer, this.registeredClass, toType.registeredClass);\r\n          if (dp === null) {\r\n            return makeDefaultHandle.call(this);\r\n          }\r\n          if (this.isSmartPointer) {\r\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp, smartPtrType: this, smartPtr: ptr });\r\n          } else {\r\n            return makeClassHandle(toType.registeredClass.instancePrototype, { ptrType: toType, ptr: dp });\r\n          }\r\n        }\r\n        function init_RegisteredPointer() {\r\n          RegisteredPointer.prototype.getPointee = RegisteredPointer_getPointee;\r\n          RegisteredPointer.prototype.destructor = RegisteredPointer_destructor;\r\n          RegisteredPointer.prototype[\"argPackAdvance\"] = 8;\r\n          RegisteredPointer.prototype[\"readValueFromPointer\"] = simpleReadValueFromPointer;\r\n          RegisteredPointer.prototype[\"deleteObject\"] = RegisteredPointer_deleteObject;\r\n          RegisteredPointer.prototype[\"fromWireType\"] = RegisteredPointer_fromWireType;\r\n        }\r\n        function RegisteredPointer(name2, registeredClass, isReference, isConst, isSmartPointer, pointeeType, sharingPolicy, rawGetPointee, rawConstructor, rawShare, rawDestructor) {\r\n          this.name = name2;\r\n          this.registeredClass = registeredClass;\r\n          this.isReference = isReference;\r\n          this.isConst = isConst;\r\n          this.isSmartPointer = isSmartPointer;\r\n          this.pointeeType = pointeeType;\r\n          this.sharingPolicy = sharingPolicy;\r\n          this.rawGetPointee = rawGetPointee;\r\n          this.rawConstructor = rawConstructor;\r\n          this.rawShare = rawShare;\r\n          this.rawDestructor = rawDestructor;\r\n          if (!isSmartPointer && registeredClass.baseClass === void 0) {\r\n            if (isConst) {\r\n              this[\"toWireType\"] = constNoSmartPtrRawPointerToWireType;\r\n              this.destructorFunction = null;\r\n            } else {\r\n              this[\"toWireType\"] = nonConstNoSmartPtrRawPointerToWireType;\r\n              this.destructorFunction = null;\r\n            }\r\n          } else {\r\n            this[\"toWireType\"] = genericPointerToWireType;\r\n          }\r\n        }\r\n        function replacePublicSymbol(name2, value, numArguments) {\r\n          if (!Module.hasOwnProperty(name2)) {\r\n            throwInternalError(\"Replacing nonexistant public symbol\");\r\n          }\r\n          if (Module[name2].overloadTable !== void 0 && numArguments !== void 0) {\r\n            Module[name2].overloadTable[numArguments] = value;\r\n          } else {\r\n            Module[name2] = value;\r\n            Module[name2].argCount = numArguments;\r\n          }\r\n        }\r\n        function getDynCaller(sig, ptr) {\r\n          assert(sig.indexOf(\"j\") >= 0, \"getDynCaller should only be called with i64 sigs\");\r\n          var argCache = [];\r\n          return function() {\r\n            argCache.length = arguments.length;\r\n            for (var i = 0; i < arguments.length; i++) {\r\n              argCache[i] = arguments[i];\r\n            }\r\n            return dynCall(sig, ptr, argCache);\r\n          };\r\n        }\r\n        function embind__requireFunction(signature, rawFunction) {\r\n          signature = readLatin1String(signature);\r\n          function makeDynCaller() {\r\n            if (signature.indexOf(\"j\") != -1) {\r\n              return getDynCaller(signature, rawFunction);\r\n            }\r\n            return wasmTable.get(rawFunction);\r\n          }\r\n          var fp = makeDynCaller();\r\n          if (typeof fp !== \"function\") {\r\n            throwBindingError(\"unknown function pointer with signature \" + signature + \": \" + rawFunction);\r\n          }\r\n          return fp;\r\n        }\r\n        var UnboundTypeError = void 0;\r\n        function getTypeName(type) {\r\n          var ptr = ___getTypeName(type);\r\n          var rv = readLatin1String(ptr);\r\n          _free(ptr);\r\n          return rv;\r\n        }\r\n        function throwUnboundTypeError(message, types) {\r\n          var unboundTypes = [];\r\n          var seen = {};\r\n          function visit(type) {\r\n            if (seen[type]) {\r\n              return;\r\n            }\r\n            if (registeredTypes[type]) {\r\n              return;\r\n            }\r\n            if (typeDependencies[type]) {\r\n              typeDependencies[type].forEach(visit);\r\n              return;\r\n            }\r\n            unboundTypes.push(type);\r\n            seen[type] = true;\r\n          }\r\n          types.forEach(visit);\r\n          throw new UnboundTypeError(message + \": \" + unboundTypes.map(getTypeName).join([\", \"]));\r\n        }\r\n        function __embind_register_class(rawType, rawPointerType, rawConstPointerType, baseClassRawType, getActualTypeSignature, getActualType, upcastSignature, upcast, downcastSignature, downcast, name2, destructorSignature, rawDestructor) {\r\n          name2 = readLatin1String(name2);\r\n          getActualType = embind__requireFunction(getActualTypeSignature, getActualType);\r\n          if (upcast) {\r\n            upcast = embind__requireFunction(upcastSignature, upcast);\r\n          }\r\n          if (downcast) {\r\n            downcast = embind__requireFunction(downcastSignature, downcast);\r\n          }\r\n          rawDestructor = embind__requireFunction(destructorSignature, rawDestructor);\r\n          var legalFunctionName = makeLegalFunctionName(name2);\r\n          exposePublicSymbol(legalFunctionName, function() {\r\n            throwUnboundTypeError(\"Cannot construct \" + name2 + \" due to unbound types\", [baseClassRawType]);\r\n          });\r\n          whenDependentTypesAreResolved([rawType, rawPointerType, rawConstPointerType], baseClassRawType ? [baseClassRawType] : [], function(base) {\r\n            base = base[0];\r\n            var baseClass;\r\n            var basePrototype;\r\n            if (baseClassRawType) {\r\n              baseClass = base.registeredClass;\r\n              basePrototype = baseClass.instancePrototype;\r\n            } else {\r\n              basePrototype = ClassHandle.prototype;\r\n            }\r\n            var constructor = createNamedFunction(legalFunctionName, function() {\r\n              if (Object.getPrototypeOf(this) !== instancePrototype) {\r\n                throw new BindingError(\"Use 'new' to construct \" + name2);\r\n              }\r\n              if (registeredClass.constructor_body === void 0) {\r\n                throw new BindingError(name2 + \" has no accessible constructor\");\r\n              }\r\n              var body = registeredClass.constructor_body[arguments.length];\r\n              if (body === void 0) {\r\n                throw new BindingError(\"Tried to invoke ctor of \" + name2 + \" with invalid number of parameters (\" + arguments.length + \") - expected (\" + Object.keys(registeredClass.constructor_body).toString() + \") parameters instead!\");\r\n              }\r\n              return body.apply(this, arguments);\r\n            });\r\n            var instancePrototype = Object.create(basePrototype, { constructor: { value: constructor } });\r\n            constructor.prototype = instancePrototype;\r\n            var registeredClass = new RegisteredClass(name2, constructor, instancePrototype, rawDestructor, baseClass, getActualType, upcast, downcast);\r\n            var referenceConverter = new RegisteredPointer(name2, registeredClass, true, false, false);\r\n            var pointerConverter = new RegisteredPointer(name2 + \"*\", registeredClass, false, false, false);\r\n            var constPointerConverter = new RegisteredPointer(name2 + \" const*\", registeredClass, false, true, false);\r\n            registeredPointers[rawType] = { pointerType: pointerConverter, constPointerType: constPointerConverter };\r\n            replacePublicSymbol(legalFunctionName, constructor);\r\n            return [referenceConverter, pointerConverter, constPointerConverter];\r\n          });\r\n        }\r\n        function heap32VectorToArray(count, firstElement) {\r\n          var array = [];\r\n          for (var i = 0; i < count; i++) {\r\n            array.push(HEAP32[(firstElement >> 2) + i >>> 0]);\r\n          }\r\n          return array;\r\n        }\r\n        function __embind_register_class_constructor(rawClassType, argCount, rawArgTypesAddr, invokerSignature, invoker, rawConstructor) {\r\n          assert(argCount > 0);\r\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\r\n          invoker = embind__requireFunction(invokerSignature, invoker);\r\n          var args = [rawConstructor];\r\n          var destructors = [];\r\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\r\n            classType = classType[0];\r\n            var humanName = \"constructor \" + classType.name;\r\n            if (classType.registeredClass.constructor_body === void 0) {\r\n              classType.registeredClass.constructor_body = [];\r\n            }\r\n            if (classType.registeredClass.constructor_body[argCount - 1] !== void 0) {\r\n              throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\" + (argCount - 1) + \") for class '\" + classType.name + \"'! Overload resolution is currently only performed using the parameter count, not actual type info!\");\r\n            }\r\n            classType.registeredClass.constructor_body[argCount - 1] = function unboundTypeHandler() {\r\n              throwUnboundTypeError(\"Cannot construct \" + classType.name + \" due to unbound types\", rawArgTypes);\r\n            };\r\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\r\n              classType.registeredClass.constructor_body[argCount - 1] = function constructor_body() {\r\n                if (arguments.length !== argCount - 1) {\r\n                  throwBindingError(humanName + \" called with \" + arguments.length + \" arguments, expected \" + (argCount - 1));\r\n                }\r\n                destructors.length = 0;\r\n                args.length = argCount;\r\n                for (var i = 1; i < argCount; ++i) {\r\n                  args[i] = argTypes[i][\"toWireType\"](destructors, arguments[i - 1]);\r\n                }\r\n                var ptr = invoker.apply(null, args);\r\n                runDestructors(destructors);\r\n                return argTypes[0][\"fromWireType\"](ptr);\r\n              };\r\n              return [];\r\n            });\r\n            return [];\r\n          });\r\n        }\r\n        function new_(constructor, argumentList) {\r\n          if (!(constructor instanceof Function)) {\r\n            throw new TypeError(\"new_ called with constructor type \" + typeof constructor + \" which is not a function\");\r\n          }\r\n          var dummy = createNamedFunction(constructor.name || \"unknownFunctionName\", function() {\r\n          });\r\n          dummy.prototype = constructor.prototype;\r\n          var obj = new dummy();\r\n          var r = constructor.apply(obj, argumentList);\r\n          return r instanceof Object ? r : obj;\r\n        }\r\n        function craftInvokerFunction(humanName, argTypes, classType, cppInvokerFunc, cppTargetFunc) {\r\n          var argCount = argTypes.length;\r\n          if (argCount < 2) {\r\n            throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\");\r\n          }\r\n          var isClassMethodFunc = argTypes[1] !== null && classType !== null;\r\n          var needsDestructorStack = false;\r\n          for (var i = 1; i < argTypes.length; ++i) {\r\n            if (argTypes[i] !== null && argTypes[i].destructorFunction === void 0) {\r\n              needsDestructorStack = true;\r\n              break;\r\n            }\r\n          }\r\n          var returns = argTypes[0].name !== \"void\";\r\n          var argsList = \"\";\r\n          var argsListWired = \"\";\r\n          for (var i = 0; i < argCount - 2; ++i) {\r\n            argsList += (i !== 0 ? \", \" : \"\") + \"arg\" + i;\r\n            argsListWired += (i !== 0 ? \", \" : \"\") + \"arg\" + i + \"Wired\";\r\n          }\r\n          var invokerFnBody = \"return function \" + makeLegalFunctionName(humanName) + \"(\" + argsList + \") {\\nif (arguments.length !== \" + (argCount - 2) + \") {\\nthrowBindingError('function \" + humanName + \" called with ' + arguments.length + ' arguments, expected \" + (argCount - 2) + \" args!');\\n}\\n\";\r\n          if (needsDestructorStack) {\r\n            invokerFnBody += \"var destructors = [];\\n\";\r\n          }\r\n          var dtorStack = needsDestructorStack ? \"destructors\" : \"null\";\r\n          var args1 = [\"throwBindingError\", \"invoker\", \"fn\", \"runDestructors\", \"retType\", \"classParam\"];\r\n          var args2 = [throwBindingError, cppInvokerFunc, cppTargetFunc, runDestructors, argTypes[0], argTypes[1]];\r\n          if (isClassMethodFunc) {\r\n            invokerFnBody += \"var thisWired = classParam.toWireType(\" + dtorStack + \", this);\\n\";\r\n          }\r\n          for (var i = 0; i < argCount - 2; ++i) {\r\n            invokerFnBody += \"var arg\" + i + \"Wired = argType\" + i + \".toWireType(\" + dtorStack + \", arg\" + i + \"); // \" + argTypes[i + 2].name + \"\\n\";\r\n            args1.push(\"argType\" + i);\r\n            args2.push(argTypes[i + 2]);\r\n          }\r\n          if (isClassMethodFunc) {\r\n            argsListWired = \"thisWired\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired;\r\n          }\r\n          invokerFnBody += (returns ? \"var rv = \" : \"\") + \"invoker(fn\" + (argsListWired.length > 0 ? \", \" : \"\") + argsListWired + \");\\n\";\r\n          if (needsDestructorStack) {\r\n            invokerFnBody += \"runDestructors(destructors);\\n\";\r\n          } else {\r\n            for (var i = isClassMethodFunc ? 1 : 2; i < argTypes.length; ++i) {\r\n              var paramName = i === 1 ? \"thisWired\" : \"arg\" + (i - 2) + \"Wired\";\r\n              if (argTypes[i].destructorFunction !== null) {\r\n                invokerFnBody += paramName + \"_dtor(\" + paramName + \"); // \" + argTypes[i].name + \"\\n\";\r\n                args1.push(paramName + \"_dtor\");\r\n                args2.push(argTypes[i].destructorFunction);\r\n              }\r\n            }\r\n          }\r\n          if (returns) {\r\n            invokerFnBody += \"var ret = retType.fromWireType(rv);\\nreturn ret;\\n\";\r\n          } else {\r\n          }\r\n          invokerFnBody += \"}\\n\";\r\n          args1.push(invokerFnBody);\r\n          var invokerFunction = new_(Function, args1).apply(null, args2);\r\n          return invokerFunction;\r\n        }\r\n        function __embind_register_class_function(rawClassType, methodName, argCount, rawArgTypesAddr, invokerSignature, rawInvoker, context, isPureVirtual) {\r\n          var rawArgTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\r\n          methodName = readLatin1String(methodName);\r\n          rawInvoker = embind__requireFunction(invokerSignature, rawInvoker);\r\n          whenDependentTypesAreResolved([], [rawClassType], function(classType) {\r\n            classType = classType[0];\r\n            var humanName = classType.name + \".\" + methodName;\r\n            if (isPureVirtual) {\r\n              classType.registeredClass.pureVirtualFunctions.push(methodName);\r\n            }\r\n            function unboundTypesHandler() {\r\n              throwUnboundTypeError(\"Cannot call \" + humanName + \" due to unbound types\", rawArgTypes);\r\n            }\r\n            var proto = classType.registeredClass.instancePrototype;\r\n            var method = proto[methodName];\r\n            if (method === void 0 || method.overloadTable === void 0 && method.className !== classType.name && method.argCount === argCount - 2) {\r\n              unboundTypesHandler.argCount = argCount - 2;\r\n              unboundTypesHandler.className = classType.name;\r\n              proto[methodName] = unboundTypesHandler;\r\n            } else {\r\n              ensureOverloadTable(proto, methodName, humanName);\r\n              proto[methodName].overloadTable[argCount - 2] = unboundTypesHandler;\r\n            }\r\n            whenDependentTypesAreResolved([], rawArgTypes, function(argTypes) {\r\n              var memberFunction = craftInvokerFunction(humanName, argTypes, classType, rawInvoker, context);\r\n              if (proto[methodName].overloadTable === void 0) {\r\n                memberFunction.argCount = argCount - 2;\r\n                proto[methodName] = memberFunction;\r\n              } else {\r\n                proto[methodName].overloadTable[argCount - 2] = memberFunction;\r\n              }\r\n              return [];\r\n            });\r\n            return [];\r\n          });\r\n        }\r\n        var emval_free_list = [];\r\n        var emval_handle_array = [{}, { value: void 0 }, { value: null }, { value: true }, { value: false }];\r\n        function __emval_decref(handle) {\r\n          if (handle > 4 && --emval_handle_array[handle].refcount === 0) {\r\n            emval_handle_array[handle] = void 0;\r\n            emval_free_list.push(handle);\r\n          }\r\n        }\r\n        function count_emval_handles() {\r\n          var count = 0;\r\n          for (var i = 5; i < emval_handle_array.length; ++i) {\r\n            if (emval_handle_array[i] !== void 0) {\r\n              ++count;\r\n            }\r\n          }\r\n          return count;\r\n        }\r\n        function get_first_emval() {\r\n          for (var i = 5; i < emval_handle_array.length; ++i) {\r\n            if (emval_handle_array[i] !== void 0) {\r\n              return emval_handle_array[i];\r\n            }\r\n          }\r\n          return null;\r\n        }\r\n        function init_emval() {\r\n          Module[\"count_emval_handles\"] = count_emval_handles;\r\n          Module[\"get_first_emval\"] = get_first_emval;\r\n        }\r\n        function __emval_register(value) {\r\n          switch (value) {\r\n            case void 0: {\r\n              return 1;\r\n            }\r\n            case null: {\r\n              return 2;\r\n            }\r\n            case true: {\r\n              return 3;\r\n            }\r\n            case false: {\r\n              return 4;\r\n            }\r\n            default: {\r\n              var handle = emval_free_list.length ? emval_free_list.pop() : emval_handle_array.length;\r\n              emval_handle_array[handle] = { refcount: 1, value };\r\n              return handle;\r\n            }\r\n          }\r\n        }\r\n        function __embind_register_emval(rawType, name2) {\r\n          name2 = readLatin1String(name2);\r\n          registerType(rawType, { name: name2, \"fromWireType\": function(handle) {\r\n            var rv = emval_handle_array[handle].value;\r\n            __emval_decref(handle);\r\n            return rv;\r\n          }, \"toWireType\": function(destructors, value) {\r\n            return __emval_register(value);\r\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: null });\r\n        }\r\n        function _embind_repr(v) {\r\n          if (v === null) {\r\n            return \"null\";\r\n          }\r\n          var t = typeof v;\r\n          if (t === \"object\" || t === \"array\" || t === \"function\") {\r\n            return v.toString();\r\n          } else {\r\n            return \"\" + v;\r\n          }\r\n        }\r\n        function floatReadValueFromPointer(name2, shift) {\r\n          switch (shift) {\r\n            case 2:\r\n              return function(pointer) {\r\n                return this[\"fromWireType\"](HEAPF32[pointer >>> 2]);\r\n              };\r\n            case 3:\r\n              return function(pointer) {\r\n                return this[\"fromWireType\"](HEAPF64[pointer >>> 3]);\r\n              };\r\n            default:\r\n              throw new TypeError(\"Unknown float type: \" + name2);\r\n          }\r\n        }\r\n        function __embind_register_float(rawType, name2, size) {\r\n          var shift = getShiftFromSize(size);\r\n          name2 = readLatin1String(name2);\r\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\r\n            return value;\r\n          }, \"toWireType\": function(destructors, value) {\r\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\r\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\r\n            }\r\n            return value;\r\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": floatReadValueFromPointer(name2, shift), destructorFunction: null });\r\n        }\r\n        function __embind_register_function(name2, argCount, rawArgTypesAddr, signature, rawInvoker, fn) {\r\n          var argTypes = heap32VectorToArray(argCount, rawArgTypesAddr);\r\n          name2 = readLatin1String(name2);\r\n          rawInvoker = embind__requireFunction(signature, rawInvoker);\r\n          exposePublicSymbol(name2, function() {\r\n            throwUnboundTypeError(\"Cannot call \" + name2 + \" due to unbound types\", argTypes);\r\n          }, argCount - 1);\r\n          whenDependentTypesAreResolved([], argTypes, function(argTypes2) {\r\n            var invokerArgsArray = [argTypes2[0], null].concat(argTypes2.slice(1));\r\n            replacePublicSymbol(name2, craftInvokerFunction(name2, invokerArgsArray, null, rawInvoker, fn), argCount - 1);\r\n            return [];\r\n          });\r\n        }\r\n        function integerReadValueFromPointer(name2, shift, signed) {\r\n          switch (shift) {\r\n            case 0:\r\n              return signed ? function readS8FromPointer(pointer) {\r\n                return HEAP8[pointer >>> 0];\r\n              } : function readU8FromPointer(pointer) {\r\n                return HEAPU8[pointer >>> 0];\r\n              };\r\n            case 1:\r\n              return signed ? function readS16FromPointer(pointer) {\r\n                return HEAP16[pointer >>> 1];\r\n              } : function readU16FromPointer(pointer) {\r\n                return HEAPU16[pointer >>> 1];\r\n              };\r\n            case 2:\r\n              return signed ? function readS32FromPointer(pointer) {\r\n                return HEAP32[pointer >>> 2];\r\n              } : function readU32FromPointer(pointer) {\r\n                return HEAPU32[pointer >>> 2];\r\n              };\r\n            default:\r\n              throw new TypeError(\"Unknown integer type: \" + name2);\r\n          }\r\n        }\r\n        function __embind_register_integer(primitiveType, name2, size, minRange, maxRange) {\r\n          name2 = readLatin1String(name2);\r\n          if (maxRange === -1) {\r\n            maxRange = 4294967295;\r\n          }\r\n          var shift = getShiftFromSize(size);\r\n          var fromWireType = function(value) {\r\n            return value;\r\n          };\r\n          if (minRange === 0) {\r\n            var bitshift = 32 - 8 * size;\r\n            fromWireType = function(value) {\r\n              return value << bitshift >>> bitshift;\r\n            };\r\n          }\r\n          var isUnsignedType = name2.indexOf(\"unsigned\") != -1;\r\n          registerType(primitiveType, { name: name2, \"fromWireType\": fromWireType, \"toWireType\": function(destructors, value) {\r\n            if (typeof value !== \"number\" && typeof value !== \"boolean\") {\r\n              throw new TypeError('Cannot convert \"' + _embind_repr(value) + '\" to ' + this.name);\r\n            }\r\n            if (value < minRange || value > maxRange) {\r\n              throw new TypeError('Passing a number \"' + _embind_repr(value) + '\" from JS side to C/C++ side to an argument of type \"' + name2 + '\", which is outside the valid range [' + minRange + \", \" + maxRange + \"]!\");\r\n            }\r\n            return isUnsignedType ? value >>> 0 : value | 0;\r\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": integerReadValueFromPointer(name2, shift, minRange !== 0), destructorFunction: null });\r\n        }\r\n        function __embind_register_memory_view(rawType, dataTypeIndex, name2) {\r\n          var typeMapping = [Int8Array, Uint8Array, Int16Array, Uint16Array, Int32Array, Uint32Array, Float32Array, Float64Array];\r\n          var TA = typeMapping[dataTypeIndex];\r\n          function decodeMemoryView(handle) {\r\n            handle = handle >> 2;\r\n            var heap = HEAPU32;\r\n            var size = heap[handle >>> 0];\r\n            var data = heap[handle + 1 >>> 0];\r\n            return new TA(buffer, data, size);\r\n          }\r\n          name2 = readLatin1String(name2);\r\n          registerType(rawType, { name: name2, \"fromWireType\": decodeMemoryView, \"argPackAdvance\": 8, \"readValueFromPointer\": decodeMemoryView }, { ignoreDuplicateRegistrations: true });\r\n        }\r\n        function __embind_register_std_string(rawType, name2) {\r\n          name2 = readLatin1String(name2);\r\n          var stdStringIsUTF8 = name2 === \"std::string\";\r\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\r\n            var length = HEAPU32[value >>> 2];\r\n            var str;\r\n            if (stdStringIsUTF8) {\r\n              var decodeStartPtr = value + 4;\r\n              for (var i = 0; i <= length; ++i) {\r\n                var currentBytePtr = value + 4 + i;\r\n                if (i == length || HEAPU8[currentBytePtr >>> 0] == 0) {\r\n                  var maxRead = currentBytePtr - decodeStartPtr;\r\n                  var stringSegment = UTF8ToString(decodeStartPtr, maxRead);\r\n                  if (str === void 0) {\r\n                    str = stringSegment;\r\n                  } else {\r\n                    str += String.fromCharCode(0);\r\n                    str += stringSegment;\r\n                  }\r\n                  decodeStartPtr = currentBytePtr + 1;\r\n                }\r\n              }\r\n            } else {\r\n              var a = new Array(length);\r\n              for (var i = 0; i < length; ++i) {\r\n                a[i] = String.fromCharCode(HEAPU8[value + 4 + i >>> 0]);\r\n              }\r\n              str = a.join(\"\");\r\n            }\r\n            _free(value);\r\n            return str;\r\n          }, \"toWireType\": function(destructors, value) {\r\n            if (value instanceof ArrayBuffer) {\r\n              value = new Uint8Array(value);\r\n            }\r\n            var getLength;\r\n            var valueIsOfTypeString = typeof value === \"string\";\r\n            if (!(valueIsOfTypeString || value instanceof Uint8Array || value instanceof Uint8ClampedArray || value instanceof Int8Array)) {\r\n              throwBindingError(\"Cannot pass non-string to std::string\");\r\n            }\r\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\r\n              getLength = function() {\r\n                return lengthBytesUTF8(value);\r\n              };\r\n            } else {\r\n              getLength = function() {\r\n                return value.length;\r\n              };\r\n            }\r\n            var length = getLength();\r\n            var ptr = _malloc(4 + length + 1);\r\n            ptr >>>= 0;\r\n            HEAPU32[ptr >>> 2] = length;\r\n            if (stdStringIsUTF8 && valueIsOfTypeString) {\r\n              stringToUTF8(value, ptr + 4, length + 1);\r\n            } else {\r\n              if (valueIsOfTypeString) {\r\n                for (var i = 0; i < length; ++i) {\r\n                  var charCode = value.charCodeAt(i);\r\n                  if (charCode > 255) {\r\n                    _free(ptr);\r\n                    throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\");\r\n                  }\r\n                  HEAPU8[ptr + 4 + i >>> 0] = charCode;\r\n                }\r\n              } else {\r\n                for (var i = 0; i < length; ++i) {\r\n                  HEAPU8[ptr + 4 + i >>> 0] = value[i];\r\n                }\r\n              }\r\n            }\r\n            if (destructors !== null) {\r\n              destructors.push(_free, ptr);\r\n            }\r\n            return ptr;\r\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\r\n            _free(ptr);\r\n          } });\r\n        }\r\n        function __embind_register_std_wstring(rawType, charSize, name2) {\r\n          name2 = readLatin1String(name2);\r\n          var decodeString, encodeString, getHeap, lengthBytesUTF, shift;\r\n          if (charSize === 2) {\r\n            decodeString = UTF16ToString;\r\n            encodeString = stringToUTF16;\r\n            lengthBytesUTF = lengthBytesUTF16;\r\n            getHeap = function() {\r\n              return HEAPU16;\r\n            };\r\n            shift = 1;\r\n          } else if (charSize === 4) {\r\n            decodeString = UTF32ToString;\r\n            encodeString = stringToUTF32;\r\n            lengthBytesUTF = lengthBytesUTF32;\r\n            getHeap = function() {\r\n              return HEAPU32;\r\n            };\r\n            shift = 2;\r\n          }\r\n          registerType(rawType, { name: name2, \"fromWireType\": function(value) {\r\n            var length = HEAPU32[value >>> 2];\r\n            var HEAP = getHeap();\r\n            var str;\r\n            var decodeStartPtr = value + 4;\r\n            for (var i = 0; i <= length; ++i) {\r\n              var currentBytePtr = value + 4 + i * charSize;\r\n              if (i == length || HEAP[currentBytePtr >>> shift] == 0) {\r\n                var maxReadBytes = currentBytePtr - decodeStartPtr;\r\n                var stringSegment = decodeString(decodeStartPtr, maxReadBytes);\r\n                if (str === void 0) {\r\n                  str = stringSegment;\r\n                } else {\r\n                  str += String.fromCharCode(0);\r\n                  str += stringSegment;\r\n                }\r\n                decodeStartPtr = currentBytePtr + charSize;\r\n              }\r\n            }\r\n            _free(value);\r\n            return str;\r\n          }, \"toWireType\": function(destructors, value) {\r\n            if (!(typeof value === \"string\")) {\r\n              throwBindingError(\"Cannot pass non-string to C++ string type \" + name2);\r\n            }\r\n            var length = lengthBytesUTF(value);\r\n            var ptr = _malloc(4 + length + charSize);\r\n            ptr >>>= 0;\r\n            HEAPU32[ptr >>> 2] = length >> shift;\r\n            encodeString(value, ptr + 4, length + charSize);\r\n            if (destructors !== null) {\r\n              destructors.push(_free, ptr);\r\n            }\r\n            return ptr;\r\n          }, \"argPackAdvance\": 8, \"readValueFromPointer\": simpleReadValueFromPointer, destructorFunction: function(ptr) {\r\n            _free(ptr);\r\n          } });\r\n        }\r\n        function __embind_register_value_array(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\r\n          tupleRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), elements: [] };\r\n        }\r\n        function __embind_register_value_array_element(rawTupleType, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\r\n          tupleRegistrations[rawTupleType].elements.push({ getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\r\n        }\r\n        function __embind_register_value_object(rawType, name2, constructorSignature, rawConstructor, destructorSignature, rawDestructor) {\r\n          structRegistrations[rawType] = { name: readLatin1String(name2), rawConstructor: embind__requireFunction(constructorSignature, rawConstructor), rawDestructor: embind__requireFunction(destructorSignature, rawDestructor), fields: [] };\r\n        }\r\n        function __embind_register_value_object_field(structType, fieldName, getterReturnType, getterSignature, getter, getterContext, setterArgumentType, setterSignature, setter, setterContext) {\r\n          structRegistrations[structType].fields.push({ fieldName: readLatin1String(fieldName), getterReturnType, getter: embind__requireFunction(getterSignature, getter), getterContext, setterArgumentType, setter: embind__requireFunction(setterSignature, setter), setterContext });\r\n        }\r\n        function __embind_register_void(rawType, name2) {\r\n          name2 = readLatin1String(name2);\r\n          registerType(rawType, { isVoid: true, name: name2, \"argPackAdvance\": 0, \"fromWireType\": function() {\r\n            return void 0;\r\n          }, \"toWireType\": function(destructors, o) {\r\n            return void 0;\r\n          } });\r\n        }\r\n        function requireHandle(handle) {\r\n          if (!handle) {\r\n            throwBindingError(\"Cannot use deleted val. handle = \" + handle);\r\n          }\r\n          return emval_handle_array[handle].value;\r\n        }\r\n        function requireRegisteredType(rawType, humanName) {\r\n          var impl = registeredTypes[rawType];\r\n          if (impl === void 0) {\r\n            throwBindingError(humanName + \" has unknown type \" + getTypeName(rawType));\r\n          }\r\n          return impl;\r\n        }\r\n        function __emval_as(handle, returnType, destructorsRef) {\r\n          handle = requireHandle(handle);\r\n          returnType = requireRegisteredType(returnType, \"emval::as\");\r\n          var destructors = [];\r\n          var rd = __emval_register(destructors);\r\n          HEAP32[destructorsRef >>> 2] = rd;\r\n          return returnType[\"toWireType\"](destructors, handle);\r\n        }\r\n        function __emval_lookupTypes(argCount, argTypes) {\r\n          var a = new Array(argCount);\r\n          for (var i = 0; i < argCount; ++i) {\r\n            a[i] = requireRegisteredType(HEAP32[(argTypes >> 2) + i >>> 0], \"parameter \" + i);\r\n          }\r\n          return a;\r\n        }\r\n        function __emval_call(handle, argCount, argTypes, argv) {\r\n          handle = requireHandle(handle);\r\n          var types = __emval_lookupTypes(argCount, argTypes);\r\n          var args = new Array(argCount);\r\n          for (var i = 0; i < argCount; ++i) {\r\n            var type = types[i];\r\n            args[i] = type[\"readValueFromPointer\"](argv);\r\n            argv += type[\"argPackAdvance\"];\r\n          }\r\n          var rv = handle.apply(void 0, args);\r\n          return __emval_register(rv);\r\n        }\r\n        var emval_symbols = {};\r\n        function getStringOrSymbol(address) {\r\n          var symbol = emval_symbols[address];\r\n          if (symbol === void 0) {\r\n            return readLatin1String(address);\r\n          } else {\r\n            return symbol;\r\n          }\r\n        }\r\n        function emval_get_global() {\r\n          if (typeof globalThis === \"object\") {\r\n            return globalThis;\r\n          }\r\n          return function() {\r\n            return Function;\r\n          }()(\"return this\")();\r\n        }\r\n        function __emval_get_global(name2) {\r\n          if (name2 === 0) {\r\n            return __emval_register(emval_get_global());\r\n          } else {\r\n            name2 = getStringOrSymbol(name2);\r\n            return __emval_register(emval_get_global()[name2]);\r\n          }\r\n        }\r\n        function __emval_get_property(handle, key2) {\r\n          handle = requireHandle(handle);\r\n          key2 = requireHandle(key2);\r\n          return __emval_register(handle[key2]);\r\n        }\r\n        function __emval_incref(handle) {\r\n          if (handle > 4) {\r\n            emval_handle_array[handle].refcount += 1;\r\n          }\r\n        }\r\n        function __emval_instanceof(object, constructor) {\r\n          object = requireHandle(object);\r\n          constructor = requireHandle(constructor);\r\n          return object instanceof constructor;\r\n        }\r\n        function __emval_is_number(handle) {\r\n          handle = requireHandle(handle);\r\n          return typeof handle === \"number\";\r\n        }\r\n        function __emval_new_array() {\r\n          return __emval_register([]);\r\n        }\r\n        function __emval_new_cstring(v) {\r\n          return __emval_register(getStringOrSymbol(v));\r\n        }\r\n        function __emval_new_object() {\r\n          return __emval_register({});\r\n        }\r\n        function __emval_run_destructors(handle) {\r\n          var destructors = emval_handle_array[handle].value;\r\n          runDestructors(destructors);\r\n          __emval_decref(handle);\r\n        }\r\n        function __emval_set_property(handle, key2, value) {\r\n          handle = requireHandle(handle);\r\n          key2 = requireHandle(key2);\r\n          value = requireHandle(value);\r\n          handle[key2] = value;\r\n        }\r\n        function __emval_take_value(type, argv) {\r\n          type = requireRegisteredType(type, \"_emval_take_value\");\r\n          var v = type[\"readValueFromPointer\"](argv);\r\n          return __emval_register(v);\r\n        }\r\n        function _abort() {\r\n          abort();\r\n        }\r\n        var _emscripten_get_now;\r\n        if (ENVIRONMENT_IS_NODE) {\r\n          _emscripten_get_now = function() {\r\n            var t = process[\"hrtime\"]();\r\n            return t[0] * 1e3 + t[1] / 1e6;\r\n          };\r\n        } else if (typeof dateNow !== \"undefined\") {\r\n          _emscripten_get_now = dateNow;\r\n        } else\r\n          _emscripten_get_now = function() {\r\n            return performance.now();\r\n          };\r\n        var _emscripten_get_now_is_monotonic = true;\r\n        function _clock_gettime(clk_id, tp) {\r\n          var now;\r\n          if (clk_id === 0) {\r\n            now = Date.now();\r\n          } else if ((clk_id === 1 || clk_id === 4) && _emscripten_get_now_is_monotonic) {\r\n            now = _emscripten_get_now();\r\n          } else {\r\n            setErrNo(28);\r\n            return -1;\r\n          }\r\n          HEAP32[tp >>> 2] = now / 1e3 | 0;\r\n          HEAP32[tp + 4 >>> 2] = now % 1e3 * 1e3 * 1e3 | 0;\r\n          return 0;\r\n        }\r\n        function _emscripten_memcpy_big(dest, src, num) {\r\n          HEAPU8.copyWithin(dest >>> 0, src >>> 0, src + num >>> 0);\r\n        }\r\n        function _emscripten_get_heap_size() {\r\n          return HEAPU8.length;\r\n        }\r\n        function emscripten_realloc_buffer(size) {\r\n          try {\r\n            wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\r\n            updateGlobalBufferAndViews(wasmMemory.buffer);\r\n            return 1;\r\n          } catch (e) {\r\n          }\r\n        }\r\n        function _emscripten_resize_heap(requestedSize) {\r\n          requestedSize = requestedSize >>> 0;\r\n          var oldSize = _emscripten_get_heap_size();\r\n          var maxHeapSize = 4294967296;\r\n          if (requestedSize > maxHeapSize) {\r\n            return false;\r\n          }\r\n          var minHeapSize = 16777216;\r\n          for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {\r\n            var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\r\n            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\r\n            var newSize = Math.min(maxHeapSize, alignUp(Math.max(minHeapSize, requestedSize, overGrownHeapSize), 65536));\r\n            var replacement = emscripten_realloc_buffer(newSize);\r\n            if (replacement) {\r\n              return true;\r\n            }\r\n          }\r\n          return false;\r\n        }\r\n        var ENV = {};\r\n        function getExecutableName() {\r\n          return thisProgram || \"./this.program\";\r\n        }\r\n        function getEnvStrings() {\r\n          if (!getEnvStrings.strings) {\r\n            var lang = (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\r\n            var env = { \"USER\": \"web_user\", \"LOGNAME\": \"web_user\", \"PATH\": \"/\", \"PWD\": \"/\", \"HOME\": \"/home/web_user\", \"LANG\": lang, \"_\": getExecutableName() };\r\n            for (var x in ENV) {\r\n              env[x] = ENV[x];\r\n            }\r\n            var strings = [];\r\n            for (var x in env) {\r\n              strings.push(x + \"=\" + env[x]);\r\n            }\r\n            getEnvStrings.strings = strings;\r\n          }\r\n          return getEnvStrings.strings;\r\n        }\r\n        function _environ_get(__environ, environ_buf) {\r\n          try {\r\n            var bufSize = 0;\r\n            getEnvStrings().forEach(function(string, i) {\r\n              var ptr = environ_buf + bufSize;\r\n              HEAP32[__environ + i * 4 >>> 2] = ptr;\r\n              writeAsciiToMemory(string, ptr);\r\n              bufSize += string.length + 1;\r\n            });\r\n            return 0;\r\n          } catch (e) {\r\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\r\n              abort(e);\r\n            return e.errno;\r\n          }\r\n        }\r\n        function _environ_sizes_get(penviron_count, penviron_buf_size) {\r\n          try {\r\n            var strings = getEnvStrings();\r\n            HEAP32[penviron_count >>> 2] = strings.length;\r\n            var bufSize = 0;\r\n            strings.forEach(function(string) {\r\n              bufSize += string.length + 1;\r\n            });\r\n            HEAP32[penviron_buf_size >>> 2] = bufSize;\r\n            return 0;\r\n          } catch (e) {\r\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\r\n              abort(e);\r\n            return e.errno;\r\n          }\r\n        }\r\n        function _fd_close(fd) {\r\n          try {\r\n            var stream = SYSCALLS.getStreamFromFD(fd);\r\n            FS.close(stream);\r\n            return 0;\r\n          } catch (e) {\r\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\r\n              abort(e);\r\n            return e.errno;\r\n          }\r\n        }\r\n        function _fd_read(fd, iov, iovcnt, pnum) {\r\n          try {\r\n            var stream = SYSCALLS.getStreamFromFD(fd);\r\n            var num = SYSCALLS.doReadv(stream, iov, iovcnt);\r\n            HEAP32[pnum >>> 2] = num;\r\n            return 0;\r\n          } catch (e) {\r\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\r\n              abort(e);\r\n            return e.errno;\r\n          }\r\n        }\r\n        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {\r\n          try {\r\n            var stream = SYSCALLS.getStreamFromFD(fd);\r\n            var HIGH_OFFSET = 4294967296;\r\n            var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);\r\n            var DOUBLE_LIMIT = 9007199254740992;\r\n            if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {\r\n              return -61;\r\n            }\r\n            FS.llseek(stream, offset, whence);\r\n            tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >>> 2] = tempI64[0], HEAP32[newOffset + 4 >>> 2] = tempI64[1];\r\n            if (stream.getdents && offset === 0 && whence === 0)\r\n              stream.getdents = null;\r\n            return 0;\r\n          } catch (e) {\r\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\r\n              abort(e);\r\n            return e.errno;\r\n          }\r\n        }\r\n        function _fd_write(fd, iov, iovcnt, pnum) {\r\n          try {\r\n            var stream = SYSCALLS.getStreamFromFD(fd);\r\n            var num = SYSCALLS.doWritev(stream, iov, iovcnt);\r\n            HEAP32[pnum >>> 2] = num;\r\n            return 0;\r\n          } catch (e) {\r\n            if (typeof FS === \"undefined\" || !(e instanceof FS.ErrnoError))\r\n              abort(e);\r\n            return e.errno;\r\n          }\r\n        }\r\n        function _setTempRet0($i) {\r\n          setTempRet0($i | 0);\r\n        }\r\n        function __isLeapYear(year) {\r\n          return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\r\n        }\r\n        function __arraySum(array, index) {\r\n          var sum = 0;\r\n          for (var i = 0; i <= index; sum += array[i++]) {\r\n          }\r\n          return sum;\r\n        }\r\n        var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n        var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n        function __addDays(date, days) {\r\n          var newDate = new Date(date.getTime());\r\n          while (days > 0) {\r\n            var leap = __isLeapYear(newDate.getFullYear());\r\n            var currentMonth = newDate.getMonth();\r\n            var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\r\n            if (days > daysInCurrentMonth - newDate.getDate()) {\r\n              days -= daysInCurrentMonth - newDate.getDate() + 1;\r\n              newDate.setDate(1);\r\n              if (currentMonth < 11) {\r\n                newDate.setMonth(currentMonth + 1);\r\n              } else {\r\n                newDate.setMonth(0);\r\n                newDate.setFullYear(newDate.getFullYear() + 1);\r\n              }\r\n            } else {\r\n              newDate.setDate(newDate.getDate() + days);\r\n              return newDate;\r\n            }\r\n          }\r\n          return newDate;\r\n        }\r\n        function _strftime(s, maxsize, format, tm) {\r\n          var tm_zone = HEAP32[tm + 40 >>> 2];\r\n          var date = { tm_sec: HEAP32[tm >>> 2], tm_min: HEAP32[tm + 4 >>> 2], tm_hour: HEAP32[tm + 8 >>> 2], tm_mday: HEAP32[tm + 12 >>> 2], tm_mon: HEAP32[tm + 16 >>> 2], tm_year: HEAP32[tm + 20 >>> 2], tm_wday: HEAP32[tm + 24 >>> 2], tm_yday: HEAP32[tm + 28 >>> 2], tm_isdst: HEAP32[tm + 32 >>> 2], tm_gmtoff: HEAP32[tm + 36 >>> 2], tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\" };\r\n          var pattern = UTF8ToString(format);\r\n          var EXPANSION_RULES_1 = { \"%c\": \"%a %b %d %H:%M:%S %Y\", \"%D\": \"%m/%d/%y\", \"%F\": \"%Y-%m-%d\", \"%h\": \"%b\", \"%r\": \"%I:%M:%S %p\", \"%R\": \"%H:%M\", \"%T\": \"%H:%M:%S\", \"%x\": \"%m/%d/%y\", \"%X\": \"%H:%M:%S\", \"%Ec\": \"%c\", \"%EC\": \"%C\", \"%Ex\": \"%m/%d/%y\", \"%EX\": \"%H:%M:%S\", \"%Ey\": \"%y\", \"%EY\": \"%Y\", \"%Od\": \"%d\", \"%Oe\": \"%e\", \"%OH\": \"%H\", \"%OI\": \"%I\", \"%Om\": \"%m\", \"%OM\": \"%M\", \"%OS\": \"%S\", \"%Ou\": \"%u\", \"%OU\": \"%U\", \"%OV\": \"%V\", \"%Ow\": \"%w\", \"%OW\": \"%W\", \"%Oy\": \"%y\" };\r\n          for (var rule in EXPANSION_RULES_1) {\r\n            pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\r\n          }\r\n          var WEEKDAYS = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n          var MONTHS = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n          function leadingSomething(value, digits, character) {\r\n            var str = typeof value === \"number\" ? value.toString() : value || \"\";\r\n            while (str.length < digits) {\r\n              str = character[0] + str;\r\n            }\r\n            return str;\r\n          }\r\n          function leadingNulls(value, digits) {\r\n            return leadingSomething(value, digits, \"0\");\r\n          }\r\n          function compareByDay(date1, date2) {\r\n            function sgn(value) {\r\n              return value < 0 ? -1 : value > 0 ? 1 : 0;\r\n            }\r\n            var compare;\r\n            if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\r\n              if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\r\n                compare = sgn(date1.getDate() - date2.getDate());\r\n              }\r\n            }\r\n            return compare;\r\n          }\r\n          function getFirstWeekStartDate(janFourth) {\r\n            switch (janFourth.getDay()) {\r\n              case 0:\r\n                return new Date(janFourth.getFullYear() - 1, 11, 29);\r\n              case 1:\r\n                return janFourth;\r\n              case 2:\r\n                return new Date(janFourth.getFullYear(), 0, 3);\r\n              case 3:\r\n                return new Date(janFourth.getFullYear(), 0, 2);\r\n              case 4:\r\n                return new Date(janFourth.getFullYear(), 0, 1);\r\n              case 5:\r\n                return new Date(janFourth.getFullYear() - 1, 11, 31);\r\n              case 6:\r\n                return new Date(janFourth.getFullYear() - 1, 11, 30);\r\n            }\r\n          }\r\n          function getWeekBasedYear(date2) {\r\n            var thisDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\r\n            var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\r\n            var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\r\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\r\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\r\n            if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\r\n              if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\r\n                return thisDate.getFullYear() + 1;\r\n              } else {\r\n                return thisDate.getFullYear();\r\n              }\r\n            } else {\r\n              return thisDate.getFullYear() - 1;\r\n            }\r\n          }\r\n          var EXPANSION_RULES_2 = { \"%a\": function(date2) {\r\n            return WEEKDAYS[date2.tm_wday].substring(0, 3);\r\n          }, \"%A\": function(date2) {\r\n            return WEEKDAYS[date2.tm_wday];\r\n          }, \"%b\": function(date2) {\r\n            return MONTHS[date2.tm_mon].substring(0, 3);\r\n          }, \"%B\": function(date2) {\r\n            return MONTHS[date2.tm_mon];\r\n          }, \"%C\": function(date2) {\r\n            var year = date2.tm_year + 1900;\r\n            return leadingNulls(year / 100 | 0, 2);\r\n          }, \"%d\": function(date2) {\r\n            return leadingNulls(date2.tm_mday, 2);\r\n          }, \"%e\": function(date2) {\r\n            return leadingSomething(date2.tm_mday, 2, \" \");\r\n          }, \"%g\": function(date2) {\r\n            return getWeekBasedYear(date2).toString().substring(2);\r\n          }, \"%G\": function(date2) {\r\n            return getWeekBasedYear(date2);\r\n          }, \"%H\": function(date2) {\r\n            return leadingNulls(date2.tm_hour, 2);\r\n          }, \"%I\": function(date2) {\r\n            var twelveHour = date2.tm_hour;\r\n            if (twelveHour == 0)\r\n              twelveHour = 12;\r\n            else if (twelveHour > 12)\r\n              twelveHour -= 12;\r\n            return leadingNulls(twelveHour, 2);\r\n          }, \"%j\": function(date2) {\r\n            return leadingNulls(date2.tm_mday + __arraySum(__isLeapYear(date2.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date2.tm_mon - 1), 3);\r\n          }, \"%m\": function(date2) {\r\n            return leadingNulls(date2.tm_mon + 1, 2);\r\n          }, \"%M\": function(date2) {\r\n            return leadingNulls(date2.tm_min, 2);\r\n          }, \"%n\": function() {\r\n            return \"\\n\";\r\n          }, \"%p\": function(date2) {\r\n            if (date2.tm_hour >= 0 && date2.tm_hour < 12) {\r\n              return \"AM\";\r\n            } else {\r\n              return \"PM\";\r\n            }\r\n          }, \"%S\": function(date2) {\r\n            return leadingNulls(date2.tm_sec, 2);\r\n          }, \"%t\": function() {\r\n            return \"\t\";\r\n          }, \"%u\": function(date2) {\r\n            return date2.tm_wday || 7;\r\n          }, \"%U\": function(date2) {\r\n            var janFirst = new Date(date2.tm_year + 1900, 0, 1);\r\n            var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());\r\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\r\n            if (compareByDay(firstSunday, endDate) < 0) {\r\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\r\n              var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();\r\n              var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\r\n              return leadingNulls(Math.ceil(days / 7), 2);\r\n            }\r\n            return compareByDay(firstSunday, janFirst) === 0 ? \"01\" : \"00\";\r\n          }, \"%V\": function(date2) {\r\n            var janFourthThisYear = new Date(date2.tm_year + 1900, 0, 4);\r\n            var janFourthNextYear = new Date(date2.tm_year + 1901, 0, 4);\r\n            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\r\n            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\r\n            var endDate = __addDays(new Date(date2.tm_year + 1900, 0, 1), date2.tm_yday);\r\n            if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\r\n              return \"53\";\r\n            }\r\n            if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\r\n              return \"01\";\r\n            }\r\n            var daysDifference;\r\n            if (firstWeekStartThisYear.getFullYear() < date2.tm_year + 1900) {\r\n              daysDifference = date2.tm_yday + 32 - firstWeekStartThisYear.getDate();\r\n            } else {\r\n              daysDifference = date2.tm_yday + 1 - firstWeekStartThisYear.getDate();\r\n            }\r\n            return leadingNulls(Math.ceil(daysDifference / 7), 2);\r\n          }, \"%w\": function(date2) {\r\n            return date2.tm_wday;\r\n          }, \"%W\": function(date2) {\r\n            var janFirst = new Date(date2.tm_year, 0, 1);\r\n            var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);\r\n            var endDate = new Date(date2.tm_year + 1900, date2.tm_mon, date2.tm_mday);\r\n            if (compareByDay(firstMonday, endDate) < 0) {\r\n              var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\r\n              var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();\r\n              var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\r\n              return leadingNulls(Math.ceil(days / 7), 2);\r\n            }\r\n            return compareByDay(firstMonday, janFirst) === 0 ? \"01\" : \"00\";\r\n          }, \"%y\": function(date2) {\r\n            return (date2.tm_year + 1900).toString().substring(2);\r\n          }, \"%Y\": function(date2) {\r\n            return date2.tm_year + 1900;\r\n          }, \"%z\": function(date2) {\r\n            var off = date2.tm_gmtoff;\r\n            var ahead = off >= 0;\r\n            off = Math.abs(off) / 60;\r\n            off = off / 60 * 100 + off % 60;\r\n            return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\r\n          }, \"%Z\": function(date2) {\r\n            return date2.tm_zone;\r\n          }, \"%%\": function() {\r\n            return \"%\";\r\n          } };\r\n          for (var rule in EXPANSION_RULES_2) {\r\n            if (pattern.indexOf(rule) >= 0) {\r\n              pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\r\n            }\r\n          }\r\n          var bytes = intArrayFromString(pattern, false);\r\n          if (bytes.length > maxsize) {\r\n            return 0;\r\n          }\r\n          writeArrayToMemory(bytes, s);\r\n          return bytes.length - 1;\r\n        }\r\n        function _strftime_l(s, maxsize, format, tm) {\r\n          return _strftime(s, maxsize, format, tm);\r\n        }\r\n        var FSNode = function(parent, name2, mode, rdev) {\r\n          if (!parent) {\r\n            parent = this;\r\n          }\r\n          this.parent = parent;\r\n          this.mount = parent.mount;\r\n          this.mounted = null;\r\n          this.id = FS.nextInode++;\r\n          this.name = name2;\r\n          this.mode = mode;\r\n          this.node_ops = {};\r\n          this.stream_ops = {};\r\n          this.rdev = rdev;\r\n        };\r\n        var readMode = 292 | 73;\r\n        var writeMode = 146;\r\n        Object.defineProperties(FSNode.prototype, { read: { get: function() {\r\n          return (this.mode & readMode) === readMode;\r\n        }, set: function(val) {\r\n          val ? this.mode |= readMode : this.mode &= ~readMode;\r\n        } }, write: { get: function() {\r\n          return (this.mode & writeMode) === writeMode;\r\n        }, set: function(val) {\r\n          val ? this.mode |= writeMode : this.mode &= ~writeMode;\r\n        } }, isFolder: { get: function() {\r\n          return FS.isDir(this.mode);\r\n        } }, isDevice: { get: function() {\r\n          return FS.isChrdev(this.mode);\r\n        } } });\r\n        FS.FSNode = FSNode;\r\n        FS.staticInit();\r\n        Module[\"FS_createPath\"] = FS.createPath;\r\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\r\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\r\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\r\n        Module[\"FS_createDevice\"] = FS.createDevice;\r\n        Module[\"FS_unlink\"] = FS.unlink;\r\n        InternalError = Module[\"InternalError\"] = extendError(Error, \"InternalError\");\r\n        embind_init_charCodes();\r\n        BindingError = Module[\"BindingError\"] = extendError(Error, \"BindingError\");\r\n        init_ClassHandle();\r\n        init_RegisteredPointer();\r\n        init_embind();\r\n        UnboundTypeError = Module[\"UnboundTypeError\"] = extendError(Error, \"UnboundTypeError\");\r\n        init_emval();\r\n        function intArrayFromString(stringy, dontAddNull, length) {\r\n          var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\r\n          var u8array = new Array(len);\r\n          var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\r\n          if (dontAddNull)\r\n            u8array.length = numBytesWritten;\r\n          return u8array;\r\n        }\r\n        __ATINIT__.push({ func: function() {\r\n          ___wasm_call_ctors();\r\n        } });\r\n        var asmLibraryArg = { \"x\": ___assert_fail, \"A\": ___sys_fcntl64, \"P\": ___sys_ioctl, \"Q\": ___sys_open, \"U\": __embind_finalize_value_array, \"s\": __embind_finalize_value_object, \"S\": __embind_register_bool, \"v\": __embind_register_class, \"u\": __embind_register_class_constructor, \"d\": __embind_register_class_function, \"R\": __embind_register_emval, \"C\": __embind_register_float, \"h\": __embind_register_function, \"m\": __embind_register_integer, \"k\": __embind_register_memory_view, \"D\": __embind_register_std_string, \"w\": __embind_register_std_wstring, \"V\": __embind_register_value_array, \"g\": __embind_register_value_array_element, \"t\": __embind_register_value_object, \"j\": __embind_register_value_object_field, \"T\": __embind_register_void, \"q\": __emval_as, \"W\": __emval_call, \"b\": __emval_decref, \"F\": __emval_get_global, \"n\": __emval_get_property, \"l\": __emval_incref, \"N\": __emval_instanceof, \"E\": __emval_is_number, \"y\": __emval_new_array, \"f\": __emval_new_cstring, \"r\": __emval_new_object, \"p\": __emval_run_destructors, \"i\": __emval_set_property, \"e\": __emval_take_value, \"c\": _abort, \"M\": _clock_gettime, \"I\": _emscripten_memcpy_big, \"o\": _emscripten_resize_heap, \"K\": _environ_get, \"L\": _environ_sizes_get, \"B\": _fd_close, \"O\": _fd_read, \"G\": _fd_seek, \"z\": _fd_write, \"a\": wasmMemory, \"H\": _setTempRet0, \"J\": _strftime_l };\r\n        var asm = createWasm();\r\n        var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\r\n          return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"Y\"]).apply(null, arguments);\r\n        };\r\n        var _main = Module[\"_main\"] = function() {\r\n          return (_main = Module[\"_main\"] = Module[\"asm\"][\"Z\"]).apply(null, arguments);\r\n        };\r\n        var _malloc = Module[\"_malloc\"] = function() {\r\n          return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"_\"]).apply(null, arguments);\r\n        };\r\n        var ___getTypeName = Module[\"___getTypeName\"] = function() {\r\n          return (___getTypeName = Module[\"___getTypeName\"] = Module[\"asm\"][\"$\"]).apply(null, arguments);\r\n        };\r\n        var ___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = function() {\r\n          return (___embind_register_native_and_builtin_types = Module[\"___embind_register_native_and_builtin_types\"] = Module[\"asm\"][\"aa\"]).apply(null, arguments);\r\n        };\r\n        var ___errno_location = Module[\"___errno_location\"] = function() {\r\n          return (___errno_location = Module[\"___errno_location\"] = Module[\"asm\"][\"ba\"]).apply(null, arguments);\r\n        };\r\n        var _free = Module[\"_free\"] = function() {\r\n          return (_free = Module[\"_free\"] = Module[\"asm\"][\"ca\"]).apply(null, arguments);\r\n        };\r\n        var dynCall_jiji = Module[\"dynCall_jiji\"] = function() {\r\n          return (dynCall_jiji = Module[\"dynCall_jiji\"] = Module[\"asm\"][\"da\"]).apply(null, arguments);\r\n        };\r\n        var dynCall_viijii = Module[\"dynCall_viijii\"] = function() {\r\n          return (dynCall_viijii = Module[\"dynCall_viijii\"] = Module[\"asm\"][\"ea\"]).apply(null, arguments);\r\n        };\r\n        var dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = function() {\r\n          return (dynCall_iiiiiijj = Module[\"dynCall_iiiiiijj\"] = Module[\"asm\"][\"fa\"]).apply(null, arguments);\r\n        };\r\n        var dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = function() {\r\n          return (dynCall_iiiiij = Module[\"dynCall_iiiiij\"] = Module[\"asm\"][\"ga\"]).apply(null, arguments);\r\n        };\r\n        var dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = function() {\r\n          return (dynCall_iiiiijj = Module[\"dynCall_iiiiijj\"] = Module[\"asm\"][\"ha\"]).apply(null, arguments);\r\n        };\r\n        Module[\"addRunDependency\"] = addRunDependency;\r\n        Module[\"removeRunDependency\"] = removeRunDependency;\r\n        Module[\"FS_createPath\"] = FS.createPath;\r\n        Module[\"FS_createDataFile\"] = FS.createDataFile;\r\n        Module[\"FS_createPreloadedFile\"] = FS.createPreloadedFile;\r\n        Module[\"FS_createLazyFile\"] = FS.createLazyFile;\r\n        Module[\"FS_createDevice\"] = FS.createDevice;\r\n        Module[\"FS_unlink\"] = FS.unlink;\r\n        Module[\"FS\"] = FS;\r\n        var calledRun;\r\n        function ExitStatus(status) {\r\n          this.name = \"ExitStatus\";\r\n          this.message = \"Program terminated with exit(\" + status + \")\";\r\n          this.status = status;\r\n        }\r\n        var calledMain = false;\r\n        dependenciesFulfilled = function runCaller() {\r\n          if (!calledRun)\r\n            run();\r\n          if (!calledRun)\r\n            dependenciesFulfilled = runCaller;\r\n        };\r\n        function callMain(args) {\r\n          var entryFunction = Module[\"_main\"];\r\n          var argc = 0;\r\n          var argv = 0;\r\n          try {\r\n            var ret = entryFunction(argc, argv);\r\n            exit(ret, true);\r\n          } catch (e) {\r\n            if (e instanceof ExitStatus) {\r\n              return;\r\n            } else if (e == \"unwind\") {\r\n              noExitRuntime = true;\r\n              return;\r\n            } else {\r\n              var toLog = e;\r\n              if (e && typeof e === \"object\" && e.stack) {\r\n                toLog = [e, e.stack];\r\n              }\r\n              err(\"exception thrown: \" + toLog);\r\n              quit_(1, e);\r\n            }\r\n          } finally {\r\n            calledMain = true;\r\n          }\r\n        }\r\n        function run(args) {\r\n          args = args || arguments_;\r\n          if (runDependencies > 0) {\r\n            return;\r\n          }\r\n          preRun();\r\n          if (runDependencies > 0)\r\n            return;\r\n          function doRun() {\r\n            if (calledRun)\r\n              return;\r\n            calledRun = true;\r\n            Module[\"calledRun\"] = true;\r\n            if (ABORT)\r\n              return;\r\n            initRuntime();\r\n            preMain();\r\n            readyPromiseResolve(Module);\r\n            if (Module[\"onRuntimeInitialized\"])\r\n              Module[\"onRuntimeInitialized\"]();\r\n            if (shouldRunNow)\r\n              callMain(args);\r\n            postRun();\r\n          }\r\n          if (Module[\"setStatus\"]) {\r\n            Module[\"setStatus\"](\"Running...\");\r\n            setTimeout(function() {\r\n              setTimeout(function() {\r\n                Module[\"setStatus\"](\"\");\r\n              }, 1);\r\n              doRun();\r\n            }, 1);\r\n          } else {\r\n            doRun();\r\n          }\r\n        }\r\n        Module[\"run\"] = run;\r\n        function exit(status, implicit) {\r\n          if (implicit && noExitRuntime && status === 0) {\r\n            return;\r\n          }\r\n          if (noExitRuntime) {\r\n          } else {\r\n            EXITSTATUS = status;\r\n            exitRuntime();\r\n            if (Module[\"onExit\"])\r\n              Module[\"onExit\"](status);\r\n            ABORT = true;\r\n          }\r\n          quit_(status, new ExitStatus(status));\r\n        }\r\n        if (Module[\"preInit\"]) {\r\n          if (typeof Module[\"preInit\"] == \"function\")\r\n            Module[\"preInit\"] = [Module[\"preInit\"]];\r\n          while (Module[\"preInit\"].length > 0) {\r\n            Module[\"preInit\"].pop()();\r\n          }\r\n        }\r\n        var shouldRunNow = true;\r\n        if (Module[\"noInitialRun\"])\r\n          shouldRunNow = false;\r\n        noExitRuntime = true;\r\n        run();\r\n        return WebIFCWasm3.ready;\r\n      };\r\n    }();\r\n    if (typeof exports === \"object\" && typeof module === \"object\")\r\n      module.exports = WebIFCWasm2;\r\n    else if (typeof define === \"function\" && define[\"amd\"])\r\n      define([], function() {\r\n        return WebIFCWasm2;\r\n      });\r\n    else if (typeof exports === \"object\")\r\n      exports[\"WebIFCWasm\"] = WebIFCWasm2;\r\n  }\r\n});\r\n\r\n// dist/ifc2x4.ts\r\nvar IFCACTIONREQUEST = 3821786052;\r\nvar IFCACTOR = 2296667514;\r\nvar IFCACTORROLE = 3630933823;\r\nvar IFCACTUATOR = 4288193352;\r\nvar IFCACTUATORTYPE = 2874132201;\r\nvar IFCADDRESS = 618182010;\r\nvar IFCADVANCEDBREP = 1635779807;\r\nvar IFCADVANCEDBREPWITHVOIDS = 2603310189;\r\nvar IFCADVANCEDFACE = 3406155212;\r\nvar IFCAIRTERMINAL = 1634111441;\r\nvar IFCAIRTERMINALBOX = 177149247;\r\nvar IFCAIRTERMINALBOXTYPE = 1411407467;\r\nvar IFCAIRTERMINALTYPE = 3352864051;\r\nvar IFCAIRTOAIRHEATRECOVERY = 2056796094;\r\nvar IFCAIRTOAIRHEATRECOVERYTYPE = 1871374353;\r\nvar IFCALARM = 3087945054;\r\nvar IFCALARMTYPE = 3001207471;\r\nvar IFCALIGNMENT = 325726236;\r\nvar IFCALIGNMENT2DHORIZONTAL = 749761778;\r\nvar IFCALIGNMENT2DHORIZONTALSEGMENT = 3199563722;\r\nvar IFCALIGNMENT2DSEGMENT = 2483840362;\r\nvar IFCALIGNMENT2DVERSEGCIRCULARARC = 3379348081;\r\nvar IFCALIGNMENT2DVERSEGLINE = 3239324667;\r\nvar IFCALIGNMENT2DVERSEGPARABOLICARC = 4263986512;\r\nvar IFCALIGNMENT2DVERTICAL = 53199957;\r\nvar IFCALIGNMENT2DVERTICALSEGMENT = 2029264950;\r\nvar IFCALIGNMENTCURVE = 3512275521;\r\nvar IFCANNOTATION = 1674181508;\r\nvar IFCANNOTATIONFILLAREA = 669184980;\r\nvar IFCAPPLICATION = 639542469;\r\nvar IFCAPPLIEDVALUE = 411424972;\r\nvar IFCAPPROVAL = 130549933;\r\nvar IFCAPPROVALRELATIONSHIP = 3869604511;\r\nvar IFCARBITRARYCLOSEDPROFILEDEF = 3798115385;\r\nvar IFCARBITRARYOPENPROFILEDEF = 1310608509;\r\nvar IFCARBITRARYPROFILEDEFWITHVOIDS = 2705031697;\r\nvar IFCASSET = 3460190687;\r\nvar IFCASYMMETRICISHAPEPROFILEDEF = 3207858831;\r\nvar IFCAUDIOVISUALAPPLIANCE = 277319702;\r\nvar IFCAUDIOVISUALAPPLIANCETYPE = 1532957894;\r\nvar IFCAXIS1PLACEMENT = 4261334040;\r\nvar IFCAXIS2PLACEMENT2D = 3125803723;\r\nvar IFCAXIS2PLACEMENT3D = 2740243338;\r\nvar IFCBSPLINECURVE = 1967976161;\r\nvar IFCBSPLINECURVEWITHKNOTS = 2461110595;\r\nvar IFCBSPLINESURFACE = 2887950389;\r\nvar IFCBSPLINESURFACEWITHKNOTS = 167062518;\r\nvar IFCBEAM = 753842376;\r\nvar IFCBEAMSTANDARDCASE = 2906023776;\r\nvar IFCBEAMTYPE = 819618141;\r\nvar IFCBEARING = 4196446775;\r\nvar IFCBEARINGTYPE = 3649138523;\r\nvar IFCBLOBTEXTURE = 616511568;\r\nvar IFCBLOCK = 1334484129;\r\nvar IFCBOILER = 32344328;\r\nvar IFCBOILERTYPE = 231477066;\r\nvar IFCBOOLEANCLIPPINGRESULT = 3649129432;\r\nvar IFCBOOLEANRESULT = 2736907675;\r\nvar IFCBOUNDARYCONDITION = 4037036970;\r\nvar IFCBOUNDARYCURVE = 1136057603;\r\nvar IFCBOUNDARYEDGECONDITION = 1560379544;\r\nvar IFCBOUNDARYFACECONDITION = 3367102660;\r\nvar IFCBOUNDARYNODECONDITION = 1387855156;\r\nvar IFCBOUNDARYNODECONDITIONWARPING = 2069777674;\r\nvar IFCBOUNDEDCURVE = 1260505505;\r\nvar IFCBOUNDEDSURFACE = 4182860854;\r\nvar IFCBOUNDINGBOX = 2581212453;\r\nvar IFCBOXEDHALFSPACE = 2713105998;\r\nvar IFCBRIDGE = 644574406;\r\nvar IFCBRIDGEPART = 963979645;\r\nvar IFCBUILDING = 4031249490;\r\nvar IFCBUILDINGELEMENT = 3299480353;\r\nvar IFCBUILDINGELEMENTPART = 2979338954;\r\nvar IFCBUILDINGELEMENTPARTTYPE = 39481116;\r\nvar IFCBUILDINGELEMENTPROXY = 1095909175;\r\nvar IFCBUILDINGELEMENTPROXYTYPE = 1909888760;\r\nvar IFCBUILDINGELEMENTTYPE = 1950629157;\r\nvar IFCBUILDINGSTOREY = 3124254112;\r\nvar IFCBUILDINGSYSTEM = 1177604601;\r\nvar IFCBURNER = 2938176219;\r\nvar IFCBURNERTYPE = 2188180465;\r\nvar IFCCSHAPEPROFILEDEF = 2898889636;\r\nvar IFCCABLECARRIERFITTING = 635142910;\r\nvar IFCCABLECARRIERFITTINGTYPE = 395041908;\r\nvar IFCCABLECARRIERSEGMENT = 3758799889;\r\nvar IFCCABLECARRIERSEGMENTTYPE = 3293546465;\r\nvar IFCCABLEFITTING = 1051757585;\r\nvar IFCCABLEFITTINGTYPE = 2674252688;\r\nvar IFCCABLESEGMENT = 4217484030;\r\nvar IFCCABLESEGMENTTYPE = 1285652485;\r\nvar IFCCAISSONFOUNDATION = 3999819293;\r\nvar IFCCAISSONFOUNDATIONTYPE = 3203706013;\r\nvar IFCCARTESIANPOINT = 1123145078;\r\nvar IFCCARTESIANPOINTLIST = 574549367;\r\nvar IFCCARTESIANPOINTLIST2D = 1675464909;\r\nvar IFCCARTESIANPOINTLIST3D = 2059837836;\r\nvar IFCCARTESIANTRANSFORMATIONOPERATOR = 59481748;\r\nvar IFCCARTESIANTRANSFORMATIONOPERATOR2D = 3749851601;\r\nvar IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM = 3486308946;\r\nvar IFCCARTESIANTRANSFORMATIONOPERATOR3D = 3331915920;\r\nvar IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM = 1416205885;\r\nvar IFCCENTERLINEPROFILEDEF = 3150382593;\r\nvar IFCCHILLER = 3902619387;\r\nvar IFCCHILLERTYPE = 2951183804;\r\nvar IFCCHIMNEY = 3296154744;\r\nvar IFCCHIMNEYTYPE = 2197970202;\r\nvar IFCCIRCLE = 2611217952;\r\nvar IFCCIRCLEHOLLOWPROFILEDEF = 2937912522;\r\nvar IFCCIRCLEPROFILEDEF = 1383045692;\r\nvar IFCCIRCULARARCSEGMENT2D = 1062206242;\r\nvar IFCCIVILELEMENT = 1677625105;\r\nvar IFCCIVILELEMENTTYPE = 3893394355;\r\nvar IFCCLASSIFICATION = 747523909;\r\nvar IFCCLASSIFICATIONREFERENCE = 647927063;\r\nvar IFCCLOSEDSHELL = 2205249479;\r\nvar IFCCOIL = 639361253;\r\nvar IFCCOILTYPE = 2301859152;\r\nvar IFCCOLOURRGB = 776857604;\r\nvar IFCCOLOURRGBLIST = 3285139300;\r\nvar IFCCOLOURSPECIFICATION = 3264961684;\r\nvar IFCCOLUMN = 843113511;\r\nvar IFCCOLUMNSTANDARDCASE = 905975707;\r\nvar IFCCOLUMNTYPE = 300633059;\r\nvar IFCCOMMUNICATIONSAPPLIANCE = 3221913625;\r\nvar IFCCOMMUNICATIONSAPPLIANCETYPE = 400855858;\r\nvar IFCCOMPLEXPROPERTY = 2542286263;\r\nvar IFCCOMPLEXPROPERTYTEMPLATE = 3875453745;\r\nvar IFCCOMPOSITECURVE = 3732776249;\r\nvar IFCCOMPOSITECURVEONSURFACE = 15328376;\r\nvar IFCCOMPOSITECURVESEGMENT = 2485617015;\r\nvar IFCCOMPOSITEPROFILEDEF = 1485152156;\r\nvar IFCCOMPRESSOR = 3571504051;\r\nvar IFCCOMPRESSORTYPE = 3850581409;\r\nvar IFCCONDENSER = 2272882330;\r\nvar IFCCONDENSERTYPE = 2816379211;\r\nvar IFCCONIC = 2510884976;\r\nvar IFCCONNECTEDFACESET = 370225590;\r\nvar IFCCONNECTIONCURVEGEOMETRY = 1981873012;\r\nvar IFCCONNECTIONGEOMETRY = 2859738748;\r\nvar IFCCONNECTIONPOINTECCENTRICITY = 45288368;\r\nvar IFCCONNECTIONPOINTGEOMETRY = 2614616156;\r\nvar IFCCONNECTIONSURFACEGEOMETRY = 2732653382;\r\nvar IFCCONNECTIONVOLUMEGEOMETRY = 775493141;\r\nvar IFCCONSTRAINT = 1959218052;\r\nvar IFCCONSTRUCTIONEQUIPMENTRESOURCE = 3898045240;\r\nvar IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE = 2185764099;\r\nvar IFCCONSTRUCTIONMATERIALRESOURCE = 1060000209;\r\nvar IFCCONSTRUCTIONMATERIALRESOURCETYPE = 4105962743;\r\nvar IFCCONSTRUCTIONPRODUCTRESOURCE = 488727124;\r\nvar IFCCONSTRUCTIONPRODUCTRESOURCETYPE = 1525564444;\r\nvar IFCCONSTRUCTIONRESOURCE = 2559216714;\r\nvar IFCCONSTRUCTIONRESOURCETYPE = 2574617495;\r\nvar IFCCONTEXT = 3419103109;\r\nvar IFCCONTEXTDEPENDENTUNIT = 3050246964;\r\nvar IFCCONTROL = 3293443760;\r\nvar IFCCONTROLLER = 25142252;\r\nvar IFCCONTROLLERTYPE = 578613899;\r\nvar IFCCONVERSIONBASEDUNIT = 2889183280;\r\nvar IFCCONVERSIONBASEDUNITWITHOFFSET = 2713554722;\r\nvar IFCCOOLEDBEAM = 4136498852;\r\nvar IFCCOOLEDBEAMTYPE = 335055490;\r\nvar IFCCOOLINGTOWER = 3640358203;\r\nvar IFCCOOLINGTOWERTYPE = 2954562838;\r\nvar IFCCOORDINATEOPERATION = 1785450214;\r\nvar IFCCOORDINATEREFERENCESYSTEM = 1466758467;\r\nvar IFCCOSTITEM = 3895139033;\r\nvar IFCCOSTSCHEDULE = 1419761937;\r\nvar IFCCOSTVALUE = 602808272;\r\nvar IFCCOVERING = 1973544240;\r\nvar IFCCOVERINGTYPE = 1916426348;\r\nvar IFCCREWRESOURCE = 3295246426;\r\nvar IFCCREWRESOURCETYPE = 1815067380;\r\nvar IFCCSGPRIMITIVE3D = 2506170314;\r\nvar IFCCSGSOLID = 2147822146;\r\nvar IFCCURRENCYRELATIONSHIP = 539742890;\r\nvar IFCCURTAINWALL = 3495092785;\r\nvar IFCCURTAINWALLTYPE = 1457835157;\r\nvar IFCCURVE = 2601014836;\r\nvar IFCCURVEBOUNDEDPLANE = 2827736869;\r\nvar IFCCURVEBOUNDEDSURFACE = 2629017746;\r\nvar IFCCURVESEGMENT2D = 1186437898;\r\nvar IFCCURVESTYLE = 3800577675;\r\nvar IFCCURVESTYLEFONT = 1105321065;\r\nvar IFCCURVESTYLEFONTANDSCALING = 2367409068;\r\nvar IFCCURVESTYLEFONTPATTERN = 3510044353;\r\nvar IFCCYLINDRICALSURFACE = 1213902940;\r\nvar IFCDAMPER = 4074379575;\r\nvar IFCDAMPERTYPE = 3961806047;\r\nvar IFCDEEPFOUNDATION = 3426335179;\r\nvar IFCDEEPFOUNDATIONTYPE = 1306400036;\r\nvar IFCDERIVEDPROFILEDEF = 3632507154;\r\nvar IFCDERIVEDUNIT = 1765591967;\r\nvar IFCDERIVEDUNITELEMENT = 1045800335;\r\nvar IFCDIMENSIONALEXPONENTS = 2949456006;\r\nvar IFCDIRECTION = 32440307;\r\nvar IFCDISCRETEACCESSORY = 1335981549;\r\nvar IFCDISCRETEACCESSORYTYPE = 2635815018;\r\nvar IFCDISTANCEEXPRESSION = 1945343521;\r\nvar IFCDISTRIBUTIONCHAMBERELEMENT = 1052013943;\r\nvar IFCDISTRIBUTIONCHAMBERELEMENTTYPE = 1599208980;\r\nvar IFCDISTRIBUTIONCIRCUIT = 562808652;\r\nvar IFCDISTRIBUTIONCONTROLELEMENT = 1062813311;\r\nvar IFCDISTRIBUTIONCONTROLELEMENTTYPE = 2063403501;\r\nvar IFCDISTRIBUTIONELEMENT = 1945004755;\r\nvar IFCDISTRIBUTIONELEMENTTYPE = 3256556792;\r\nvar IFCDISTRIBUTIONFLOWELEMENT = 3040386961;\r\nvar IFCDISTRIBUTIONFLOWELEMENTTYPE = 3849074793;\r\nvar IFCDISTRIBUTIONPORT = 3041715199;\r\nvar IFCDISTRIBUTIONSYSTEM = 3205830791;\r\nvar IFCDOCUMENTINFORMATION = 1154170062;\r\nvar IFCDOCUMENTINFORMATIONRELATIONSHIP = 770865208;\r\nvar IFCDOCUMENTREFERENCE = 3732053477;\r\nvar IFCDOOR = 395920057;\r\nvar IFCDOORLININGPROPERTIES = 2963535650;\r\nvar IFCDOORPANELPROPERTIES = 1714330368;\r\nvar IFCDOORSTANDARDCASE = 3242481149;\r\nvar IFCDOORSTYLE = 526551008;\r\nvar IFCDOORTYPE = 2323601079;\r\nvar IFCDRAUGHTINGPREDEFINEDCOLOUR = 445594917;\r\nvar IFCDRAUGHTINGPREDEFINEDCURVEFONT = 4006246654;\r\nvar IFCDUCTFITTING = 342316401;\r\nvar IFCDUCTFITTINGTYPE = 869906466;\r\nvar IFCDUCTSEGMENT = 3518393246;\r\nvar IFCDUCTSEGMENTTYPE = 3760055223;\r\nvar IFCDUCTSILENCER = 1360408905;\r\nvar IFCDUCTSILENCERTYPE = 2030761528;\r\nvar IFCEDGE = 3900360178;\r\nvar IFCEDGECURVE = 476780140;\r\nvar IFCEDGELOOP = 1472233963;\r\nvar IFCELECTRICAPPLIANCE = 1904799276;\r\nvar IFCELECTRICAPPLIANCETYPE = 663422040;\r\nvar IFCELECTRICDISTRIBUTIONBOARD = 862014818;\r\nvar IFCELECTRICDISTRIBUTIONBOARDTYPE = 2417008758;\r\nvar IFCELECTRICFLOWSTORAGEDEVICE = 3310460725;\r\nvar IFCELECTRICFLOWSTORAGEDEVICETYPE = 3277789161;\r\nvar IFCELECTRICGENERATOR = 264262732;\r\nvar IFCELECTRICGENERATORTYPE = 1534661035;\r\nvar IFCELECTRICMOTOR = 402227799;\r\nvar IFCELECTRICMOTORTYPE = 1217240411;\r\nvar IFCELECTRICTIMECONTROL = 1003880860;\r\nvar IFCELECTRICTIMECONTROLTYPE = 712377611;\r\nvar IFCELEMENT = 1758889154;\r\nvar IFCELEMENTASSEMBLY = 4123344466;\r\nvar IFCELEMENTASSEMBLYTYPE = 2397081782;\r\nvar IFCELEMENTCOMPONENT = 1623761950;\r\nvar IFCELEMENTCOMPONENTTYPE = 2590856083;\r\nvar IFCELEMENTQUANTITY = 1883228015;\r\nvar IFCELEMENTTYPE = 339256511;\r\nvar IFCELEMENTARYSURFACE = 2777663545;\r\nvar IFCELLIPSE = 1704287377;\r\nvar IFCELLIPSEPROFILEDEF = 2835456948;\r\nvar IFCENERGYCONVERSIONDEVICE = 1658829314;\r\nvar IFCENERGYCONVERSIONDEVICETYPE = 2107101300;\r\nvar IFCENGINE = 2814081492;\r\nvar IFCENGINETYPE = 132023988;\r\nvar IFCEVAPORATIVECOOLER = 3747195512;\r\nvar IFCEVAPORATIVECOOLERTYPE = 3174744832;\r\nvar IFCEVAPORATOR = 484807127;\r\nvar IFCEVAPORATORTYPE = 3390157468;\r\nvar IFCEVENT = 4148101412;\r\nvar IFCEVENTTIME = 211053100;\r\nvar IFCEVENTTYPE = 4024345920;\r\nvar IFCEXTENDEDPROPERTIES = 297599258;\r\nvar IFCEXTERNALINFORMATION = 4294318154;\r\nvar IFCEXTERNALREFERENCE = 3200245327;\r\nvar IFCEXTERNALREFERENCERELATIONSHIP = 1437805879;\r\nvar IFCEXTERNALSPATIALELEMENT = 1209101575;\r\nvar IFCEXTERNALSPATIALSTRUCTUREELEMENT = 2853485674;\r\nvar IFCEXTERNALLYDEFINEDHATCHSTYLE = 2242383968;\r\nvar IFCEXTERNALLYDEFINEDSURFACESTYLE = 1040185647;\r\nvar IFCEXTERNALLYDEFINEDTEXTFONT = 3548104201;\r\nvar IFCEXTRUDEDAREASOLID = 477187591;\r\nvar IFCEXTRUDEDAREASOLIDTAPERED = 2804161546;\r\nvar IFCFACE = 2556980723;\r\nvar IFCFACEBASEDSURFACEMODEL = 2047409740;\r\nvar IFCFACEBOUND = 1809719519;\r\nvar IFCFACEOUTERBOUND = 803316827;\r\nvar IFCFACESURFACE = 3008276851;\r\nvar IFCFACETEDBREP = 807026263;\r\nvar IFCFACETEDBREPWITHVOIDS = 3737207727;\r\nvar IFCFACILITY = 24185140;\r\nvar IFCFACILITYPART = 1310830890;\r\nvar IFCFAILURECONNECTIONCONDITION = 4219587988;\r\nvar IFCFAN = 3415622556;\r\nvar IFCFANTYPE = 346874300;\r\nvar IFCFASTENER = 647756555;\r\nvar IFCFASTENERTYPE = 2489546625;\r\nvar IFCFEATUREELEMENT = 2827207264;\r\nvar IFCFEATUREELEMENTADDITION = 2143335405;\r\nvar IFCFEATUREELEMENTSUBTRACTION = 1287392070;\r\nvar IFCFILLAREASTYLE = 738692330;\r\nvar IFCFILLAREASTYLEHATCHING = 374418227;\r\nvar IFCFILLAREASTYLETILES = 315944413;\r\nvar IFCFILTER = 819412036;\r\nvar IFCFILTERTYPE = 1810631287;\r\nvar IFCFIRESUPPRESSIONTERMINAL = 1426591983;\r\nvar IFCFIRESUPPRESSIONTERMINALTYPE = 4222183408;\r\nvar IFCFIXEDREFERENCESWEPTAREASOLID = 2652556860;\r\nvar IFCFLOWCONTROLLER = 2058353004;\r\nvar IFCFLOWCONTROLLERTYPE = 3907093117;\r\nvar IFCFLOWFITTING = 4278956645;\r\nvar IFCFLOWFITTINGTYPE = 3198132628;\r\nvar IFCFLOWINSTRUMENT = 182646315;\r\nvar IFCFLOWINSTRUMENTTYPE = 4037862832;\r\nvar IFCFLOWMETER = 2188021234;\r\nvar IFCFLOWMETERTYPE = 3815607619;\r\nvar IFCFLOWMOVINGDEVICE = 3132237377;\r\nvar IFCFLOWMOVINGDEVICETYPE = 1482959167;\r\nvar IFCFLOWSEGMENT = 987401354;\r\nvar IFCFLOWSEGMENTTYPE = 1834744321;\r\nvar IFCFLOWSTORAGEDEVICE = 707683696;\r\nvar IFCFLOWSTORAGEDEVICETYPE = 1339347760;\r\nvar IFCFLOWTERMINAL = 2223149337;\r\nvar IFCFLOWTERMINALTYPE = 2297155007;\r\nvar IFCFLOWTREATMENTDEVICE = 3508470533;\r\nvar IFCFLOWTREATMENTDEVICETYPE = 3009222698;\r\nvar IFCFOOTING = 900683007;\r\nvar IFCFOOTINGTYPE = 1893162501;\r\nvar IFCFURNISHINGELEMENT = 263784265;\r\nvar IFCFURNISHINGELEMENTTYPE = 4238390223;\r\nvar IFCFURNITURE = 1509553395;\r\nvar IFCFURNITURETYPE = 1268542332;\r\nvar IFCGEOGRAPHICELEMENT = 3493046030;\r\nvar IFCGEOGRAPHICELEMENTTYPE = 4095422895;\r\nvar IFCGEOMETRICCURVESET = 987898635;\r\nvar IFCGEOMETRICREPRESENTATIONCONTEXT = 3448662350;\r\nvar IFCGEOMETRICREPRESENTATIONITEM = 2453401579;\r\nvar IFCGEOMETRICREPRESENTATIONSUBCONTEXT = 4142052618;\r\nvar IFCGEOMETRICSET = 3590301190;\r\nvar IFCGRID = 3009204131;\r\nvar IFCGRIDAXIS = 852622518;\r\nvar IFCGRIDPLACEMENT = 178086475;\r\nvar IFCGROUP = 2706460486;\r\nvar IFCHALFSPACESOLID = 812098782;\r\nvar IFCHEATEXCHANGER = 3319311131;\r\nvar IFCHEATEXCHANGERTYPE = 1251058090;\r\nvar IFCHUMIDIFIER = 2068733104;\r\nvar IFCHUMIDIFIERTYPE = 1806887404;\r\nvar IFCISHAPEPROFILEDEF = 1484403080;\r\nvar IFCIMAGETEXTURE = 3905492369;\r\nvar IFCINDEXEDCOLOURMAP = 3570813810;\r\nvar IFCINDEXEDPOLYCURVE = 2571569899;\r\nvar IFCINDEXEDPOLYGONALFACE = 178912537;\r\nvar IFCINDEXEDPOLYGONALFACEWITHVOIDS = 2294589976;\r\nvar IFCINDEXEDTEXTUREMAP = 1437953363;\r\nvar IFCINDEXEDTRIANGLETEXTUREMAP = 2133299955;\r\nvar IFCINTERCEPTOR = 4175244083;\r\nvar IFCINTERCEPTORTYPE = 3946677679;\r\nvar IFCINTERSECTIONCURVE = 3113134337;\r\nvar IFCINVENTORY = 2391368822;\r\nvar IFCIRREGULARTIMESERIES = 3741457305;\r\nvar IFCIRREGULARTIMESERIESVALUE = 3020489413;\r\nvar IFCJUNCTIONBOX = 2176052936;\r\nvar IFCJUNCTIONBOXTYPE = 4288270099;\r\nvar IFCLSHAPEPROFILEDEF = 572779678;\r\nvar IFCLABORRESOURCE = 3827777499;\r\nvar IFCLABORRESOURCETYPE = 428585644;\r\nvar IFCLAGTIME = 1585845231;\r\nvar IFCLAMP = 76236018;\r\nvar IFCLAMPTYPE = 1051575348;\r\nvar IFCLIBRARYINFORMATION = 2655187982;\r\nvar IFCLIBRARYREFERENCE = 3452421091;\r\nvar IFCLIGHTDISTRIBUTIONDATA = 4162380809;\r\nvar IFCLIGHTFIXTURE = 629592764;\r\nvar IFCLIGHTFIXTURETYPE = 1161773419;\r\nvar IFCLIGHTINTENSITYDISTRIBUTION = 1566485204;\r\nvar IFCLIGHTSOURCE = 1402838566;\r\nvar IFCLIGHTSOURCEAMBIENT = 125510826;\r\nvar IFCLIGHTSOURCEDIRECTIONAL = 2604431987;\r\nvar IFCLIGHTSOURCEGONIOMETRIC = 4266656042;\r\nvar IFCLIGHTSOURCEPOSITIONAL = 1520743889;\r\nvar IFCLIGHTSOURCESPOT = 3422422726;\r\nvar IFCLINE = 1281925730;\r\nvar IFCLINESEGMENT2D = 3092502836;\r\nvar IFCLINEARPLACEMENT = 388784114;\r\nvar IFCLINEARPOSITIONINGELEMENT = 1154579445;\r\nvar IFCLOCALPLACEMENT = 2624227202;\r\nvar IFCLOOP = 1008929658;\r\nvar IFCMANIFOLDSOLIDBREP = 1425443689;\r\nvar IFCMAPCONVERSION = 3057273783;\r\nvar IFCMAPPEDITEM = 2347385850;\r\nvar IFCMATERIAL = 1838606355;\r\nvar IFCMATERIALCLASSIFICATIONRELATIONSHIP = 1847130766;\r\nvar IFCMATERIALCONSTITUENT = 3708119e3;\r\nvar IFCMATERIALCONSTITUENTSET = 2852063980;\r\nvar IFCMATERIALDEFINITION = 760658860;\r\nvar IFCMATERIALDEFINITIONREPRESENTATION = 2022407955;\r\nvar IFCMATERIALLAYER = 248100487;\r\nvar IFCMATERIALLAYERSET = 3303938423;\r\nvar IFCMATERIALLAYERSETUSAGE = 1303795690;\r\nvar IFCMATERIALLAYERWITHOFFSETS = 1847252529;\r\nvar IFCMATERIALLIST = 2199411900;\r\nvar IFCMATERIALPROFILE = 2235152071;\r\nvar IFCMATERIALPROFILESET = 164193824;\r\nvar IFCMATERIALPROFILESETUSAGE = 3079605661;\r\nvar IFCMATERIALPROFILESETUSAGETAPERING = 3404854881;\r\nvar IFCMATERIALPROFILEWITHOFFSETS = 552965576;\r\nvar IFCMATERIALPROPERTIES = 3265635763;\r\nvar IFCMATERIALRELATIONSHIP = 853536259;\r\nvar IFCMATERIALUSAGEDEFINITION = 1507914824;\r\nvar IFCMEASUREWITHUNIT = 2597039031;\r\nvar IFCMECHANICALFASTENER = 377706215;\r\nvar IFCMECHANICALFASTENERTYPE = 2108223431;\r\nvar IFCMEDICALDEVICE = 1437502449;\r\nvar IFCMEDICALDEVICETYPE = 1114901282;\r\nvar IFCMEMBER = 1073191201;\r\nvar IFCMEMBERSTANDARDCASE = 1911478936;\r\nvar IFCMEMBERTYPE = 3181161470;\r\nvar IFCMETRIC = 3368373690;\r\nvar IFCMIRROREDPROFILEDEF = 2998442950;\r\nvar IFCMONETARYUNIT = 2706619895;\r\nvar IFCMOTORCONNECTION = 2474470126;\r\nvar IFCMOTORCONNECTIONTYPE = 977012517;\r\nvar IFCNAMEDUNIT = 1918398963;\r\nvar IFCOBJECT = 3888040117;\r\nvar IFCOBJECTDEFINITION = 219451334;\r\nvar IFCOBJECTPLACEMENT = 3701648758;\r\nvar IFCOBJECTIVE = 2251480897;\r\nvar IFCOCCUPANT = 4143007308;\r\nvar IFCOFFSETCURVE = 590820931;\r\nvar IFCOFFSETCURVE2D = 3388369263;\r\nvar IFCOFFSETCURVE3D = 3505215534;\r\nvar IFCOFFSETCURVEBYDISTANCES = 2485787929;\r\nvar IFCOPENSHELL = 2665983363;\r\nvar IFCOPENINGELEMENT = 3588315303;\r\nvar IFCOPENINGSTANDARDCASE = 3079942009;\r\nvar IFCORGANIZATION = 4251960020;\r\nvar IFCORGANIZATIONRELATIONSHIP = 1411181986;\r\nvar IFCORIENTATIONEXPRESSION = 643959842;\r\nvar IFCORIENTEDEDGE = 1029017970;\r\nvar IFCOUTERBOUNDARYCURVE = 144952367;\r\nvar IFCOUTLET = 3694346114;\r\nvar IFCOUTLETTYPE = 2837617999;\r\nvar IFCOWNERHISTORY = 1207048766;\r\nvar IFCPARAMETERIZEDPROFILEDEF = 2529465313;\r\nvar IFCPATH = 2519244187;\r\nvar IFCPCURVE = 1682466193;\r\nvar IFCPERFORMANCEHISTORY = 2382730787;\r\nvar IFCPERMEABLECOVERINGPROPERTIES = 3566463478;\r\nvar IFCPERMIT = 3327091369;\r\nvar IFCPERSON = 2077209135;\r\nvar IFCPERSONANDORGANIZATION = 101040310;\r\nvar IFCPHYSICALCOMPLEXQUANTITY = 3021840470;\r\nvar IFCPHYSICALQUANTITY = 2483315170;\r\nvar IFCPHYSICALSIMPLEQUANTITY = 2226359599;\r\nvar IFCPILE = 1687234759;\r\nvar IFCPILETYPE = 1158309216;\r\nvar IFCPIPEFITTING = 310824031;\r\nvar IFCPIPEFITTINGTYPE = 804291784;\r\nvar IFCPIPESEGMENT = 3612865200;\r\nvar IFCPIPESEGMENTTYPE = 4231323485;\r\nvar IFCPIXELTEXTURE = 597895409;\r\nvar IFCPLACEMENT = 2004835150;\r\nvar IFCPLANARBOX = 603570806;\r\nvar IFCPLANAREXTENT = 1663979128;\r\nvar IFCPLANE = 220341763;\r\nvar IFCPLATE = 3171933400;\r\nvar IFCPLATESTANDARDCASE = 1156407060;\r\nvar IFCPLATETYPE = 4017108033;\r\nvar IFCPOINT = 2067069095;\r\nvar IFCPOINTONCURVE = 4022376103;\r\nvar IFCPOINTONSURFACE = 1423911732;\r\nvar IFCPOLYLOOP = 2924175390;\r\nvar IFCPOLYGONALBOUNDEDHALFSPACE = 2775532180;\r\nvar IFCPOLYGONALFACESET = 2839578677;\r\nvar IFCPOLYLINE = 3724593414;\r\nvar IFCPORT = 3740093272;\r\nvar IFCPOSITIONINGELEMENT = 1946335990;\r\nvar IFCPOSTALADDRESS = 3355820592;\r\nvar IFCPREDEFINEDCOLOUR = 759155922;\r\nvar IFCPREDEFINEDCURVEFONT = 2559016684;\r\nvar IFCPREDEFINEDITEM = 3727388367;\r\nvar IFCPREDEFINEDPROPERTIES = 3778827333;\r\nvar IFCPREDEFINEDPROPERTYSET = 3967405729;\r\nvar IFCPREDEFINEDTEXTFONT = 1775413392;\r\nvar IFCPRESENTATIONITEM = 677532197;\r\nvar IFCPRESENTATIONLAYERASSIGNMENT = 2022622350;\r\nvar IFCPRESENTATIONLAYERWITHSTYLE = 1304840413;\r\nvar IFCPRESENTATIONSTYLE = 3119450353;\r\nvar IFCPRESENTATIONSTYLEASSIGNMENT = 2417041796;\r\nvar IFCPROCEDURE = 2744685151;\r\nvar IFCPROCEDURETYPE = 569719735;\r\nvar IFCPROCESS = 2945172077;\r\nvar IFCPRODUCT = 4208778838;\r\nvar IFCPRODUCTDEFINITIONSHAPE = 673634403;\r\nvar IFCPRODUCTREPRESENTATION = 2095639259;\r\nvar IFCPROFILEDEF = 3958567839;\r\nvar IFCPROFILEPROPERTIES = 2802850158;\r\nvar IFCPROJECT = 103090709;\r\nvar IFCPROJECTLIBRARY = 653396225;\r\nvar IFCPROJECTORDER = 2904328755;\r\nvar IFCPROJECTEDCRS = 3843373140;\r\nvar IFCPROJECTIONELEMENT = 3651124850;\r\nvar IFCPROPERTY = 2598011224;\r\nvar IFCPROPERTYABSTRACTION = 986844984;\r\nvar IFCPROPERTYBOUNDEDVALUE = 871118103;\r\nvar IFCPROPERTYDEFINITION = 1680319473;\r\nvar IFCPROPERTYDEPENDENCYRELATIONSHIP = 148025276;\r\nvar IFCPROPERTYENUMERATEDVALUE = 4166981789;\r\nvar IFCPROPERTYENUMERATION = 3710013099;\r\nvar IFCPROPERTYLISTVALUE = 2752243245;\r\nvar IFCPROPERTYREFERENCEVALUE = 941946838;\r\nvar IFCPROPERTYSET = 1451395588;\r\nvar IFCPROPERTYSETDEFINITION = 3357820518;\r\nvar IFCPROPERTYSETTEMPLATE = 492091185;\r\nvar IFCPROPERTYSINGLEVALUE = 3650150729;\r\nvar IFCPROPERTYTABLEVALUE = 110355661;\r\nvar IFCPROPERTYTEMPLATE = 3521284610;\r\nvar IFCPROPERTYTEMPLATEDEFINITION = 1482703590;\r\nvar IFCPROTECTIVEDEVICE = 738039164;\r\nvar IFCPROTECTIVEDEVICETRIPPINGUNIT = 2295281155;\r\nvar IFCPROTECTIVEDEVICETRIPPINGUNITTYPE = 655969474;\r\nvar IFCPROTECTIVEDEVICETYPE = 1842657554;\r\nvar IFCPROXY = 3219374653;\r\nvar IFCPUMP = 90941305;\r\nvar IFCPUMPTYPE = 2250791053;\r\nvar IFCQUANTITYAREA = 2044713172;\r\nvar IFCQUANTITYCOUNT = 2093928680;\r\nvar IFCQUANTITYLENGTH = 931644368;\r\nvar IFCQUANTITYSET = 2090586900;\r\nvar IFCQUANTITYTIME = 3252649465;\r\nvar IFCQUANTITYVOLUME = 2405470396;\r\nvar IFCQUANTITYWEIGHT = 825690147;\r\nvar IFCRAILING = 2262370178;\r\nvar IFCRAILINGTYPE = 2893384427;\r\nvar IFCRAMP = 3024970846;\r\nvar IFCRAMPFLIGHT = 3283111854;\r\nvar IFCRAMPFLIGHTTYPE = 2324767716;\r\nvar IFCRAMPTYPE = 1469900589;\r\nvar IFCRATIONALBSPLINECURVEWITHKNOTS = 1232101972;\r\nvar IFCRATIONALBSPLINESURFACEWITHKNOTS = 683857671;\r\nvar IFCRECTANGLEHOLLOWPROFILEDEF = 2770003689;\r\nvar IFCRECTANGLEPROFILEDEF = 3615266464;\r\nvar IFCRECTANGULARPYRAMID = 2798486643;\r\nvar IFCRECTANGULARTRIMMEDSURFACE = 3454111270;\r\nvar IFCRECURRENCEPATTERN = 3915482550;\r\nvar IFCREFERENCE = 2433181523;\r\nvar IFCREFERENT = 4021432810;\r\nvar IFCREGULARTIMESERIES = 3413951693;\r\nvar IFCREINFORCEMENTBARPROPERTIES = 1580146022;\r\nvar IFCREINFORCEMENTDEFINITIONPROPERTIES = 3765753017;\r\nvar IFCREINFORCINGBAR = 979691226;\r\nvar IFCREINFORCINGBARTYPE = 2572171363;\r\nvar IFCREINFORCINGELEMENT = 3027567501;\r\nvar IFCREINFORCINGELEMENTTYPE = 964333572;\r\nvar IFCREINFORCINGMESH = 2320036040;\r\nvar IFCREINFORCINGMESHTYPE = 2310774935;\r\nvar IFCRELAGGREGATES = 160246688;\r\nvar IFCRELASSIGNS = 3939117080;\r\nvar IFCRELASSIGNSTOACTOR = 1683148259;\r\nvar IFCRELASSIGNSTOCONTROL = 2495723537;\r\nvar IFCRELASSIGNSTOGROUP = 1307041759;\r\nvar IFCRELASSIGNSTOGROUPBYFACTOR = 1027710054;\r\nvar IFCRELASSIGNSTOPROCESS = 4278684876;\r\nvar IFCRELASSIGNSTOPRODUCT = 2857406711;\r\nvar IFCRELASSIGNSTORESOURCE = 205026976;\r\nvar IFCRELASSOCIATES = 1865459582;\r\nvar IFCRELASSOCIATESAPPROVAL = 4095574036;\r\nvar IFCRELASSOCIATESCLASSIFICATION = 919958153;\r\nvar IFCRELASSOCIATESCONSTRAINT = 2728634034;\r\nvar IFCRELASSOCIATESDOCUMENT = 982818633;\r\nvar IFCRELASSOCIATESLIBRARY = 3840914261;\r\nvar IFCRELASSOCIATESMATERIAL = 2655215786;\r\nvar IFCRELCONNECTS = 826625072;\r\nvar IFCRELCONNECTSELEMENTS = 1204542856;\r\nvar IFCRELCONNECTSPATHELEMENTS = 3945020480;\r\nvar IFCRELCONNECTSPORTTOELEMENT = 4201705270;\r\nvar IFCRELCONNECTSPORTS = 3190031847;\r\nvar IFCRELCONNECTSSTRUCTURALACTIVITY = 2127690289;\r\nvar IFCRELCONNECTSSTRUCTURALMEMBER = 1638771189;\r\nvar IFCRELCONNECTSWITHECCENTRICITY = 504942748;\r\nvar IFCRELCONNECTSWITHREALIZINGELEMENTS = 3678494232;\r\nvar IFCRELCONTAINEDINSPATIALSTRUCTURE = 3242617779;\r\nvar IFCRELCOVERSBLDGELEMENTS = 886880790;\r\nvar IFCRELCOVERSSPACES = 2802773753;\r\nvar IFCRELDECLARES = 2565941209;\r\nvar IFCRELDECOMPOSES = 2551354335;\r\nvar IFCRELDEFINES = 693640335;\r\nvar IFCRELDEFINESBYOBJECT = 1462361463;\r\nvar IFCRELDEFINESBYPROPERTIES = 4186316022;\r\nvar IFCRELDEFINESBYTEMPLATE = 307848117;\r\nvar IFCRELDEFINESBYTYPE = 781010003;\r\nvar IFCRELFILLSELEMENT = 3940055652;\r\nvar IFCRELFLOWCONTROLELEMENTS = 279856033;\r\nvar IFCRELINTERFERESELEMENTS = 427948657;\r\nvar IFCRELNESTS = 3268803585;\r\nvar IFCRELPOSITIONS = 1441486842;\r\nvar IFCRELPROJECTSELEMENT = 750771296;\r\nvar IFCRELREFERENCEDINSPATIALSTRUCTURE = 1245217292;\r\nvar IFCRELSEQUENCE = 4122056220;\r\nvar IFCRELSERVICESBUILDINGS = 366585022;\r\nvar IFCRELSPACEBOUNDARY = 3451746338;\r\nvar IFCRELSPACEBOUNDARY1STLEVEL = 3523091289;\r\nvar IFCRELSPACEBOUNDARY2NDLEVEL = 1521410863;\r\nvar IFCRELVOIDSELEMENT = 1401173127;\r\nvar IFCRELATIONSHIP = 478536968;\r\nvar IFCREPARAMETRISEDCOMPOSITECURVESEGMENT = 816062949;\r\nvar IFCREPRESENTATION = 1076942058;\r\nvar IFCREPRESENTATIONCONTEXT = 3377609919;\r\nvar IFCREPRESENTATIONITEM = 3008791417;\r\nvar IFCREPRESENTATIONMAP = 1660063152;\r\nvar IFCRESOURCE = 2914609552;\r\nvar IFCRESOURCEAPPROVALRELATIONSHIP = 2943643501;\r\nvar IFCRESOURCECONSTRAINTRELATIONSHIP = 1608871552;\r\nvar IFCRESOURCELEVELRELATIONSHIP = 2439245199;\r\nvar IFCRESOURCETIME = 1042787934;\r\nvar IFCREVOLVEDAREASOLID = 1856042241;\r\nvar IFCREVOLVEDAREASOLIDTAPERED = 3243963512;\r\nvar IFCRIGHTCIRCULARCONE = 4158566097;\r\nvar IFCRIGHTCIRCULARCYLINDER = 3626867408;\r\nvar IFCROOF = 2016517767;\r\nvar IFCROOFTYPE = 2781568857;\r\nvar IFCROOT = 2341007311;\r\nvar IFCROUNDEDRECTANGLEPROFILEDEF = 2778083089;\r\nvar IFCSIUNIT = 448429030;\r\nvar IFCSANITARYTERMINAL = 3053780830;\r\nvar IFCSANITARYTERMINALTYPE = 1768891740;\r\nvar IFCSCHEDULINGTIME = 1054537805;\r\nvar IFCSEAMCURVE = 2157484638;\r\nvar IFCSECTIONPROPERTIES = 2042790032;\r\nvar IFCSECTIONREINFORCEMENTPROPERTIES = 4165799628;\r\nvar IFCSECTIONEDSOLID = 1862484736;\r\nvar IFCSECTIONEDSOLIDHORIZONTAL = 1290935644;\r\nvar IFCSECTIONEDSPINE = 1509187699;\r\nvar IFCSENSOR = 4086658281;\r\nvar IFCSENSORTYPE = 1783015770;\r\nvar IFCSHADINGDEVICE = 1329646415;\r\nvar IFCSHADINGDEVICETYPE = 4074543187;\r\nvar IFCSHAPEASPECT = 867548509;\r\nvar IFCSHAPEMODEL = 3982875396;\r\nvar IFCSHAPEREPRESENTATION = 4240577450;\r\nvar IFCSHELLBASEDSURFACEMODEL = 4124623270;\r\nvar IFCSIMPLEPROPERTY = 3692461612;\r\nvar IFCSIMPLEPROPERTYTEMPLATE = 3663146110;\r\nvar IFCSITE = 4097777520;\r\nvar IFCSLAB = 1529196076;\r\nvar IFCSLABELEMENTEDCASE = 3127900445;\r\nvar IFCSLABSTANDARDCASE = 3027962421;\r\nvar IFCSLABTYPE = 2533589738;\r\nvar IFCSLIPPAGECONNECTIONCONDITION = 2609359061;\r\nvar IFCSOLARDEVICE = 3420628829;\r\nvar IFCSOLARDEVICETYPE = 1072016465;\r\nvar IFCSOLIDMODEL = 723233188;\r\nvar IFCSPACE = 3856911033;\r\nvar IFCSPACEHEATER = 1999602285;\r\nvar IFCSPACEHEATERTYPE = 1305183839;\r\nvar IFCSPACETYPE = 3812236995;\r\nvar IFCSPATIALELEMENT = 1412071761;\r\nvar IFCSPATIALELEMENTTYPE = 710998568;\r\nvar IFCSPATIALSTRUCTUREELEMENT = 2706606064;\r\nvar IFCSPATIALSTRUCTUREELEMENTTYPE = 3893378262;\r\nvar IFCSPATIALZONE = 463610769;\r\nvar IFCSPATIALZONETYPE = 2481509218;\r\nvar IFCSPHERE = 451544542;\r\nvar IFCSPHERICALSURFACE = 4015995234;\r\nvar IFCSTACKTERMINAL = 1404847402;\r\nvar IFCSTACKTERMINALTYPE = 3112655638;\r\nvar IFCSTAIR = 331165859;\r\nvar IFCSTAIRFLIGHT = 4252922144;\r\nvar IFCSTAIRFLIGHTTYPE = 1039846685;\r\nvar IFCSTAIRTYPE = 338393293;\r\nvar IFCSTRUCTURALACTION = 682877961;\r\nvar IFCSTRUCTURALACTIVITY = 3544373492;\r\nvar IFCSTRUCTURALANALYSISMODEL = 2515109513;\r\nvar IFCSTRUCTURALCONNECTION = 1179482911;\r\nvar IFCSTRUCTURALCONNECTIONCONDITION = 2273995522;\r\nvar IFCSTRUCTURALCURVEACTION = 1004757350;\r\nvar IFCSTRUCTURALCURVECONNECTION = 4243806635;\r\nvar IFCSTRUCTURALCURVEMEMBER = 214636428;\r\nvar IFCSTRUCTURALCURVEMEMBERVARYING = 2445595289;\r\nvar IFCSTRUCTURALCURVEREACTION = 2757150158;\r\nvar IFCSTRUCTURALITEM = 3136571912;\r\nvar IFCSTRUCTURALLINEARACTION = 1807405624;\r\nvar IFCSTRUCTURALLOAD = 2162789131;\r\nvar IFCSTRUCTURALLOADCASE = 385403989;\r\nvar IFCSTRUCTURALLOADCONFIGURATION = 3478079324;\r\nvar IFCSTRUCTURALLOADGROUP = 1252848954;\r\nvar IFCSTRUCTURALLOADLINEARFORCE = 1595516126;\r\nvar IFCSTRUCTURALLOADORRESULT = 609421318;\r\nvar IFCSTRUCTURALLOADPLANARFORCE = 2668620305;\r\nvar IFCSTRUCTURALLOADSINGLEDISPLACEMENT = 2473145415;\r\nvar IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION = 1973038258;\r\nvar IFCSTRUCTURALLOADSINGLEFORCE = 1597423693;\r\nvar IFCSTRUCTURALLOADSINGLEFORCEWARPING = 1190533807;\r\nvar IFCSTRUCTURALLOADSTATIC = 2525727697;\r\nvar IFCSTRUCTURALLOADTEMPERATURE = 3408363356;\r\nvar IFCSTRUCTURALMEMBER = 530289379;\r\nvar IFCSTRUCTURALPLANARACTION = 1621171031;\r\nvar IFCSTRUCTURALPOINTACTION = 2082059205;\r\nvar IFCSTRUCTURALPOINTCONNECTION = 734778138;\r\nvar IFCSTRUCTURALPOINTREACTION = 1235345126;\r\nvar IFCSTRUCTURALREACTION = 3689010777;\r\nvar IFCSTRUCTURALRESULTGROUP = 2986769608;\r\nvar IFCSTRUCTURALSURFACEACTION = 3657597509;\r\nvar IFCSTRUCTURALSURFACECONNECTION = 1975003073;\r\nvar IFCSTRUCTURALSURFACEMEMBER = 3979015343;\r\nvar IFCSTRUCTURALSURFACEMEMBERVARYING = 2218152070;\r\nvar IFCSTRUCTURALSURFACEREACTION = 603775116;\r\nvar IFCSTYLEMODEL = 2830218821;\r\nvar IFCSTYLEDITEM = 3958052878;\r\nvar IFCSTYLEDREPRESENTATION = 3049322572;\r\nvar IFCSUBCONTRACTRESOURCE = 148013059;\r\nvar IFCSUBCONTRACTRESOURCETYPE = 4095615324;\r\nvar IFCSUBEDGE = 2233826070;\r\nvar IFCSURFACE = 2513912981;\r\nvar IFCSURFACECURVE = 699246055;\r\nvar IFCSURFACECURVESWEPTAREASOLID = 2028607225;\r\nvar IFCSURFACEFEATURE = 3101698114;\r\nvar IFCSURFACEOFLINEAREXTRUSION = 2809605785;\r\nvar IFCSURFACEOFREVOLUTION = 4124788165;\r\nvar IFCSURFACEREINFORCEMENTAREA = 2934153892;\r\nvar IFCSURFACESTYLE = 1300840506;\r\nvar IFCSURFACESTYLELIGHTING = 3303107099;\r\nvar IFCSURFACESTYLEREFRACTION = 1607154358;\r\nvar IFCSURFACESTYLERENDERING = 1878645084;\r\nvar IFCSURFACESTYLESHADING = 846575682;\r\nvar IFCSURFACESTYLEWITHTEXTURES = 1351298697;\r\nvar IFCSURFACETEXTURE = 626085974;\r\nvar IFCSWEPTAREASOLID = 2247615214;\r\nvar IFCSWEPTDISKSOLID = 1260650574;\r\nvar IFCSWEPTDISKSOLIDPOLYGONAL = 1096409881;\r\nvar IFCSWEPTSURFACE = 230924584;\r\nvar IFCSWITCHINGDEVICE = 1162798199;\r\nvar IFCSWITCHINGDEVICETYPE = 2315554128;\r\nvar IFCSYSTEM = 2254336722;\r\nvar IFCSYSTEMFURNITUREELEMENT = 413509423;\r\nvar IFCSYSTEMFURNITUREELEMENTTYPE = 1580310250;\r\nvar IFCTSHAPEPROFILEDEF = 3071757647;\r\nvar IFCTABLE = 985171141;\r\nvar IFCTABLECOLUMN = 2043862942;\r\nvar IFCTABLEROW = 531007025;\r\nvar IFCTANK = 812556717;\r\nvar IFCTANKTYPE = 5716631;\r\nvar IFCTASK = 3473067441;\r\nvar IFCTASKTIME = 1549132990;\r\nvar IFCTASKTIMERECURRING = 2771591690;\r\nvar IFCTASKTYPE = 3206491090;\r\nvar IFCTELECOMADDRESS = 912023232;\r\nvar IFCTENDON = 3824725483;\r\nvar IFCTENDONANCHOR = 2347447852;\r\nvar IFCTENDONANCHORTYPE = 3081323446;\r\nvar IFCTENDONCONDUIT = 3663046924;\r\nvar IFCTENDONCONDUITTYPE = 2281632017;\r\nvar IFCTENDONTYPE = 2415094496;\r\nvar IFCTESSELLATEDFACESET = 2387106220;\r\nvar IFCTESSELLATEDITEM = 901063453;\r\nvar IFCTEXTLITERAL = 4282788508;\r\nvar IFCTEXTLITERALWITHEXTENT = 3124975700;\r\nvar IFCTEXTSTYLE = 1447204868;\r\nvar IFCTEXTSTYLEFONTMODEL = 1983826977;\r\nvar IFCTEXTSTYLEFORDEFINEDFONT = 2636378356;\r\nvar IFCTEXTSTYLETEXTMODEL = 1640371178;\r\nvar IFCTEXTURECOORDINATE = 280115917;\r\nvar IFCTEXTURECOORDINATEGENERATOR = 1742049831;\r\nvar IFCTEXTUREMAP = 2552916305;\r\nvar IFCTEXTUREVERTEX = 1210645708;\r\nvar IFCTEXTUREVERTEXLIST = 3611470254;\r\nvar IFCTIMEPERIOD = 1199560280;\r\nvar IFCTIMESERIES = 3101149627;\r\nvar IFCTIMESERIESVALUE = 581633288;\r\nvar IFCTOPOLOGICALREPRESENTATIONITEM = 1377556343;\r\nvar IFCTOPOLOGYREPRESENTATION = 1735638870;\r\nvar IFCTOROIDALSURFACE = 1935646853;\r\nvar IFCTRANSFORMER = 3825984169;\r\nvar IFCTRANSFORMERTYPE = 1692211062;\r\nvar IFCTRANSITIONCURVESEGMENT2D = 2595432518;\r\nvar IFCTRANSPORTELEMENT = 1620046519;\r\nvar IFCTRANSPORTELEMENTTYPE = 2097647324;\r\nvar IFCTRAPEZIUMPROFILEDEF = 2715220739;\r\nvar IFCTRIANGULATEDFACESET = 2916149573;\r\nvar IFCTRIANGULATEDIRREGULARNETWORK = 1229763772;\r\nvar IFCTRIMMEDCURVE = 3593883385;\r\nvar IFCTUBEBUNDLE = 3026737570;\r\nvar IFCTUBEBUNDLETYPE = 1600972822;\r\nvar IFCTYPEOBJECT = 1628702193;\r\nvar IFCTYPEPROCESS = 3736923433;\r\nvar IFCTYPEPRODUCT = 2347495698;\r\nvar IFCTYPERESOURCE = 3698973494;\r\nvar IFCUSHAPEPROFILEDEF = 427810014;\r\nvar IFCUNITASSIGNMENT = 180925521;\r\nvar IFCUNITARYCONTROLELEMENT = 630975310;\r\nvar IFCUNITARYCONTROLELEMENTTYPE = 3179687236;\r\nvar IFCUNITARYEQUIPMENT = 4292641817;\r\nvar IFCUNITARYEQUIPMENTTYPE = 1911125066;\r\nvar IFCVALVE = 4207607924;\r\nvar IFCVALVETYPE = 728799441;\r\nvar IFCVECTOR = 1417489154;\r\nvar IFCVERTEX = 2799835756;\r\nvar IFCVERTEXLOOP = 2759199220;\r\nvar IFCVERTEXPOINT = 1907098498;\r\nvar IFCVIBRATIONDAMPER = 1530820697;\r\nvar IFCVIBRATIONDAMPERTYPE = 3956297820;\r\nvar IFCVIBRATIONISOLATOR = 2391383451;\r\nvar IFCVIBRATIONISOLATORTYPE = 3313531582;\r\nvar IFCVIRTUALELEMENT = 2769231204;\r\nvar IFCVIRTUALGRIDINTERSECTION = 891718957;\r\nvar IFCVOIDINGFEATURE = 926996030;\r\nvar IFCWALL = 2391406946;\r\nvar IFCWALLELEMENTEDCASE = 4156078855;\r\nvar IFCWALLSTANDARDCASE = 3512223829;\r\nvar IFCWALLTYPE = 1898987631;\r\nvar IFCWASTETERMINAL = 4237592921;\r\nvar IFCWASTETERMINALTYPE = 1133259667;\r\nvar IFCWINDOW = 3304561284;\r\nvar IFCWINDOWLININGPROPERTIES = 336235671;\r\nvar IFCWINDOWPANELPROPERTIES = 512836454;\r\nvar IFCWINDOWSTANDARDCASE = 486154966;\r\nvar IFCWINDOWSTYLE = 1299126871;\r\nvar IFCWINDOWTYPE = 4009809668;\r\nvar IFCWORKCALENDAR = 4088093105;\r\nvar IFCWORKCONTROL = 1028945134;\r\nvar IFCWORKPLAN = 4218914973;\r\nvar IFCWORKSCHEDULE = 3342526732;\r\nvar IFCWORKTIME = 1236880293;\r\nvar IFCZSHAPEPROFILEDEF = 2543172580;\r\nvar IFCZONE = 1033361043;\r\nvar IfcElements = [\r\n  4288193352,\r\n  1634111441,\r\n  177149247,\r\n  2056796094,\r\n  3087945054,\r\n  277319702,\r\n  753842376,\r\n  2906023776,\r\n  32344328,\r\n  2979338954,\r\n  1095909175,\r\n  2938176219,\r\n  635142910,\r\n  3758799889,\r\n  1051757585,\r\n  4217484030,\r\n  3902619387,\r\n  3296154744,\r\n  1677625105,\r\n  639361253,\r\n  843113511,\r\n  905975707,\r\n  3221913625,\r\n  3571504051,\r\n  2272882330,\r\n  25142252,\r\n  4136498852,\r\n  3640358203,\r\n  1973544240,\r\n  3495092785,\r\n  4074379575,\r\n  1335981549,\r\n  1052013943,\r\n  1062813311,\r\n  1945004755,\r\n  3040386961,\r\n  395920057,\r\n  3242481149,\r\n  342316401,\r\n  3518393246,\r\n  1360408905,\r\n  1904799276,\r\n  862014818,\r\n  3310460725,\r\n  264262732,\r\n  402227799,\r\n  1003880860,\r\n  4123344466,\r\n  1658829314,\r\n  2814081492,\r\n  3747195512,\r\n  484807127,\r\n  3415622556,\r\n  647756555,\r\n  819412036,\r\n  1426591983,\r\n  2058353004,\r\n  4278956645,\r\n  182646315,\r\n  2188021234,\r\n  3132237377,\r\n  987401354,\r\n  707683696,\r\n  2223149337,\r\n  3508470533,\r\n  900683007,\r\n  263784265,\r\n  1509553395,\r\n  3493046030,\r\n  3319311131,\r\n  2068733104,\r\n  4175244083,\r\n  2176052936,\r\n  76236018,\r\n  629592764,\r\n  377706215,\r\n  1437502449,\r\n  1073191201,\r\n  1911478936,\r\n  2474470126,\r\n  3588315303,\r\n  3079942009,\r\n  3694346114,\r\n  1687234759,\r\n  310824031,\r\n  3612865200,\r\n  3171933400,\r\n  1156407060,\r\n  3651124850,\r\n  738039164,\r\n  2295281155,\r\n  90941305,\r\n  2262370178,\r\n  3024970846,\r\n  3283111854,\r\n  979691226,\r\n  2320036040,\r\n  2016517767,\r\n  3053780830,\r\n  4086658281,\r\n  1329646415,\r\n  1529196076,\r\n  3127900445,\r\n  3027962421,\r\n  3420628829,\r\n  1999602285,\r\n  1404847402,\r\n  331165859,\r\n  4252922144,\r\n  3101698114,\r\n  1162798199,\r\n  413509423,\r\n  812556717,\r\n  3824725483,\r\n  2347447852,\r\n  3825984169,\r\n  1620046519,\r\n  3026737570,\r\n  630975310,\r\n  4292641817,\r\n  4207607924,\r\n  2391383451,\r\n  2769231204,\r\n  926996030,\r\n  2391406946,\r\n  4156078855,\r\n  3512223829,\r\n  4237592921,\r\n  3304561284,\r\n  486154966\r\n];\r\n\r\n// dist/ifc2x4_helper.ts\r\nvar FromRawLineData = {};\r\nFromRawLineData[IFCACTIONREQUEST] = (d) => {\r\n  return IfcActionRequest.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCACTOR] = (d) => {\r\n  return IfcActor.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCACTORROLE] = (d) => {\r\n  return IfcActorRole.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCACTUATOR] = (d) => {\r\n  return IfcActuator.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCACTUATORTYPE] = (d) => {\r\n  return IfcActuatorType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCADDRESS] = (d) => {\r\n  return IfcAddress.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCADVANCEDBREP] = (d) => {\r\n  return IfcAdvancedBrep.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCADVANCEDBREPWITHVOIDS] = (d) => {\r\n  return IfcAdvancedBrepWithVoids.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCADVANCEDFACE] = (d) => {\r\n  return IfcAdvancedFace.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCAIRTERMINAL] = (d) => {\r\n  return IfcAirTerminal.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCAIRTERMINALBOX] = (d) => {\r\n  return IfcAirTerminalBox.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCAIRTERMINALBOXTYPE] = (d) => {\r\n  return IfcAirTerminalBoxType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCAIRTERMINALTYPE] = (d) => {\r\n  return IfcAirTerminalType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCAIRTOAIRHEATRECOVERY] = (d) => {\r\n  return IfcAirToAirHeatRecovery.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCAIRTOAIRHEATRECOVERYTYPE] = (d) => {\r\n  return IfcAirToAirHeatRecoveryType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCALARM] = (d) => {\r\n  return IfcAlarm.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCALARMTYPE] = (d) => {\r\n  return IfcAlarmType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCALIGNMENT] = (d) => {\r\n  return IfcAlignment.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCALIGNMENT2DHORIZONTAL] = (d) => {\r\n  return IfcAlignment2DHorizontal.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCALIGNMENT2DHORIZONTALSEGMENT] = (d) => {\r\n  return IfcAlignment2DHorizontalSegment.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCALIGNMENT2DSEGMENT] = (d) => {\r\n  return IfcAlignment2DSegment.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCALIGNMENT2DVERSEGCIRCULARARC] = (d) => {\r\n  return IfcAlignment2DVerSegCircularArc.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCALIGNMENT2DVERSEGLINE] = (d) => {\r\n  return IfcAlignment2DVerSegLine.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCALIGNMENT2DVERSEGPARABOLICARC] = (d) => {\r\n  return IfcAlignment2DVerSegParabolicArc.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCALIGNMENT2DVERTICAL] = (d) => {\r\n  return IfcAlignment2DVertical.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCALIGNMENT2DVERTICALSEGMENT] = (d) => {\r\n  return IfcAlignment2DVerticalSegment.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCALIGNMENTCURVE] = (d) => {\r\n  return IfcAlignmentCurve.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCANNOTATION] = (d) => {\r\n  return IfcAnnotation.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCANNOTATIONFILLAREA] = (d) => {\r\n  return IfcAnnotationFillArea.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCAPPLICATION] = (d) => {\r\n  return IfcApplication.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCAPPLIEDVALUE] = (d) => {\r\n  return IfcAppliedValue.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCAPPROVAL] = (d) => {\r\n  return IfcApproval.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCAPPROVALRELATIONSHIP] = (d) => {\r\n  return IfcApprovalRelationship.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCARBITRARYCLOSEDPROFILEDEF] = (d) => {\r\n  return IfcArbitraryClosedProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCARBITRARYOPENPROFILEDEF] = (d) => {\r\n  return IfcArbitraryOpenProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCARBITRARYPROFILEDEFWITHVOIDS] = (d) => {\r\n  return IfcArbitraryProfileDefWithVoids.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCASSET] = (d) => {\r\n  return IfcAsset.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCASYMMETRICISHAPEPROFILEDEF] = (d) => {\r\n  return IfcAsymmetricIShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCAUDIOVISUALAPPLIANCE] = (d) => {\r\n  return IfcAudioVisualAppliance.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCAUDIOVISUALAPPLIANCETYPE] = (d) => {\r\n  return IfcAudioVisualApplianceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCAXIS1PLACEMENT] = (d) => {\r\n  return IfcAxis1Placement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCAXIS2PLACEMENT2D] = (d) => {\r\n  return IfcAxis2Placement2D.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCAXIS2PLACEMENT3D] = (d) => {\r\n  return IfcAxis2Placement3D.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBSPLINECURVE] = (d) => {\r\n  return IfcBSplineCurve.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBSPLINECURVEWITHKNOTS] = (d) => {\r\n  return IfcBSplineCurveWithKnots.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBSPLINESURFACE] = (d) => {\r\n  return IfcBSplineSurface.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBSPLINESURFACEWITHKNOTS] = (d) => {\r\n  return IfcBSplineSurfaceWithKnots.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBEAM] = (d) => {\r\n  return IfcBeam.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBEAMSTANDARDCASE] = (d) => {\r\n  return IfcBeamStandardCase.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBEAMTYPE] = (d) => {\r\n  return IfcBeamType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBEARING] = (d) => {\r\n  return IfcBearing.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBEARINGTYPE] = (d) => {\r\n  return IfcBearingType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBLOBTEXTURE] = (d) => {\r\n  return IfcBlobTexture.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBLOCK] = (d) => {\r\n  return IfcBlock.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBOILER] = (d) => {\r\n  return IfcBoiler.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBOILERTYPE] = (d) => {\r\n  return IfcBoilerType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBOOLEANCLIPPINGRESULT] = (d) => {\r\n  return IfcBooleanClippingResult.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBOOLEANRESULT] = (d) => {\r\n  return IfcBooleanResult.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBOUNDARYCONDITION] = (d) => {\r\n  return IfcBoundaryCondition.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBOUNDARYCURVE] = (d) => {\r\n  return IfcBoundaryCurve.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBOUNDARYEDGECONDITION] = (d) => {\r\n  return IfcBoundaryEdgeCondition.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBOUNDARYFACECONDITION] = (d) => {\r\n  return IfcBoundaryFaceCondition.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBOUNDARYNODECONDITION] = (d) => {\r\n  return IfcBoundaryNodeCondition.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBOUNDARYNODECONDITIONWARPING] = (d) => {\r\n  return IfcBoundaryNodeConditionWarping.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBOUNDEDCURVE] = (d) => {\r\n  return IfcBoundedCurve.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBOUNDEDSURFACE] = (d) => {\r\n  return IfcBoundedSurface.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBOUNDINGBOX] = (d) => {\r\n  return IfcBoundingBox.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBOXEDHALFSPACE] = (d) => {\r\n  return IfcBoxedHalfSpace.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBRIDGE] = (d) => {\r\n  return IfcBridge.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBRIDGEPART] = (d) => {\r\n  return IfcBridgePart.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBUILDING] = (d) => {\r\n  return IfcBuilding.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBUILDINGELEMENT] = (d) => {\r\n  return IfcBuildingElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBUILDINGELEMENTPART] = (d) => {\r\n  return IfcBuildingElementPart.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBUILDINGELEMENTPARTTYPE] = (d) => {\r\n  return IfcBuildingElementPartType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBUILDINGELEMENTPROXY] = (d) => {\r\n  return IfcBuildingElementProxy.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBUILDINGELEMENTPROXYTYPE] = (d) => {\r\n  return IfcBuildingElementProxyType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBUILDINGELEMENTTYPE] = (d) => {\r\n  return IfcBuildingElementType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBUILDINGSTOREY] = (d) => {\r\n  return IfcBuildingStorey.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBUILDINGSYSTEM] = (d) => {\r\n  return IfcBuildingSystem.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBURNER] = (d) => {\r\n  return IfcBurner.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCBURNERTYPE] = (d) => {\r\n  return IfcBurnerType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCSHAPEPROFILEDEF] = (d) => {\r\n  return IfcCShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCABLECARRIERFITTING] = (d) => {\r\n  return IfcCableCarrierFitting.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCABLECARRIERFITTINGTYPE] = (d) => {\r\n  return IfcCableCarrierFittingType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCABLECARRIERSEGMENT] = (d) => {\r\n  return IfcCableCarrierSegment.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCABLECARRIERSEGMENTTYPE] = (d) => {\r\n  return IfcCableCarrierSegmentType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCABLEFITTING] = (d) => {\r\n  return IfcCableFitting.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCABLEFITTINGTYPE] = (d) => {\r\n  return IfcCableFittingType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCABLESEGMENT] = (d) => {\r\n  return IfcCableSegment.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCABLESEGMENTTYPE] = (d) => {\r\n  return IfcCableSegmentType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCAISSONFOUNDATION] = (d) => {\r\n  return IfcCaissonFoundation.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCAISSONFOUNDATIONTYPE] = (d) => {\r\n  return IfcCaissonFoundationType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCARTESIANPOINT] = (d) => {\r\n  return IfcCartesianPoint.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCARTESIANPOINTLIST] = (d) => {\r\n  return IfcCartesianPointList.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCARTESIANPOINTLIST2D] = (d) => {\r\n  return IfcCartesianPointList2D.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCARTESIANPOINTLIST3D] = (d) => {\r\n  return IfcCartesianPointList3D.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR] = (d) => {\r\n  return IfcCartesianTransformationOperator.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR2D] = (d) => {\r\n  return IfcCartesianTransformationOperator2D.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM] = (d) => {\r\n  return IfcCartesianTransformationOperator2DnonUniform.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR3D] = (d) => {\r\n  return IfcCartesianTransformationOperator3D.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM] = (d) => {\r\n  return IfcCartesianTransformationOperator3DnonUniform.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCENTERLINEPROFILEDEF] = (d) => {\r\n  return IfcCenterLineProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCHILLER] = (d) => {\r\n  return IfcChiller.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCHILLERTYPE] = (d) => {\r\n  return IfcChillerType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCHIMNEY] = (d) => {\r\n  return IfcChimney.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCHIMNEYTYPE] = (d) => {\r\n  return IfcChimneyType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCIRCLE] = (d) => {\r\n  return IfcCircle.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCIRCLEHOLLOWPROFILEDEF] = (d) => {\r\n  return IfcCircleHollowProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCIRCLEPROFILEDEF] = (d) => {\r\n  return IfcCircleProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCIRCULARARCSEGMENT2D] = (d) => {\r\n  return IfcCircularArcSegment2D.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCIVILELEMENT] = (d) => {\r\n  return IfcCivilElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCIVILELEMENTTYPE] = (d) => {\r\n  return IfcCivilElementType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCLASSIFICATION] = (d) => {\r\n  return IfcClassification.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCLASSIFICATIONREFERENCE] = (d) => {\r\n  return IfcClassificationReference.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCLOSEDSHELL] = (d) => {\r\n  return IfcClosedShell.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOIL] = (d) => {\r\n  return IfcCoil.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOILTYPE] = (d) => {\r\n  return IfcCoilType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOLOURRGB] = (d) => {\r\n  return IfcColourRgb.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOLOURRGBLIST] = (d) => {\r\n  return IfcColourRgbList.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOLOURSPECIFICATION] = (d) => {\r\n  return IfcColourSpecification.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOLUMN] = (d) => {\r\n  return IfcColumn.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOLUMNSTANDARDCASE] = (d) => {\r\n  return IfcColumnStandardCase.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOLUMNTYPE] = (d) => {\r\n  return IfcColumnType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOMMUNICATIONSAPPLIANCE] = (d) => {\r\n  return IfcCommunicationsAppliance.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOMMUNICATIONSAPPLIANCETYPE] = (d) => {\r\n  return IfcCommunicationsApplianceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOMPLEXPROPERTY] = (d) => {\r\n  return IfcComplexProperty.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOMPLEXPROPERTYTEMPLATE] = (d) => {\r\n  return IfcComplexPropertyTemplate.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOMPOSITECURVE] = (d) => {\r\n  return IfcCompositeCurve.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOMPOSITECURVEONSURFACE] = (d) => {\r\n  return IfcCompositeCurveOnSurface.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOMPOSITECURVESEGMENT] = (d) => {\r\n  return IfcCompositeCurveSegment.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOMPOSITEPROFILEDEF] = (d) => {\r\n  return IfcCompositeProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOMPRESSOR] = (d) => {\r\n  return IfcCompressor.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOMPRESSORTYPE] = (d) => {\r\n  return IfcCompressorType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONDENSER] = (d) => {\r\n  return IfcCondenser.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONDENSERTYPE] = (d) => {\r\n  return IfcCondenserType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONIC] = (d) => {\r\n  return IfcConic.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONNECTEDFACESET] = (d) => {\r\n  return IfcConnectedFaceSet.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONNECTIONCURVEGEOMETRY] = (d) => {\r\n  return IfcConnectionCurveGeometry.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONNECTIONGEOMETRY] = (d) => {\r\n  return IfcConnectionGeometry.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONNECTIONPOINTECCENTRICITY] = (d) => {\r\n  return IfcConnectionPointEccentricity.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONNECTIONPOINTGEOMETRY] = (d) => {\r\n  return IfcConnectionPointGeometry.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONNECTIONSURFACEGEOMETRY] = (d) => {\r\n  return IfcConnectionSurfaceGeometry.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONNECTIONVOLUMEGEOMETRY] = (d) => {\r\n  return IfcConnectionVolumeGeometry.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONSTRAINT] = (d) => {\r\n  return IfcConstraint.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONSTRUCTIONEQUIPMENTRESOURCE] = (d) => {\r\n  return IfcConstructionEquipmentResource.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE] = (d) => {\r\n  return IfcConstructionEquipmentResourceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONSTRUCTIONMATERIALRESOURCE] = (d) => {\r\n  return IfcConstructionMaterialResource.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONSTRUCTIONMATERIALRESOURCETYPE] = (d) => {\r\n  return IfcConstructionMaterialResourceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONSTRUCTIONPRODUCTRESOURCE] = (d) => {\r\n  return IfcConstructionProductResource.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONSTRUCTIONPRODUCTRESOURCETYPE] = (d) => {\r\n  return IfcConstructionProductResourceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONSTRUCTIONRESOURCE] = (d) => {\r\n  return IfcConstructionResource.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONSTRUCTIONRESOURCETYPE] = (d) => {\r\n  return IfcConstructionResourceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONTEXT] = (d) => {\r\n  return IfcContext.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONTEXTDEPENDENTUNIT] = (d) => {\r\n  return IfcContextDependentUnit.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONTROL] = (d) => {\r\n  return IfcControl.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONTROLLER] = (d) => {\r\n  return IfcController.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONTROLLERTYPE] = (d) => {\r\n  return IfcControllerType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONVERSIONBASEDUNIT] = (d) => {\r\n  return IfcConversionBasedUnit.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCONVERSIONBASEDUNITWITHOFFSET] = (d) => {\r\n  return IfcConversionBasedUnitWithOffset.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOOLEDBEAM] = (d) => {\r\n  return IfcCooledBeam.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOOLEDBEAMTYPE] = (d) => {\r\n  return IfcCooledBeamType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOOLINGTOWER] = (d) => {\r\n  return IfcCoolingTower.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOOLINGTOWERTYPE] = (d) => {\r\n  return IfcCoolingTowerType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOORDINATEOPERATION] = (d) => {\r\n  return IfcCoordinateOperation.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOORDINATEREFERENCESYSTEM] = (d) => {\r\n  return IfcCoordinateReferenceSystem.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOSTITEM] = (d) => {\r\n  return IfcCostItem.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOSTSCHEDULE] = (d) => {\r\n  return IfcCostSchedule.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOSTVALUE] = (d) => {\r\n  return IfcCostValue.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOVERING] = (d) => {\r\n  return IfcCovering.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCOVERINGTYPE] = (d) => {\r\n  return IfcCoveringType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCREWRESOURCE] = (d) => {\r\n  return IfcCrewResource.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCREWRESOURCETYPE] = (d) => {\r\n  return IfcCrewResourceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCSGPRIMITIVE3D] = (d) => {\r\n  return IfcCsgPrimitive3D.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCSGSOLID] = (d) => {\r\n  return IfcCsgSolid.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCURRENCYRELATIONSHIP] = (d) => {\r\n  return IfcCurrencyRelationship.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCURTAINWALL] = (d) => {\r\n  return IfcCurtainWall.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCURTAINWALLTYPE] = (d) => {\r\n  return IfcCurtainWallType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCURVE] = (d) => {\r\n  return IfcCurve.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCURVEBOUNDEDPLANE] = (d) => {\r\n  return IfcCurveBoundedPlane.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCURVEBOUNDEDSURFACE] = (d) => {\r\n  return IfcCurveBoundedSurface.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCURVESEGMENT2D] = (d) => {\r\n  return IfcCurveSegment2D.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCURVESTYLE] = (d) => {\r\n  return IfcCurveStyle.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCURVESTYLEFONT] = (d) => {\r\n  return IfcCurveStyleFont.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCURVESTYLEFONTANDSCALING] = (d) => {\r\n  return IfcCurveStyleFontAndScaling.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCURVESTYLEFONTPATTERN] = (d) => {\r\n  return IfcCurveStyleFontPattern.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCCYLINDRICALSURFACE] = (d) => {\r\n  return IfcCylindricalSurface.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDAMPER] = (d) => {\r\n  return IfcDamper.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDAMPERTYPE] = (d) => {\r\n  return IfcDamperType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDEEPFOUNDATION] = (d) => {\r\n  return IfcDeepFoundation.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDEEPFOUNDATIONTYPE] = (d) => {\r\n  return IfcDeepFoundationType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDERIVEDPROFILEDEF] = (d) => {\r\n  return IfcDerivedProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDERIVEDUNIT] = (d) => {\r\n  return IfcDerivedUnit.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDERIVEDUNITELEMENT] = (d) => {\r\n  return IfcDerivedUnitElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDIMENSIONALEXPONENTS] = (d) => {\r\n  return IfcDimensionalExponents.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDIRECTION] = (d) => {\r\n  return IfcDirection.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDISCRETEACCESSORY] = (d) => {\r\n  return IfcDiscreteAccessory.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDISCRETEACCESSORYTYPE] = (d) => {\r\n  return IfcDiscreteAccessoryType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDISTANCEEXPRESSION] = (d) => {\r\n  return IfcDistanceExpression.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDISTRIBUTIONCHAMBERELEMENT] = (d) => {\r\n  return IfcDistributionChamberElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDISTRIBUTIONCHAMBERELEMENTTYPE] = (d) => {\r\n  return IfcDistributionChamberElementType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDISTRIBUTIONCIRCUIT] = (d) => {\r\n  return IfcDistributionCircuit.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDISTRIBUTIONCONTROLELEMENT] = (d) => {\r\n  return IfcDistributionControlElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDISTRIBUTIONCONTROLELEMENTTYPE] = (d) => {\r\n  return IfcDistributionControlElementType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDISTRIBUTIONELEMENT] = (d) => {\r\n  return IfcDistributionElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDISTRIBUTIONELEMENTTYPE] = (d) => {\r\n  return IfcDistributionElementType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDISTRIBUTIONFLOWELEMENT] = (d) => {\r\n  return IfcDistributionFlowElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDISTRIBUTIONFLOWELEMENTTYPE] = (d) => {\r\n  return IfcDistributionFlowElementType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDISTRIBUTIONPORT] = (d) => {\r\n  return IfcDistributionPort.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDISTRIBUTIONSYSTEM] = (d) => {\r\n  return IfcDistributionSystem.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDOCUMENTINFORMATION] = (d) => {\r\n  return IfcDocumentInformation.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDOCUMENTINFORMATIONRELATIONSHIP] = (d) => {\r\n  return IfcDocumentInformationRelationship.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDOCUMENTREFERENCE] = (d) => {\r\n  return IfcDocumentReference.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDOOR] = (d) => {\r\n  return IfcDoor.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDOORLININGPROPERTIES] = (d) => {\r\n  return IfcDoorLiningProperties.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDOORPANELPROPERTIES] = (d) => {\r\n  return IfcDoorPanelProperties.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDOORSTANDARDCASE] = (d) => {\r\n  return IfcDoorStandardCase.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDOORSTYLE] = (d) => {\r\n  return IfcDoorStyle.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDOORTYPE] = (d) => {\r\n  return IfcDoorType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDRAUGHTINGPREDEFINEDCOLOUR] = (d) => {\r\n  return IfcDraughtingPreDefinedColour.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDRAUGHTINGPREDEFINEDCURVEFONT] = (d) => {\r\n  return IfcDraughtingPreDefinedCurveFont.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDUCTFITTING] = (d) => {\r\n  return IfcDuctFitting.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDUCTFITTINGTYPE] = (d) => {\r\n  return IfcDuctFittingType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDUCTSEGMENT] = (d) => {\r\n  return IfcDuctSegment.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDUCTSEGMENTTYPE] = (d) => {\r\n  return IfcDuctSegmentType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDUCTSILENCER] = (d) => {\r\n  return IfcDuctSilencer.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCDUCTSILENCERTYPE] = (d) => {\r\n  return IfcDuctSilencerType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEDGE] = (d) => {\r\n  return IfcEdge.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEDGECURVE] = (d) => {\r\n  return IfcEdgeCurve.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEDGELOOP] = (d) => {\r\n  return IfcEdgeLoop.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELECTRICAPPLIANCE] = (d) => {\r\n  return IfcElectricAppliance.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELECTRICAPPLIANCETYPE] = (d) => {\r\n  return IfcElectricApplianceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELECTRICDISTRIBUTIONBOARD] = (d) => {\r\n  return IfcElectricDistributionBoard.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELECTRICDISTRIBUTIONBOARDTYPE] = (d) => {\r\n  return IfcElectricDistributionBoardType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELECTRICFLOWSTORAGEDEVICE] = (d) => {\r\n  return IfcElectricFlowStorageDevice.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELECTRICFLOWSTORAGEDEVICETYPE] = (d) => {\r\n  return IfcElectricFlowStorageDeviceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELECTRICGENERATOR] = (d) => {\r\n  return IfcElectricGenerator.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELECTRICGENERATORTYPE] = (d) => {\r\n  return IfcElectricGeneratorType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELECTRICMOTOR] = (d) => {\r\n  return IfcElectricMotor.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELECTRICMOTORTYPE] = (d) => {\r\n  return IfcElectricMotorType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELECTRICTIMECONTROL] = (d) => {\r\n  return IfcElectricTimeControl.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELECTRICTIMECONTROLTYPE] = (d) => {\r\n  return IfcElectricTimeControlType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELEMENT] = (d) => {\r\n  return IfcElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELEMENTASSEMBLY] = (d) => {\r\n  return IfcElementAssembly.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELEMENTASSEMBLYTYPE] = (d) => {\r\n  return IfcElementAssemblyType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELEMENTCOMPONENT] = (d) => {\r\n  return IfcElementComponent.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELEMENTCOMPONENTTYPE] = (d) => {\r\n  return IfcElementComponentType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELEMENTQUANTITY] = (d) => {\r\n  return IfcElementQuantity.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELEMENTTYPE] = (d) => {\r\n  return IfcElementType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELEMENTARYSURFACE] = (d) => {\r\n  return IfcElementarySurface.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELLIPSE] = (d) => {\r\n  return IfcEllipse.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCELLIPSEPROFILEDEF] = (d) => {\r\n  return IfcEllipseProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCENERGYCONVERSIONDEVICE] = (d) => {\r\n  return IfcEnergyConversionDevice.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCENERGYCONVERSIONDEVICETYPE] = (d) => {\r\n  return IfcEnergyConversionDeviceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCENGINE] = (d) => {\r\n  return IfcEngine.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCENGINETYPE] = (d) => {\r\n  return IfcEngineType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEVAPORATIVECOOLER] = (d) => {\r\n  return IfcEvaporativeCooler.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEVAPORATIVECOOLERTYPE] = (d) => {\r\n  return IfcEvaporativeCoolerType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEVAPORATOR] = (d) => {\r\n  return IfcEvaporator.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEVAPORATORTYPE] = (d) => {\r\n  return IfcEvaporatorType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEVENT] = (d) => {\r\n  return IfcEvent.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEVENTTIME] = (d) => {\r\n  return IfcEventTime.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEVENTTYPE] = (d) => {\r\n  return IfcEventType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEXTENDEDPROPERTIES] = (d) => {\r\n  return IfcExtendedProperties.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEXTERNALINFORMATION] = (d) => {\r\n  return IfcExternalInformation.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEXTERNALREFERENCE] = (d) => {\r\n  return IfcExternalReference.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEXTERNALREFERENCERELATIONSHIP] = (d) => {\r\n  return IfcExternalReferenceRelationship.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEXTERNALSPATIALELEMENT] = (d) => {\r\n  return IfcExternalSpatialElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEXTERNALSPATIALSTRUCTUREELEMENT] = (d) => {\r\n  return IfcExternalSpatialStructureElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEXTERNALLYDEFINEDHATCHSTYLE] = (d) => {\r\n  return IfcExternallyDefinedHatchStyle.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEXTERNALLYDEFINEDSURFACESTYLE] = (d) => {\r\n  return IfcExternallyDefinedSurfaceStyle.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEXTERNALLYDEFINEDTEXTFONT] = (d) => {\r\n  return IfcExternallyDefinedTextFont.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEXTRUDEDAREASOLID] = (d) => {\r\n  return IfcExtrudedAreaSolid.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCEXTRUDEDAREASOLIDTAPERED] = (d) => {\r\n  return IfcExtrudedAreaSolidTapered.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFACE] = (d) => {\r\n  return IfcFace.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFACEBASEDSURFACEMODEL] = (d) => {\r\n  return IfcFaceBasedSurfaceModel.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFACEBOUND] = (d) => {\r\n  return IfcFaceBound.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFACEOUTERBOUND] = (d) => {\r\n  return IfcFaceOuterBound.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFACESURFACE] = (d) => {\r\n  return IfcFaceSurface.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFACETEDBREP] = (d) => {\r\n  return IfcFacetedBrep.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFACETEDBREPWITHVOIDS] = (d) => {\r\n  return IfcFacetedBrepWithVoids.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFACILITY] = (d) => {\r\n  return IfcFacility.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFACILITYPART] = (d) => {\r\n  return IfcFacilityPart.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFAILURECONNECTIONCONDITION] = (d) => {\r\n  return IfcFailureConnectionCondition.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFAN] = (d) => {\r\n  return IfcFan.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFANTYPE] = (d) => {\r\n  return IfcFanType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFASTENER] = (d) => {\r\n  return IfcFastener.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFASTENERTYPE] = (d) => {\r\n  return IfcFastenerType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFEATUREELEMENT] = (d) => {\r\n  return IfcFeatureElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFEATUREELEMENTADDITION] = (d) => {\r\n  return IfcFeatureElementAddition.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFEATUREELEMENTSUBTRACTION] = (d) => {\r\n  return IfcFeatureElementSubtraction.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFILLAREASTYLE] = (d) => {\r\n  return IfcFillAreaStyle.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFILLAREASTYLEHATCHING] = (d) => {\r\n  return IfcFillAreaStyleHatching.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFILLAREASTYLETILES] = (d) => {\r\n  return IfcFillAreaStyleTiles.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFILTER] = (d) => {\r\n  return IfcFilter.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFILTERTYPE] = (d) => {\r\n  return IfcFilterType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFIRESUPPRESSIONTERMINAL] = (d) => {\r\n  return IfcFireSuppressionTerminal.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFIRESUPPRESSIONTERMINALTYPE] = (d) => {\r\n  return IfcFireSuppressionTerminalType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFIXEDREFERENCESWEPTAREASOLID] = (d) => {\r\n  return IfcFixedReferenceSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFLOWCONTROLLER] = (d) => {\r\n  return IfcFlowController.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFLOWCONTROLLERTYPE] = (d) => {\r\n  return IfcFlowControllerType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFLOWFITTING] = (d) => {\r\n  return IfcFlowFitting.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFLOWFITTINGTYPE] = (d) => {\r\n  return IfcFlowFittingType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFLOWINSTRUMENT] = (d) => {\r\n  return IfcFlowInstrument.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFLOWINSTRUMENTTYPE] = (d) => {\r\n  return IfcFlowInstrumentType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFLOWMETER] = (d) => {\r\n  return IfcFlowMeter.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFLOWMETERTYPE] = (d) => {\r\n  return IfcFlowMeterType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFLOWMOVINGDEVICE] = (d) => {\r\n  return IfcFlowMovingDevice.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFLOWMOVINGDEVICETYPE] = (d) => {\r\n  return IfcFlowMovingDeviceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFLOWSEGMENT] = (d) => {\r\n  return IfcFlowSegment.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFLOWSEGMENTTYPE] = (d) => {\r\n  return IfcFlowSegmentType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFLOWSTORAGEDEVICE] = (d) => {\r\n  return IfcFlowStorageDevice.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFLOWSTORAGEDEVICETYPE] = (d) => {\r\n  return IfcFlowStorageDeviceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFLOWTERMINAL] = (d) => {\r\n  return IfcFlowTerminal.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFLOWTERMINALTYPE] = (d) => {\r\n  return IfcFlowTerminalType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFLOWTREATMENTDEVICE] = (d) => {\r\n  return IfcFlowTreatmentDevice.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFLOWTREATMENTDEVICETYPE] = (d) => {\r\n  return IfcFlowTreatmentDeviceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFOOTING] = (d) => {\r\n  return IfcFooting.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFOOTINGTYPE] = (d) => {\r\n  return IfcFootingType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFURNISHINGELEMENT] = (d) => {\r\n  return IfcFurnishingElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFURNISHINGELEMENTTYPE] = (d) => {\r\n  return IfcFurnishingElementType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFURNITURE] = (d) => {\r\n  return IfcFurniture.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCFURNITURETYPE] = (d) => {\r\n  return IfcFurnitureType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCGEOGRAPHICELEMENT] = (d) => {\r\n  return IfcGeographicElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCGEOGRAPHICELEMENTTYPE] = (d) => {\r\n  return IfcGeographicElementType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCGEOMETRICCURVESET] = (d) => {\r\n  return IfcGeometricCurveSet.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCGEOMETRICREPRESENTATIONCONTEXT] = (d) => {\r\n  return IfcGeometricRepresentationContext.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCGEOMETRICREPRESENTATIONITEM] = (d) => {\r\n  return IfcGeometricRepresentationItem.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCGEOMETRICREPRESENTATIONSUBCONTEXT] = (d) => {\r\n  return IfcGeometricRepresentationSubContext.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCGEOMETRICSET] = (d) => {\r\n  return IfcGeometricSet.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCGRID] = (d) => {\r\n  return IfcGrid.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCGRIDAXIS] = (d) => {\r\n  return IfcGridAxis.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCGRIDPLACEMENT] = (d) => {\r\n  return IfcGridPlacement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCGROUP] = (d) => {\r\n  return IfcGroup.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCHALFSPACESOLID] = (d) => {\r\n  return IfcHalfSpaceSolid.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCHEATEXCHANGER] = (d) => {\r\n  return IfcHeatExchanger.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCHEATEXCHANGERTYPE] = (d) => {\r\n  return IfcHeatExchangerType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCHUMIDIFIER] = (d) => {\r\n  return IfcHumidifier.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCHUMIDIFIERTYPE] = (d) => {\r\n  return IfcHumidifierType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCISHAPEPROFILEDEF] = (d) => {\r\n  return IfcIShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCIMAGETEXTURE] = (d) => {\r\n  return IfcImageTexture.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCINDEXEDCOLOURMAP] = (d) => {\r\n  return IfcIndexedColourMap.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCINDEXEDPOLYCURVE] = (d) => {\r\n  return IfcIndexedPolyCurve.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCINDEXEDPOLYGONALFACE] = (d) => {\r\n  return IfcIndexedPolygonalFace.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCINDEXEDPOLYGONALFACEWITHVOIDS] = (d) => {\r\n  return IfcIndexedPolygonalFaceWithVoids.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCINDEXEDTEXTUREMAP] = (d) => {\r\n  return IfcIndexedTextureMap.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCINDEXEDTRIANGLETEXTUREMAP] = (d) => {\r\n  return IfcIndexedTriangleTextureMap.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCINTERCEPTOR] = (d) => {\r\n  return IfcInterceptor.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCINTERCEPTORTYPE] = (d) => {\r\n  return IfcInterceptorType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCINTERSECTIONCURVE] = (d) => {\r\n  return IfcIntersectionCurve.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCINVENTORY] = (d) => {\r\n  return IfcInventory.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCIRREGULARTIMESERIES] = (d) => {\r\n  return IfcIrregularTimeSeries.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCIRREGULARTIMESERIESVALUE] = (d) => {\r\n  return IfcIrregularTimeSeriesValue.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCJUNCTIONBOX] = (d) => {\r\n  return IfcJunctionBox.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCJUNCTIONBOXTYPE] = (d) => {\r\n  return IfcJunctionBoxType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLSHAPEPROFILEDEF] = (d) => {\r\n  return IfcLShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLABORRESOURCE] = (d) => {\r\n  return IfcLaborResource.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLABORRESOURCETYPE] = (d) => {\r\n  return IfcLaborResourceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLAGTIME] = (d) => {\r\n  return IfcLagTime.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLAMP] = (d) => {\r\n  return IfcLamp.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLAMPTYPE] = (d) => {\r\n  return IfcLampType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLIBRARYINFORMATION] = (d) => {\r\n  return IfcLibraryInformation.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLIBRARYREFERENCE] = (d) => {\r\n  return IfcLibraryReference.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLIGHTDISTRIBUTIONDATA] = (d) => {\r\n  return IfcLightDistributionData.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLIGHTFIXTURE] = (d) => {\r\n  return IfcLightFixture.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLIGHTFIXTURETYPE] = (d) => {\r\n  return IfcLightFixtureType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLIGHTINTENSITYDISTRIBUTION] = (d) => {\r\n  return IfcLightIntensityDistribution.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLIGHTSOURCE] = (d) => {\r\n  return IfcLightSource.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLIGHTSOURCEAMBIENT] = (d) => {\r\n  return IfcLightSourceAmbient.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLIGHTSOURCEDIRECTIONAL] = (d) => {\r\n  return IfcLightSourceDirectional.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLIGHTSOURCEGONIOMETRIC] = (d) => {\r\n  return IfcLightSourceGoniometric.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLIGHTSOURCEPOSITIONAL] = (d) => {\r\n  return IfcLightSourcePositional.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLIGHTSOURCESPOT] = (d) => {\r\n  return IfcLightSourceSpot.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLINE] = (d) => {\r\n  return IfcLine.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLINESEGMENT2D] = (d) => {\r\n  return IfcLineSegment2D.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLINEARPLACEMENT] = (d) => {\r\n  return IfcLinearPlacement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLINEARPOSITIONINGELEMENT] = (d) => {\r\n  return IfcLinearPositioningElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLOCALPLACEMENT] = (d) => {\r\n  return IfcLocalPlacement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCLOOP] = (d) => {\r\n  return IfcLoop.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMANIFOLDSOLIDBREP] = (d) => {\r\n  return IfcManifoldSolidBrep.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMAPCONVERSION] = (d) => {\r\n  return IfcMapConversion.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMAPPEDITEM] = (d) => {\r\n  return IfcMappedItem.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMATERIAL] = (d) => {\r\n  return IfcMaterial.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMATERIALCLASSIFICATIONRELATIONSHIP] = (d) => {\r\n  return IfcMaterialClassificationRelationship.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMATERIALCONSTITUENT] = (d) => {\r\n  return IfcMaterialConstituent.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMATERIALCONSTITUENTSET] = (d) => {\r\n  return IfcMaterialConstituentSet.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMATERIALDEFINITION] = (d) => {\r\n  return IfcMaterialDefinition.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMATERIALDEFINITIONREPRESENTATION] = (d) => {\r\n  return IfcMaterialDefinitionRepresentation.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMATERIALLAYER] = (d) => {\r\n  return IfcMaterialLayer.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMATERIALLAYERSET] = (d) => {\r\n  return IfcMaterialLayerSet.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMATERIALLAYERSETUSAGE] = (d) => {\r\n  return IfcMaterialLayerSetUsage.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMATERIALLAYERWITHOFFSETS] = (d) => {\r\n  return IfcMaterialLayerWithOffsets.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMATERIALLIST] = (d) => {\r\n  return IfcMaterialList.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMATERIALPROFILE] = (d) => {\r\n  return IfcMaterialProfile.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMATERIALPROFILESET] = (d) => {\r\n  return IfcMaterialProfileSet.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMATERIALPROFILESETUSAGE] = (d) => {\r\n  return IfcMaterialProfileSetUsage.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMATERIALPROFILESETUSAGETAPERING] = (d) => {\r\n  return IfcMaterialProfileSetUsageTapering.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMATERIALPROFILEWITHOFFSETS] = (d) => {\r\n  return IfcMaterialProfileWithOffsets.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMATERIALPROPERTIES] = (d) => {\r\n  return IfcMaterialProperties.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMATERIALRELATIONSHIP] = (d) => {\r\n  return IfcMaterialRelationship.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMATERIALUSAGEDEFINITION] = (d) => {\r\n  return IfcMaterialUsageDefinition.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMEASUREWITHUNIT] = (d) => {\r\n  return IfcMeasureWithUnit.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMECHANICALFASTENER] = (d) => {\r\n  return IfcMechanicalFastener.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMECHANICALFASTENERTYPE] = (d) => {\r\n  return IfcMechanicalFastenerType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMEDICALDEVICE] = (d) => {\r\n  return IfcMedicalDevice.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMEDICALDEVICETYPE] = (d) => {\r\n  return IfcMedicalDeviceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMEMBER] = (d) => {\r\n  return IfcMember.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMEMBERSTANDARDCASE] = (d) => {\r\n  return IfcMemberStandardCase.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMEMBERTYPE] = (d) => {\r\n  return IfcMemberType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMETRIC] = (d) => {\r\n  return IfcMetric.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMIRROREDPROFILEDEF] = (d) => {\r\n  return IfcMirroredProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMONETARYUNIT] = (d) => {\r\n  return IfcMonetaryUnit.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMOTORCONNECTION] = (d) => {\r\n  return IfcMotorConnection.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCMOTORCONNECTIONTYPE] = (d) => {\r\n  return IfcMotorConnectionType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCNAMEDUNIT] = (d) => {\r\n  return IfcNamedUnit.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCOBJECT] = (d) => {\r\n  return IfcObject.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCOBJECTDEFINITION] = (d) => {\r\n  return IfcObjectDefinition.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCOBJECTPLACEMENT] = (d) => {\r\n  return IfcObjectPlacement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCOBJECTIVE] = (d) => {\r\n  return IfcObjective.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCOCCUPANT] = (d) => {\r\n  return IfcOccupant.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCOFFSETCURVE] = (d) => {\r\n  return IfcOffsetCurve.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCOFFSETCURVE2D] = (d) => {\r\n  return IfcOffsetCurve2D.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCOFFSETCURVE3D] = (d) => {\r\n  return IfcOffsetCurve3D.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCOFFSETCURVEBYDISTANCES] = (d) => {\r\n  return IfcOffsetCurveByDistances.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCOPENSHELL] = (d) => {\r\n  return IfcOpenShell.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCOPENINGELEMENT] = (d) => {\r\n  return IfcOpeningElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCOPENINGSTANDARDCASE] = (d) => {\r\n  return IfcOpeningStandardCase.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCORGANIZATION] = (d) => {\r\n  return IfcOrganization.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCORGANIZATIONRELATIONSHIP] = (d) => {\r\n  return IfcOrganizationRelationship.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCORIENTATIONEXPRESSION] = (d) => {\r\n  return IfcOrientationExpression.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCORIENTEDEDGE] = (d) => {\r\n  return IfcOrientedEdge.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCOUTERBOUNDARYCURVE] = (d) => {\r\n  return IfcOuterBoundaryCurve.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCOUTLET] = (d) => {\r\n  return IfcOutlet.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCOUTLETTYPE] = (d) => {\r\n  return IfcOutletType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCOWNERHISTORY] = (d) => {\r\n  return IfcOwnerHistory.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPARAMETERIZEDPROFILEDEF] = (d) => {\r\n  return IfcParameterizedProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPATH] = (d) => {\r\n  return IfcPath.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPCURVE] = (d) => {\r\n  return IfcPcurve.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPERFORMANCEHISTORY] = (d) => {\r\n  return IfcPerformanceHistory.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPERMEABLECOVERINGPROPERTIES] = (d) => {\r\n  return IfcPermeableCoveringProperties.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPERMIT] = (d) => {\r\n  return IfcPermit.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPERSON] = (d) => {\r\n  return IfcPerson.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPERSONANDORGANIZATION] = (d) => {\r\n  return IfcPersonAndOrganization.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPHYSICALCOMPLEXQUANTITY] = (d) => {\r\n  return IfcPhysicalComplexQuantity.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPHYSICALQUANTITY] = (d) => {\r\n  return IfcPhysicalQuantity.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPHYSICALSIMPLEQUANTITY] = (d) => {\r\n  return IfcPhysicalSimpleQuantity.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPILE] = (d) => {\r\n  return IfcPile.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPILETYPE] = (d) => {\r\n  return IfcPileType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPIPEFITTING] = (d) => {\r\n  return IfcPipeFitting.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPIPEFITTINGTYPE] = (d) => {\r\n  return IfcPipeFittingType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPIPESEGMENT] = (d) => {\r\n  return IfcPipeSegment.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPIPESEGMENTTYPE] = (d) => {\r\n  return IfcPipeSegmentType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPIXELTEXTURE] = (d) => {\r\n  return IfcPixelTexture.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPLACEMENT] = (d) => {\r\n  return IfcPlacement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPLANARBOX] = (d) => {\r\n  return IfcPlanarBox.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPLANAREXTENT] = (d) => {\r\n  return IfcPlanarExtent.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPLANE] = (d) => {\r\n  return IfcPlane.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPLATE] = (d) => {\r\n  return IfcPlate.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPLATESTANDARDCASE] = (d) => {\r\n  return IfcPlateStandardCase.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPLATETYPE] = (d) => {\r\n  return IfcPlateType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPOINT] = (d) => {\r\n  return IfcPoint.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPOINTONCURVE] = (d) => {\r\n  return IfcPointOnCurve.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPOINTONSURFACE] = (d) => {\r\n  return IfcPointOnSurface.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPOLYLOOP] = (d) => {\r\n  return IfcPolyLoop.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPOLYGONALBOUNDEDHALFSPACE] = (d) => {\r\n  return IfcPolygonalBoundedHalfSpace.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPOLYGONALFACESET] = (d) => {\r\n  return IfcPolygonalFaceSet.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPOLYLINE] = (d) => {\r\n  return IfcPolyline.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPORT] = (d) => {\r\n  return IfcPort.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPOSITIONINGELEMENT] = (d) => {\r\n  return IfcPositioningElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPOSTALADDRESS] = (d) => {\r\n  return IfcPostalAddress.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPREDEFINEDCOLOUR] = (d) => {\r\n  return IfcPreDefinedColour.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPREDEFINEDCURVEFONT] = (d) => {\r\n  return IfcPreDefinedCurveFont.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPREDEFINEDITEM] = (d) => {\r\n  return IfcPreDefinedItem.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPREDEFINEDPROPERTIES] = (d) => {\r\n  return IfcPreDefinedProperties.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPREDEFINEDPROPERTYSET] = (d) => {\r\n  return IfcPreDefinedPropertySet.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPREDEFINEDTEXTFONT] = (d) => {\r\n  return IfcPreDefinedTextFont.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPRESENTATIONITEM] = (d) => {\r\n  return IfcPresentationItem.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPRESENTATIONLAYERASSIGNMENT] = (d) => {\r\n  return IfcPresentationLayerAssignment.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPRESENTATIONLAYERWITHSTYLE] = (d) => {\r\n  return IfcPresentationLayerWithStyle.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPRESENTATIONSTYLE] = (d) => {\r\n  return IfcPresentationStyle.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPRESENTATIONSTYLEASSIGNMENT] = (d) => {\r\n  return IfcPresentationStyleAssignment.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROCEDURE] = (d) => {\r\n  return IfcProcedure.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROCEDURETYPE] = (d) => {\r\n  return IfcProcedureType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROCESS] = (d) => {\r\n  return IfcProcess.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPRODUCT] = (d) => {\r\n  return IfcProduct.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPRODUCTDEFINITIONSHAPE] = (d) => {\r\n  return IfcProductDefinitionShape.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPRODUCTREPRESENTATION] = (d) => {\r\n  return IfcProductRepresentation.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROFILEDEF] = (d) => {\r\n  return IfcProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROFILEPROPERTIES] = (d) => {\r\n  return IfcProfileProperties.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROJECT] = (d) => {\r\n  return IfcProject.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROJECTLIBRARY] = (d) => {\r\n  return IfcProjectLibrary.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROJECTORDER] = (d) => {\r\n  return IfcProjectOrder.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROJECTEDCRS] = (d) => {\r\n  return IfcProjectedCRS.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROJECTIONELEMENT] = (d) => {\r\n  return IfcProjectionElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROPERTY] = (d) => {\r\n  return IfcProperty.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROPERTYABSTRACTION] = (d) => {\r\n  return IfcPropertyAbstraction.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROPERTYBOUNDEDVALUE] = (d) => {\r\n  return IfcPropertyBoundedValue.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROPERTYDEFINITION] = (d) => {\r\n  return IfcPropertyDefinition.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROPERTYDEPENDENCYRELATIONSHIP] = (d) => {\r\n  return IfcPropertyDependencyRelationship.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROPERTYENUMERATEDVALUE] = (d) => {\r\n  return IfcPropertyEnumeratedValue.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROPERTYENUMERATION] = (d) => {\r\n  return IfcPropertyEnumeration.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROPERTYLISTVALUE] = (d) => {\r\n  return IfcPropertyListValue.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROPERTYREFERENCEVALUE] = (d) => {\r\n  return IfcPropertyReferenceValue.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROPERTYSET] = (d) => {\r\n  return IfcPropertySet.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROPERTYSETDEFINITION] = (d) => {\r\n  return IfcPropertySetDefinition.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROPERTYSETTEMPLATE] = (d) => {\r\n  return IfcPropertySetTemplate.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROPERTYSINGLEVALUE] = (d) => {\r\n  return IfcPropertySingleValue.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROPERTYTABLEVALUE] = (d) => {\r\n  return IfcPropertyTableValue.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROPERTYTEMPLATE] = (d) => {\r\n  return IfcPropertyTemplate.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROPERTYTEMPLATEDEFINITION] = (d) => {\r\n  return IfcPropertyTemplateDefinition.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROTECTIVEDEVICE] = (d) => {\r\n  return IfcProtectiveDevice.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROTECTIVEDEVICETRIPPINGUNIT] = (d) => {\r\n  return IfcProtectiveDeviceTrippingUnit.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROTECTIVEDEVICETRIPPINGUNITTYPE] = (d) => {\r\n  return IfcProtectiveDeviceTrippingUnitType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROTECTIVEDEVICETYPE] = (d) => {\r\n  return IfcProtectiveDeviceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPROXY] = (d) => {\r\n  return IfcProxy.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPUMP] = (d) => {\r\n  return IfcPump.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCPUMPTYPE] = (d) => {\r\n  return IfcPumpType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCQUANTITYAREA] = (d) => {\r\n  return IfcQuantityArea.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCQUANTITYCOUNT] = (d) => {\r\n  return IfcQuantityCount.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCQUANTITYLENGTH] = (d) => {\r\n  return IfcQuantityLength.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCQUANTITYSET] = (d) => {\r\n  return IfcQuantitySet.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCQUANTITYTIME] = (d) => {\r\n  return IfcQuantityTime.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCQUANTITYVOLUME] = (d) => {\r\n  return IfcQuantityVolume.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCQUANTITYWEIGHT] = (d) => {\r\n  return IfcQuantityWeight.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRAILING] = (d) => {\r\n  return IfcRailing.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRAILINGTYPE] = (d) => {\r\n  return IfcRailingType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRAMP] = (d) => {\r\n  return IfcRamp.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRAMPFLIGHT] = (d) => {\r\n  return IfcRampFlight.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRAMPFLIGHTTYPE] = (d) => {\r\n  return IfcRampFlightType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRAMPTYPE] = (d) => {\r\n  return IfcRampType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRATIONALBSPLINECURVEWITHKNOTS] = (d) => {\r\n  return IfcRationalBSplineCurveWithKnots.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRATIONALBSPLINESURFACEWITHKNOTS] = (d) => {\r\n  return IfcRationalBSplineSurfaceWithKnots.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRECTANGLEHOLLOWPROFILEDEF] = (d) => {\r\n  return IfcRectangleHollowProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRECTANGLEPROFILEDEF] = (d) => {\r\n  return IfcRectangleProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRECTANGULARPYRAMID] = (d) => {\r\n  return IfcRectangularPyramid.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRECTANGULARTRIMMEDSURFACE] = (d) => {\r\n  return IfcRectangularTrimmedSurface.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRECURRENCEPATTERN] = (d) => {\r\n  return IfcRecurrencePattern.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCREFERENCE] = (d) => {\r\n  return IfcReference.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCREFERENT] = (d) => {\r\n  return IfcReferent.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCREGULARTIMESERIES] = (d) => {\r\n  return IfcRegularTimeSeries.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCREINFORCEMENTBARPROPERTIES] = (d) => {\r\n  return IfcReinforcementBarProperties.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCREINFORCEMENTDEFINITIONPROPERTIES] = (d) => {\r\n  return IfcReinforcementDefinitionProperties.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCREINFORCINGBAR] = (d) => {\r\n  return IfcReinforcingBar.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCREINFORCINGBARTYPE] = (d) => {\r\n  return IfcReinforcingBarType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCREINFORCINGELEMENT] = (d) => {\r\n  return IfcReinforcingElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCREINFORCINGELEMENTTYPE] = (d) => {\r\n  return IfcReinforcingElementType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCREINFORCINGMESH] = (d) => {\r\n  return IfcReinforcingMesh.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCREINFORCINGMESHTYPE] = (d) => {\r\n  return IfcReinforcingMeshType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELAGGREGATES] = (d) => {\r\n  return IfcRelAggregates.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELASSIGNS] = (d) => {\r\n  return IfcRelAssigns.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELASSIGNSTOACTOR] = (d) => {\r\n  return IfcRelAssignsToActor.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELASSIGNSTOCONTROL] = (d) => {\r\n  return IfcRelAssignsToControl.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELASSIGNSTOGROUP] = (d) => {\r\n  return IfcRelAssignsToGroup.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELASSIGNSTOGROUPBYFACTOR] = (d) => {\r\n  return IfcRelAssignsToGroupByFactor.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELASSIGNSTOPROCESS] = (d) => {\r\n  return IfcRelAssignsToProcess.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELASSIGNSTOPRODUCT] = (d) => {\r\n  return IfcRelAssignsToProduct.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELASSIGNSTORESOURCE] = (d) => {\r\n  return IfcRelAssignsToResource.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELASSOCIATES] = (d) => {\r\n  return IfcRelAssociates.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELASSOCIATESAPPROVAL] = (d) => {\r\n  return IfcRelAssociatesApproval.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELASSOCIATESCLASSIFICATION] = (d) => {\r\n  return IfcRelAssociatesClassification.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELASSOCIATESCONSTRAINT] = (d) => {\r\n  return IfcRelAssociatesConstraint.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELASSOCIATESDOCUMENT] = (d) => {\r\n  return IfcRelAssociatesDocument.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELASSOCIATESLIBRARY] = (d) => {\r\n  return IfcRelAssociatesLibrary.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELASSOCIATESMATERIAL] = (d) => {\r\n  return IfcRelAssociatesMaterial.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELCONNECTS] = (d) => {\r\n  return IfcRelConnects.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELCONNECTSELEMENTS] = (d) => {\r\n  return IfcRelConnectsElements.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELCONNECTSPATHELEMENTS] = (d) => {\r\n  return IfcRelConnectsPathElements.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELCONNECTSPORTTOELEMENT] = (d) => {\r\n  return IfcRelConnectsPortToElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELCONNECTSPORTS] = (d) => {\r\n  return IfcRelConnectsPorts.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELCONNECTSSTRUCTURALACTIVITY] = (d) => {\r\n  return IfcRelConnectsStructuralActivity.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELCONNECTSSTRUCTURALMEMBER] = (d) => {\r\n  return IfcRelConnectsStructuralMember.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELCONNECTSWITHECCENTRICITY] = (d) => {\r\n  return IfcRelConnectsWithEccentricity.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELCONNECTSWITHREALIZINGELEMENTS] = (d) => {\r\n  return IfcRelConnectsWithRealizingElements.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELCONTAINEDINSPATIALSTRUCTURE] = (d) => {\r\n  return IfcRelContainedInSpatialStructure.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELCOVERSBLDGELEMENTS] = (d) => {\r\n  return IfcRelCoversBldgElements.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELCOVERSSPACES] = (d) => {\r\n  return IfcRelCoversSpaces.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELDECLARES] = (d) => {\r\n  return IfcRelDeclares.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELDECOMPOSES] = (d) => {\r\n  return IfcRelDecomposes.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELDEFINES] = (d) => {\r\n  return IfcRelDefines.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELDEFINESBYOBJECT] = (d) => {\r\n  return IfcRelDefinesByObject.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELDEFINESBYPROPERTIES] = (d) => {\r\n  return IfcRelDefinesByProperties.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELDEFINESBYTEMPLATE] = (d) => {\r\n  return IfcRelDefinesByTemplate.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELDEFINESBYTYPE] = (d) => {\r\n  return IfcRelDefinesByType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELFILLSELEMENT] = (d) => {\r\n  return IfcRelFillsElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELFLOWCONTROLELEMENTS] = (d) => {\r\n  return IfcRelFlowControlElements.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELINTERFERESELEMENTS] = (d) => {\r\n  return IfcRelInterferesElements.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELNESTS] = (d) => {\r\n  return IfcRelNests.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELPOSITIONS] = (d) => {\r\n  return IfcRelPositions.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELPROJECTSELEMENT] = (d) => {\r\n  return IfcRelProjectsElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELREFERENCEDINSPATIALSTRUCTURE] = (d) => {\r\n  return IfcRelReferencedInSpatialStructure.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELSEQUENCE] = (d) => {\r\n  return IfcRelSequence.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELSERVICESBUILDINGS] = (d) => {\r\n  return IfcRelServicesBuildings.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELSPACEBOUNDARY] = (d) => {\r\n  return IfcRelSpaceBoundary.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELSPACEBOUNDARY1STLEVEL] = (d) => {\r\n  return IfcRelSpaceBoundary1stLevel.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELSPACEBOUNDARY2NDLEVEL] = (d) => {\r\n  return IfcRelSpaceBoundary2ndLevel.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELVOIDSELEMENT] = (d) => {\r\n  return IfcRelVoidsElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRELATIONSHIP] = (d) => {\r\n  return IfcRelationship.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCREPARAMETRISEDCOMPOSITECURVESEGMENT] = (d) => {\r\n  return IfcReparametrisedCompositeCurveSegment.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCREPRESENTATION] = (d) => {\r\n  return IfcRepresentation.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCREPRESENTATIONCONTEXT] = (d) => {\r\n  return IfcRepresentationContext.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCREPRESENTATIONITEM] = (d) => {\r\n  return IfcRepresentationItem.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCREPRESENTATIONMAP] = (d) => {\r\n  return IfcRepresentationMap.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRESOURCE] = (d) => {\r\n  return IfcResource.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRESOURCEAPPROVALRELATIONSHIP] = (d) => {\r\n  return IfcResourceApprovalRelationship.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRESOURCECONSTRAINTRELATIONSHIP] = (d) => {\r\n  return IfcResourceConstraintRelationship.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRESOURCELEVELRELATIONSHIP] = (d) => {\r\n  return IfcResourceLevelRelationship.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRESOURCETIME] = (d) => {\r\n  return IfcResourceTime.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCREVOLVEDAREASOLID] = (d) => {\r\n  return IfcRevolvedAreaSolid.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCREVOLVEDAREASOLIDTAPERED] = (d) => {\r\n  return IfcRevolvedAreaSolidTapered.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRIGHTCIRCULARCONE] = (d) => {\r\n  return IfcRightCircularCone.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCRIGHTCIRCULARCYLINDER] = (d) => {\r\n  return IfcRightCircularCylinder.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCROOF] = (d) => {\r\n  return IfcRoof.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCROOFTYPE] = (d) => {\r\n  return IfcRoofType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCROOT] = (d) => {\r\n  return IfcRoot.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCROUNDEDRECTANGLEPROFILEDEF] = (d) => {\r\n  return IfcRoundedRectangleProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSIUNIT] = (d) => {\r\n  return IfcSIUnit.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSANITARYTERMINAL] = (d) => {\r\n  return IfcSanitaryTerminal.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSANITARYTERMINALTYPE] = (d) => {\r\n  return IfcSanitaryTerminalType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSCHEDULINGTIME] = (d) => {\r\n  return IfcSchedulingTime.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSEAMCURVE] = (d) => {\r\n  return IfcSeamCurve.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSECTIONPROPERTIES] = (d) => {\r\n  return IfcSectionProperties.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSECTIONREINFORCEMENTPROPERTIES] = (d) => {\r\n  return IfcSectionReinforcementProperties.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSECTIONEDSOLID] = (d) => {\r\n  return IfcSectionedSolid.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSECTIONEDSOLIDHORIZONTAL] = (d) => {\r\n  return IfcSectionedSolidHorizontal.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSECTIONEDSPINE] = (d) => {\r\n  return IfcSectionedSpine.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSENSOR] = (d) => {\r\n  return IfcSensor.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSENSORTYPE] = (d) => {\r\n  return IfcSensorType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSHADINGDEVICE] = (d) => {\r\n  return IfcShadingDevice.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSHADINGDEVICETYPE] = (d) => {\r\n  return IfcShadingDeviceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSHAPEASPECT] = (d) => {\r\n  return IfcShapeAspect.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSHAPEMODEL] = (d) => {\r\n  return IfcShapeModel.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSHAPEREPRESENTATION] = (d) => {\r\n  return IfcShapeRepresentation.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSHELLBASEDSURFACEMODEL] = (d) => {\r\n  return IfcShellBasedSurfaceModel.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSIMPLEPROPERTY] = (d) => {\r\n  return IfcSimpleProperty.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSIMPLEPROPERTYTEMPLATE] = (d) => {\r\n  return IfcSimplePropertyTemplate.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSITE] = (d) => {\r\n  return IfcSite.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSLAB] = (d) => {\r\n  return IfcSlab.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSLABELEMENTEDCASE] = (d) => {\r\n  return IfcSlabElementedCase.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSLABSTANDARDCASE] = (d) => {\r\n  return IfcSlabStandardCase.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSLABTYPE] = (d) => {\r\n  return IfcSlabType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSLIPPAGECONNECTIONCONDITION] = (d) => {\r\n  return IfcSlippageConnectionCondition.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSOLARDEVICE] = (d) => {\r\n  return IfcSolarDevice.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSOLARDEVICETYPE] = (d) => {\r\n  return IfcSolarDeviceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSOLIDMODEL] = (d) => {\r\n  return IfcSolidModel.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSPACE] = (d) => {\r\n  return IfcSpace.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSPACEHEATER] = (d) => {\r\n  return IfcSpaceHeater.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSPACEHEATERTYPE] = (d) => {\r\n  return IfcSpaceHeaterType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSPACETYPE] = (d) => {\r\n  return IfcSpaceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSPATIALELEMENT] = (d) => {\r\n  return IfcSpatialElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSPATIALELEMENTTYPE] = (d) => {\r\n  return IfcSpatialElementType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSPATIALSTRUCTUREELEMENT] = (d) => {\r\n  return IfcSpatialStructureElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSPATIALSTRUCTUREELEMENTTYPE] = (d) => {\r\n  return IfcSpatialStructureElementType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSPATIALZONE] = (d) => {\r\n  return IfcSpatialZone.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSPATIALZONETYPE] = (d) => {\r\n  return IfcSpatialZoneType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSPHERE] = (d) => {\r\n  return IfcSphere.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSPHERICALSURFACE] = (d) => {\r\n  return IfcSphericalSurface.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTACKTERMINAL] = (d) => {\r\n  return IfcStackTerminal.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTACKTERMINALTYPE] = (d) => {\r\n  return IfcStackTerminalType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTAIR] = (d) => {\r\n  return IfcStair.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTAIRFLIGHT] = (d) => {\r\n  return IfcStairFlight.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTAIRFLIGHTTYPE] = (d) => {\r\n  return IfcStairFlightType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTAIRTYPE] = (d) => {\r\n  return IfcStairType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALACTION] = (d) => {\r\n  return IfcStructuralAction.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALACTIVITY] = (d) => {\r\n  return IfcStructuralActivity.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALANALYSISMODEL] = (d) => {\r\n  return IfcStructuralAnalysisModel.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALCONNECTION] = (d) => {\r\n  return IfcStructuralConnection.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALCONNECTIONCONDITION] = (d) => {\r\n  return IfcStructuralConnectionCondition.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALCURVEACTION] = (d) => {\r\n  return IfcStructuralCurveAction.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALCURVECONNECTION] = (d) => {\r\n  return IfcStructuralCurveConnection.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALCURVEMEMBER] = (d) => {\r\n  return IfcStructuralCurveMember.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALCURVEMEMBERVARYING] = (d) => {\r\n  return IfcStructuralCurveMemberVarying.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALCURVEREACTION] = (d) => {\r\n  return IfcStructuralCurveReaction.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALITEM] = (d) => {\r\n  return IfcStructuralItem.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALLINEARACTION] = (d) => {\r\n  return IfcStructuralLinearAction.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALLOAD] = (d) => {\r\n  return IfcStructuralLoad.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALLOADCASE] = (d) => {\r\n  return IfcStructuralLoadCase.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALLOADCONFIGURATION] = (d) => {\r\n  return IfcStructuralLoadConfiguration.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALLOADGROUP] = (d) => {\r\n  return IfcStructuralLoadGroup.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALLOADLINEARFORCE] = (d) => {\r\n  return IfcStructuralLoadLinearForce.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALLOADORRESULT] = (d) => {\r\n  return IfcStructuralLoadOrResult.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALLOADPLANARFORCE] = (d) => {\r\n  return IfcStructuralLoadPlanarForce.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALLOADSINGLEDISPLACEMENT] = (d) => {\r\n  return IfcStructuralLoadSingleDisplacement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION] = (d) => {\r\n  return IfcStructuralLoadSingleDisplacementDistortion.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALLOADSINGLEFORCE] = (d) => {\r\n  return IfcStructuralLoadSingleForce.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALLOADSINGLEFORCEWARPING] = (d) => {\r\n  return IfcStructuralLoadSingleForceWarping.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALLOADSTATIC] = (d) => {\r\n  return IfcStructuralLoadStatic.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALLOADTEMPERATURE] = (d) => {\r\n  return IfcStructuralLoadTemperature.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALMEMBER] = (d) => {\r\n  return IfcStructuralMember.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALPLANARACTION] = (d) => {\r\n  return IfcStructuralPlanarAction.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALPOINTACTION] = (d) => {\r\n  return IfcStructuralPointAction.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALPOINTCONNECTION] = (d) => {\r\n  return IfcStructuralPointConnection.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALPOINTREACTION] = (d) => {\r\n  return IfcStructuralPointReaction.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALREACTION] = (d) => {\r\n  return IfcStructuralReaction.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALRESULTGROUP] = (d) => {\r\n  return IfcStructuralResultGroup.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALSURFACEACTION] = (d) => {\r\n  return IfcStructuralSurfaceAction.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALSURFACECONNECTION] = (d) => {\r\n  return IfcStructuralSurfaceConnection.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALSURFACEMEMBER] = (d) => {\r\n  return IfcStructuralSurfaceMember.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALSURFACEMEMBERVARYING] = (d) => {\r\n  return IfcStructuralSurfaceMemberVarying.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTRUCTURALSURFACEREACTION] = (d) => {\r\n  return IfcStructuralSurfaceReaction.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTYLEMODEL] = (d) => {\r\n  return IfcStyleModel.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTYLEDITEM] = (d) => {\r\n  return IfcStyledItem.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSTYLEDREPRESENTATION] = (d) => {\r\n  return IfcStyledRepresentation.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSUBCONTRACTRESOURCE] = (d) => {\r\n  return IfcSubContractResource.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSUBCONTRACTRESOURCETYPE] = (d) => {\r\n  return IfcSubContractResourceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSUBEDGE] = (d) => {\r\n  return IfcSubedge.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSURFACE] = (d) => {\r\n  return IfcSurface.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSURFACECURVE] = (d) => {\r\n  return IfcSurfaceCurve.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSURFACECURVESWEPTAREASOLID] = (d) => {\r\n  return IfcSurfaceCurveSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSURFACEFEATURE] = (d) => {\r\n  return IfcSurfaceFeature.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSURFACEOFLINEAREXTRUSION] = (d) => {\r\n  return IfcSurfaceOfLinearExtrusion.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSURFACEOFREVOLUTION] = (d) => {\r\n  return IfcSurfaceOfRevolution.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSURFACEREINFORCEMENTAREA] = (d) => {\r\n  return IfcSurfaceReinforcementArea.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSURFACESTYLE] = (d) => {\r\n  return IfcSurfaceStyle.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSURFACESTYLELIGHTING] = (d) => {\r\n  return IfcSurfaceStyleLighting.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSURFACESTYLEREFRACTION] = (d) => {\r\n  return IfcSurfaceStyleRefraction.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSURFACESTYLERENDERING] = (d) => {\r\n  return IfcSurfaceStyleRendering.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSURFACESTYLESHADING] = (d) => {\r\n  return IfcSurfaceStyleShading.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSURFACESTYLEWITHTEXTURES] = (d) => {\r\n  return IfcSurfaceStyleWithTextures.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSURFACETEXTURE] = (d) => {\r\n  return IfcSurfaceTexture.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSWEPTAREASOLID] = (d) => {\r\n  return IfcSweptAreaSolid.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSWEPTDISKSOLID] = (d) => {\r\n  return IfcSweptDiskSolid.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSWEPTDISKSOLIDPOLYGONAL] = (d) => {\r\n  return IfcSweptDiskSolidPolygonal.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSWEPTSURFACE] = (d) => {\r\n  return IfcSweptSurface.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSWITCHINGDEVICE] = (d) => {\r\n  return IfcSwitchingDevice.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSWITCHINGDEVICETYPE] = (d) => {\r\n  return IfcSwitchingDeviceType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSYSTEM] = (d) => {\r\n  return IfcSystem.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSYSTEMFURNITUREELEMENT] = (d) => {\r\n  return IfcSystemFurnitureElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCSYSTEMFURNITUREELEMENTTYPE] = (d) => {\r\n  return IfcSystemFurnitureElementType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTSHAPEPROFILEDEF] = (d) => {\r\n  return IfcTShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTABLE] = (d) => {\r\n  return IfcTable.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTABLECOLUMN] = (d) => {\r\n  return IfcTableColumn.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTABLEROW] = (d) => {\r\n  return IfcTableRow.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTANK] = (d) => {\r\n  return IfcTank.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTANKTYPE] = (d) => {\r\n  return IfcTankType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTASK] = (d) => {\r\n  return IfcTask.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTASKTIME] = (d) => {\r\n  return IfcTaskTime.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTASKTIMERECURRING] = (d) => {\r\n  return IfcTaskTimeRecurring.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTASKTYPE] = (d) => {\r\n  return IfcTaskType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTELECOMADDRESS] = (d) => {\r\n  return IfcTelecomAddress.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTENDON] = (d) => {\r\n  return IfcTendon.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTENDONANCHOR] = (d) => {\r\n  return IfcTendonAnchor.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTENDONANCHORTYPE] = (d) => {\r\n  return IfcTendonAnchorType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTENDONCONDUIT] = (d) => {\r\n  return IfcTendonConduit.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTENDONCONDUITTYPE] = (d) => {\r\n  return IfcTendonConduitType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTENDONTYPE] = (d) => {\r\n  return IfcTendonType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTESSELLATEDFACESET] = (d) => {\r\n  return IfcTessellatedFaceSet.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTESSELLATEDITEM] = (d) => {\r\n  return IfcTessellatedItem.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTEXTLITERAL] = (d) => {\r\n  return IfcTextLiteral.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTEXTLITERALWITHEXTENT] = (d) => {\r\n  return IfcTextLiteralWithExtent.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTEXTSTYLE] = (d) => {\r\n  return IfcTextStyle.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTEXTSTYLEFONTMODEL] = (d) => {\r\n  return IfcTextStyleFontModel.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTEXTSTYLEFORDEFINEDFONT] = (d) => {\r\n  return IfcTextStyleForDefinedFont.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTEXTSTYLETEXTMODEL] = (d) => {\r\n  return IfcTextStyleTextModel.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTEXTURECOORDINATE] = (d) => {\r\n  return IfcTextureCoordinate.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTEXTURECOORDINATEGENERATOR] = (d) => {\r\n  return IfcTextureCoordinateGenerator.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTEXTUREMAP] = (d) => {\r\n  return IfcTextureMap.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTEXTUREVERTEX] = (d) => {\r\n  return IfcTextureVertex.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTEXTUREVERTEXLIST] = (d) => {\r\n  return IfcTextureVertexList.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTIMEPERIOD] = (d) => {\r\n  return IfcTimePeriod.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTIMESERIES] = (d) => {\r\n  return IfcTimeSeries.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTIMESERIESVALUE] = (d) => {\r\n  return IfcTimeSeriesValue.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTOPOLOGICALREPRESENTATIONITEM] = (d) => {\r\n  return IfcTopologicalRepresentationItem.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTOPOLOGYREPRESENTATION] = (d) => {\r\n  return IfcTopologyRepresentation.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTOROIDALSURFACE] = (d) => {\r\n  return IfcToroidalSurface.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTRANSFORMER] = (d) => {\r\n  return IfcTransformer.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTRANSFORMERTYPE] = (d) => {\r\n  return IfcTransformerType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTRANSITIONCURVESEGMENT2D] = (d) => {\r\n  return IfcTransitionCurveSegment2D.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTRANSPORTELEMENT] = (d) => {\r\n  return IfcTransportElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTRANSPORTELEMENTTYPE] = (d) => {\r\n  return IfcTransportElementType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTRAPEZIUMPROFILEDEF] = (d) => {\r\n  return IfcTrapeziumProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTRIANGULATEDFACESET] = (d) => {\r\n  return IfcTriangulatedFaceSet.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTRIANGULATEDIRREGULARNETWORK] = (d) => {\r\n  return IfcTriangulatedIrregularNetwork.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTRIMMEDCURVE] = (d) => {\r\n  return IfcTrimmedCurve.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTUBEBUNDLE] = (d) => {\r\n  return IfcTubeBundle.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTUBEBUNDLETYPE] = (d) => {\r\n  return IfcTubeBundleType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTYPEOBJECT] = (d) => {\r\n  return IfcTypeObject.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTYPEPROCESS] = (d) => {\r\n  return IfcTypeProcess.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTYPEPRODUCT] = (d) => {\r\n  return IfcTypeProduct.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCTYPERESOURCE] = (d) => {\r\n  return IfcTypeResource.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCUSHAPEPROFILEDEF] = (d) => {\r\n  return IfcUShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCUNITASSIGNMENT] = (d) => {\r\n  return IfcUnitAssignment.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCUNITARYCONTROLELEMENT] = (d) => {\r\n  return IfcUnitaryControlElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCUNITARYCONTROLELEMENTTYPE] = (d) => {\r\n  return IfcUnitaryControlElementType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCUNITARYEQUIPMENT] = (d) => {\r\n  return IfcUnitaryEquipment.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCUNITARYEQUIPMENTTYPE] = (d) => {\r\n  return IfcUnitaryEquipmentType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCVALVE] = (d) => {\r\n  return IfcValve.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCVALVETYPE] = (d) => {\r\n  return IfcValveType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCVECTOR] = (d) => {\r\n  return IfcVector.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCVERTEX] = (d) => {\r\n  return IfcVertex.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCVERTEXLOOP] = (d) => {\r\n  return IfcVertexLoop.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCVERTEXPOINT] = (d) => {\r\n  return IfcVertexPoint.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCVIBRATIONDAMPER] = (d) => {\r\n  return IfcVibrationDamper.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCVIBRATIONDAMPERTYPE] = (d) => {\r\n  return IfcVibrationDamperType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCVIBRATIONISOLATOR] = (d) => {\r\n  return IfcVibrationIsolator.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCVIBRATIONISOLATORTYPE] = (d) => {\r\n  return IfcVibrationIsolatorType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCVIRTUALELEMENT] = (d) => {\r\n  return IfcVirtualElement.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCVIRTUALGRIDINTERSECTION] = (d) => {\r\n  return IfcVirtualGridIntersection.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCVOIDINGFEATURE] = (d) => {\r\n  return IfcVoidingFeature.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCWALL] = (d) => {\r\n  return IfcWall.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCWALLELEMENTEDCASE] = (d) => {\r\n  return IfcWallElementedCase.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCWALLSTANDARDCASE] = (d) => {\r\n  return IfcWallStandardCase.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCWALLTYPE] = (d) => {\r\n  return IfcWallType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCWASTETERMINAL] = (d) => {\r\n  return IfcWasteTerminal.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCWASTETERMINALTYPE] = (d) => {\r\n  return IfcWasteTerminalType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCWINDOW] = (d) => {\r\n  return IfcWindow.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCWINDOWLININGPROPERTIES] = (d) => {\r\n  return IfcWindowLiningProperties.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCWINDOWPANELPROPERTIES] = (d) => {\r\n  return IfcWindowPanelProperties.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCWINDOWSTANDARDCASE] = (d) => {\r\n  return IfcWindowStandardCase.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCWINDOWSTYLE] = (d) => {\r\n  return IfcWindowStyle.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCWINDOWTYPE] = (d) => {\r\n  return IfcWindowType.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCWORKCALENDAR] = (d) => {\r\n  return IfcWorkCalendar.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCWORKCONTROL] = (d) => {\r\n  return IfcWorkControl.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCWORKPLAN] = (d) => {\r\n  return IfcWorkPlan.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCWORKSCHEDULE] = (d) => {\r\n  return IfcWorkSchedule.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCWORKTIME] = (d) => {\r\n  return IfcWorkTime.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCZSHAPEPROFILEDEF] = (d) => {\r\n  return IfcZShapeProfileDef.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nFromRawLineData[IFCZONE] = (d) => {\r\n  return IfcZone.FromTape(d.ID, d.type, d.arguments);\r\n};\r\nvar Handle = class {\r\n  constructor(id) {\r\n    this.value = id;\r\n  }\r\n  toTape(args) {\r\n    args.push({ type: 5, value: this.value });\r\n  }\r\n};\r\nfunction Value(type, value) {\r\n  return { t: type, v: value };\r\n}\r\nvar IfcAbsorbedDoseMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcAccelerationMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcAmountOfSubstanceMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcAngularVelocityMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcAreaDensityMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcAreaMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcBinary = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcBoolean = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcBoxAlignment = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcCardinalPointReference = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcContextDependentMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcCountMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcCurvatureMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcDate = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcDateTime = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcDayInMonthNumber = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcDayInWeekNumber = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcDescriptiveMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcDimensionCount = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcDoseEquivalentMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcDuration = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcDynamicViscosityMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcElectricCapacitanceMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcElectricChargeMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcElectricConductanceMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcElectricCurrentMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcElectricResistanceMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcElectricVoltageMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcEnergyMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcFontStyle = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcFontVariant = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcFontWeight = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcForceMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcFrequencyMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcGloballyUniqueId = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcHeatFluxDensityMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcHeatingValueMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcIdentifier = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcIlluminanceMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcInductanceMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcInteger = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcIntegerCountRateMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcIonConcentrationMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcIsothermalMoistureCapacityMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcKinematicViscosityMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcLabel = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcLanguageId = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcLengthMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcLinearForceMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcLinearMomentMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcLinearStiffnessMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcLinearVelocityMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcLogical = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcLuminousFluxMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcLuminousIntensityDistributionMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcLuminousIntensityMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcMagneticFluxDensityMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcMagneticFluxMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcMassDensityMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcMassFlowRateMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcMassMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcMassPerLengthMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcModulusOfElasticityMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcModulusOfLinearSubgradeReactionMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcModulusOfRotationalSubgradeReactionMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcModulusOfSubgradeReactionMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcMoistureDiffusivityMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcMolecularWeightMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcMomentOfInertiaMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcMonetaryMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcMonthInYearNumber = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcNonNegativeLengthMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcNormalisedRatioMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcNumericMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcPHMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcParameterValue = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcPlanarForceMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcPlaneAngleMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcPositiveInteger = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcPositiveLengthMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcPositivePlaneAngleMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcPositiveRatioMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcPowerMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcPresentableText = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcPressureMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcRadioActivityMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcRatioMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcReal = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcRotationalFrequencyMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcRotationalMassMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcRotationalStiffnessMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcSectionModulusMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcSectionalAreaIntegralMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcShearModulusMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcSolidAngleMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcSoundPowerLevelMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcSoundPowerMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcSoundPressureLevelMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcSoundPressureMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcSpecificHeatCapacityMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcSpecularExponent = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcSpecularRoughness = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcTemperatureGradientMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcTemperatureRateOfChangeMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcText = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcTextAlignment = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcTextDecoration = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcTextFontName = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcTextTransformation = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcThermalAdmittanceMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcThermalConductivityMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcThermalExpansionCoefficientMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcThermalResistanceMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcThermalTransmittanceMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcThermodynamicTemperatureMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcTime = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcTimeMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcTimeStamp = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcTorqueMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcURIReference = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcVaporPermeabilityMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcVolumeMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcVolumetricFlowRateMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcWarpingConstantMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcWarpingMomentMeasure = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nvar IfcActionRequestTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcActionRequestTypeEnum.EMAIL = \"EMAIL\";\r\nIfcActionRequestTypeEnum.FAX = \"FAX\";\r\nIfcActionRequestTypeEnum.PHONE = \"PHONE\";\r\nIfcActionRequestTypeEnum.POST = \"POST\";\r\nIfcActionRequestTypeEnum.VERBAL = \"VERBAL\";\r\nIfcActionRequestTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcActionRequestTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcActionSourceTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcActionSourceTypeEnum.DEAD_LOAD_G = \"DEAD_LOAD_G\";\r\nIfcActionSourceTypeEnum.COMPLETION_G1 = \"COMPLETION_G1\";\r\nIfcActionSourceTypeEnum.LIVE_LOAD_Q = \"LIVE_LOAD_Q\";\r\nIfcActionSourceTypeEnum.SNOW_S = \"SNOW_S\";\r\nIfcActionSourceTypeEnum.WIND_W = \"WIND_W\";\r\nIfcActionSourceTypeEnum.PRESTRESSING_P = \"PRESTRESSING_P\";\r\nIfcActionSourceTypeEnum.SETTLEMENT_U = \"SETTLEMENT_U\";\r\nIfcActionSourceTypeEnum.TEMPERATURE_T = \"TEMPERATURE_T\";\r\nIfcActionSourceTypeEnum.EARTHQUAKE_E = \"EARTHQUAKE_E\";\r\nIfcActionSourceTypeEnum.FIRE = \"FIRE\";\r\nIfcActionSourceTypeEnum.IMPULSE = \"IMPULSE\";\r\nIfcActionSourceTypeEnum.IMPACT = \"IMPACT\";\r\nIfcActionSourceTypeEnum.TRANSPORT = \"TRANSPORT\";\r\nIfcActionSourceTypeEnum.ERECTION = \"ERECTION\";\r\nIfcActionSourceTypeEnum.PROPPING = \"PROPPING\";\r\nIfcActionSourceTypeEnum.SYSTEM_IMPERFECTION = \"SYSTEM_IMPERFECTION\";\r\nIfcActionSourceTypeEnum.SHRINKAGE = \"SHRINKAGE\";\r\nIfcActionSourceTypeEnum.CREEP = \"CREEP\";\r\nIfcActionSourceTypeEnum.LACK_OF_FIT = \"LACK_OF_FIT\";\r\nIfcActionSourceTypeEnum.BUOYANCY = \"BUOYANCY\";\r\nIfcActionSourceTypeEnum.ICE = \"ICE\";\r\nIfcActionSourceTypeEnum.CURRENT = \"CURRENT\";\r\nIfcActionSourceTypeEnum.WAVE = \"WAVE\";\r\nIfcActionSourceTypeEnum.RAIN = \"RAIN\";\r\nIfcActionSourceTypeEnum.BRAKES = \"BRAKES\";\r\nIfcActionSourceTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcActionSourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcActionTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcActionTypeEnum.PERMANENT_G = \"PERMANENT_G\";\r\nIfcActionTypeEnum.VARIABLE_Q = \"VARIABLE_Q\";\r\nIfcActionTypeEnum.EXTRAORDINARY_A = \"EXTRAORDINARY_A\";\r\nIfcActionTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcActionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcActuatorTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcActuatorTypeEnum.ELECTRICACTUATOR = \"ELECTRICACTUATOR\";\r\nIfcActuatorTypeEnum.HANDOPERATEDACTUATOR = \"HANDOPERATEDACTUATOR\";\r\nIfcActuatorTypeEnum.HYDRAULICACTUATOR = \"HYDRAULICACTUATOR\";\r\nIfcActuatorTypeEnum.PNEUMATICACTUATOR = \"PNEUMATICACTUATOR\";\r\nIfcActuatorTypeEnum.THERMOSTATICACTUATOR = \"THERMOSTATICACTUATOR\";\r\nIfcActuatorTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcActuatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcAddressTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcAddressTypeEnum.OFFICE = \"OFFICE\";\r\nIfcAddressTypeEnum.SITE = \"SITE\";\r\nIfcAddressTypeEnum.HOME = \"HOME\";\r\nIfcAddressTypeEnum.DISTRIBUTIONPOINT = \"DISTRIBUTIONPOINT\";\r\nIfcAddressTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nvar IfcAirTerminalBoxTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcAirTerminalBoxTypeEnum.CONSTANTFLOW = \"CONSTANTFLOW\";\r\nIfcAirTerminalBoxTypeEnum.VARIABLEFLOWPRESSUREDEPENDANT = \"VARIABLEFLOWPRESSUREDEPENDANT\";\r\nIfcAirTerminalBoxTypeEnum.VARIABLEFLOWPRESSUREINDEPENDANT = \"VARIABLEFLOWPRESSUREINDEPENDANT\";\r\nIfcAirTerminalBoxTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcAirTerminalBoxTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcAirTerminalTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcAirTerminalTypeEnum.DIFFUSER = \"DIFFUSER\";\r\nIfcAirTerminalTypeEnum.GRILLE = \"GRILLE\";\r\nIfcAirTerminalTypeEnum.LOUVRE = \"LOUVRE\";\r\nIfcAirTerminalTypeEnum.REGISTER = \"REGISTER\";\r\nIfcAirTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcAirTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcAirToAirHeatRecoveryTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATECOUNTERFLOWEXCHANGER = \"FIXEDPLATECOUNTERFLOWEXCHANGER\";\r\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATECROSSFLOWEXCHANGER = \"FIXEDPLATECROSSFLOWEXCHANGER\";\r\nIfcAirToAirHeatRecoveryTypeEnum.FIXEDPLATEPARALLELFLOWEXCHANGER = \"FIXEDPLATEPARALLELFLOWEXCHANGER\";\r\nIfcAirToAirHeatRecoveryTypeEnum.ROTARYWHEEL = \"ROTARYWHEEL\";\r\nIfcAirToAirHeatRecoveryTypeEnum.RUNAROUNDCOILLOOP = \"RUNAROUNDCOILLOOP\";\r\nIfcAirToAirHeatRecoveryTypeEnum.HEATPIPE = \"HEATPIPE\";\r\nIfcAirToAirHeatRecoveryTypeEnum.TWINTOWERENTHALPYRECOVERYLOOPS = \"TWINTOWERENTHALPYRECOVERYLOOPS\";\r\nIfcAirToAirHeatRecoveryTypeEnum.THERMOSIPHONSEALEDTUBEHEATEXCHANGERS = \"THERMOSIPHONSEALEDTUBEHEATEXCHANGERS\";\r\nIfcAirToAirHeatRecoveryTypeEnum.THERMOSIPHONCOILTYPEHEATEXCHANGERS = \"THERMOSIPHONCOILTYPEHEATEXCHANGERS\";\r\nIfcAirToAirHeatRecoveryTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcAirToAirHeatRecoveryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcAlarmTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcAlarmTypeEnum.BELL = \"BELL\";\r\nIfcAlarmTypeEnum.BREAKGLASSBUTTON = \"BREAKGLASSBUTTON\";\r\nIfcAlarmTypeEnum.LIGHT = \"LIGHT\";\r\nIfcAlarmTypeEnum.MANUALPULLBOX = \"MANUALPULLBOX\";\r\nIfcAlarmTypeEnum.SIREN = \"SIREN\";\r\nIfcAlarmTypeEnum.WHISTLE = \"WHISTLE\";\r\nIfcAlarmTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcAlarmTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcAlignmentTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcAlignmentTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcAlignmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcAnalysisModelTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcAnalysisModelTypeEnum.IN_PLANE_LOADING_2D = \"IN_PLANE_LOADING_2D\";\r\nIfcAnalysisModelTypeEnum.OUT_PLANE_LOADING_2D = \"OUT_PLANE_LOADING_2D\";\r\nIfcAnalysisModelTypeEnum.LOADING_3D = \"LOADING_3D\";\r\nIfcAnalysisModelTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcAnalysisModelTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcAnalysisTheoryTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcAnalysisTheoryTypeEnum.FIRST_ORDER_THEORY = \"FIRST_ORDER_THEORY\";\r\nIfcAnalysisTheoryTypeEnum.SECOND_ORDER_THEORY = \"SECOND_ORDER_THEORY\";\r\nIfcAnalysisTheoryTypeEnum.THIRD_ORDER_THEORY = \"THIRD_ORDER_THEORY\";\r\nIfcAnalysisTheoryTypeEnum.FULL_NONLINEAR_THEORY = \"FULL_NONLINEAR_THEORY\";\r\nIfcAnalysisTheoryTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcAnalysisTheoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcArithmeticOperatorEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcArithmeticOperatorEnum.ADD = \"ADD\";\r\nIfcArithmeticOperatorEnum.DIVIDE = \"DIVIDE\";\r\nIfcArithmeticOperatorEnum.MULTIPLY = \"MULTIPLY\";\r\nIfcArithmeticOperatorEnum.SUBTRACT = \"SUBTRACT\";\r\nvar IfcAssemblyPlaceEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcAssemblyPlaceEnum.SITE = \"SITE\";\r\nIfcAssemblyPlaceEnum.FACTORY = \"FACTORY\";\r\nIfcAssemblyPlaceEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcAudioVisualApplianceTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcAudioVisualApplianceTypeEnum.AMPLIFIER = \"AMPLIFIER\";\r\nIfcAudioVisualApplianceTypeEnum.CAMERA = \"CAMERA\";\r\nIfcAudioVisualApplianceTypeEnum.DISPLAY = \"DISPLAY\";\r\nIfcAudioVisualApplianceTypeEnum.MICROPHONE = \"MICROPHONE\";\r\nIfcAudioVisualApplianceTypeEnum.PLAYER = \"PLAYER\";\r\nIfcAudioVisualApplianceTypeEnum.PROJECTOR = \"PROJECTOR\";\r\nIfcAudioVisualApplianceTypeEnum.RECEIVER = \"RECEIVER\";\r\nIfcAudioVisualApplianceTypeEnum.SPEAKER = \"SPEAKER\";\r\nIfcAudioVisualApplianceTypeEnum.SWITCHER = \"SWITCHER\";\r\nIfcAudioVisualApplianceTypeEnum.TELEPHONE = \"TELEPHONE\";\r\nIfcAudioVisualApplianceTypeEnum.TUNER = \"TUNER\";\r\nIfcAudioVisualApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcAudioVisualApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcBSplineCurveForm = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcBSplineCurveForm.POLYLINE_FORM = \"POLYLINE_FORM\";\r\nIfcBSplineCurveForm.CIRCULAR_ARC = \"CIRCULAR_ARC\";\r\nIfcBSplineCurveForm.ELLIPTIC_ARC = \"ELLIPTIC_ARC\";\r\nIfcBSplineCurveForm.PARABOLIC_ARC = \"PARABOLIC_ARC\";\r\nIfcBSplineCurveForm.HYPERBOLIC_ARC = \"HYPERBOLIC_ARC\";\r\nIfcBSplineCurveForm.UNSPECIFIED = \"UNSPECIFIED\";\r\nvar IfcBSplineSurfaceForm = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcBSplineSurfaceForm.PLANE_SURF = \"PLANE_SURF\";\r\nIfcBSplineSurfaceForm.CYLINDRICAL_SURF = \"CYLINDRICAL_SURF\";\r\nIfcBSplineSurfaceForm.CONICAL_SURF = \"CONICAL_SURF\";\r\nIfcBSplineSurfaceForm.SPHERICAL_SURF = \"SPHERICAL_SURF\";\r\nIfcBSplineSurfaceForm.TOROIDAL_SURF = \"TOROIDAL_SURF\";\r\nIfcBSplineSurfaceForm.SURF_OF_REVOLUTION = \"SURF_OF_REVOLUTION\";\r\nIfcBSplineSurfaceForm.RULED_SURF = \"RULED_SURF\";\r\nIfcBSplineSurfaceForm.GENERALISED_CONE = \"GENERALISED_CONE\";\r\nIfcBSplineSurfaceForm.QUADRIC_SURF = \"QUADRIC_SURF\";\r\nIfcBSplineSurfaceForm.SURF_OF_LINEAR_EXTRUSION = \"SURF_OF_LINEAR_EXTRUSION\";\r\nIfcBSplineSurfaceForm.UNSPECIFIED = \"UNSPECIFIED\";\r\nvar IfcBeamTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcBeamTypeEnum.BEAM = \"BEAM\";\r\nIfcBeamTypeEnum.JOIST = \"JOIST\";\r\nIfcBeamTypeEnum.HOLLOWCORE = \"HOLLOWCORE\";\r\nIfcBeamTypeEnum.LINTEL = \"LINTEL\";\r\nIfcBeamTypeEnum.SPANDREL = \"SPANDREL\";\r\nIfcBeamTypeEnum.T_BEAM = \"T_BEAM\";\r\nIfcBeamTypeEnum.GIRDER_SEGMENT = \"GIRDER_SEGMENT\";\r\nIfcBeamTypeEnum.DIAPHRAGM = \"DIAPHRAGM\";\r\nIfcBeamTypeEnum.PIERCAP = \"PIERCAP\";\r\nIfcBeamTypeEnum.HATSTONE = \"HATSTONE\";\r\nIfcBeamTypeEnum.CORNICE = \"CORNICE\";\r\nIfcBeamTypeEnum.EDGEBEAM = \"EDGEBEAM\";\r\nIfcBeamTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcBeamTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcBearingTypeDisplacementEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcBearingTypeDisplacementEnum.FIXED_MOVEMENT = \"FIXED_MOVEMENT\";\r\nIfcBearingTypeDisplacementEnum.GUIDED_LONGITUDINAL = \"GUIDED_LONGITUDINAL\";\r\nIfcBearingTypeDisplacementEnum.GUIDED_TRANSVERSAL = \"GUIDED_TRANSVERSAL\";\r\nIfcBearingTypeDisplacementEnum.FREE_MOVEMENT = \"FREE_MOVEMENT\";\r\nIfcBearingTypeDisplacementEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcBearingTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcBearingTypeEnum.CYLINDRICAL = \"CYLINDRICAL\";\r\nIfcBearingTypeEnum.SPHERICAL = \"SPHERICAL\";\r\nIfcBearingTypeEnum.ELASTOMERIC = \"ELASTOMERIC\";\r\nIfcBearingTypeEnum.POT = \"POT\";\r\nIfcBearingTypeEnum.GUIDE = \"GUIDE\";\r\nIfcBearingTypeEnum.ROCKER = \"ROCKER\";\r\nIfcBearingTypeEnum.ROLLER = \"ROLLER\";\r\nIfcBearingTypeEnum.DISK = \"DISK\";\r\nIfcBearingTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcBearingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcBenchmarkEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcBenchmarkEnum.GREATERTHAN = \"GREATERTHAN\";\r\nIfcBenchmarkEnum.GREATERTHANOREQUALTO = \"GREATERTHANOREQUALTO\";\r\nIfcBenchmarkEnum.LESSTHAN = \"LESSTHAN\";\r\nIfcBenchmarkEnum.LESSTHANOREQUALTO = \"LESSTHANOREQUALTO\";\r\nIfcBenchmarkEnum.EQUALTO = \"EQUALTO\";\r\nIfcBenchmarkEnum.NOTEQUALTO = \"NOTEQUALTO\";\r\nIfcBenchmarkEnum.INCLUDES = \"INCLUDES\";\r\nIfcBenchmarkEnum.NOTINCLUDES = \"NOTINCLUDES\";\r\nIfcBenchmarkEnum.INCLUDEDIN = \"INCLUDEDIN\";\r\nIfcBenchmarkEnum.NOTINCLUDEDIN = \"NOTINCLUDEDIN\";\r\nvar IfcBoilerTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcBoilerTypeEnum.WATER = \"WATER\";\r\nIfcBoilerTypeEnum.STEAM = \"STEAM\";\r\nIfcBoilerTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcBoilerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcBooleanOperator = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcBooleanOperator.UNION = \"UNION\";\r\nIfcBooleanOperator.INTERSECTION = \"INTERSECTION\";\r\nIfcBooleanOperator.DIFFERENCE = \"DIFFERENCE\";\r\nvar IfcBridgePartTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcBridgePartTypeEnum.ABUTMENT = \"ABUTMENT\";\r\nIfcBridgePartTypeEnum.DECK = \"DECK\";\r\nIfcBridgePartTypeEnum.DECK_SEGMENT = \"DECK_SEGMENT\";\r\nIfcBridgePartTypeEnum.FOUNDATION = \"FOUNDATION\";\r\nIfcBridgePartTypeEnum.PIER = \"PIER\";\r\nIfcBridgePartTypeEnum.PIER_SEGMENT = \"PIER_SEGMENT\";\r\nIfcBridgePartTypeEnum.PYLON = \"PYLON\";\r\nIfcBridgePartTypeEnum.SUBSTRUCTURE = \"SUBSTRUCTURE\";\r\nIfcBridgePartTypeEnum.SUPERSTRUCTURE = \"SUPERSTRUCTURE\";\r\nIfcBridgePartTypeEnum.SURFACESTRUCTURE = \"SURFACESTRUCTURE\";\r\nIfcBridgePartTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcBridgePartTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcBridgeTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcBridgeTypeEnum.ARCHED = \"ARCHED\";\r\nIfcBridgeTypeEnum.CABLE_STAYED = \"CABLE_STAYED\";\r\nIfcBridgeTypeEnum.CANTILEVER = \"CANTILEVER\";\r\nIfcBridgeTypeEnum.CULVERT = \"CULVERT\";\r\nIfcBridgeTypeEnum.FRAMEWORK = \"FRAMEWORK\";\r\nIfcBridgeTypeEnum.GIRDER = \"GIRDER\";\r\nIfcBridgeTypeEnum.SUSPENSION = \"SUSPENSION\";\r\nIfcBridgeTypeEnum.TRUSS = \"TRUSS\";\r\nIfcBridgeTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcBridgeTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcBuildingElementPartTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcBuildingElementPartTypeEnum.INSULATION = \"INSULATION\";\r\nIfcBuildingElementPartTypeEnum.PRECASTPANEL = \"PRECASTPANEL\";\r\nIfcBuildingElementPartTypeEnum.APRON = \"APRON\";\r\nIfcBuildingElementPartTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcBuildingElementPartTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcBuildingElementProxyTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcBuildingElementProxyTypeEnum.COMPLEX = \"COMPLEX\";\r\nIfcBuildingElementProxyTypeEnum.ELEMENT = \"ELEMENT\";\r\nIfcBuildingElementProxyTypeEnum.PARTIAL = \"PARTIAL\";\r\nIfcBuildingElementProxyTypeEnum.PROVISIONFORVOID = \"PROVISIONFORVOID\";\r\nIfcBuildingElementProxyTypeEnum.PROVISIONFORSPACE = \"PROVISIONFORSPACE\";\r\nIfcBuildingElementProxyTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcBuildingElementProxyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcBuildingSystemTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcBuildingSystemTypeEnum.FENESTRATION = \"FENESTRATION\";\r\nIfcBuildingSystemTypeEnum.FOUNDATION = \"FOUNDATION\";\r\nIfcBuildingSystemTypeEnum.LOADBEARING = \"LOADBEARING\";\r\nIfcBuildingSystemTypeEnum.OUTERSHELL = \"OUTERSHELL\";\r\nIfcBuildingSystemTypeEnum.SHADING = \"SHADING\";\r\nIfcBuildingSystemTypeEnum.TRANSPORT = \"TRANSPORT\";\r\nIfcBuildingSystemTypeEnum.REINFORCING = \"REINFORCING\";\r\nIfcBuildingSystemTypeEnum.PRESTRESSING = \"PRESTRESSING\";\r\nIfcBuildingSystemTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcBuildingSystemTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcBurnerTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcBurnerTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcBurnerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcCableCarrierFittingTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcCableCarrierFittingTypeEnum.BEND = \"BEND\";\r\nIfcCableCarrierFittingTypeEnum.CROSS = \"CROSS\";\r\nIfcCableCarrierFittingTypeEnum.REDUCER = \"REDUCER\";\r\nIfcCableCarrierFittingTypeEnum.TEE = \"TEE\";\r\nIfcCableCarrierFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcCableCarrierFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcCableCarrierSegmentTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcCableCarrierSegmentTypeEnum.CABLELADDERSEGMENT = \"CABLELADDERSEGMENT\";\r\nIfcCableCarrierSegmentTypeEnum.CABLETRAYSEGMENT = \"CABLETRAYSEGMENT\";\r\nIfcCableCarrierSegmentTypeEnum.CABLETRUNKINGSEGMENT = \"CABLETRUNKINGSEGMENT\";\r\nIfcCableCarrierSegmentTypeEnum.CONDUITSEGMENT = \"CONDUITSEGMENT\";\r\nIfcCableCarrierSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcCableCarrierSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcCableFittingTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcCableFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\r\nIfcCableFittingTypeEnum.ENTRY = \"ENTRY\";\r\nIfcCableFittingTypeEnum.EXIT = \"EXIT\";\r\nIfcCableFittingTypeEnum.JUNCTION = \"JUNCTION\";\r\nIfcCableFittingTypeEnum.TRANSITION = \"TRANSITION\";\r\nIfcCableFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcCableFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcCableSegmentTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcCableSegmentTypeEnum.BUSBARSEGMENT = \"BUSBARSEGMENT\";\r\nIfcCableSegmentTypeEnum.CABLESEGMENT = \"CABLESEGMENT\";\r\nIfcCableSegmentTypeEnum.CONDUCTORSEGMENT = \"CONDUCTORSEGMENT\";\r\nIfcCableSegmentTypeEnum.CORESEGMENT = \"CORESEGMENT\";\r\nIfcCableSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcCableSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcCaissonFoundationTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcCaissonFoundationTypeEnum.WELL = \"WELL\";\r\nIfcCaissonFoundationTypeEnum.CAISSON = \"CAISSON\";\r\nIfcCaissonFoundationTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcCaissonFoundationTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcChangeActionEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcChangeActionEnum.NOCHANGE = \"NOCHANGE\";\r\nIfcChangeActionEnum.MODIFIED = \"MODIFIED\";\r\nIfcChangeActionEnum.ADDED = \"ADDED\";\r\nIfcChangeActionEnum.DELETED = \"DELETED\";\r\nIfcChangeActionEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcChillerTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcChillerTypeEnum.AIRCOOLED = \"AIRCOOLED\";\r\nIfcChillerTypeEnum.WATERCOOLED = \"WATERCOOLED\";\r\nIfcChillerTypeEnum.HEATRECOVERY = \"HEATRECOVERY\";\r\nIfcChillerTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcChillerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcChimneyTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcChimneyTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcChimneyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcCoilTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcCoilTypeEnum.DXCOOLINGCOIL = \"DXCOOLINGCOIL\";\r\nIfcCoilTypeEnum.ELECTRICHEATINGCOIL = \"ELECTRICHEATINGCOIL\";\r\nIfcCoilTypeEnum.GASHEATINGCOIL = \"GASHEATINGCOIL\";\r\nIfcCoilTypeEnum.HYDRONICCOIL = \"HYDRONICCOIL\";\r\nIfcCoilTypeEnum.STEAMHEATINGCOIL = \"STEAMHEATINGCOIL\";\r\nIfcCoilTypeEnum.WATERCOOLINGCOIL = \"WATERCOOLINGCOIL\";\r\nIfcCoilTypeEnum.WATERHEATINGCOIL = \"WATERHEATINGCOIL\";\r\nIfcCoilTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcCoilTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcColumnTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcColumnTypeEnum.COLUMN = \"COLUMN\";\r\nIfcColumnTypeEnum.PILASTER = \"PILASTER\";\r\nIfcColumnTypeEnum.PIERSTEM = \"PIERSTEM\";\r\nIfcColumnTypeEnum.PIERSTEM_SEGMENT = \"PIERSTEM_SEGMENT\";\r\nIfcColumnTypeEnum.STANDCOLUMN = \"STANDCOLUMN\";\r\nIfcColumnTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcColumnTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcCommunicationsApplianceTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcCommunicationsApplianceTypeEnum.ANTENNA = \"ANTENNA\";\r\nIfcCommunicationsApplianceTypeEnum.COMPUTER = \"COMPUTER\";\r\nIfcCommunicationsApplianceTypeEnum.FAX = \"FAX\";\r\nIfcCommunicationsApplianceTypeEnum.GATEWAY = \"GATEWAY\";\r\nIfcCommunicationsApplianceTypeEnum.MODEM = \"MODEM\";\r\nIfcCommunicationsApplianceTypeEnum.NETWORKAPPLIANCE = \"NETWORKAPPLIANCE\";\r\nIfcCommunicationsApplianceTypeEnum.NETWORKBRIDGE = \"NETWORKBRIDGE\";\r\nIfcCommunicationsApplianceTypeEnum.NETWORKHUB = \"NETWORKHUB\";\r\nIfcCommunicationsApplianceTypeEnum.PRINTER = \"PRINTER\";\r\nIfcCommunicationsApplianceTypeEnum.REPEATER = \"REPEATER\";\r\nIfcCommunicationsApplianceTypeEnum.ROUTER = \"ROUTER\";\r\nIfcCommunicationsApplianceTypeEnum.SCANNER = \"SCANNER\";\r\nIfcCommunicationsApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcCommunicationsApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcComplexPropertyTemplateTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcComplexPropertyTemplateTypeEnum.P_COMPLEX = \"P_COMPLEX\";\r\nIfcComplexPropertyTemplateTypeEnum.Q_COMPLEX = \"Q_COMPLEX\";\r\nvar IfcCompressorTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcCompressorTypeEnum.DYNAMIC = \"DYNAMIC\";\r\nIfcCompressorTypeEnum.RECIPROCATING = \"RECIPROCATING\";\r\nIfcCompressorTypeEnum.ROTARY = \"ROTARY\";\r\nIfcCompressorTypeEnum.SCROLL = \"SCROLL\";\r\nIfcCompressorTypeEnum.TROCHOIDAL = \"TROCHOIDAL\";\r\nIfcCompressorTypeEnum.SINGLESTAGE = \"SINGLESTAGE\";\r\nIfcCompressorTypeEnum.BOOSTER = \"BOOSTER\";\r\nIfcCompressorTypeEnum.OPENTYPE = \"OPENTYPE\";\r\nIfcCompressorTypeEnum.HERMETIC = \"HERMETIC\";\r\nIfcCompressorTypeEnum.SEMIHERMETIC = \"SEMIHERMETIC\";\r\nIfcCompressorTypeEnum.WELDEDSHELLHERMETIC = \"WELDEDSHELLHERMETIC\";\r\nIfcCompressorTypeEnum.ROLLINGPISTON = \"ROLLINGPISTON\";\r\nIfcCompressorTypeEnum.ROTARYVANE = \"ROTARYVANE\";\r\nIfcCompressorTypeEnum.SINGLESCREW = \"SINGLESCREW\";\r\nIfcCompressorTypeEnum.TWINSCREW = \"TWINSCREW\";\r\nIfcCompressorTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcCompressorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcCondenserTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcCondenserTypeEnum.AIRCOOLED = \"AIRCOOLED\";\r\nIfcCondenserTypeEnum.EVAPORATIVECOOLED = \"EVAPORATIVECOOLED\";\r\nIfcCondenserTypeEnum.WATERCOOLED = \"WATERCOOLED\";\r\nIfcCondenserTypeEnum.WATERCOOLEDBRAZEDPLATE = \"WATERCOOLEDBRAZEDPLATE\";\r\nIfcCondenserTypeEnum.WATERCOOLEDSHELLCOIL = \"WATERCOOLEDSHELLCOIL\";\r\nIfcCondenserTypeEnum.WATERCOOLEDSHELLTUBE = \"WATERCOOLEDSHELLTUBE\";\r\nIfcCondenserTypeEnum.WATERCOOLEDTUBEINTUBE = \"WATERCOOLEDTUBEINTUBE\";\r\nIfcCondenserTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcCondenserTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcConnectionTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcConnectionTypeEnum.ATPATH = \"ATPATH\";\r\nIfcConnectionTypeEnum.ATSTART = \"ATSTART\";\r\nIfcConnectionTypeEnum.ATEND = \"ATEND\";\r\nIfcConnectionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcConstraintEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcConstraintEnum.HARD = \"HARD\";\r\nIfcConstraintEnum.SOFT = \"SOFT\";\r\nIfcConstraintEnum.ADVISORY = \"ADVISORY\";\r\nIfcConstraintEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcConstraintEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcConstructionEquipmentResourceTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcConstructionEquipmentResourceTypeEnum.DEMOLISHING = \"DEMOLISHING\";\r\nIfcConstructionEquipmentResourceTypeEnum.EARTHMOVING = \"EARTHMOVING\";\r\nIfcConstructionEquipmentResourceTypeEnum.ERECTING = \"ERECTING\";\r\nIfcConstructionEquipmentResourceTypeEnum.HEATING = \"HEATING\";\r\nIfcConstructionEquipmentResourceTypeEnum.LIGHTING = \"LIGHTING\";\r\nIfcConstructionEquipmentResourceTypeEnum.PAVING = \"PAVING\";\r\nIfcConstructionEquipmentResourceTypeEnum.PUMPING = \"PUMPING\";\r\nIfcConstructionEquipmentResourceTypeEnum.TRANSPORTING = \"TRANSPORTING\";\r\nIfcConstructionEquipmentResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcConstructionEquipmentResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcConstructionMaterialResourceTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcConstructionMaterialResourceTypeEnum.AGGREGATES = \"AGGREGATES\";\r\nIfcConstructionMaterialResourceTypeEnum.CONCRETE = \"CONCRETE\";\r\nIfcConstructionMaterialResourceTypeEnum.DRYWALL = \"DRYWALL\";\r\nIfcConstructionMaterialResourceTypeEnum.FUEL = \"FUEL\";\r\nIfcConstructionMaterialResourceTypeEnum.GYPSUM = \"GYPSUM\";\r\nIfcConstructionMaterialResourceTypeEnum.MASONRY = \"MASONRY\";\r\nIfcConstructionMaterialResourceTypeEnum.METAL = \"METAL\";\r\nIfcConstructionMaterialResourceTypeEnum.PLASTIC = \"PLASTIC\";\r\nIfcConstructionMaterialResourceTypeEnum.WOOD = \"WOOD\";\r\nIfcConstructionMaterialResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nIfcConstructionMaterialResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nvar IfcConstructionProductResourceTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcConstructionProductResourceTypeEnum.ASSEMBLY = \"ASSEMBLY\";\r\nIfcConstructionProductResourceTypeEnum.FORMWORK = \"FORMWORK\";\r\nIfcConstructionProductResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcConstructionProductResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcControllerTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcControllerTypeEnum.FLOATING = \"FLOATING\";\r\nIfcControllerTypeEnum.PROGRAMMABLE = \"PROGRAMMABLE\";\r\nIfcControllerTypeEnum.PROPORTIONAL = \"PROPORTIONAL\";\r\nIfcControllerTypeEnum.MULTIPOSITION = \"MULTIPOSITION\";\r\nIfcControllerTypeEnum.TWOPOSITION = \"TWOPOSITION\";\r\nIfcControllerTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcControllerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcCooledBeamTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcCooledBeamTypeEnum.ACTIVE = \"ACTIVE\";\r\nIfcCooledBeamTypeEnum.PASSIVE = \"PASSIVE\";\r\nIfcCooledBeamTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcCooledBeamTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcCoolingTowerTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcCoolingTowerTypeEnum.NATURALDRAFT = \"NATURALDRAFT\";\r\nIfcCoolingTowerTypeEnum.MECHANICALINDUCEDDRAFT = \"MECHANICALINDUCEDDRAFT\";\r\nIfcCoolingTowerTypeEnum.MECHANICALFORCEDDRAFT = \"MECHANICALFORCEDDRAFT\";\r\nIfcCoolingTowerTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcCoolingTowerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcCostItemTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcCostItemTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcCostItemTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcCostScheduleTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcCostScheduleTypeEnum.BUDGET = \"BUDGET\";\r\nIfcCostScheduleTypeEnum.COSTPLAN = \"COSTPLAN\";\r\nIfcCostScheduleTypeEnum.ESTIMATE = \"ESTIMATE\";\r\nIfcCostScheduleTypeEnum.TENDER = \"TENDER\";\r\nIfcCostScheduleTypeEnum.PRICEDBILLOFQUANTITIES = \"PRICEDBILLOFQUANTITIES\";\r\nIfcCostScheduleTypeEnum.UNPRICEDBILLOFQUANTITIES = \"UNPRICEDBILLOFQUANTITIES\";\r\nIfcCostScheduleTypeEnum.SCHEDULEOFRATES = \"SCHEDULEOFRATES\";\r\nIfcCostScheduleTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcCostScheduleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcCoveringTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcCoveringTypeEnum.CEILING = \"CEILING\";\r\nIfcCoveringTypeEnum.FLOORING = \"FLOORING\";\r\nIfcCoveringTypeEnum.CLADDING = \"CLADDING\";\r\nIfcCoveringTypeEnum.ROOFING = \"ROOFING\";\r\nIfcCoveringTypeEnum.MOLDING = \"MOLDING\";\r\nIfcCoveringTypeEnum.SKIRTINGBOARD = \"SKIRTINGBOARD\";\r\nIfcCoveringTypeEnum.INSULATION = \"INSULATION\";\r\nIfcCoveringTypeEnum.MEMBRANE = \"MEMBRANE\";\r\nIfcCoveringTypeEnum.SLEEVING = \"SLEEVING\";\r\nIfcCoveringTypeEnum.WRAPPING = \"WRAPPING\";\r\nIfcCoveringTypeEnum.COPING = \"COPING\";\r\nIfcCoveringTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcCoveringTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcCrewResourceTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcCrewResourceTypeEnum.OFFICE = \"OFFICE\";\r\nIfcCrewResourceTypeEnum.SITE = \"SITE\";\r\nIfcCrewResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcCrewResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcCurtainWallTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcCurtainWallTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcCurtainWallTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcCurveInterpolationEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcCurveInterpolationEnum.LINEAR = \"LINEAR\";\r\nIfcCurveInterpolationEnum.LOG_LINEAR = \"LOG_LINEAR\";\r\nIfcCurveInterpolationEnum.LOG_LOG = \"LOG_LOG\";\r\nIfcCurveInterpolationEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcDamperTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcDamperTypeEnum.BACKDRAFTDAMPER = \"BACKDRAFTDAMPER\";\r\nIfcDamperTypeEnum.BALANCINGDAMPER = \"BALANCINGDAMPER\";\r\nIfcDamperTypeEnum.BLASTDAMPER = \"BLASTDAMPER\";\r\nIfcDamperTypeEnum.CONTROLDAMPER = \"CONTROLDAMPER\";\r\nIfcDamperTypeEnum.FIREDAMPER = \"FIREDAMPER\";\r\nIfcDamperTypeEnum.FIRESMOKEDAMPER = \"FIRESMOKEDAMPER\";\r\nIfcDamperTypeEnum.FUMEHOODEXHAUST = \"FUMEHOODEXHAUST\";\r\nIfcDamperTypeEnum.GRAVITYDAMPER = \"GRAVITYDAMPER\";\r\nIfcDamperTypeEnum.GRAVITYRELIEFDAMPER = \"GRAVITYRELIEFDAMPER\";\r\nIfcDamperTypeEnum.RELIEFDAMPER = \"RELIEFDAMPER\";\r\nIfcDamperTypeEnum.SMOKEDAMPER = \"SMOKEDAMPER\";\r\nIfcDamperTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcDamperTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcDataOriginEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcDataOriginEnum.MEASURED = \"MEASURED\";\r\nIfcDataOriginEnum.PREDICTED = \"PREDICTED\";\r\nIfcDataOriginEnum.SIMULATED = \"SIMULATED\";\r\nIfcDataOriginEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcDataOriginEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcDerivedUnitEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcDerivedUnitEnum.ANGULARVELOCITYUNIT = \"ANGULARVELOCITYUNIT\";\r\nIfcDerivedUnitEnum.AREADENSITYUNIT = \"AREADENSITYUNIT\";\r\nIfcDerivedUnitEnum.COMPOUNDPLANEANGLEUNIT = \"COMPOUNDPLANEANGLEUNIT\";\r\nIfcDerivedUnitEnum.DYNAMICVISCOSITYUNIT = \"DYNAMICVISCOSITYUNIT\";\r\nIfcDerivedUnitEnum.HEATFLUXDENSITYUNIT = \"HEATFLUXDENSITYUNIT\";\r\nIfcDerivedUnitEnum.INTEGERCOUNTRATEUNIT = \"INTEGERCOUNTRATEUNIT\";\r\nIfcDerivedUnitEnum.ISOTHERMALMOISTURECAPACITYUNIT = \"ISOTHERMALMOISTURECAPACITYUNIT\";\r\nIfcDerivedUnitEnum.KINEMATICVISCOSITYUNIT = \"KINEMATICVISCOSITYUNIT\";\r\nIfcDerivedUnitEnum.LINEARVELOCITYUNIT = \"LINEARVELOCITYUNIT\";\r\nIfcDerivedUnitEnum.MASSDENSITYUNIT = \"MASSDENSITYUNIT\";\r\nIfcDerivedUnitEnum.MASSFLOWRATEUNIT = \"MASSFLOWRATEUNIT\";\r\nIfcDerivedUnitEnum.MOISTUREDIFFUSIVITYUNIT = \"MOISTUREDIFFUSIVITYUNIT\";\r\nIfcDerivedUnitEnum.MOLECULARWEIGHTUNIT = \"MOLECULARWEIGHTUNIT\";\r\nIfcDerivedUnitEnum.SPECIFICHEATCAPACITYUNIT = \"SPECIFICHEATCAPACITYUNIT\";\r\nIfcDerivedUnitEnum.THERMALADMITTANCEUNIT = \"THERMALADMITTANCEUNIT\";\r\nIfcDerivedUnitEnum.THERMALCONDUCTANCEUNIT = \"THERMALCONDUCTANCEUNIT\";\r\nIfcDerivedUnitEnum.THERMALRESISTANCEUNIT = \"THERMALRESISTANCEUNIT\";\r\nIfcDerivedUnitEnum.THERMALTRANSMITTANCEUNIT = \"THERMALTRANSMITTANCEUNIT\";\r\nIfcDerivedUnitEnum.VAPORPERMEABILITYUNIT = \"VAPORPERMEABILITYUNIT\";\r\nIfcDerivedUnitEnum.VOLUMETRICFLOWRATEUNIT = \"VOLUMETRICFLOWRATEUNIT\";\r\nIfcDerivedUnitEnum.ROTATIONALFREQUENCYUNIT = \"ROTATIONALFREQUENCYUNIT\";\r\nIfcDerivedUnitEnum.TORQUEUNIT = \"TORQUEUNIT\";\r\nIfcDerivedUnitEnum.MOMENTOFINERTIAUNIT = \"MOMENTOFINERTIAUNIT\";\r\nIfcDerivedUnitEnum.LINEARMOMENTUNIT = \"LINEARMOMENTUNIT\";\r\nIfcDerivedUnitEnum.LINEARFORCEUNIT = \"LINEARFORCEUNIT\";\r\nIfcDerivedUnitEnum.PLANARFORCEUNIT = \"PLANARFORCEUNIT\";\r\nIfcDerivedUnitEnum.MODULUSOFELASTICITYUNIT = \"MODULUSOFELASTICITYUNIT\";\r\nIfcDerivedUnitEnum.SHEARMODULUSUNIT = \"SHEARMODULUSUNIT\";\r\nIfcDerivedUnitEnum.LINEARSTIFFNESSUNIT = \"LINEARSTIFFNESSUNIT\";\r\nIfcDerivedUnitEnum.ROTATIONALSTIFFNESSUNIT = \"ROTATIONALSTIFFNESSUNIT\";\r\nIfcDerivedUnitEnum.MODULUSOFSUBGRADEREACTIONUNIT = \"MODULUSOFSUBGRADEREACTIONUNIT\";\r\nIfcDerivedUnitEnum.ACCELERATIONUNIT = \"ACCELERATIONUNIT\";\r\nIfcDerivedUnitEnum.CURVATUREUNIT = \"CURVATUREUNIT\";\r\nIfcDerivedUnitEnum.HEATINGVALUEUNIT = \"HEATINGVALUEUNIT\";\r\nIfcDerivedUnitEnum.IONCONCENTRATIONUNIT = \"IONCONCENTRATIONUNIT\";\r\nIfcDerivedUnitEnum.LUMINOUSINTENSITYDISTRIBUTIONUNIT = \"LUMINOUSINTENSITYDISTRIBUTIONUNIT\";\r\nIfcDerivedUnitEnum.MASSPERLENGTHUNIT = \"MASSPERLENGTHUNIT\";\r\nIfcDerivedUnitEnum.MODULUSOFLINEARSUBGRADEREACTIONUNIT = \"MODULUSOFLINEARSUBGRADEREACTIONUNIT\";\r\nIfcDerivedUnitEnum.MODULUSOFROTATIONALSUBGRADEREACTIONUNIT = \"MODULUSOFROTATIONALSUBGRADEREACTIONUNIT\";\r\nIfcDerivedUnitEnum.PHUNIT = \"PHUNIT\";\r\nIfcDerivedUnitEnum.ROTATIONALMASSUNIT = \"ROTATIONALMASSUNIT\";\r\nIfcDerivedUnitEnum.SECTIONAREAINTEGRALUNIT = \"SECTIONAREAINTEGRALUNIT\";\r\nIfcDerivedUnitEnum.SECTIONMODULUSUNIT = \"SECTIONMODULUSUNIT\";\r\nIfcDerivedUnitEnum.SOUNDPOWERLEVELUNIT = \"SOUNDPOWERLEVELUNIT\";\r\nIfcDerivedUnitEnum.SOUNDPOWERUNIT = \"SOUNDPOWERUNIT\";\r\nIfcDerivedUnitEnum.SOUNDPRESSURELEVELUNIT = \"SOUNDPRESSURELEVELUNIT\";\r\nIfcDerivedUnitEnum.SOUNDPRESSUREUNIT = \"SOUNDPRESSUREUNIT\";\r\nIfcDerivedUnitEnum.TEMPERATUREGRADIENTUNIT = \"TEMPERATUREGRADIENTUNIT\";\r\nIfcDerivedUnitEnum.TEMPERATURERATEOFCHANGEUNIT = \"TEMPERATURERATEOFCHANGEUNIT\";\r\nIfcDerivedUnitEnum.THERMALEXPANSIONCOEFFICIENTUNIT = \"THERMALEXPANSIONCOEFFICIENTUNIT\";\r\nIfcDerivedUnitEnum.WARPINGCONSTANTUNIT = \"WARPINGCONSTANTUNIT\";\r\nIfcDerivedUnitEnum.WARPINGMOMENTUNIT = \"WARPINGMOMENTUNIT\";\r\nIfcDerivedUnitEnum.USERDEFINED = \"USERDEFINED\";\r\nvar IfcDirectionSenseEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcDirectionSenseEnum.POSITIVE = \"POSITIVE\";\r\nIfcDirectionSenseEnum.NEGATIVE = \"NEGATIVE\";\r\nvar IfcDiscreteAccessoryTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcDiscreteAccessoryTypeEnum.ANCHORPLATE = \"ANCHORPLATE\";\r\nIfcDiscreteAccessoryTypeEnum.BRACKET = \"BRACKET\";\r\nIfcDiscreteAccessoryTypeEnum.SHOE = \"SHOE\";\r\nIfcDiscreteAccessoryTypeEnum.EXPANSION_JOINT_DEVICE = \"EXPANSION_JOINT_DEVICE\";\r\nIfcDiscreteAccessoryTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcDiscreteAccessoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcDistributionChamberElementTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcDistributionChamberElementTypeEnum.FORMEDDUCT = \"FORMEDDUCT\";\r\nIfcDistributionChamberElementTypeEnum.INSPECTIONCHAMBER = \"INSPECTIONCHAMBER\";\r\nIfcDistributionChamberElementTypeEnum.INSPECTIONPIT = \"INSPECTIONPIT\";\r\nIfcDistributionChamberElementTypeEnum.MANHOLE = \"MANHOLE\";\r\nIfcDistributionChamberElementTypeEnum.METERCHAMBER = \"METERCHAMBER\";\r\nIfcDistributionChamberElementTypeEnum.SUMP = \"SUMP\";\r\nIfcDistributionChamberElementTypeEnum.TRENCH = \"TRENCH\";\r\nIfcDistributionChamberElementTypeEnum.VALVECHAMBER = \"VALVECHAMBER\";\r\nIfcDistributionChamberElementTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcDistributionChamberElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcDistributionPortTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcDistributionPortTypeEnum.CABLE = \"CABLE\";\r\nIfcDistributionPortTypeEnum.CABLECARRIER = \"CABLECARRIER\";\r\nIfcDistributionPortTypeEnum.DUCT = \"DUCT\";\r\nIfcDistributionPortTypeEnum.PIPE = \"PIPE\";\r\nIfcDistributionPortTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcDistributionPortTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcDistributionSystemEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcDistributionSystemEnum.AIRCONDITIONING = \"AIRCONDITIONING\";\r\nIfcDistributionSystemEnum.AUDIOVISUAL = \"AUDIOVISUAL\";\r\nIfcDistributionSystemEnum.CHEMICAL = \"CHEMICAL\";\r\nIfcDistributionSystemEnum.CHILLEDWATER = \"CHILLEDWATER\";\r\nIfcDistributionSystemEnum.COMMUNICATION = \"COMMUNICATION\";\r\nIfcDistributionSystemEnum.COMPRESSEDAIR = \"COMPRESSEDAIR\";\r\nIfcDistributionSystemEnum.CONDENSERWATER = \"CONDENSERWATER\";\r\nIfcDistributionSystemEnum.CONTROL = \"CONTROL\";\r\nIfcDistributionSystemEnum.CONVEYING = \"CONVEYING\";\r\nIfcDistributionSystemEnum.DATA = \"DATA\";\r\nIfcDistributionSystemEnum.DISPOSAL = \"DISPOSAL\";\r\nIfcDistributionSystemEnum.DOMESTICCOLDWATER = \"DOMESTICCOLDWATER\";\r\nIfcDistributionSystemEnum.DOMESTICHOTWATER = \"DOMESTICHOTWATER\";\r\nIfcDistributionSystemEnum.DRAINAGE = \"DRAINAGE\";\r\nIfcDistributionSystemEnum.EARTHING = \"EARTHING\";\r\nIfcDistributionSystemEnum.ELECTRICAL = \"ELECTRICAL\";\r\nIfcDistributionSystemEnum.ELECTROACOUSTIC = \"ELECTROACOUSTIC\";\r\nIfcDistributionSystemEnum.EXHAUST = \"EXHAUST\";\r\nIfcDistributionSystemEnum.FIREPROTECTION = \"FIREPROTECTION\";\r\nIfcDistributionSystemEnum.FUEL = \"FUEL\";\r\nIfcDistributionSystemEnum.GAS = \"GAS\";\r\nIfcDistributionSystemEnum.HAZARDOUS = \"HAZARDOUS\";\r\nIfcDistributionSystemEnum.HEATING = \"HEATING\";\r\nIfcDistributionSystemEnum.LIGHTING = \"LIGHTING\";\r\nIfcDistributionSystemEnum.LIGHTNINGPROTECTION = \"LIGHTNINGPROTECTION\";\r\nIfcDistributionSystemEnum.MUNICIPALSOLIDWASTE = \"MUNICIPALSOLIDWASTE\";\r\nIfcDistributionSystemEnum.OIL = \"OIL\";\r\nIfcDistributionSystemEnum.OPERATIONAL = \"OPERATIONAL\";\r\nIfcDistributionSystemEnum.POWERGENERATION = \"POWERGENERATION\";\r\nIfcDistributionSystemEnum.RAINWATER = \"RAINWATER\";\r\nIfcDistributionSystemEnum.REFRIGERATION = \"REFRIGERATION\";\r\nIfcDistributionSystemEnum.SECURITY = \"SECURITY\";\r\nIfcDistributionSystemEnum.SEWAGE = \"SEWAGE\";\r\nIfcDistributionSystemEnum.SIGNAL = \"SIGNAL\";\r\nIfcDistributionSystemEnum.STORMWATER = \"STORMWATER\";\r\nIfcDistributionSystemEnum.TELEPHONE = \"TELEPHONE\";\r\nIfcDistributionSystemEnum.TV = \"TV\";\r\nIfcDistributionSystemEnum.VACUUM = \"VACUUM\";\r\nIfcDistributionSystemEnum.VENT = \"VENT\";\r\nIfcDistributionSystemEnum.VENTILATION = \"VENTILATION\";\r\nIfcDistributionSystemEnum.WASTEWATER = \"WASTEWATER\";\r\nIfcDistributionSystemEnum.WATERSUPPLY = \"WATERSUPPLY\";\r\nIfcDistributionSystemEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcDistributionSystemEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcDocumentConfidentialityEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcDocumentConfidentialityEnum.PUBLIC = \"PUBLIC\";\r\nIfcDocumentConfidentialityEnum.RESTRICTED = \"RESTRICTED\";\r\nIfcDocumentConfidentialityEnum.CONFIDENTIAL = \"CONFIDENTIAL\";\r\nIfcDocumentConfidentialityEnum.PERSONAL = \"PERSONAL\";\r\nIfcDocumentConfidentialityEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcDocumentConfidentialityEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcDocumentStatusEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcDocumentStatusEnum.DRAFT = \"DRAFT\";\r\nIfcDocumentStatusEnum.FINALDRAFT = \"FINALDRAFT\";\r\nIfcDocumentStatusEnum.FINAL = \"FINAL\";\r\nIfcDocumentStatusEnum.REVISION = \"REVISION\";\r\nIfcDocumentStatusEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcDoorPanelOperationEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcDoorPanelOperationEnum.SWINGING = \"SWINGING\";\r\nIfcDoorPanelOperationEnum.DOUBLE_ACTING = \"DOUBLE_ACTING\";\r\nIfcDoorPanelOperationEnum.SLIDING = \"SLIDING\";\r\nIfcDoorPanelOperationEnum.FOLDING = \"FOLDING\";\r\nIfcDoorPanelOperationEnum.REVOLVING = \"REVOLVING\";\r\nIfcDoorPanelOperationEnum.ROLLINGUP = \"ROLLINGUP\";\r\nIfcDoorPanelOperationEnum.FIXEDPANEL = \"FIXEDPANEL\";\r\nIfcDoorPanelOperationEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcDoorPanelOperationEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcDoorPanelPositionEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcDoorPanelPositionEnum.LEFT = \"LEFT\";\r\nIfcDoorPanelPositionEnum.MIDDLE = \"MIDDLE\";\r\nIfcDoorPanelPositionEnum.RIGHT = \"RIGHT\";\r\nIfcDoorPanelPositionEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcDoorStyleConstructionEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcDoorStyleConstructionEnum.ALUMINIUM = \"ALUMINIUM\";\r\nIfcDoorStyleConstructionEnum.HIGH_GRADE_STEEL = \"HIGH_GRADE_STEEL\";\r\nIfcDoorStyleConstructionEnum.STEEL = \"STEEL\";\r\nIfcDoorStyleConstructionEnum.WOOD = \"WOOD\";\r\nIfcDoorStyleConstructionEnum.ALUMINIUM_WOOD = \"ALUMINIUM_WOOD\";\r\nIfcDoorStyleConstructionEnum.ALUMINIUM_PLASTIC = \"ALUMINIUM_PLASTIC\";\r\nIfcDoorStyleConstructionEnum.PLASTIC = \"PLASTIC\";\r\nIfcDoorStyleConstructionEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcDoorStyleConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcDoorStyleOperationEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcDoorStyleOperationEnum.SINGLE_SWING_LEFT = \"SINGLE_SWING_LEFT\";\r\nIfcDoorStyleOperationEnum.SINGLE_SWING_RIGHT = \"SINGLE_SWING_RIGHT\";\r\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING = \"DOUBLE_DOOR_SINGLE_SWING\";\r\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT\";\r\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT\";\r\nIfcDoorStyleOperationEnum.DOUBLE_SWING_LEFT = \"DOUBLE_SWING_LEFT\";\r\nIfcDoorStyleOperationEnum.DOUBLE_SWING_RIGHT = \"DOUBLE_SWING_RIGHT\";\r\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_DOUBLE_SWING = \"DOUBLE_DOOR_DOUBLE_SWING\";\r\nIfcDoorStyleOperationEnum.SLIDING_TO_LEFT = \"SLIDING_TO_LEFT\";\r\nIfcDoorStyleOperationEnum.SLIDING_TO_RIGHT = \"SLIDING_TO_RIGHT\";\r\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_SLIDING = \"DOUBLE_DOOR_SLIDING\";\r\nIfcDoorStyleOperationEnum.FOLDING_TO_LEFT = \"FOLDING_TO_LEFT\";\r\nIfcDoorStyleOperationEnum.FOLDING_TO_RIGHT = \"FOLDING_TO_RIGHT\";\r\nIfcDoorStyleOperationEnum.DOUBLE_DOOR_FOLDING = \"DOUBLE_DOOR_FOLDING\";\r\nIfcDoorStyleOperationEnum.REVOLVING = \"REVOLVING\";\r\nIfcDoorStyleOperationEnum.ROLLINGUP = \"ROLLINGUP\";\r\nIfcDoorStyleOperationEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcDoorStyleOperationEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcDoorTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcDoorTypeEnum.DOOR = \"DOOR\";\r\nIfcDoorTypeEnum.GATE = \"GATE\";\r\nIfcDoorTypeEnum.TRAPDOOR = \"TRAPDOOR\";\r\nIfcDoorTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcDoorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcDoorTypeOperationEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcDoorTypeOperationEnum.SINGLE_SWING_LEFT = \"SINGLE_SWING_LEFT\";\r\nIfcDoorTypeOperationEnum.SINGLE_SWING_RIGHT = \"SINGLE_SWING_RIGHT\";\r\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING = \"DOUBLE_DOOR_SINGLE_SWING\";\r\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT\";\r\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT = \"DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT\";\r\nIfcDoorTypeOperationEnum.DOUBLE_SWING_LEFT = \"DOUBLE_SWING_LEFT\";\r\nIfcDoorTypeOperationEnum.DOUBLE_SWING_RIGHT = \"DOUBLE_SWING_RIGHT\";\r\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_DOUBLE_SWING = \"DOUBLE_DOOR_DOUBLE_SWING\";\r\nIfcDoorTypeOperationEnum.SLIDING_TO_LEFT = \"SLIDING_TO_LEFT\";\r\nIfcDoorTypeOperationEnum.SLIDING_TO_RIGHT = \"SLIDING_TO_RIGHT\";\r\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_SLIDING = \"DOUBLE_DOOR_SLIDING\";\r\nIfcDoorTypeOperationEnum.FOLDING_TO_LEFT = \"FOLDING_TO_LEFT\";\r\nIfcDoorTypeOperationEnum.FOLDING_TO_RIGHT = \"FOLDING_TO_RIGHT\";\r\nIfcDoorTypeOperationEnum.DOUBLE_DOOR_FOLDING = \"DOUBLE_DOOR_FOLDING\";\r\nIfcDoorTypeOperationEnum.REVOLVING = \"REVOLVING\";\r\nIfcDoorTypeOperationEnum.ROLLINGUP = \"ROLLINGUP\";\r\nIfcDoorTypeOperationEnum.SWING_FIXED_LEFT = \"SWING_FIXED_LEFT\";\r\nIfcDoorTypeOperationEnum.SWING_FIXED_RIGHT = \"SWING_FIXED_RIGHT\";\r\nIfcDoorTypeOperationEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcDoorTypeOperationEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcDuctFittingTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcDuctFittingTypeEnum.BEND = \"BEND\";\r\nIfcDuctFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\r\nIfcDuctFittingTypeEnum.ENTRY = \"ENTRY\";\r\nIfcDuctFittingTypeEnum.EXIT = \"EXIT\";\r\nIfcDuctFittingTypeEnum.JUNCTION = \"JUNCTION\";\r\nIfcDuctFittingTypeEnum.OBSTRUCTION = \"OBSTRUCTION\";\r\nIfcDuctFittingTypeEnum.TRANSITION = \"TRANSITION\";\r\nIfcDuctFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcDuctFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcDuctSegmentTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcDuctSegmentTypeEnum.RIGIDSEGMENT = \"RIGIDSEGMENT\";\r\nIfcDuctSegmentTypeEnum.FLEXIBLESEGMENT = \"FLEXIBLESEGMENT\";\r\nIfcDuctSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcDuctSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcDuctSilencerTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcDuctSilencerTypeEnum.FLATOVAL = \"FLATOVAL\";\r\nIfcDuctSilencerTypeEnum.RECTANGULAR = \"RECTANGULAR\";\r\nIfcDuctSilencerTypeEnum.ROUND = \"ROUND\";\r\nIfcDuctSilencerTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcDuctSilencerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcElectricApplianceTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcElectricApplianceTypeEnum.DISHWASHER = \"DISHWASHER\";\r\nIfcElectricApplianceTypeEnum.ELECTRICCOOKER = \"ELECTRICCOOKER\";\r\nIfcElectricApplianceTypeEnum.FREESTANDINGELECTRICHEATER = \"FREESTANDINGELECTRICHEATER\";\r\nIfcElectricApplianceTypeEnum.FREESTANDINGFAN = \"FREESTANDINGFAN\";\r\nIfcElectricApplianceTypeEnum.FREESTANDINGWATERHEATER = \"FREESTANDINGWATERHEATER\";\r\nIfcElectricApplianceTypeEnum.FREESTANDINGWATERCOOLER = \"FREESTANDINGWATERCOOLER\";\r\nIfcElectricApplianceTypeEnum.FREEZER = \"FREEZER\";\r\nIfcElectricApplianceTypeEnum.FRIDGE_FREEZER = \"FRIDGE_FREEZER\";\r\nIfcElectricApplianceTypeEnum.HANDDRYER = \"HANDDRYER\";\r\nIfcElectricApplianceTypeEnum.KITCHENMACHINE = \"KITCHENMACHINE\";\r\nIfcElectricApplianceTypeEnum.MICROWAVE = \"MICROWAVE\";\r\nIfcElectricApplianceTypeEnum.PHOTOCOPIER = \"PHOTOCOPIER\";\r\nIfcElectricApplianceTypeEnum.REFRIGERATOR = \"REFRIGERATOR\";\r\nIfcElectricApplianceTypeEnum.TUMBLEDRYER = \"TUMBLEDRYER\";\r\nIfcElectricApplianceTypeEnum.VENDINGMACHINE = \"VENDINGMACHINE\";\r\nIfcElectricApplianceTypeEnum.WASHINGMACHINE = \"WASHINGMACHINE\";\r\nIfcElectricApplianceTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcElectricApplianceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcElectricDistributionBoardTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcElectricDistributionBoardTypeEnum.CONSUMERUNIT = \"CONSUMERUNIT\";\r\nIfcElectricDistributionBoardTypeEnum.DISTRIBUTIONBOARD = \"DISTRIBUTIONBOARD\";\r\nIfcElectricDistributionBoardTypeEnum.MOTORCONTROLCENTRE = \"MOTORCONTROLCENTRE\";\r\nIfcElectricDistributionBoardTypeEnum.SWITCHBOARD = \"SWITCHBOARD\";\r\nIfcElectricDistributionBoardTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcElectricDistributionBoardTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcElectricFlowStorageDeviceTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcElectricFlowStorageDeviceTypeEnum.BATTERY = \"BATTERY\";\r\nIfcElectricFlowStorageDeviceTypeEnum.CAPACITORBANK = \"CAPACITORBANK\";\r\nIfcElectricFlowStorageDeviceTypeEnum.HARMONICFILTER = \"HARMONICFILTER\";\r\nIfcElectricFlowStorageDeviceTypeEnum.INDUCTORBANK = \"INDUCTORBANK\";\r\nIfcElectricFlowStorageDeviceTypeEnum.UPS = \"UPS\";\r\nIfcElectricFlowStorageDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcElectricFlowStorageDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcElectricGeneratorTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcElectricGeneratorTypeEnum.CHP = \"CHP\";\r\nIfcElectricGeneratorTypeEnum.ENGINEGENERATOR = \"ENGINEGENERATOR\";\r\nIfcElectricGeneratorTypeEnum.STANDALONE = \"STANDALONE\";\r\nIfcElectricGeneratorTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcElectricGeneratorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcElectricMotorTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcElectricMotorTypeEnum.DC = \"DC\";\r\nIfcElectricMotorTypeEnum.INDUCTION = \"INDUCTION\";\r\nIfcElectricMotorTypeEnum.POLYPHASE = \"POLYPHASE\";\r\nIfcElectricMotorTypeEnum.RELUCTANCESYNCHRONOUS = \"RELUCTANCESYNCHRONOUS\";\r\nIfcElectricMotorTypeEnum.SYNCHRONOUS = \"SYNCHRONOUS\";\r\nIfcElectricMotorTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcElectricMotorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcElectricTimeControlTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcElectricTimeControlTypeEnum.TIMECLOCK = \"TIMECLOCK\";\r\nIfcElectricTimeControlTypeEnum.TIMEDELAY = \"TIMEDELAY\";\r\nIfcElectricTimeControlTypeEnum.RELAY = \"RELAY\";\r\nIfcElectricTimeControlTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcElectricTimeControlTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcElementAssemblyTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcElementAssemblyTypeEnum.ACCESSORY_ASSEMBLY = \"ACCESSORY_ASSEMBLY\";\r\nIfcElementAssemblyTypeEnum.ARCH = \"ARCH\";\r\nIfcElementAssemblyTypeEnum.BEAM_GRID = \"BEAM_GRID\";\r\nIfcElementAssemblyTypeEnum.BRACED_FRAME = \"BRACED_FRAME\";\r\nIfcElementAssemblyTypeEnum.GIRDER = \"GIRDER\";\r\nIfcElementAssemblyTypeEnum.REINFORCEMENT_UNIT = \"REINFORCEMENT_UNIT\";\r\nIfcElementAssemblyTypeEnum.RIGID_FRAME = \"RIGID_FRAME\";\r\nIfcElementAssemblyTypeEnum.SLAB_FIELD = \"SLAB_FIELD\";\r\nIfcElementAssemblyTypeEnum.TRUSS = \"TRUSS\";\r\nIfcElementAssemblyTypeEnum.ABUTMENT = \"ABUTMENT\";\r\nIfcElementAssemblyTypeEnum.PIER = \"PIER\";\r\nIfcElementAssemblyTypeEnum.PYLON = \"PYLON\";\r\nIfcElementAssemblyTypeEnum.CROSS_BRACING = \"CROSS_BRACING\";\r\nIfcElementAssemblyTypeEnum.DECK = \"DECK\";\r\nIfcElementAssemblyTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcElementAssemblyTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcElementCompositionEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcElementCompositionEnum.COMPLEX = \"COMPLEX\";\r\nIfcElementCompositionEnum.ELEMENT = \"ELEMENT\";\r\nIfcElementCompositionEnum.PARTIAL = \"PARTIAL\";\r\nvar IfcEngineTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcEngineTypeEnum.EXTERNALCOMBUSTION = \"EXTERNALCOMBUSTION\";\r\nIfcEngineTypeEnum.INTERNALCOMBUSTION = \"INTERNALCOMBUSTION\";\r\nIfcEngineTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcEngineTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcEvaporativeCoolerTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER = \"DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER\";\r\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER = \"DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER\";\r\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER = \"DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER\";\r\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER = \"DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER\";\r\nIfcEvaporativeCoolerTypeEnum.DIRECTEVAPORATIVEAIRWASHER = \"DIRECTEVAPORATIVEAIRWASHER\";\r\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVEPACKAGEAIRCOOLER = \"INDIRECTEVAPORATIVEPACKAGEAIRCOOLER\";\r\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVEWETCOIL = \"INDIRECTEVAPORATIVEWETCOIL\";\r\nIfcEvaporativeCoolerTypeEnum.INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER = \"INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER\";\r\nIfcEvaporativeCoolerTypeEnum.INDIRECTDIRECTCOMBINATION = \"INDIRECTDIRECTCOMBINATION\";\r\nIfcEvaporativeCoolerTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcEvaporativeCoolerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcEvaporatorTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcEvaporatorTypeEnum.DIRECTEXPANSION = \"DIRECTEXPANSION\";\r\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONSHELLANDTUBE = \"DIRECTEXPANSIONSHELLANDTUBE\";\r\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONTUBEINTUBE = \"DIRECTEXPANSIONTUBEINTUBE\";\r\nIfcEvaporatorTypeEnum.DIRECTEXPANSIONBRAZEDPLATE = \"DIRECTEXPANSIONBRAZEDPLATE\";\r\nIfcEvaporatorTypeEnum.FLOODEDSHELLANDTUBE = \"FLOODEDSHELLANDTUBE\";\r\nIfcEvaporatorTypeEnum.SHELLANDCOIL = \"SHELLANDCOIL\";\r\nIfcEvaporatorTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcEvaporatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcEventTriggerTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcEventTriggerTypeEnum.EVENTRULE = \"EVENTRULE\";\r\nIfcEventTriggerTypeEnum.EVENTMESSAGE = \"EVENTMESSAGE\";\r\nIfcEventTriggerTypeEnum.EVENTTIME = \"EVENTTIME\";\r\nIfcEventTriggerTypeEnum.EVENTCOMPLEX = \"EVENTCOMPLEX\";\r\nIfcEventTriggerTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcEventTriggerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcEventTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcEventTypeEnum.STARTEVENT = \"STARTEVENT\";\r\nIfcEventTypeEnum.ENDEVENT = \"ENDEVENT\";\r\nIfcEventTypeEnum.INTERMEDIATEEVENT = \"INTERMEDIATEEVENT\";\r\nIfcEventTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcEventTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcExternalSpatialElementTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcExternalSpatialElementTypeEnum.EXTERNAL = \"EXTERNAL\";\r\nIfcExternalSpatialElementTypeEnum.EXTERNAL_EARTH = \"EXTERNAL_EARTH\";\r\nIfcExternalSpatialElementTypeEnum.EXTERNAL_WATER = \"EXTERNAL_WATER\";\r\nIfcExternalSpatialElementTypeEnum.EXTERNAL_FIRE = \"EXTERNAL_FIRE\";\r\nIfcExternalSpatialElementTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcExternalSpatialElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcFanTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcFanTypeEnum.CENTRIFUGALFORWARDCURVED = \"CENTRIFUGALFORWARDCURVED\";\r\nIfcFanTypeEnum.CENTRIFUGALRADIAL = \"CENTRIFUGALRADIAL\";\r\nIfcFanTypeEnum.CENTRIFUGALBACKWARDINCLINEDCURVED = \"CENTRIFUGALBACKWARDINCLINEDCURVED\";\r\nIfcFanTypeEnum.CENTRIFUGALAIRFOIL = \"CENTRIFUGALAIRFOIL\";\r\nIfcFanTypeEnum.TUBEAXIAL = \"TUBEAXIAL\";\r\nIfcFanTypeEnum.VANEAXIAL = \"VANEAXIAL\";\r\nIfcFanTypeEnum.PROPELLORAXIAL = \"PROPELLORAXIAL\";\r\nIfcFanTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcFanTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcFastenerTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcFastenerTypeEnum.GLUE = \"GLUE\";\r\nIfcFastenerTypeEnum.MORTAR = \"MORTAR\";\r\nIfcFastenerTypeEnum.WELD = \"WELD\";\r\nIfcFastenerTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcFastenerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcFilterTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcFilterTypeEnum.AIRPARTICLEFILTER = \"AIRPARTICLEFILTER\";\r\nIfcFilterTypeEnum.COMPRESSEDAIRFILTER = \"COMPRESSEDAIRFILTER\";\r\nIfcFilterTypeEnum.ODORFILTER = \"ODORFILTER\";\r\nIfcFilterTypeEnum.OILFILTER = \"OILFILTER\";\r\nIfcFilterTypeEnum.STRAINER = \"STRAINER\";\r\nIfcFilterTypeEnum.WATERFILTER = \"WATERFILTER\";\r\nIfcFilterTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcFilterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcFireSuppressionTerminalTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcFireSuppressionTerminalTypeEnum.BREECHINGINLET = \"BREECHINGINLET\";\r\nIfcFireSuppressionTerminalTypeEnum.FIREHYDRANT = \"FIREHYDRANT\";\r\nIfcFireSuppressionTerminalTypeEnum.HOSEREEL = \"HOSEREEL\";\r\nIfcFireSuppressionTerminalTypeEnum.SPRINKLER = \"SPRINKLER\";\r\nIfcFireSuppressionTerminalTypeEnum.SPRINKLERDEFLECTOR = \"SPRINKLERDEFLECTOR\";\r\nIfcFireSuppressionTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcFireSuppressionTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcFlowDirectionEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcFlowDirectionEnum.SOURCE = \"SOURCE\";\r\nIfcFlowDirectionEnum.SINK = \"SINK\";\r\nIfcFlowDirectionEnum.SOURCEANDSINK = \"SOURCEANDSINK\";\r\nIfcFlowDirectionEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcFlowInstrumentTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcFlowInstrumentTypeEnum.PRESSUREGAUGE = \"PRESSUREGAUGE\";\r\nIfcFlowInstrumentTypeEnum.THERMOMETER = \"THERMOMETER\";\r\nIfcFlowInstrumentTypeEnum.AMMETER = \"AMMETER\";\r\nIfcFlowInstrumentTypeEnum.FREQUENCYMETER = \"FREQUENCYMETER\";\r\nIfcFlowInstrumentTypeEnum.POWERFACTORMETER = \"POWERFACTORMETER\";\r\nIfcFlowInstrumentTypeEnum.PHASEANGLEMETER = \"PHASEANGLEMETER\";\r\nIfcFlowInstrumentTypeEnum.VOLTMETER_PEAK = \"VOLTMETER_PEAK\";\r\nIfcFlowInstrumentTypeEnum.VOLTMETER_RMS = \"VOLTMETER_RMS\";\r\nIfcFlowInstrumentTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcFlowInstrumentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcFlowMeterTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcFlowMeterTypeEnum.ENERGYMETER = \"ENERGYMETER\";\r\nIfcFlowMeterTypeEnum.GASMETER = \"GASMETER\";\r\nIfcFlowMeterTypeEnum.OILMETER = \"OILMETER\";\r\nIfcFlowMeterTypeEnum.WATERMETER = \"WATERMETER\";\r\nIfcFlowMeterTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcFlowMeterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcFootingTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcFootingTypeEnum.CAISSON_FOUNDATION = \"CAISSON_FOUNDATION\";\r\nIfcFootingTypeEnum.FOOTING_BEAM = \"FOOTING_BEAM\";\r\nIfcFootingTypeEnum.PAD_FOOTING = \"PAD_FOOTING\";\r\nIfcFootingTypeEnum.PILE_CAP = \"PILE_CAP\";\r\nIfcFootingTypeEnum.STRIP_FOOTING = \"STRIP_FOOTING\";\r\nIfcFootingTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcFootingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcFurnitureTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcFurnitureTypeEnum.CHAIR = \"CHAIR\";\r\nIfcFurnitureTypeEnum.TABLE = \"TABLE\";\r\nIfcFurnitureTypeEnum.DESK = \"DESK\";\r\nIfcFurnitureTypeEnum.BED = \"BED\";\r\nIfcFurnitureTypeEnum.FILECABINET = \"FILECABINET\";\r\nIfcFurnitureTypeEnum.SHELF = \"SHELF\";\r\nIfcFurnitureTypeEnum.SOFA = \"SOFA\";\r\nIfcFurnitureTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcFurnitureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcGeographicElementTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcGeographicElementTypeEnum.TERRAIN = \"TERRAIN\";\r\nIfcGeographicElementTypeEnum.SOIL_BORING_POINT = \"SOIL_BORING_POINT\";\r\nIfcGeographicElementTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcGeographicElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcGeometricProjectionEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcGeometricProjectionEnum.GRAPH_VIEW = \"GRAPH_VIEW\";\r\nIfcGeometricProjectionEnum.SKETCH_VIEW = \"SKETCH_VIEW\";\r\nIfcGeometricProjectionEnum.MODEL_VIEW = \"MODEL_VIEW\";\r\nIfcGeometricProjectionEnum.PLAN_VIEW = \"PLAN_VIEW\";\r\nIfcGeometricProjectionEnum.REFLECTED_PLAN_VIEW = \"REFLECTED_PLAN_VIEW\";\r\nIfcGeometricProjectionEnum.SECTION_VIEW = \"SECTION_VIEW\";\r\nIfcGeometricProjectionEnum.ELEVATION_VIEW = \"ELEVATION_VIEW\";\r\nIfcGeometricProjectionEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcGeometricProjectionEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcGlobalOrLocalEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcGlobalOrLocalEnum.GLOBAL_COORDS = \"GLOBAL_COORDS\";\r\nIfcGlobalOrLocalEnum.LOCAL_COORDS = \"LOCAL_COORDS\";\r\nvar IfcGridTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcGridTypeEnum.RECTANGULAR = \"RECTANGULAR\";\r\nIfcGridTypeEnum.RADIAL = \"RADIAL\";\r\nIfcGridTypeEnum.TRIANGULAR = \"TRIANGULAR\";\r\nIfcGridTypeEnum.IRREGULAR = \"IRREGULAR\";\r\nIfcGridTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcGridTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcHeatExchangerTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcHeatExchangerTypeEnum.PLATE = \"PLATE\";\r\nIfcHeatExchangerTypeEnum.SHELLANDTUBE = \"SHELLANDTUBE\";\r\nIfcHeatExchangerTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcHeatExchangerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcHumidifierTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcHumidifierTypeEnum.STEAMINJECTION = \"STEAMINJECTION\";\r\nIfcHumidifierTypeEnum.ADIABATICAIRWASHER = \"ADIABATICAIRWASHER\";\r\nIfcHumidifierTypeEnum.ADIABATICPAN = \"ADIABATICPAN\";\r\nIfcHumidifierTypeEnum.ADIABATICWETTEDELEMENT = \"ADIABATICWETTEDELEMENT\";\r\nIfcHumidifierTypeEnum.ADIABATICATOMIZING = \"ADIABATICATOMIZING\";\r\nIfcHumidifierTypeEnum.ADIABATICULTRASONIC = \"ADIABATICULTRASONIC\";\r\nIfcHumidifierTypeEnum.ADIABATICRIGIDMEDIA = \"ADIABATICRIGIDMEDIA\";\r\nIfcHumidifierTypeEnum.ADIABATICCOMPRESSEDAIRNOZZLE = \"ADIABATICCOMPRESSEDAIRNOZZLE\";\r\nIfcHumidifierTypeEnum.ASSISTEDELECTRIC = \"ASSISTEDELECTRIC\";\r\nIfcHumidifierTypeEnum.ASSISTEDNATURALGAS = \"ASSISTEDNATURALGAS\";\r\nIfcHumidifierTypeEnum.ASSISTEDPROPANE = \"ASSISTEDPROPANE\";\r\nIfcHumidifierTypeEnum.ASSISTEDBUTANE = \"ASSISTEDBUTANE\";\r\nIfcHumidifierTypeEnum.ASSISTEDSTEAM = \"ASSISTEDSTEAM\";\r\nIfcHumidifierTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcHumidifierTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcInterceptorTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcInterceptorTypeEnum.CYCLONIC = \"CYCLONIC\";\r\nIfcInterceptorTypeEnum.GREASE = \"GREASE\";\r\nIfcInterceptorTypeEnum.OIL = \"OIL\";\r\nIfcInterceptorTypeEnum.PETROL = \"PETROL\";\r\nIfcInterceptorTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcInterceptorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcInternalOrExternalEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcInternalOrExternalEnum.INTERNAL = \"INTERNAL\";\r\nIfcInternalOrExternalEnum.EXTERNAL = \"EXTERNAL\";\r\nIfcInternalOrExternalEnum.EXTERNAL_EARTH = \"EXTERNAL_EARTH\";\r\nIfcInternalOrExternalEnum.EXTERNAL_WATER = \"EXTERNAL_WATER\";\r\nIfcInternalOrExternalEnum.EXTERNAL_FIRE = \"EXTERNAL_FIRE\";\r\nIfcInternalOrExternalEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcInventoryTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcInventoryTypeEnum.ASSETINVENTORY = \"ASSETINVENTORY\";\r\nIfcInventoryTypeEnum.SPACEINVENTORY = \"SPACEINVENTORY\";\r\nIfcInventoryTypeEnum.FURNITUREINVENTORY = \"FURNITUREINVENTORY\";\r\nIfcInventoryTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcInventoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcJunctionBoxTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcJunctionBoxTypeEnum.DATA = \"DATA\";\r\nIfcJunctionBoxTypeEnum.POWER = \"POWER\";\r\nIfcJunctionBoxTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcJunctionBoxTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcKnotType = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcKnotType.UNIFORM_KNOTS = \"UNIFORM_KNOTS\";\r\nIfcKnotType.QUASI_UNIFORM_KNOTS = \"QUASI_UNIFORM_KNOTS\";\r\nIfcKnotType.PIECEWISE_BEZIER_KNOTS = \"PIECEWISE_BEZIER_KNOTS\";\r\nIfcKnotType.UNSPECIFIED = \"UNSPECIFIED\";\r\nvar IfcLaborResourceTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcLaborResourceTypeEnum.ADMINISTRATION = \"ADMINISTRATION\";\r\nIfcLaborResourceTypeEnum.CARPENTRY = \"CARPENTRY\";\r\nIfcLaborResourceTypeEnum.CLEANING = \"CLEANING\";\r\nIfcLaborResourceTypeEnum.CONCRETE = \"CONCRETE\";\r\nIfcLaborResourceTypeEnum.DRYWALL = \"DRYWALL\";\r\nIfcLaborResourceTypeEnum.ELECTRIC = \"ELECTRIC\";\r\nIfcLaborResourceTypeEnum.FINISHING = \"FINISHING\";\r\nIfcLaborResourceTypeEnum.FLOORING = \"FLOORING\";\r\nIfcLaborResourceTypeEnum.GENERAL = \"GENERAL\";\r\nIfcLaborResourceTypeEnum.HVAC = \"HVAC\";\r\nIfcLaborResourceTypeEnum.LANDSCAPING = \"LANDSCAPING\";\r\nIfcLaborResourceTypeEnum.MASONRY = \"MASONRY\";\r\nIfcLaborResourceTypeEnum.PAINTING = \"PAINTING\";\r\nIfcLaborResourceTypeEnum.PAVING = \"PAVING\";\r\nIfcLaborResourceTypeEnum.PLUMBING = \"PLUMBING\";\r\nIfcLaborResourceTypeEnum.ROOFING = \"ROOFING\";\r\nIfcLaborResourceTypeEnum.SITEGRADING = \"SITEGRADING\";\r\nIfcLaborResourceTypeEnum.STEELWORK = \"STEELWORK\";\r\nIfcLaborResourceTypeEnum.SURVEYING = \"SURVEYING\";\r\nIfcLaborResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcLaborResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcLampTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcLampTypeEnum.COMPACTFLUORESCENT = \"COMPACTFLUORESCENT\";\r\nIfcLampTypeEnum.FLUORESCENT = \"FLUORESCENT\";\r\nIfcLampTypeEnum.HALOGEN = \"HALOGEN\";\r\nIfcLampTypeEnum.HIGHPRESSUREMERCURY = \"HIGHPRESSUREMERCURY\";\r\nIfcLampTypeEnum.HIGHPRESSURESODIUM = \"HIGHPRESSURESODIUM\";\r\nIfcLampTypeEnum.LED = \"LED\";\r\nIfcLampTypeEnum.METALHALIDE = \"METALHALIDE\";\r\nIfcLampTypeEnum.OLED = \"OLED\";\r\nIfcLampTypeEnum.TUNGSTENFILAMENT = \"TUNGSTENFILAMENT\";\r\nIfcLampTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcLampTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcLayerSetDirectionEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcLayerSetDirectionEnum.AXIS1 = \"AXIS1\";\r\nIfcLayerSetDirectionEnum.AXIS2 = \"AXIS2\";\r\nIfcLayerSetDirectionEnum.AXIS3 = \"AXIS3\";\r\nvar IfcLightDistributionCurveEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcLightDistributionCurveEnum.TYPE_A = \"TYPE_A\";\r\nIfcLightDistributionCurveEnum.TYPE_B = \"TYPE_B\";\r\nIfcLightDistributionCurveEnum.TYPE_C = \"TYPE_C\";\r\nIfcLightDistributionCurveEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcLightEmissionSourceEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcLightEmissionSourceEnum.COMPACTFLUORESCENT = \"COMPACTFLUORESCENT\";\r\nIfcLightEmissionSourceEnum.FLUORESCENT = \"FLUORESCENT\";\r\nIfcLightEmissionSourceEnum.HIGHPRESSUREMERCURY = \"HIGHPRESSUREMERCURY\";\r\nIfcLightEmissionSourceEnum.HIGHPRESSURESODIUM = \"HIGHPRESSURESODIUM\";\r\nIfcLightEmissionSourceEnum.LIGHTEMITTINGDIODE = \"LIGHTEMITTINGDIODE\";\r\nIfcLightEmissionSourceEnum.LOWPRESSURESODIUM = \"LOWPRESSURESODIUM\";\r\nIfcLightEmissionSourceEnum.LOWVOLTAGEHALOGEN = \"LOWVOLTAGEHALOGEN\";\r\nIfcLightEmissionSourceEnum.MAINVOLTAGEHALOGEN = \"MAINVOLTAGEHALOGEN\";\r\nIfcLightEmissionSourceEnum.METALHALIDE = \"METALHALIDE\";\r\nIfcLightEmissionSourceEnum.TUNGSTENFILAMENT = \"TUNGSTENFILAMENT\";\r\nIfcLightEmissionSourceEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcLightFixtureTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcLightFixtureTypeEnum.POINTSOURCE = \"POINTSOURCE\";\r\nIfcLightFixtureTypeEnum.DIRECTIONSOURCE = \"DIRECTIONSOURCE\";\r\nIfcLightFixtureTypeEnum.SECURITYLIGHTING = \"SECURITYLIGHTING\";\r\nIfcLightFixtureTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcLightFixtureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcLoadGroupTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcLoadGroupTypeEnum.LOAD_GROUP = \"LOAD_GROUP\";\r\nIfcLoadGroupTypeEnum.LOAD_CASE = \"LOAD_CASE\";\r\nIfcLoadGroupTypeEnum.LOAD_COMBINATION = \"LOAD_COMBINATION\";\r\nIfcLoadGroupTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcLoadGroupTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcLogicalOperatorEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcLogicalOperatorEnum.LOGICALAND = \"LOGICALAND\";\r\nIfcLogicalOperatorEnum.LOGICALOR = \"LOGICALOR\";\r\nIfcLogicalOperatorEnum.LOGICALXOR = \"LOGICALXOR\";\r\nIfcLogicalOperatorEnum.LOGICALNOTAND = \"LOGICALNOTAND\";\r\nIfcLogicalOperatorEnum.LOGICALNOTOR = \"LOGICALNOTOR\";\r\nvar IfcMechanicalFastenerTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcMechanicalFastenerTypeEnum.ANCHORBOLT = \"ANCHORBOLT\";\r\nIfcMechanicalFastenerTypeEnum.BOLT = \"BOLT\";\r\nIfcMechanicalFastenerTypeEnum.DOWEL = \"DOWEL\";\r\nIfcMechanicalFastenerTypeEnum.NAIL = \"NAIL\";\r\nIfcMechanicalFastenerTypeEnum.NAILPLATE = \"NAILPLATE\";\r\nIfcMechanicalFastenerTypeEnum.RIVET = \"RIVET\";\r\nIfcMechanicalFastenerTypeEnum.SCREW = \"SCREW\";\r\nIfcMechanicalFastenerTypeEnum.SHEARCONNECTOR = \"SHEARCONNECTOR\";\r\nIfcMechanicalFastenerTypeEnum.STAPLE = \"STAPLE\";\r\nIfcMechanicalFastenerTypeEnum.STUDSHEARCONNECTOR = \"STUDSHEARCONNECTOR\";\r\nIfcMechanicalFastenerTypeEnum.COUPLER = \"COUPLER\";\r\nIfcMechanicalFastenerTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcMechanicalFastenerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcMedicalDeviceTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcMedicalDeviceTypeEnum.AIRSTATION = \"AIRSTATION\";\r\nIfcMedicalDeviceTypeEnum.FEEDAIRUNIT = \"FEEDAIRUNIT\";\r\nIfcMedicalDeviceTypeEnum.OXYGENGENERATOR = \"OXYGENGENERATOR\";\r\nIfcMedicalDeviceTypeEnum.OXYGENPLANT = \"OXYGENPLANT\";\r\nIfcMedicalDeviceTypeEnum.VACUUMSTATION = \"VACUUMSTATION\";\r\nIfcMedicalDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcMedicalDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcMemberTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcMemberTypeEnum.BRACE = \"BRACE\";\r\nIfcMemberTypeEnum.CHORD = \"CHORD\";\r\nIfcMemberTypeEnum.COLLAR = \"COLLAR\";\r\nIfcMemberTypeEnum.MEMBER = \"MEMBER\";\r\nIfcMemberTypeEnum.MULLION = \"MULLION\";\r\nIfcMemberTypeEnum.PLATE = \"PLATE\";\r\nIfcMemberTypeEnum.POST = \"POST\";\r\nIfcMemberTypeEnum.PURLIN = \"PURLIN\";\r\nIfcMemberTypeEnum.RAFTER = \"RAFTER\";\r\nIfcMemberTypeEnum.STRINGER = \"STRINGER\";\r\nIfcMemberTypeEnum.STRUT = \"STRUT\";\r\nIfcMemberTypeEnum.STUD = \"STUD\";\r\nIfcMemberTypeEnum.STIFFENING_RIB = \"STIFFENING_RIB\";\r\nIfcMemberTypeEnum.ARCH_SEGMENT = \"ARCH_SEGMENT\";\r\nIfcMemberTypeEnum.SUSPENSION_CABLE = \"SUSPENSION_CABLE\";\r\nIfcMemberTypeEnum.SUSPENDER = \"SUSPENDER\";\r\nIfcMemberTypeEnum.STAY_CABLE = \"STAY_CABLE\";\r\nIfcMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcMotorConnectionTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcMotorConnectionTypeEnum.BELTDRIVE = \"BELTDRIVE\";\r\nIfcMotorConnectionTypeEnum.COUPLING = \"COUPLING\";\r\nIfcMotorConnectionTypeEnum.DIRECTDRIVE = \"DIRECTDRIVE\";\r\nIfcMotorConnectionTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcMotorConnectionTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcNullStyle = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcNullStyle.NULL = \"NULL\";\r\nvar IfcObjectTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcObjectTypeEnum.PRODUCT = \"PRODUCT\";\r\nIfcObjectTypeEnum.PROCESS = \"PROCESS\";\r\nIfcObjectTypeEnum.CONTROL = \"CONTROL\";\r\nIfcObjectTypeEnum.RESOURCE = \"RESOURCE\";\r\nIfcObjectTypeEnum.ACTOR = \"ACTOR\";\r\nIfcObjectTypeEnum.GROUP = \"GROUP\";\r\nIfcObjectTypeEnum.PROJECT = \"PROJECT\";\r\nIfcObjectTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcObjectiveEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcObjectiveEnum.CODECOMPLIANCE = \"CODECOMPLIANCE\";\r\nIfcObjectiveEnum.CODEWAIVER = \"CODEWAIVER\";\r\nIfcObjectiveEnum.DESIGNINTENT = \"DESIGNINTENT\";\r\nIfcObjectiveEnum.EXTERNAL = \"EXTERNAL\";\r\nIfcObjectiveEnum.HEALTHANDSAFETY = \"HEALTHANDSAFETY\";\r\nIfcObjectiveEnum.MERGECONFLICT = \"MERGECONFLICT\";\r\nIfcObjectiveEnum.MODELVIEW = \"MODELVIEW\";\r\nIfcObjectiveEnum.PARAMETER = \"PARAMETER\";\r\nIfcObjectiveEnum.REQUIREMENT = \"REQUIREMENT\";\r\nIfcObjectiveEnum.SPECIFICATION = \"SPECIFICATION\";\r\nIfcObjectiveEnum.TRIGGERCONDITION = \"TRIGGERCONDITION\";\r\nIfcObjectiveEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcObjectiveEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcOccupantTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcOccupantTypeEnum.ASSIGNEE = \"ASSIGNEE\";\r\nIfcOccupantTypeEnum.ASSIGNOR = \"ASSIGNOR\";\r\nIfcOccupantTypeEnum.LESSEE = \"LESSEE\";\r\nIfcOccupantTypeEnum.LESSOR = \"LESSOR\";\r\nIfcOccupantTypeEnum.LETTINGAGENT = \"LETTINGAGENT\";\r\nIfcOccupantTypeEnum.OWNER = \"OWNER\";\r\nIfcOccupantTypeEnum.TENANT = \"TENANT\";\r\nIfcOccupantTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcOccupantTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcOpeningElementTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcOpeningElementTypeEnum.OPENING = \"OPENING\";\r\nIfcOpeningElementTypeEnum.RECESS = \"RECESS\";\r\nIfcOpeningElementTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcOpeningElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcOutletTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcOutletTypeEnum.AUDIOVISUALOUTLET = \"AUDIOVISUALOUTLET\";\r\nIfcOutletTypeEnum.COMMUNICATIONSOUTLET = \"COMMUNICATIONSOUTLET\";\r\nIfcOutletTypeEnum.POWEROUTLET = \"POWEROUTLET\";\r\nIfcOutletTypeEnum.DATAOUTLET = \"DATAOUTLET\";\r\nIfcOutletTypeEnum.TELEPHONEOUTLET = \"TELEPHONEOUTLET\";\r\nIfcOutletTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcOutletTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcPerformanceHistoryTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcPerformanceHistoryTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcPerformanceHistoryTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcPermeableCoveringOperationEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcPermeableCoveringOperationEnum.GRILL = \"GRILL\";\r\nIfcPermeableCoveringOperationEnum.LOUVER = \"LOUVER\";\r\nIfcPermeableCoveringOperationEnum.SCREEN = \"SCREEN\";\r\nIfcPermeableCoveringOperationEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcPermeableCoveringOperationEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcPermitTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcPermitTypeEnum.ACCESS = \"ACCESS\";\r\nIfcPermitTypeEnum.BUILDING = \"BUILDING\";\r\nIfcPermitTypeEnum.WORK = \"WORK\";\r\nIfcPermitTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcPermitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcPhysicalOrVirtualEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcPhysicalOrVirtualEnum.PHYSICAL = \"PHYSICAL\";\r\nIfcPhysicalOrVirtualEnum.VIRTUAL = \"VIRTUAL\";\r\nIfcPhysicalOrVirtualEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcPileConstructionEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcPileConstructionEnum.CAST_IN_PLACE = \"CAST_IN_PLACE\";\r\nIfcPileConstructionEnum.COMPOSITE = \"COMPOSITE\";\r\nIfcPileConstructionEnum.PRECAST_CONCRETE = \"PRECAST_CONCRETE\";\r\nIfcPileConstructionEnum.PREFAB_STEEL = \"PREFAB_STEEL\";\r\nIfcPileConstructionEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcPileConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcPileTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcPileTypeEnum.BORED = \"BORED\";\r\nIfcPileTypeEnum.DRIVEN = \"DRIVEN\";\r\nIfcPileTypeEnum.JETGROUTING = \"JETGROUTING\";\r\nIfcPileTypeEnum.COHESION = \"COHESION\";\r\nIfcPileTypeEnum.FRICTION = \"FRICTION\";\r\nIfcPileTypeEnum.SUPPORT = \"SUPPORT\";\r\nIfcPileTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcPileTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcPipeFittingTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcPipeFittingTypeEnum.BEND = \"BEND\";\r\nIfcPipeFittingTypeEnum.CONNECTOR = \"CONNECTOR\";\r\nIfcPipeFittingTypeEnum.ENTRY = \"ENTRY\";\r\nIfcPipeFittingTypeEnum.EXIT = \"EXIT\";\r\nIfcPipeFittingTypeEnum.JUNCTION = \"JUNCTION\";\r\nIfcPipeFittingTypeEnum.OBSTRUCTION = \"OBSTRUCTION\";\r\nIfcPipeFittingTypeEnum.TRANSITION = \"TRANSITION\";\r\nIfcPipeFittingTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcPipeFittingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcPipeSegmentTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcPipeSegmentTypeEnum.CULVERT = \"CULVERT\";\r\nIfcPipeSegmentTypeEnum.FLEXIBLESEGMENT = \"FLEXIBLESEGMENT\";\r\nIfcPipeSegmentTypeEnum.RIGIDSEGMENT = \"RIGIDSEGMENT\";\r\nIfcPipeSegmentTypeEnum.GUTTER = \"GUTTER\";\r\nIfcPipeSegmentTypeEnum.SPOOL = \"SPOOL\";\r\nIfcPipeSegmentTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcPipeSegmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcPlateTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcPlateTypeEnum.CURTAIN_PANEL = \"CURTAIN_PANEL\";\r\nIfcPlateTypeEnum.SHEET = \"SHEET\";\r\nIfcPlateTypeEnum.FLANGE_PLATE = \"FLANGE_PLATE\";\r\nIfcPlateTypeEnum.WEB_PLATE = \"WEB_PLATE\";\r\nIfcPlateTypeEnum.STIFFENER_PLATE = \"STIFFENER_PLATE\";\r\nIfcPlateTypeEnum.GUSSET_PLATE = \"GUSSET_PLATE\";\r\nIfcPlateTypeEnum.COVER_PLATE = \"COVER_PLATE\";\r\nIfcPlateTypeEnum.SPLICE_PLATE = \"SPLICE_PLATE\";\r\nIfcPlateTypeEnum.BASE_PLATE = \"BASE_PLATE\";\r\nIfcPlateTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcPlateTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcPreferredSurfaceCurveRepresentation = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcPreferredSurfaceCurveRepresentation.CURVE3D = \"CURVE3D\";\r\nIfcPreferredSurfaceCurveRepresentation.PCURVE_S1 = \"PCURVE_S1\";\r\nIfcPreferredSurfaceCurveRepresentation.PCURVE_S2 = \"PCURVE_S2\";\r\nvar IfcProcedureTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcProcedureTypeEnum.ADVICE_CAUTION = \"ADVICE_CAUTION\";\r\nIfcProcedureTypeEnum.ADVICE_NOTE = \"ADVICE_NOTE\";\r\nIfcProcedureTypeEnum.ADVICE_WARNING = \"ADVICE_WARNING\";\r\nIfcProcedureTypeEnum.CALIBRATION = \"CALIBRATION\";\r\nIfcProcedureTypeEnum.DIAGNOSTIC = \"DIAGNOSTIC\";\r\nIfcProcedureTypeEnum.SHUTDOWN = \"SHUTDOWN\";\r\nIfcProcedureTypeEnum.STARTUP = \"STARTUP\";\r\nIfcProcedureTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcProcedureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcProfileTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcProfileTypeEnum.CURVE = \"CURVE\";\r\nIfcProfileTypeEnum.AREA = \"AREA\";\r\nvar IfcProjectOrderTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcProjectOrderTypeEnum.CHANGEORDER = \"CHANGEORDER\";\r\nIfcProjectOrderTypeEnum.MAINTENANCEWORKORDER = \"MAINTENANCEWORKORDER\";\r\nIfcProjectOrderTypeEnum.MOVEORDER = \"MOVEORDER\";\r\nIfcProjectOrderTypeEnum.PURCHASEORDER = \"PURCHASEORDER\";\r\nIfcProjectOrderTypeEnum.WORKORDER = \"WORKORDER\";\r\nIfcProjectOrderTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcProjectOrderTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcProjectedOrTrueLengthEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcProjectedOrTrueLengthEnum.PROJECTED_LENGTH = \"PROJECTED_LENGTH\";\r\nIfcProjectedOrTrueLengthEnum.TRUE_LENGTH = \"TRUE_LENGTH\";\r\nvar IfcProjectionElementTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcProjectionElementTypeEnum.BLISTER = \"BLISTER\";\r\nIfcProjectionElementTypeEnum.DEVIATOR = \"DEVIATOR\";\r\nIfcProjectionElementTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcProjectionElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcPropertySetTemplateTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcPropertySetTemplateTypeEnum.PSET_TYPEDRIVENONLY = \"PSET_TYPEDRIVENONLY\";\r\nIfcPropertySetTemplateTypeEnum.PSET_TYPEDRIVENOVERRIDE = \"PSET_TYPEDRIVENOVERRIDE\";\r\nIfcPropertySetTemplateTypeEnum.PSET_OCCURRENCEDRIVEN = \"PSET_OCCURRENCEDRIVEN\";\r\nIfcPropertySetTemplateTypeEnum.PSET_PERFORMANCEDRIVEN = \"PSET_PERFORMANCEDRIVEN\";\r\nIfcPropertySetTemplateTypeEnum.QTO_TYPEDRIVENONLY = \"QTO_TYPEDRIVENONLY\";\r\nIfcPropertySetTemplateTypeEnum.QTO_TYPEDRIVENOVERRIDE = \"QTO_TYPEDRIVENOVERRIDE\";\r\nIfcPropertySetTemplateTypeEnum.QTO_OCCURRENCEDRIVEN = \"QTO_OCCURRENCEDRIVEN\";\r\nIfcPropertySetTemplateTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcProtectiveDeviceTrippingUnitTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcProtectiveDeviceTrippingUnitTypeEnum.ELECTRONIC = \"ELECTRONIC\";\r\nIfcProtectiveDeviceTrippingUnitTypeEnum.ELECTROMAGNETIC = \"ELECTROMAGNETIC\";\r\nIfcProtectiveDeviceTrippingUnitTypeEnum.RESIDUALCURRENT = \"RESIDUALCURRENT\";\r\nIfcProtectiveDeviceTrippingUnitTypeEnum.THERMAL = \"THERMAL\";\r\nIfcProtectiveDeviceTrippingUnitTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcProtectiveDeviceTrippingUnitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcProtectiveDeviceTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcProtectiveDeviceTypeEnum.CIRCUITBREAKER = \"CIRCUITBREAKER\";\r\nIfcProtectiveDeviceTypeEnum.EARTHLEAKAGECIRCUITBREAKER = \"EARTHLEAKAGECIRCUITBREAKER\";\r\nIfcProtectiveDeviceTypeEnum.EARTHINGSWITCH = \"EARTHINGSWITCH\";\r\nIfcProtectiveDeviceTypeEnum.FUSEDISCONNECTOR = \"FUSEDISCONNECTOR\";\r\nIfcProtectiveDeviceTypeEnum.RESIDUALCURRENTCIRCUITBREAKER = \"RESIDUALCURRENTCIRCUITBREAKER\";\r\nIfcProtectiveDeviceTypeEnum.RESIDUALCURRENTSWITCH = \"RESIDUALCURRENTSWITCH\";\r\nIfcProtectiveDeviceTypeEnum.VARISTOR = \"VARISTOR\";\r\nIfcProtectiveDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcProtectiveDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcPumpTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcPumpTypeEnum.CIRCULATOR = \"CIRCULATOR\";\r\nIfcPumpTypeEnum.ENDSUCTION = \"ENDSUCTION\";\r\nIfcPumpTypeEnum.SPLITCASE = \"SPLITCASE\";\r\nIfcPumpTypeEnum.SUBMERSIBLEPUMP = \"SUBMERSIBLEPUMP\";\r\nIfcPumpTypeEnum.SUMPPUMP = \"SUMPPUMP\";\r\nIfcPumpTypeEnum.VERTICALINLINE = \"VERTICALINLINE\";\r\nIfcPumpTypeEnum.VERTICALTURBINE = \"VERTICALTURBINE\";\r\nIfcPumpTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcPumpTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcRailingTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcRailingTypeEnum.HANDRAIL = \"HANDRAIL\";\r\nIfcRailingTypeEnum.GUARDRAIL = \"GUARDRAIL\";\r\nIfcRailingTypeEnum.BALUSTRADE = \"BALUSTRADE\";\r\nIfcRailingTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcRailingTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcRampFlightTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcRampFlightTypeEnum.STRAIGHT = \"STRAIGHT\";\r\nIfcRampFlightTypeEnum.SPIRAL = \"SPIRAL\";\r\nIfcRampFlightTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcRampFlightTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcRampTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcRampTypeEnum.STRAIGHT_RUN_RAMP = \"STRAIGHT_RUN_RAMP\";\r\nIfcRampTypeEnum.TWO_STRAIGHT_RUN_RAMP = \"TWO_STRAIGHT_RUN_RAMP\";\r\nIfcRampTypeEnum.QUARTER_TURN_RAMP = \"QUARTER_TURN_RAMP\";\r\nIfcRampTypeEnum.TWO_QUARTER_TURN_RAMP = \"TWO_QUARTER_TURN_RAMP\";\r\nIfcRampTypeEnum.HALF_TURN_RAMP = \"HALF_TURN_RAMP\";\r\nIfcRampTypeEnum.SPIRAL_RAMP = \"SPIRAL_RAMP\";\r\nIfcRampTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcRampTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcRecurrenceTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcRecurrenceTypeEnum.DAILY = \"DAILY\";\r\nIfcRecurrenceTypeEnum.WEEKLY = \"WEEKLY\";\r\nIfcRecurrenceTypeEnum.MONTHLY_BY_DAY_OF_MONTH = \"MONTHLY_BY_DAY_OF_MONTH\";\r\nIfcRecurrenceTypeEnum.MONTHLY_BY_POSITION = \"MONTHLY_BY_POSITION\";\r\nIfcRecurrenceTypeEnum.BY_DAY_COUNT = \"BY_DAY_COUNT\";\r\nIfcRecurrenceTypeEnum.BY_WEEKDAY_COUNT = \"BY_WEEKDAY_COUNT\";\r\nIfcRecurrenceTypeEnum.YEARLY_BY_DAY_OF_MONTH = \"YEARLY_BY_DAY_OF_MONTH\";\r\nIfcRecurrenceTypeEnum.YEARLY_BY_POSITION = \"YEARLY_BY_POSITION\";\r\nvar IfcReferentTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcReferentTypeEnum.KILOPOINT = \"KILOPOINT\";\r\nIfcReferentTypeEnum.MILEPOINT = \"MILEPOINT\";\r\nIfcReferentTypeEnum.STATION = \"STATION\";\r\nIfcReferentTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcReferentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcReflectanceMethodEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcReflectanceMethodEnum.BLINN = \"BLINN\";\r\nIfcReflectanceMethodEnum.FLAT = \"FLAT\";\r\nIfcReflectanceMethodEnum.GLASS = \"GLASS\";\r\nIfcReflectanceMethodEnum.MATT = \"MATT\";\r\nIfcReflectanceMethodEnum.METAL = \"METAL\";\r\nIfcReflectanceMethodEnum.MIRROR = \"MIRROR\";\r\nIfcReflectanceMethodEnum.PHONG = \"PHONG\";\r\nIfcReflectanceMethodEnum.PLASTIC = \"PLASTIC\";\r\nIfcReflectanceMethodEnum.STRAUSS = \"STRAUSS\";\r\nIfcReflectanceMethodEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcReinforcingBarRoleEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcReinforcingBarRoleEnum.MAIN = \"MAIN\";\r\nIfcReinforcingBarRoleEnum.SHEAR = \"SHEAR\";\r\nIfcReinforcingBarRoleEnum.LIGATURE = \"LIGATURE\";\r\nIfcReinforcingBarRoleEnum.STUD = \"STUD\";\r\nIfcReinforcingBarRoleEnum.PUNCHING = \"PUNCHING\";\r\nIfcReinforcingBarRoleEnum.EDGE = \"EDGE\";\r\nIfcReinforcingBarRoleEnum.RING = \"RING\";\r\nIfcReinforcingBarRoleEnum.ANCHORING = \"ANCHORING\";\r\nIfcReinforcingBarRoleEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcReinforcingBarRoleEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcReinforcingBarSurfaceEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcReinforcingBarSurfaceEnum.PLAIN = \"PLAIN\";\r\nIfcReinforcingBarSurfaceEnum.TEXTURED = \"TEXTURED\";\r\nvar IfcReinforcingBarTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcReinforcingBarTypeEnum.ANCHORING = \"ANCHORING\";\r\nIfcReinforcingBarTypeEnum.EDGE = \"EDGE\";\r\nIfcReinforcingBarTypeEnum.LIGATURE = \"LIGATURE\";\r\nIfcReinforcingBarTypeEnum.MAIN = \"MAIN\";\r\nIfcReinforcingBarTypeEnum.PUNCHING = \"PUNCHING\";\r\nIfcReinforcingBarTypeEnum.RING = \"RING\";\r\nIfcReinforcingBarTypeEnum.SHEAR = \"SHEAR\";\r\nIfcReinforcingBarTypeEnum.STUD = \"STUD\";\r\nIfcReinforcingBarTypeEnum.SPACEBAR = \"SPACEBAR\";\r\nIfcReinforcingBarTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcReinforcingBarTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcReinforcingMeshTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcReinforcingMeshTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcReinforcingMeshTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcRoleEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcRoleEnum.SUPPLIER = \"SUPPLIER\";\r\nIfcRoleEnum.MANUFACTURER = \"MANUFACTURER\";\r\nIfcRoleEnum.CONTRACTOR = \"CONTRACTOR\";\r\nIfcRoleEnum.SUBCONTRACTOR = \"SUBCONTRACTOR\";\r\nIfcRoleEnum.ARCHITECT = \"ARCHITECT\";\r\nIfcRoleEnum.STRUCTURALENGINEER = \"STRUCTURALENGINEER\";\r\nIfcRoleEnum.COSTENGINEER = \"COSTENGINEER\";\r\nIfcRoleEnum.CLIENT = \"CLIENT\";\r\nIfcRoleEnum.BUILDINGOWNER = \"BUILDINGOWNER\";\r\nIfcRoleEnum.BUILDINGOPERATOR = \"BUILDINGOPERATOR\";\r\nIfcRoleEnum.MECHANICALENGINEER = \"MECHANICALENGINEER\";\r\nIfcRoleEnum.ELECTRICALENGINEER = \"ELECTRICALENGINEER\";\r\nIfcRoleEnum.PROJECTMANAGER = \"PROJECTMANAGER\";\r\nIfcRoleEnum.FACILITIESMANAGER = \"FACILITIESMANAGER\";\r\nIfcRoleEnum.CIVILENGINEER = \"CIVILENGINEER\";\r\nIfcRoleEnum.COMMISSIONINGENGINEER = \"COMMISSIONINGENGINEER\";\r\nIfcRoleEnum.ENGINEER = \"ENGINEER\";\r\nIfcRoleEnum.OWNER = \"OWNER\";\r\nIfcRoleEnum.CONSULTANT = \"CONSULTANT\";\r\nIfcRoleEnum.CONSTRUCTIONMANAGER = \"CONSTRUCTIONMANAGER\";\r\nIfcRoleEnum.FIELDCONSTRUCTIONMANAGER = \"FIELDCONSTRUCTIONMANAGER\";\r\nIfcRoleEnum.RESELLER = \"RESELLER\";\r\nIfcRoleEnum.USERDEFINED = \"USERDEFINED\";\r\nvar IfcRoofTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcRoofTypeEnum.FLAT_ROOF = \"FLAT_ROOF\";\r\nIfcRoofTypeEnum.SHED_ROOF = \"SHED_ROOF\";\r\nIfcRoofTypeEnum.GABLE_ROOF = \"GABLE_ROOF\";\r\nIfcRoofTypeEnum.HIP_ROOF = \"HIP_ROOF\";\r\nIfcRoofTypeEnum.HIPPED_GABLE_ROOF = \"HIPPED_GABLE_ROOF\";\r\nIfcRoofTypeEnum.GAMBREL_ROOF = \"GAMBREL_ROOF\";\r\nIfcRoofTypeEnum.MANSARD_ROOF = \"MANSARD_ROOF\";\r\nIfcRoofTypeEnum.BARREL_ROOF = \"BARREL_ROOF\";\r\nIfcRoofTypeEnum.RAINBOW_ROOF = \"RAINBOW_ROOF\";\r\nIfcRoofTypeEnum.BUTTERFLY_ROOF = \"BUTTERFLY_ROOF\";\r\nIfcRoofTypeEnum.PAVILION_ROOF = \"PAVILION_ROOF\";\r\nIfcRoofTypeEnum.DOME_ROOF = \"DOME_ROOF\";\r\nIfcRoofTypeEnum.FREEFORM = \"FREEFORM\";\r\nIfcRoofTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcRoofTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcSIPrefix = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcSIPrefix.EXA = \"EXA\";\r\nIfcSIPrefix.PETA = \"PETA\";\r\nIfcSIPrefix.TERA = \"TERA\";\r\nIfcSIPrefix.GIGA = \"GIGA\";\r\nIfcSIPrefix.MEGA = \"MEGA\";\r\nIfcSIPrefix.KILO = \"KILO\";\r\nIfcSIPrefix.HECTO = \"HECTO\";\r\nIfcSIPrefix.DECA = \"DECA\";\r\nIfcSIPrefix.DECI = \"DECI\";\r\nIfcSIPrefix.CENTI = \"CENTI\";\r\nIfcSIPrefix.MILLI = \"MILLI\";\r\nIfcSIPrefix.MICRO = \"MICRO\";\r\nIfcSIPrefix.NANO = \"NANO\";\r\nIfcSIPrefix.PICO = \"PICO\";\r\nIfcSIPrefix.FEMTO = \"FEMTO\";\r\nIfcSIPrefix.ATTO = \"ATTO\";\r\nvar IfcSIUnitName = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcSIUnitName.AMPERE = \"AMPERE\";\r\nIfcSIUnitName.BECQUEREL = \"BECQUEREL\";\r\nIfcSIUnitName.CANDELA = \"CANDELA\";\r\nIfcSIUnitName.COULOMB = \"COULOMB\";\r\nIfcSIUnitName.CUBIC_METRE = \"CUBIC_METRE\";\r\nIfcSIUnitName.DEGREE_CELSIUS = \"DEGREE_CELSIUS\";\r\nIfcSIUnitName.FARAD = \"FARAD\";\r\nIfcSIUnitName.GRAM = \"GRAM\";\r\nIfcSIUnitName.GRAY = \"GRAY\";\r\nIfcSIUnitName.HENRY = \"HENRY\";\r\nIfcSIUnitName.HERTZ = \"HERTZ\";\r\nIfcSIUnitName.JOULE = \"JOULE\";\r\nIfcSIUnitName.KELVIN = \"KELVIN\";\r\nIfcSIUnitName.LUMEN = \"LUMEN\";\r\nIfcSIUnitName.LUX = \"LUX\";\r\nIfcSIUnitName.METRE = \"METRE\";\r\nIfcSIUnitName.MOLE = \"MOLE\";\r\nIfcSIUnitName.NEWTON = \"NEWTON\";\r\nIfcSIUnitName.OHM = \"OHM\";\r\nIfcSIUnitName.PASCAL = \"PASCAL\";\r\nIfcSIUnitName.RADIAN = \"RADIAN\";\r\nIfcSIUnitName.SECOND = \"SECOND\";\r\nIfcSIUnitName.SIEMENS = \"SIEMENS\";\r\nIfcSIUnitName.SIEVERT = \"SIEVERT\";\r\nIfcSIUnitName.SQUARE_METRE = \"SQUARE_METRE\";\r\nIfcSIUnitName.STERADIAN = \"STERADIAN\";\r\nIfcSIUnitName.TESLA = \"TESLA\";\r\nIfcSIUnitName.VOLT = \"VOLT\";\r\nIfcSIUnitName.WATT = \"WATT\";\r\nIfcSIUnitName.WEBER = \"WEBER\";\r\nvar IfcSanitaryTerminalTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcSanitaryTerminalTypeEnum.BATH = \"BATH\";\r\nIfcSanitaryTerminalTypeEnum.BIDET = \"BIDET\";\r\nIfcSanitaryTerminalTypeEnum.CISTERN = \"CISTERN\";\r\nIfcSanitaryTerminalTypeEnum.SHOWER = \"SHOWER\";\r\nIfcSanitaryTerminalTypeEnum.SINK = \"SINK\";\r\nIfcSanitaryTerminalTypeEnum.SANITARYFOUNTAIN = \"SANITARYFOUNTAIN\";\r\nIfcSanitaryTerminalTypeEnum.TOILETPAN = \"TOILETPAN\";\r\nIfcSanitaryTerminalTypeEnum.URINAL = \"URINAL\";\r\nIfcSanitaryTerminalTypeEnum.WASHHANDBASIN = \"WASHHANDBASIN\";\r\nIfcSanitaryTerminalTypeEnum.WCSEAT = \"WCSEAT\";\r\nIfcSanitaryTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcSanitaryTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcSectionTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcSectionTypeEnum.UNIFORM = \"UNIFORM\";\r\nIfcSectionTypeEnum.TAPERED = \"TAPERED\";\r\nvar IfcSensorTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcSensorTypeEnum.COSENSOR = \"COSENSOR\";\r\nIfcSensorTypeEnum.CO2SENSOR = \"CO2SENSOR\";\r\nIfcSensorTypeEnum.CONDUCTANCESENSOR = \"CONDUCTANCESENSOR\";\r\nIfcSensorTypeEnum.CONTACTSENSOR = \"CONTACTSENSOR\";\r\nIfcSensorTypeEnum.FIRESENSOR = \"FIRESENSOR\";\r\nIfcSensorTypeEnum.FLOWSENSOR = \"FLOWSENSOR\";\r\nIfcSensorTypeEnum.FROSTSENSOR = \"FROSTSENSOR\";\r\nIfcSensorTypeEnum.GASSENSOR = \"GASSENSOR\";\r\nIfcSensorTypeEnum.HEATSENSOR = \"HEATSENSOR\";\r\nIfcSensorTypeEnum.HUMIDITYSENSOR = \"HUMIDITYSENSOR\";\r\nIfcSensorTypeEnum.IDENTIFIERSENSOR = \"IDENTIFIERSENSOR\";\r\nIfcSensorTypeEnum.IONCONCENTRATIONSENSOR = \"IONCONCENTRATIONSENSOR\";\r\nIfcSensorTypeEnum.LEVELSENSOR = \"LEVELSENSOR\";\r\nIfcSensorTypeEnum.LIGHTSENSOR = \"LIGHTSENSOR\";\r\nIfcSensorTypeEnum.MOISTURESENSOR = \"MOISTURESENSOR\";\r\nIfcSensorTypeEnum.MOVEMENTSENSOR = \"MOVEMENTSENSOR\";\r\nIfcSensorTypeEnum.PHSENSOR = \"PHSENSOR\";\r\nIfcSensorTypeEnum.PRESSURESENSOR = \"PRESSURESENSOR\";\r\nIfcSensorTypeEnum.RADIATIONSENSOR = \"RADIATIONSENSOR\";\r\nIfcSensorTypeEnum.RADIOACTIVITYSENSOR = \"RADIOACTIVITYSENSOR\";\r\nIfcSensorTypeEnum.SMOKESENSOR = \"SMOKESENSOR\";\r\nIfcSensorTypeEnum.SOUNDSENSOR = \"SOUNDSENSOR\";\r\nIfcSensorTypeEnum.TEMPERATURESENSOR = \"TEMPERATURESENSOR\";\r\nIfcSensorTypeEnum.WINDSENSOR = \"WINDSENSOR\";\r\nIfcSensorTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcSensorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcSequenceEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcSequenceEnum.START_START = \"START_START\";\r\nIfcSequenceEnum.START_FINISH = \"START_FINISH\";\r\nIfcSequenceEnum.FINISH_START = \"FINISH_START\";\r\nIfcSequenceEnum.FINISH_FINISH = \"FINISH_FINISH\";\r\nIfcSequenceEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcSequenceEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcShadingDeviceTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcShadingDeviceTypeEnum.JALOUSIE = \"JALOUSIE\";\r\nIfcShadingDeviceTypeEnum.SHUTTER = \"SHUTTER\";\r\nIfcShadingDeviceTypeEnum.AWNING = \"AWNING\";\r\nIfcShadingDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcShadingDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcSimplePropertyTemplateTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcSimplePropertyTemplateTypeEnum.P_SINGLEVALUE = \"P_SINGLEVALUE\";\r\nIfcSimplePropertyTemplateTypeEnum.P_ENUMERATEDVALUE = \"P_ENUMERATEDVALUE\";\r\nIfcSimplePropertyTemplateTypeEnum.P_BOUNDEDVALUE = \"P_BOUNDEDVALUE\";\r\nIfcSimplePropertyTemplateTypeEnum.P_LISTVALUE = \"P_LISTVALUE\";\r\nIfcSimplePropertyTemplateTypeEnum.P_TABLEVALUE = \"P_TABLEVALUE\";\r\nIfcSimplePropertyTemplateTypeEnum.P_REFERENCEVALUE = \"P_REFERENCEVALUE\";\r\nIfcSimplePropertyTemplateTypeEnum.Q_LENGTH = \"Q_LENGTH\";\r\nIfcSimplePropertyTemplateTypeEnum.Q_AREA = \"Q_AREA\";\r\nIfcSimplePropertyTemplateTypeEnum.Q_VOLUME = \"Q_VOLUME\";\r\nIfcSimplePropertyTemplateTypeEnum.Q_COUNT = \"Q_COUNT\";\r\nIfcSimplePropertyTemplateTypeEnum.Q_WEIGHT = \"Q_WEIGHT\";\r\nIfcSimplePropertyTemplateTypeEnum.Q_TIME = \"Q_TIME\";\r\nvar IfcSlabTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcSlabTypeEnum.FLOOR = \"FLOOR\";\r\nIfcSlabTypeEnum.ROOF = \"ROOF\";\r\nIfcSlabTypeEnum.LANDING = \"LANDING\";\r\nIfcSlabTypeEnum.BASESLAB = \"BASESLAB\";\r\nIfcSlabTypeEnum.APPROACH_SLAB = \"APPROACH_SLAB\";\r\nIfcSlabTypeEnum.PAVING = \"PAVING\";\r\nIfcSlabTypeEnum.WEARING = \"WEARING\";\r\nIfcSlabTypeEnum.SIDEWALK = \"SIDEWALK\";\r\nIfcSlabTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcSlabTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcSolarDeviceTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcSolarDeviceTypeEnum.SOLARCOLLECTOR = \"SOLARCOLLECTOR\";\r\nIfcSolarDeviceTypeEnum.SOLARPANEL = \"SOLARPANEL\";\r\nIfcSolarDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcSolarDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcSpaceHeaterTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcSpaceHeaterTypeEnum.CONVECTOR = \"CONVECTOR\";\r\nIfcSpaceHeaterTypeEnum.RADIATOR = \"RADIATOR\";\r\nIfcSpaceHeaterTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcSpaceHeaterTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcSpaceTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcSpaceTypeEnum.SPACE = \"SPACE\";\r\nIfcSpaceTypeEnum.PARKING = \"PARKING\";\r\nIfcSpaceTypeEnum.GFA = \"GFA\";\r\nIfcSpaceTypeEnum.INTERNAL = \"INTERNAL\";\r\nIfcSpaceTypeEnum.EXTERNAL = \"EXTERNAL\";\r\nIfcSpaceTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcSpaceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcSpatialZoneTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcSpatialZoneTypeEnum.CONSTRUCTION = \"CONSTRUCTION\";\r\nIfcSpatialZoneTypeEnum.FIRESAFETY = \"FIRESAFETY\";\r\nIfcSpatialZoneTypeEnum.LIGHTING = \"LIGHTING\";\r\nIfcSpatialZoneTypeEnum.OCCUPANCY = \"OCCUPANCY\";\r\nIfcSpatialZoneTypeEnum.SECURITY = \"SECURITY\";\r\nIfcSpatialZoneTypeEnum.THERMAL = \"THERMAL\";\r\nIfcSpatialZoneTypeEnum.TRANSPORT = \"TRANSPORT\";\r\nIfcSpatialZoneTypeEnum.VENTILATION = \"VENTILATION\";\r\nIfcSpatialZoneTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcSpatialZoneTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcStackTerminalTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcStackTerminalTypeEnum.BIRDCAGE = \"BIRDCAGE\";\r\nIfcStackTerminalTypeEnum.COWL = \"COWL\";\r\nIfcStackTerminalTypeEnum.RAINWATERHOPPER = \"RAINWATERHOPPER\";\r\nIfcStackTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcStackTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcStairFlightTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcStairFlightTypeEnum.STRAIGHT = \"STRAIGHT\";\r\nIfcStairFlightTypeEnum.WINDER = \"WINDER\";\r\nIfcStairFlightTypeEnum.SPIRAL = \"SPIRAL\";\r\nIfcStairFlightTypeEnum.CURVED = \"CURVED\";\r\nIfcStairFlightTypeEnum.FREEFORM = \"FREEFORM\";\r\nIfcStairFlightTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcStairFlightTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcStairTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcStairTypeEnum.STRAIGHT_RUN_STAIR = \"STRAIGHT_RUN_STAIR\";\r\nIfcStairTypeEnum.TWO_STRAIGHT_RUN_STAIR = \"TWO_STRAIGHT_RUN_STAIR\";\r\nIfcStairTypeEnum.QUARTER_WINDING_STAIR = \"QUARTER_WINDING_STAIR\";\r\nIfcStairTypeEnum.QUARTER_TURN_STAIR = \"QUARTER_TURN_STAIR\";\r\nIfcStairTypeEnum.HALF_WINDING_STAIR = \"HALF_WINDING_STAIR\";\r\nIfcStairTypeEnum.HALF_TURN_STAIR = \"HALF_TURN_STAIR\";\r\nIfcStairTypeEnum.TWO_QUARTER_WINDING_STAIR = \"TWO_QUARTER_WINDING_STAIR\";\r\nIfcStairTypeEnum.TWO_QUARTER_TURN_STAIR = \"TWO_QUARTER_TURN_STAIR\";\r\nIfcStairTypeEnum.THREE_QUARTER_WINDING_STAIR = \"THREE_QUARTER_WINDING_STAIR\";\r\nIfcStairTypeEnum.THREE_QUARTER_TURN_STAIR = \"THREE_QUARTER_TURN_STAIR\";\r\nIfcStairTypeEnum.SPIRAL_STAIR = \"SPIRAL_STAIR\";\r\nIfcStairTypeEnum.DOUBLE_RETURN_STAIR = \"DOUBLE_RETURN_STAIR\";\r\nIfcStairTypeEnum.CURVED_RUN_STAIR = \"CURVED_RUN_STAIR\";\r\nIfcStairTypeEnum.TWO_CURVED_RUN_STAIR = \"TWO_CURVED_RUN_STAIR\";\r\nIfcStairTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcStairTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcStateEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcStateEnum.READWRITE = \"READWRITE\";\r\nIfcStateEnum.READONLY = \"READONLY\";\r\nIfcStateEnum.LOCKED = \"LOCKED\";\r\nIfcStateEnum.READWRITELOCKED = \"READWRITELOCKED\";\r\nIfcStateEnum.READONLYLOCKED = \"READONLYLOCKED\";\r\nvar IfcStructuralCurveActivityTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcStructuralCurveActivityTypeEnum.CONST = \"CONST\";\r\nIfcStructuralCurveActivityTypeEnum.LINEAR = \"LINEAR\";\r\nIfcStructuralCurveActivityTypeEnum.POLYGONAL = \"POLYGONAL\";\r\nIfcStructuralCurveActivityTypeEnum.EQUIDISTANT = \"EQUIDISTANT\";\r\nIfcStructuralCurveActivityTypeEnum.SINUS = \"SINUS\";\r\nIfcStructuralCurveActivityTypeEnum.PARABOLA = \"PARABOLA\";\r\nIfcStructuralCurveActivityTypeEnum.DISCRETE = \"DISCRETE\";\r\nIfcStructuralCurveActivityTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcStructuralCurveActivityTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcStructuralCurveMemberTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcStructuralCurveMemberTypeEnum.RIGID_JOINED_MEMBER = \"RIGID_JOINED_MEMBER\";\r\nIfcStructuralCurveMemberTypeEnum.PIN_JOINED_MEMBER = \"PIN_JOINED_MEMBER\";\r\nIfcStructuralCurveMemberTypeEnum.CABLE = \"CABLE\";\r\nIfcStructuralCurveMemberTypeEnum.TENSION_MEMBER = \"TENSION_MEMBER\";\r\nIfcStructuralCurveMemberTypeEnum.COMPRESSION_MEMBER = \"COMPRESSION_MEMBER\";\r\nIfcStructuralCurveMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcStructuralCurveMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcStructuralSurfaceActivityTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcStructuralSurfaceActivityTypeEnum.CONST = \"CONST\";\r\nIfcStructuralSurfaceActivityTypeEnum.BILINEAR = \"BILINEAR\";\r\nIfcStructuralSurfaceActivityTypeEnum.DISCRETE = \"DISCRETE\";\r\nIfcStructuralSurfaceActivityTypeEnum.ISOCONTOUR = \"ISOCONTOUR\";\r\nIfcStructuralSurfaceActivityTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcStructuralSurfaceActivityTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcStructuralSurfaceMemberTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcStructuralSurfaceMemberTypeEnum.BENDING_ELEMENT = \"BENDING_ELEMENT\";\r\nIfcStructuralSurfaceMemberTypeEnum.MEMBRANE_ELEMENT = \"MEMBRANE_ELEMENT\";\r\nIfcStructuralSurfaceMemberTypeEnum.SHELL = \"SHELL\";\r\nIfcStructuralSurfaceMemberTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcStructuralSurfaceMemberTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcSubContractResourceTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcSubContractResourceTypeEnum.PURCHASE = \"PURCHASE\";\r\nIfcSubContractResourceTypeEnum.WORK = \"WORK\";\r\nIfcSubContractResourceTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcSubContractResourceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcSurfaceFeatureTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcSurfaceFeatureTypeEnum.MARK = \"MARK\";\r\nIfcSurfaceFeatureTypeEnum.TAG = \"TAG\";\r\nIfcSurfaceFeatureTypeEnum.TREATMENT = \"TREATMENT\";\r\nIfcSurfaceFeatureTypeEnum.DEFECT = \"DEFECT\";\r\nIfcSurfaceFeatureTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcSurfaceFeatureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcSurfaceSide = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcSurfaceSide.POSITIVE = \"POSITIVE\";\r\nIfcSurfaceSide.NEGATIVE = \"NEGATIVE\";\r\nIfcSurfaceSide.BOTH = \"BOTH\";\r\nvar IfcSwitchingDeviceTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcSwitchingDeviceTypeEnum.CONTACTOR = \"CONTACTOR\";\r\nIfcSwitchingDeviceTypeEnum.DIMMERSWITCH = \"DIMMERSWITCH\";\r\nIfcSwitchingDeviceTypeEnum.EMERGENCYSTOP = \"EMERGENCYSTOP\";\r\nIfcSwitchingDeviceTypeEnum.KEYPAD = \"KEYPAD\";\r\nIfcSwitchingDeviceTypeEnum.MOMENTARYSWITCH = \"MOMENTARYSWITCH\";\r\nIfcSwitchingDeviceTypeEnum.SELECTORSWITCH = \"SELECTORSWITCH\";\r\nIfcSwitchingDeviceTypeEnum.STARTER = \"STARTER\";\r\nIfcSwitchingDeviceTypeEnum.SWITCHDISCONNECTOR = \"SWITCHDISCONNECTOR\";\r\nIfcSwitchingDeviceTypeEnum.TOGGLESWITCH = \"TOGGLESWITCH\";\r\nIfcSwitchingDeviceTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcSwitchingDeviceTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcSystemFurnitureElementTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcSystemFurnitureElementTypeEnum.PANEL = \"PANEL\";\r\nIfcSystemFurnitureElementTypeEnum.WORKSURFACE = \"WORKSURFACE\";\r\nIfcSystemFurnitureElementTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcSystemFurnitureElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcTankTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcTankTypeEnum.BASIN = \"BASIN\";\r\nIfcTankTypeEnum.BREAKPRESSURE = \"BREAKPRESSURE\";\r\nIfcTankTypeEnum.EXPANSION = \"EXPANSION\";\r\nIfcTankTypeEnum.FEEDANDEXPANSION = \"FEEDANDEXPANSION\";\r\nIfcTankTypeEnum.PRESSUREVESSEL = \"PRESSUREVESSEL\";\r\nIfcTankTypeEnum.STORAGE = \"STORAGE\";\r\nIfcTankTypeEnum.VESSEL = \"VESSEL\";\r\nIfcTankTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcTankTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcTaskDurationEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcTaskDurationEnum.ELAPSEDTIME = \"ELAPSEDTIME\";\r\nIfcTaskDurationEnum.WORKTIME = \"WORKTIME\";\r\nIfcTaskDurationEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcTaskTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcTaskTypeEnum.ATTENDANCE = \"ATTENDANCE\";\r\nIfcTaskTypeEnum.CONSTRUCTION = \"CONSTRUCTION\";\r\nIfcTaskTypeEnum.DEMOLITION = \"DEMOLITION\";\r\nIfcTaskTypeEnum.DISMANTLE = \"DISMANTLE\";\r\nIfcTaskTypeEnum.DISPOSAL = \"DISPOSAL\";\r\nIfcTaskTypeEnum.INSTALLATION = \"INSTALLATION\";\r\nIfcTaskTypeEnum.LOGISTIC = \"LOGISTIC\";\r\nIfcTaskTypeEnum.MAINTENANCE = \"MAINTENANCE\";\r\nIfcTaskTypeEnum.MOVE = \"MOVE\";\r\nIfcTaskTypeEnum.OPERATION = \"OPERATION\";\r\nIfcTaskTypeEnum.REMOVAL = \"REMOVAL\";\r\nIfcTaskTypeEnum.RENOVATION = \"RENOVATION\";\r\nIfcTaskTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcTaskTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcTendonAnchorTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcTendonAnchorTypeEnum.COUPLER = \"COUPLER\";\r\nIfcTendonAnchorTypeEnum.FIXED_END = \"FIXED_END\";\r\nIfcTendonAnchorTypeEnum.TENSIONING_END = \"TENSIONING_END\";\r\nIfcTendonAnchorTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcTendonAnchorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcTendonConduitTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcTendonConduitTypeEnum.DUCT = \"DUCT\";\r\nIfcTendonConduitTypeEnum.COUPLER = \"COUPLER\";\r\nIfcTendonConduitTypeEnum.GROUTING_DUCT = \"GROUTING_DUCT\";\r\nIfcTendonConduitTypeEnum.TRUMPET = \"TRUMPET\";\r\nIfcTendonConduitTypeEnum.DIABOLO = \"DIABOLO\";\r\nIfcTendonConduitTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcTendonConduitTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcTendonTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcTendonTypeEnum.BAR = \"BAR\";\r\nIfcTendonTypeEnum.COATED = \"COATED\";\r\nIfcTendonTypeEnum.STRAND = \"STRAND\";\r\nIfcTendonTypeEnum.WIRE = \"WIRE\";\r\nIfcTendonTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcTendonTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcTextPath = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcTextPath.LEFT = \"LEFT\";\r\nIfcTextPath.RIGHT = \"RIGHT\";\r\nIfcTextPath.UP = \"UP\";\r\nIfcTextPath.DOWN = \"DOWN\";\r\nvar IfcTimeSeriesDataTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcTimeSeriesDataTypeEnum.CONTINUOUS = \"CONTINUOUS\";\r\nIfcTimeSeriesDataTypeEnum.DISCRETE = \"DISCRETE\";\r\nIfcTimeSeriesDataTypeEnum.DISCRETEBINARY = \"DISCRETEBINARY\";\r\nIfcTimeSeriesDataTypeEnum.PIECEWISEBINARY = \"PIECEWISEBINARY\";\r\nIfcTimeSeriesDataTypeEnum.PIECEWISECONSTANT = \"PIECEWISECONSTANT\";\r\nIfcTimeSeriesDataTypeEnum.PIECEWISECONTINUOUS = \"PIECEWISECONTINUOUS\";\r\nIfcTimeSeriesDataTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcTransformerTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcTransformerTypeEnum.CURRENT = \"CURRENT\";\r\nIfcTransformerTypeEnum.FREQUENCY = \"FREQUENCY\";\r\nIfcTransformerTypeEnum.INVERTER = \"INVERTER\";\r\nIfcTransformerTypeEnum.RECTIFIER = \"RECTIFIER\";\r\nIfcTransformerTypeEnum.VOLTAGE = \"VOLTAGE\";\r\nIfcTransformerTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcTransformerTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcTransitionCode = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcTransitionCode.DISCONTINUOUS = \"DISCONTINUOUS\";\r\nIfcTransitionCode.CONTINUOUS = \"CONTINUOUS\";\r\nIfcTransitionCode.CONTSAMEGRADIENT = \"CONTSAMEGRADIENT\";\r\nIfcTransitionCode.CONTSAMEGRADIENTSAMECURVATURE = \"CONTSAMEGRADIENTSAMECURVATURE\";\r\nvar IfcTransitionCurveType = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcTransitionCurveType.BIQUADRATICPARABOLA = \"BIQUADRATICPARABOLA\";\r\nIfcTransitionCurveType.BLOSSCURVE = \"BLOSSCURVE\";\r\nIfcTransitionCurveType.CLOTHOIDCURVE = \"CLOTHOIDCURVE\";\r\nIfcTransitionCurveType.COSINECURVE = \"COSINECURVE\";\r\nIfcTransitionCurveType.CUBICPARABOLA = \"CUBICPARABOLA\";\r\nIfcTransitionCurveType.SINECURVE = \"SINECURVE\";\r\nvar IfcTransportElementTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcTransportElementTypeEnum.ELEVATOR = \"ELEVATOR\";\r\nIfcTransportElementTypeEnum.ESCALATOR = \"ESCALATOR\";\r\nIfcTransportElementTypeEnum.MOVINGWALKWAY = \"MOVINGWALKWAY\";\r\nIfcTransportElementTypeEnum.CRANEWAY = \"CRANEWAY\";\r\nIfcTransportElementTypeEnum.LIFTINGGEAR = \"LIFTINGGEAR\";\r\nIfcTransportElementTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcTransportElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcTrimmingPreference = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcTrimmingPreference.CARTESIAN = \"CARTESIAN\";\r\nIfcTrimmingPreference.PARAMETER = \"PARAMETER\";\r\nIfcTrimmingPreference.UNSPECIFIED = \"UNSPECIFIED\";\r\nvar IfcTubeBundleTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcTubeBundleTypeEnum.FINNED = \"FINNED\";\r\nIfcTubeBundleTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcTubeBundleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcUnitEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcUnitEnum.ABSORBEDDOSEUNIT = \"ABSORBEDDOSEUNIT\";\r\nIfcUnitEnum.AMOUNTOFSUBSTANCEUNIT = \"AMOUNTOFSUBSTANCEUNIT\";\r\nIfcUnitEnum.AREAUNIT = \"AREAUNIT\";\r\nIfcUnitEnum.DOSEEQUIVALENTUNIT = \"DOSEEQUIVALENTUNIT\";\r\nIfcUnitEnum.ELECTRICCAPACITANCEUNIT = \"ELECTRICCAPACITANCEUNIT\";\r\nIfcUnitEnum.ELECTRICCHARGEUNIT = \"ELECTRICCHARGEUNIT\";\r\nIfcUnitEnum.ELECTRICCONDUCTANCEUNIT = \"ELECTRICCONDUCTANCEUNIT\";\r\nIfcUnitEnum.ELECTRICCURRENTUNIT = \"ELECTRICCURRENTUNIT\";\r\nIfcUnitEnum.ELECTRICRESISTANCEUNIT = \"ELECTRICRESISTANCEUNIT\";\r\nIfcUnitEnum.ELECTRICVOLTAGEUNIT = \"ELECTRICVOLTAGEUNIT\";\r\nIfcUnitEnum.ENERGYUNIT = \"ENERGYUNIT\";\r\nIfcUnitEnum.FORCEUNIT = \"FORCEUNIT\";\r\nIfcUnitEnum.FREQUENCYUNIT = \"FREQUENCYUNIT\";\r\nIfcUnitEnum.ILLUMINANCEUNIT = \"ILLUMINANCEUNIT\";\r\nIfcUnitEnum.INDUCTANCEUNIT = \"INDUCTANCEUNIT\";\r\nIfcUnitEnum.LENGTHUNIT = \"LENGTHUNIT\";\r\nIfcUnitEnum.LUMINOUSFLUXUNIT = \"LUMINOUSFLUXUNIT\";\r\nIfcUnitEnum.LUMINOUSINTENSITYUNIT = \"LUMINOUSINTENSITYUNIT\";\r\nIfcUnitEnum.MAGNETICFLUXDENSITYUNIT = \"MAGNETICFLUXDENSITYUNIT\";\r\nIfcUnitEnum.MAGNETICFLUXUNIT = \"MAGNETICFLUXUNIT\";\r\nIfcUnitEnum.MASSUNIT = \"MASSUNIT\";\r\nIfcUnitEnum.PLANEANGLEUNIT = \"PLANEANGLEUNIT\";\r\nIfcUnitEnum.POWERUNIT = \"POWERUNIT\";\r\nIfcUnitEnum.PRESSUREUNIT = \"PRESSUREUNIT\";\r\nIfcUnitEnum.RADIOACTIVITYUNIT = \"RADIOACTIVITYUNIT\";\r\nIfcUnitEnum.SOLIDANGLEUNIT = \"SOLIDANGLEUNIT\";\r\nIfcUnitEnum.THERMODYNAMICTEMPERATUREUNIT = \"THERMODYNAMICTEMPERATUREUNIT\";\r\nIfcUnitEnum.TIMEUNIT = \"TIMEUNIT\";\r\nIfcUnitEnum.VOLUMEUNIT = \"VOLUMEUNIT\";\r\nIfcUnitEnum.USERDEFINED = \"USERDEFINED\";\r\nvar IfcUnitaryControlElementTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcUnitaryControlElementTypeEnum.ALARMPANEL = \"ALARMPANEL\";\r\nIfcUnitaryControlElementTypeEnum.CONTROLPANEL = \"CONTROLPANEL\";\r\nIfcUnitaryControlElementTypeEnum.GASDETECTIONPANEL = \"GASDETECTIONPANEL\";\r\nIfcUnitaryControlElementTypeEnum.INDICATORPANEL = \"INDICATORPANEL\";\r\nIfcUnitaryControlElementTypeEnum.MIMICPANEL = \"MIMICPANEL\";\r\nIfcUnitaryControlElementTypeEnum.HUMIDISTAT = \"HUMIDISTAT\";\r\nIfcUnitaryControlElementTypeEnum.THERMOSTAT = \"THERMOSTAT\";\r\nIfcUnitaryControlElementTypeEnum.WEATHERSTATION = \"WEATHERSTATION\";\r\nIfcUnitaryControlElementTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcUnitaryControlElementTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcUnitaryEquipmentTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcUnitaryEquipmentTypeEnum.AIRHANDLER = \"AIRHANDLER\";\r\nIfcUnitaryEquipmentTypeEnum.AIRCONDITIONINGUNIT = \"AIRCONDITIONINGUNIT\";\r\nIfcUnitaryEquipmentTypeEnum.DEHUMIDIFIER = \"DEHUMIDIFIER\";\r\nIfcUnitaryEquipmentTypeEnum.SPLITSYSTEM = \"SPLITSYSTEM\";\r\nIfcUnitaryEquipmentTypeEnum.ROOFTOPUNIT = \"ROOFTOPUNIT\";\r\nIfcUnitaryEquipmentTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcUnitaryEquipmentTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcValveTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcValveTypeEnum.AIRRELEASE = \"AIRRELEASE\";\r\nIfcValveTypeEnum.ANTIVACUUM = \"ANTIVACUUM\";\r\nIfcValveTypeEnum.CHANGEOVER = \"CHANGEOVER\";\r\nIfcValveTypeEnum.CHECK = \"CHECK\";\r\nIfcValveTypeEnum.COMMISSIONING = \"COMMISSIONING\";\r\nIfcValveTypeEnum.DIVERTING = \"DIVERTING\";\r\nIfcValveTypeEnum.DRAWOFFCOCK = \"DRAWOFFCOCK\";\r\nIfcValveTypeEnum.DOUBLECHECK = \"DOUBLECHECK\";\r\nIfcValveTypeEnum.DOUBLEREGULATING = \"DOUBLEREGULATING\";\r\nIfcValveTypeEnum.FAUCET = \"FAUCET\";\r\nIfcValveTypeEnum.FLUSHING = \"FLUSHING\";\r\nIfcValveTypeEnum.GASCOCK = \"GASCOCK\";\r\nIfcValveTypeEnum.GASTAP = \"GASTAP\";\r\nIfcValveTypeEnum.ISOLATING = \"ISOLATING\";\r\nIfcValveTypeEnum.MIXING = \"MIXING\";\r\nIfcValveTypeEnum.PRESSUREREDUCING = \"PRESSUREREDUCING\";\r\nIfcValveTypeEnum.PRESSURERELIEF = \"PRESSURERELIEF\";\r\nIfcValveTypeEnum.REGULATING = \"REGULATING\";\r\nIfcValveTypeEnum.SAFETYCUTOFF = \"SAFETYCUTOFF\";\r\nIfcValveTypeEnum.STEAMTRAP = \"STEAMTRAP\";\r\nIfcValveTypeEnum.STOPCOCK = \"STOPCOCK\";\r\nIfcValveTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcValveTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcVibrationDamperTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcVibrationDamperTypeEnum.BENDING_YIELD = \"BENDING_YIELD\";\r\nIfcVibrationDamperTypeEnum.SHEAR_YIELD = \"SHEAR_YIELD\";\r\nIfcVibrationDamperTypeEnum.AXIAL_YIELD = \"AXIAL_YIELD\";\r\nIfcVibrationDamperTypeEnum.FRICTION = \"FRICTION\";\r\nIfcVibrationDamperTypeEnum.VISCOUS = \"VISCOUS\";\r\nIfcVibrationDamperTypeEnum.RUBBER = \"RUBBER\";\r\nIfcVibrationDamperTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcVibrationDamperTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcVibrationIsolatorTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcVibrationIsolatorTypeEnum.COMPRESSION = \"COMPRESSION\";\r\nIfcVibrationIsolatorTypeEnum.SPRING = \"SPRING\";\r\nIfcVibrationIsolatorTypeEnum.BASE = \"BASE\";\r\nIfcVibrationIsolatorTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcVibrationIsolatorTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcVoidingFeatureTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcVoidingFeatureTypeEnum.CUTOUT = \"CUTOUT\";\r\nIfcVoidingFeatureTypeEnum.NOTCH = \"NOTCH\";\r\nIfcVoidingFeatureTypeEnum.HOLE = \"HOLE\";\r\nIfcVoidingFeatureTypeEnum.MITER = \"MITER\";\r\nIfcVoidingFeatureTypeEnum.CHAMFER = \"CHAMFER\";\r\nIfcVoidingFeatureTypeEnum.EDGE = \"EDGE\";\r\nIfcVoidingFeatureTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcVoidingFeatureTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcWallTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcWallTypeEnum.MOVABLE = \"MOVABLE\";\r\nIfcWallTypeEnum.PARAPET = \"PARAPET\";\r\nIfcWallTypeEnum.PARTITIONING = \"PARTITIONING\";\r\nIfcWallTypeEnum.PLUMBINGWALL = \"PLUMBINGWALL\";\r\nIfcWallTypeEnum.SHEAR = \"SHEAR\";\r\nIfcWallTypeEnum.SOLIDWALL = \"SOLIDWALL\";\r\nIfcWallTypeEnum.STANDARD = \"STANDARD\";\r\nIfcWallTypeEnum.POLYGONAL = \"POLYGONAL\";\r\nIfcWallTypeEnum.ELEMENTEDWALL = \"ELEMENTEDWALL\";\r\nIfcWallTypeEnum.RETAININGWALL = \"RETAININGWALL\";\r\nIfcWallTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcWallTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcWasteTerminalTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcWasteTerminalTypeEnum.FLOORTRAP = \"FLOORTRAP\";\r\nIfcWasteTerminalTypeEnum.FLOORWASTE = \"FLOORWASTE\";\r\nIfcWasteTerminalTypeEnum.GULLYSUMP = \"GULLYSUMP\";\r\nIfcWasteTerminalTypeEnum.GULLYTRAP = \"GULLYTRAP\";\r\nIfcWasteTerminalTypeEnum.ROOFDRAIN = \"ROOFDRAIN\";\r\nIfcWasteTerminalTypeEnum.WASTEDISPOSALUNIT = \"WASTEDISPOSALUNIT\";\r\nIfcWasteTerminalTypeEnum.WASTETRAP = \"WASTETRAP\";\r\nIfcWasteTerminalTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcWasteTerminalTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcWindowPanelOperationEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcWindowPanelOperationEnum.SIDEHUNGRIGHTHAND = \"SIDEHUNGRIGHTHAND\";\r\nIfcWindowPanelOperationEnum.SIDEHUNGLEFTHAND = \"SIDEHUNGLEFTHAND\";\r\nIfcWindowPanelOperationEnum.TILTANDTURNRIGHTHAND = \"TILTANDTURNRIGHTHAND\";\r\nIfcWindowPanelOperationEnum.TILTANDTURNLEFTHAND = \"TILTANDTURNLEFTHAND\";\r\nIfcWindowPanelOperationEnum.TOPHUNG = \"TOPHUNG\";\r\nIfcWindowPanelOperationEnum.BOTTOMHUNG = \"BOTTOMHUNG\";\r\nIfcWindowPanelOperationEnum.PIVOTHORIZONTAL = \"PIVOTHORIZONTAL\";\r\nIfcWindowPanelOperationEnum.PIVOTVERTICAL = \"PIVOTVERTICAL\";\r\nIfcWindowPanelOperationEnum.SLIDINGHORIZONTAL = \"SLIDINGHORIZONTAL\";\r\nIfcWindowPanelOperationEnum.SLIDINGVERTICAL = \"SLIDINGVERTICAL\";\r\nIfcWindowPanelOperationEnum.REMOVABLECASEMENT = \"REMOVABLECASEMENT\";\r\nIfcWindowPanelOperationEnum.FIXEDCASEMENT = \"FIXEDCASEMENT\";\r\nIfcWindowPanelOperationEnum.OTHEROPERATION = \"OTHEROPERATION\";\r\nIfcWindowPanelOperationEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcWindowPanelPositionEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcWindowPanelPositionEnum.LEFT = \"LEFT\";\r\nIfcWindowPanelPositionEnum.MIDDLE = \"MIDDLE\";\r\nIfcWindowPanelPositionEnum.RIGHT = \"RIGHT\";\r\nIfcWindowPanelPositionEnum.BOTTOM = \"BOTTOM\";\r\nIfcWindowPanelPositionEnum.TOP = \"TOP\";\r\nIfcWindowPanelPositionEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcWindowStyleConstructionEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcWindowStyleConstructionEnum.ALUMINIUM = \"ALUMINIUM\";\r\nIfcWindowStyleConstructionEnum.HIGH_GRADE_STEEL = \"HIGH_GRADE_STEEL\";\r\nIfcWindowStyleConstructionEnum.STEEL = \"STEEL\";\r\nIfcWindowStyleConstructionEnum.WOOD = \"WOOD\";\r\nIfcWindowStyleConstructionEnum.ALUMINIUM_WOOD = \"ALUMINIUM_WOOD\";\r\nIfcWindowStyleConstructionEnum.PLASTIC = \"PLASTIC\";\r\nIfcWindowStyleConstructionEnum.OTHER_CONSTRUCTION = \"OTHER_CONSTRUCTION\";\r\nIfcWindowStyleConstructionEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcWindowStyleOperationEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcWindowStyleOperationEnum.SINGLE_PANEL = \"SINGLE_PANEL\";\r\nIfcWindowStyleOperationEnum.DOUBLE_PANEL_VERTICAL = \"DOUBLE_PANEL_VERTICAL\";\r\nIfcWindowStyleOperationEnum.DOUBLE_PANEL_HORIZONTAL = \"DOUBLE_PANEL_HORIZONTAL\";\r\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_VERTICAL = \"TRIPLE_PANEL_VERTICAL\";\r\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_BOTTOM = \"TRIPLE_PANEL_BOTTOM\";\r\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_TOP = \"TRIPLE_PANEL_TOP\";\r\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_LEFT = \"TRIPLE_PANEL_LEFT\";\r\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_RIGHT = \"TRIPLE_PANEL_RIGHT\";\r\nIfcWindowStyleOperationEnum.TRIPLE_PANEL_HORIZONTAL = \"TRIPLE_PANEL_HORIZONTAL\";\r\nIfcWindowStyleOperationEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcWindowStyleOperationEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcWindowTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcWindowTypeEnum.WINDOW = \"WINDOW\";\r\nIfcWindowTypeEnum.SKYLIGHT = \"SKYLIGHT\";\r\nIfcWindowTypeEnum.LIGHTDOME = \"LIGHTDOME\";\r\nIfcWindowTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcWindowTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcWindowTypePartitioningEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcWindowTypePartitioningEnum.SINGLE_PANEL = \"SINGLE_PANEL\";\r\nIfcWindowTypePartitioningEnum.DOUBLE_PANEL_VERTICAL = \"DOUBLE_PANEL_VERTICAL\";\r\nIfcWindowTypePartitioningEnum.DOUBLE_PANEL_HORIZONTAL = \"DOUBLE_PANEL_HORIZONTAL\";\r\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_VERTICAL = \"TRIPLE_PANEL_VERTICAL\";\r\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_BOTTOM = \"TRIPLE_PANEL_BOTTOM\";\r\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_TOP = \"TRIPLE_PANEL_TOP\";\r\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_LEFT = \"TRIPLE_PANEL_LEFT\";\r\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_RIGHT = \"TRIPLE_PANEL_RIGHT\";\r\nIfcWindowTypePartitioningEnum.TRIPLE_PANEL_HORIZONTAL = \"TRIPLE_PANEL_HORIZONTAL\";\r\nIfcWindowTypePartitioningEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcWindowTypePartitioningEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcWorkCalendarTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcWorkCalendarTypeEnum.FIRSTSHIFT = \"FIRSTSHIFT\";\r\nIfcWorkCalendarTypeEnum.SECONDSHIFT = \"SECONDSHIFT\";\r\nIfcWorkCalendarTypeEnum.THIRDSHIFT = \"THIRDSHIFT\";\r\nIfcWorkCalendarTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcWorkCalendarTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcWorkPlanTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcWorkPlanTypeEnum.ACTUAL = \"ACTUAL\";\r\nIfcWorkPlanTypeEnum.BASELINE = \"BASELINE\";\r\nIfcWorkPlanTypeEnum.PLANNED = \"PLANNED\";\r\nIfcWorkPlanTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcWorkPlanTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcWorkScheduleTypeEnum = class {\r\n  constructor(v) {\r\n    this.value = v;\r\n  }\r\n};\r\nIfcWorkScheduleTypeEnum.ACTUAL = \"ACTUAL\";\r\nIfcWorkScheduleTypeEnum.BASELINE = \"BASELINE\";\r\nIfcWorkScheduleTypeEnum.PLANNED = \"PLANNED\";\r\nIfcWorkScheduleTypeEnum.USERDEFINED = \"USERDEFINED\";\r\nIfcWorkScheduleTypeEnum.NOTDEFINED = \"NOTDEFINED\";\r\nvar IfcActionRequest = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.PredefinedType = PredefinedType;\r\n    this.Status = Status;\r\n    this.LongDescription = LongDescription;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let Status = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    return new IfcActionRequest(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.Status);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcActor = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.TheActor = TheActor;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let TheActor = tape[ptr++];\r\n    return new IfcActor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.TheActor);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcActorRole = class {\r\n  constructor(expressID, type, Role, UserDefinedRole, Description) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Role = Role;\r\n    this.UserDefinedRole = UserDefinedRole;\r\n    this.Description = Description;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Role = tape[ptr++];\r\n    let UserDefinedRole = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    return new IfcActorRole(expressID, type, Role, UserDefinedRole, Description);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Role);\r\n    ;\r\n    args.push(this.UserDefinedRole);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcActuator = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcActuator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcActuatorType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcActuatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAddress = class {\r\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Purpose = Purpose;\r\n    this.Description = Description;\r\n    this.UserDefinedPurpose = UserDefinedPurpose;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Purpose = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let UserDefinedPurpose = tape[ptr++];\r\n    return new IfcAddress(expressID, type, Purpose, Description, UserDefinedPurpose);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Purpose);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.UserDefinedPurpose);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAdvancedBrep = class {\r\n  constructor(expressID, type, Outer) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Outer = Outer;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Outer = tape[ptr++];\r\n    return new IfcAdvancedBrep(expressID, type, Outer);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Outer);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAdvancedBrepWithVoids = class {\r\n  constructor(expressID, type, Outer, Voids) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Outer = Outer;\r\n    this.Voids = Voids;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Outer = tape[ptr++];\r\n    let Voids = tape[ptr++];\r\n    return new IfcAdvancedBrepWithVoids(expressID, type, Outer, Voids);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Outer);\r\n    ;\r\n    args.push(this.Voids);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAdvancedFace = class {\r\n  constructor(expressID, type, Bounds, FaceSurface, SameSense) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Bounds = Bounds;\r\n    this.FaceSurface = FaceSurface;\r\n    this.SameSense = SameSense;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Bounds = tape[ptr++];\r\n    let FaceSurface = tape[ptr++];\r\n    let SameSense = tape[ptr++];\r\n    return new IfcAdvancedFace(expressID, type, Bounds, FaceSurface, SameSense);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Bounds);\r\n    ;\r\n    args.push(this.FaceSurface);\r\n    ;\r\n    args.push(this.SameSense);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAirTerminal = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcAirTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAirTerminalBox = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcAirTerminalBox(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAirTerminalBoxType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcAirTerminalBoxType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAirTerminalType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcAirTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAirToAirHeatRecovery = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcAirToAirHeatRecovery(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAirToAirHeatRecoveryType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcAirToAirHeatRecoveryType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAlarm = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcAlarm(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAlarmType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcAlarmType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAlignment = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Axis = Axis;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Axis = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcAlignment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Axis);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAlignment2DHorizontal = class {\r\n  constructor(expressID, type, StartDistAlong, Segments) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.StartDistAlong = StartDistAlong;\r\n    this.Segments = Segments;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let StartDistAlong = tape[ptr++];\r\n    let Segments = tape[ptr++];\r\n    return new IfcAlignment2DHorizontal(expressID, type, StartDistAlong, Segments);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.StartDistAlong);\r\n    ;\r\n    args.push(this.Segments);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAlignment2DHorizontalSegment = class {\r\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, CurveGeometry) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.TangentialContinuity = TangentialContinuity;\r\n    this.StartTag = StartTag;\r\n    this.EndTag = EndTag;\r\n    this.CurveGeometry = CurveGeometry;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let TangentialContinuity = tape[ptr++];\r\n    let StartTag = tape[ptr++];\r\n    let EndTag = tape[ptr++];\r\n    let CurveGeometry = tape[ptr++];\r\n    return new IfcAlignment2DHorizontalSegment(expressID, type, TangentialContinuity, StartTag, EndTag, CurveGeometry);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.TangentialContinuity);\r\n    ;\r\n    args.push(this.StartTag);\r\n    ;\r\n    args.push(this.EndTag);\r\n    ;\r\n    args.push(this.CurveGeometry);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAlignment2DSegment = class {\r\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.TangentialContinuity = TangentialContinuity;\r\n    this.StartTag = StartTag;\r\n    this.EndTag = EndTag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let TangentialContinuity = tape[ptr++];\r\n    let StartTag = tape[ptr++];\r\n    let EndTag = tape[ptr++];\r\n    return new IfcAlignment2DSegment(expressID, type, TangentialContinuity, StartTag, EndTag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.TangentialContinuity);\r\n    ;\r\n    args.push(this.StartTag);\r\n    ;\r\n    args.push(this.EndTag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAlignment2DVerSegCircularArc = class {\r\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, Radius, IsConvex) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.TangentialContinuity = TangentialContinuity;\r\n    this.StartTag = StartTag;\r\n    this.EndTag = EndTag;\r\n    this.StartDistAlong = StartDistAlong;\r\n    this.HorizontalLength = HorizontalLength;\r\n    this.StartHeight = StartHeight;\r\n    this.StartGradient = StartGradient;\r\n    this.Radius = Radius;\r\n    this.IsConvex = IsConvex;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let TangentialContinuity = tape[ptr++];\r\n    let StartTag = tape[ptr++];\r\n    let EndTag = tape[ptr++];\r\n    let StartDistAlong = tape[ptr++];\r\n    let HorizontalLength = tape[ptr++];\r\n    let StartHeight = tape[ptr++];\r\n    let StartGradient = tape[ptr++];\r\n    let Radius = tape[ptr++];\r\n    let IsConvex = tape[ptr++];\r\n    return new IfcAlignment2DVerSegCircularArc(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, Radius, IsConvex);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.TangentialContinuity);\r\n    ;\r\n    args.push(this.StartTag);\r\n    ;\r\n    args.push(this.EndTag);\r\n    ;\r\n    args.push(this.StartDistAlong);\r\n    ;\r\n    args.push(this.HorizontalLength);\r\n    ;\r\n    args.push(this.StartHeight);\r\n    ;\r\n    args.push(this.StartGradient);\r\n    ;\r\n    args.push(this.Radius);\r\n    ;\r\n    args.push(this.IsConvex);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAlignment2DVerSegLine = class {\r\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.TangentialContinuity = TangentialContinuity;\r\n    this.StartTag = StartTag;\r\n    this.EndTag = EndTag;\r\n    this.StartDistAlong = StartDistAlong;\r\n    this.HorizontalLength = HorizontalLength;\r\n    this.StartHeight = StartHeight;\r\n    this.StartGradient = StartGradient;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let TangentialContinuity = tape[ptr++];\r\n    let StartTag = tape[ptr++];\r\n    let EndTag = tape[ptr++];\r\n    let StartDistAlong = tape[ptr++];\r\n    let HorizontalLength = tape[ptr++];\r\n    let StartHeight = tape[ptr++];\r\n    let StartGradient = tape[ptr++];\r\n    return new IfcAlignment2DVerSegLine(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.TangentialContinuity);\r\n    ;\r\n    args.push(this.StartTag);\r\n    ;\r\n    args.push(this.EndTag);\r\n    ;\r\n    args.push(this.StartDistAlong);\r\n    ;\r\n    args.push(this.HorizontalLength);\r\n    ;\r\n    args.push(this.StartHeight);\r\n    ;\r\n    args.push(this.StartGradient);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAlignment2DVerSegParabolicArc = class {\r\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, ParabolaConstant, IsConvex) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.TangentialContinuity = TangentialContinuity;\r\n    this.StartTag = StartTag;\r\n    this.EndTag = EndTag;\r\n    this.StartDistAlong = StartDistAlong;\r\n    this.HorizontalLength = HorizontalLength;\r\n    this.StartHeight = StartHeight;\r\n    this.StartGradient = StartGradient;\r\n    this.ParabolaConstant = ParabolaConstant;\r\n    this.IsConvex = IsConvex;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let TangentialContinuity = tape[ptr++];\r\n    let StartTag = tape[ptr++];\r\n    let EndTag = tape[ptr++];\r\n    let StartDistAlong = tape[ptr++];\r\n    let HorizontalLength = tape[ptr++];\r\n    let StartHeight = tape[ptr++];\r\n    let StartGradient = tape[ptr++];\r\n    let ParabolaConstant = tape[ptr++];\r\n    let IsConvex = tape[ptr++];\r\n    return new IfcAlignment2DVerSegParabolicArc(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient, ParabolaConstant, IsConvex);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.TangentialContinuity);\r\n    ;\r\n    args.push(this.StartTag);\r\n    ;\r\n    args.push(this.EndTag);\r\n    ;\r\n    args.push(this.StartDistAlong);\r\n    ;\r\n    args.push(this.HorizontalLength);\r\n    ;\r\n    args.push(this.StartHeight);\r\n    ;\r\n    args.push(this.StartGradient);\r\n    ;\r\n    args.push(this.ParabolaConstant);\r\n    ;\r\n    args.push(this.IsConvex);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAlignment2DVertical = class {\r\n  constructor(expressID, type, Segments) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Segments = Segments;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Segments = tape[ptr++];\r\n    return new IfcAlignment2DVertical(expressID, type, Segments);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Segments);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAlignment2DVerticalSegment = class {\r\n  constructor(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.TangentialContinuity = TangentialContinuity;\r\n    this.StartTag = StartTag;\r\n    this.EndTag = EndTag;\r\n    this.StartDistAlong = StartDistAlong;\r\n    this.HorizontalLength = HorizontalLength;\r\n    this.StartHeight = StartHeight;\r\n    this.StartGradient = StartGradient;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let TangentialContinuity = tape[ptr++];\r\n    let StartTag = tape[ptr++];\r\n    let EndTag = tape[ptr++];\r\n    let StartDistAlong = tape[ptr++];\r\n    let HorizontalLength = tape[ptr++];\r\n    let StartHeight = tape[ptr++];\r\n    let StartGradient = tape[ptr++];\r\n    return new IfcAlignment2DVerticalSegment(expressID, type, TangentialContinuity, StartTag, EndTag, StartDistAlong, HorizontalLength, StartHeight, StartGradient);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.TangentialContinuity);\r\n    ;\r\n    args.push(this.StartTag);\r\n    ;\r\n    args.push(this.EndTag);\r\n    ;\r\n    args.push(this.StartDistAlong);\r\n    ;\r\n    args.push(this.HorizontalLength);\r\n    ;\r\n    args.push(this.StartHeight);\r\n    ;\r\n    args.push(this.StartGradient);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAlignmentCurve = class {\r\n  constructor(expressID, type, Horizontal, Vertical, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Horizontal = Horizontal;\r\n    this.Vertical = Vertical;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Horizontal = tape[ptr++];\r\n    let Vertical = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcAlignmentCurve(expressID, type, Horizontal, Vertical, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Horizontal);\r\n    ;\r\n    args.push(this.Vertical);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAnnotation = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    return new IfcAnnotation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAnnotationFillArea = class {\r\n  constructor(expressID, type, OuterBoundary, InnerBoundaries) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.OuterBoundary = OuterBoundary;\r\n    this.InnerBoundaries = InnerBoundaries;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let OuterBoundary = tape[ptr++];\r\n    let InnerBoundaries = tape[ptr++];\r\n    return new IfcAnnotationFillArea(expressID, type, OuterBoundary, InnerBoundaries);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.OuterBoundary);\r\n    ;\r\n    args.push(this.InnerBoundaries);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcApplication = class {\r\n  constructor(expressID, type, ApplicationDeveloper, Version, ApplicationFullName, ApplicationIdentifier) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ApplicationDeveloper = ApplicationDeveloper;\r\n    this.Version = Version;\r\n    this.ApplicationFullName = ApplicationFullName;\r\n    this.ApplicationIdentifier = ApplicationIdentifier;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ApplicationDeveloper = tape[ptr++];\r\n    let Version = tape[ptr++];\r\n    let ApplicationFullName = tape[ptr++];\r\n    let ApplicationIdentifier = tape[ptr++];\r\n    return new IfcApplication(expressID, type, ApplicationDeveloper, Version, ApplicationFullName, ApplicationIdentifier);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ApplicationDeveloper);\r\n    ;\r\n    args.push(this.Version);\r\n    ;\r\n    args.push(this.ApplicationFullName);\r\n    ;\r\n    args.push(this.ApplicationIdentifier);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAppliedValue = class {\r\n  constructor(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.AppliedValue = AppliedValue;\r\n    this.UnitBasis = UnitBasis;\r\n    this.ApplicableDate = ApplicableDate;\r\n    this.FixedUntilDate = FixedUntilDate;\r\n    this.Category = Category;\r\n    this.Condition = Condition;\r\n    this.ArithmeticOperator = ArithmeticOperator;\r\n    this.Components = Components;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let AppliedValue = tape[ptr++];\r\n    let UnitBasis = tape[ptr++];\r\n    let ApplicableDate = tape[ptr++];\r\n    let FixedUntilDate = tape[ptr++];\r\n    let Category = tape[ptr++];\r\n    let Condition = tape[ptr++];\r\n    let ArithmeticOperator = tape[ptr++];\r\n    let Components = tape[ptr++];\r\n    return new IfcAppliedValue(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.AppliedValue);\r\n    ;\r\n    args.push(this.UnitBasis);\r\n    ;\r\n    args.push(this.ApplicableDate);\r\n    ;\r\n    args.push(this.FixedUntilDate);\r\n    ;\r\n    args.push(this.Category);\r\n    ;\r\n    args.push(this.Condition);\r\n    ;\r\n    args.push(this.ArithmeticOperator);\r\n    ;\r\n    args.push(this.Components);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcApproval = class {\r\n  constructor(expressID, type, Identifier, Name, Description, TimeOfApproval, Status, Level, Qualifier, RequestingApproval, GivingApproval) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Identifier = Identifier;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.TimeOfApproval = TimeOfApproval;\r\n    this.Status = Status;\r\n    this.Level = Level;\r\n    this.Qualifier = Qualifier;\r\n    this.RequestingApproval = RequestingApproval;\r\n    this.GivingApproval = GivingApproval;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Identifier = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let TimeOfApproval = tape[ptr++];\r\n    let Status = tape[ptr++];\r\n    let Level = tape[ptr++];\r\n    let Qualifier = tape[ptr++];\r\n    let RequestingApproval = tape[ptr++];\r\n    let GivingApproval = tape[ptr++];\r\n    return new IfcApproval(expressID, type, Identifier, Name, Description, TimeOfApproval, Status, Level, Qualifier, RequestingApproval, GivingApproval);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Identifier);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.TimeOfApproval);\r\n    ;\r\n    args.push(this.Status);\r\n    ;\r\n    args.push(this.Level);\r\n    ;\r\n    args.push(this.Qualifier);\r\n    ;\r\n    args.push(this.RequestingApproval);\r\n    ;\r\n    args.push(this.GivingApproval);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcApprovalRelationship = class {\r\n  constructor(expressID, type, Name, Description, RelatingApproval, RelatedApprovals) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingApproval = RelatingApproval;\r\n    this.RelatedApprovals = RelatedApprovals;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingApproval = tape[ptr++];\r\n    let RelatedApprovals = tape[ptr++];\r\n    return new IfcApprovalRelationship(expressID, type, Name, Description, RelatingApproval, RelatedApprovals);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingApproval);\r\n    ;\r\n    args.push(this.RelatedApprovals);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcArbitraryClosedProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, OuterCurve) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.OuterCurve = OuterCurve;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let OuterCurve = tape[ptr++];\r\n    return new IfcArbitraryClosedProfileDef(expressID, type, ProfileType, ProfileName, OuterCurve);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.OuterCurve);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcArbitraryOpenProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, Curve) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.Curve = Curve;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let Curve = tape[ptr++];\r\n    return new IfcArbitraryOpenProfileDef(expressID, type, ProfileType, ProfileName, Curve);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.Curve);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcArbitraryProfileDefWithVoids = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, OuterCurve, InnerCurves) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.OuterCurve = OuterCurve;\r\n    this.InnerCurves = InnerCurves;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let OuterCurve = tape[ptr++];\r\n    let InnerCurves = tape[ptr++];\r\n    return new IfcArbitraryProfileDefWithVoids(expressID, type, ProfileType, ProfileName, OuterCurve, InnerCurves);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.OuterCurve);\r\n    ;\r\n    args.push(this.InnerCurves);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAsset = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, OriginalValue, CurrentValue, TotalReplacementCost, Owner, User, ResponsiblePerson, IncorporationDate, DepreciatedValue) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.OriginalValue = OriginalValue;\r\n    this.CurrentValue = CurrentValue;\r\n    this.TotalReplacementCost = TotalReplacementCost;\r\n    this.Owner = Owner;\r\n    this.User = User;\r\n    this.ResponsiblePerson = ResponsiblePerson;\r\n    this.IncorporationDate = IncorporationDate;\r\n    this.DepreciatedValue = DepreciatedValue;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let OriginalValue = tape[ptr++];\r\n    let CurrentValue = tape[ptr++];\r\n    let TotalReplacementCost = tape[ptr++];\r\n    let Owner = tape[ptr++];\r\n    let User = tape[ptr++];\r\n    let ResponsiblePerson = tape[ptr++];\r\n    let IncorporationDate = tape[ptr++];\r\n    let DepreciatedValue = tape[ptr++];\r\n    return new IfcAsset(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, OriginalValue, CurrentValue, TotalReplacementCost, Owner, User, ResponsiblePerson, IncorporationDate, DepreciatedValue);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.OriginalValue);\r\n    ;\r\n    args.push(this.CurrentValue);\r\n    ;\r\n    args.push(this.TotalReplacementCost);\r\n    ;\r\n    args.push(this.Owner);\r\n    ;\r\n    args.push(this.User);\r\n    ;\r\n    args.push(this.ResponsiblePerson);\r\n    ;\r\n    args.push(this.IncorporationDate);\r\n    ;\r\n    args.push(this.DepreciatedValue);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAsymmetricIShapeProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, Position, BottomFlangeWidth, OverallDepth, WebThickness, BottomFlangeThickness, BottomFlangeFilletRadius, TopFlangeWidth, TopFlangeThickness, TopFlangeFilletRadius, BottomFlangeEdgeRadius, BottomFlangeSlope, TopFlangeEdgeRadius, TopFlangeSlope) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.Position = Position;\r\n    this.BottomFlangeWidth = BottomFlangeWidth;\r\n    this.OverallDepth = OverallDepth;\r\n    this.WebThickness = WebThickness;\r\n    this.BottomFlangeThickness = BottomFlangeThickness;\r\n    this.BottomFlangeFilletRadius = BottomFlangeFilletRadius;\r\n    this.TopFlangeWidth = TopFlangeWidth;\r\n    this.TopFlangeThickness = TopFlangeThickness;\r\n    this.TopFlangeFilletRadius = TopFlangeFilletRadius;\r\n    this.BottomFlangeEdgeRadius = BottomFlangeEdgeRadius;\r\n    this.BottomFlangeSlope = BottomFlangeSlope;\r\n    this.TopFlangeEdgeRadius = TopFlangeEdgeRadius;\r\n    this.TopFlangeSlope = TopFlangeSlope;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let BottomFlangeWidth = tape[ptr++];\r\n    let OverallDepth = tape[ptr++];\r\n    let WebThickness = tape[ptr++];\r\n    let BottomFlangeThickness = tape[ptr++];\r\n    let BottomFlangeFilletRadius = tape[ptr++];\r\n    let TopFlangeWidth = tape[ptr++];\r\n    let TopFlangeThickness = tape[ptr++];\r\n    let TopFlangeFilletRadius = tape[ptr++];\r\n    let BottomFlangeEdgeRadius = tape[ptr++];\r\n    let BottomFlangeSlope = tape[ptr++];\r\n    let TopFlangeEdgeRadius = tape[ptr++];\r\n    let TopFlangeSlope = tape[ptr++];\r\n    return new IfcAsymmetricIShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, BottomFlangeWidth, OverallDepth, WebThickness, BottomFlangeThickness, BottomFlangeFilletRadius, TopFlangeWidth, TopFlangeThickness, TopFlangeFilletRadius, BottomFlangeEdgeRadius, BottomFlangeSlope, TopFlangeEdgeRadius, TopFlangeSlope);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.BottomFlangeWidth);\r\n    ;\r\n    args.push(this.OverallDepth);\r\n    ;\r\n    args.push(this.WebThickness);\r\n    ;\r\n    args.push(this.BottomFlangeThickness);\r\n    ;\r\n    args.push(this.BottomFlangeFilletRadius);\r\n    ;\r\n    args.push(this.TopFlangeWidth);\r\n    ;\r\n    args.push(this.TopFlangeThickness);\r\n    ;\r\n    args.push(this.TopFlangeFilletRadius);\r\n    ;\r\n    args.push(this.BottomFlangeEdgeRadius);\r\n    ;\r\n    args.push(this.BottomFlangeSlope);\r\n    ;\r\n    args.push(this.TopFlangeEdgeRadius);\r\n    ;\r\n    args.push(this.TopFlangeSlope);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAudioVisualAppliance = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcAudioVisualAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAudioVisualApplianceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcAudioVisualApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAxis1Placement = class {\r\n  constructor(expressID, type, Location, Axis) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Location = Location;\r\n    this.Axis = Axis;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Location = tape[ptr++];\r\n    let Axis = tape[ptr++];\r\n    return new IfcAxis1Placement(expressID, type, Location, Axis);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Location);\r\n    ;\r\n    args.push(this.Axis);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAxis2Placement2D = class {\r\n  constructor(expressID, type, Location, RefDirection) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Location = Location;\r\n    this.RefDirection = RefDirection;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Location = tape[ptr++];\r\n    let RefDirection = tape[ptr++];\r\n    return new IfcAxis2Placement2D(expressID, type, Location, RefDirection);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Location);\r\n    ;\r\n    args.push(this.RefDirection);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcAxis2Placement3D = class {\r\n  constructor(expressID, type, Location, Axis, RefDirection) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Location = Location;\r\n    this.Axis = Axis;\r\n    this.RefDirection = RefDirection;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Location = tape[ptr++];\r\n    let Axis = tape[ptr++];\r\n    let RefDirection = tape[ptr++];\r\n    return new IfcAxis2Placement3D(expressID, type, Location, Axis, RefDirection);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Location);\r\n    ;\r\n    args.push(this.Axis);\r\n    ;\r\n    args.push(this.RefDirection);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBSplineCurve = class {\r\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Degree = Degree;\r\n    this.ControlPointsList = ControlPointsList;\r\n    this.CurveForm = CurveForm;\r\n    this.ClosedCurve = ClosedCurve;\r\n    this.SelfIntersect = SelfIntersect;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Degree = tape[ptr++];\r\n    let ControlPointsList = tape[ptr++];\r\n    let CurveForm = tape[ptr++];\r\n    let ClosedCurve = tape[ptr++];\r\n    let SelfIntersect = tape[ptr++];\r\n    return new IfcBSplineCurve(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Degree);\r\n    ;\r\n    args.push(this.ControlPointsList);\r\n    ;\r\n    args.push(this.CurveForm);\r\n    ;\r\n    args.push(this.ClosedCurve);\r\n    ;\r\n    args.push(this.SelfIntersect);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBSplineCurveWithKnots = class {\r\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Degree = Degree;\r\n    this.ControlPointsList = ControlPointsList;\r\n    this.CurveForm = CurveForm;\r\n    this.ClosedCurve = ClosedCurve;\r\n    this.SelfIntersect = SelfIntersect;\r\n    this.KnotMultiplicities = KnotMultiplicities;\r\n    this.Knots = Knots;\r\n    this.KnotSpec = KnotSpec;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Degree = tape[ptr++];\r\n    let ControlPointsList = tape[ptr++];\r\n    let CurveForm = tape[ptr++];\r\n    let ClosedCurve = tape[ptr++];\r\n    let SelfIntersect = tape[ptr++];\r\n    let KnotMultiplicities = tape[ptr++];\r\n    let Knots = tape[ptr++];\r\n    let KnotSpec = tape[ptr++];\r\n    return new IfcBSplineCurveWithKnots(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Degree);\r\n    ;\r\n    args.push(this.ControlPointsList);\r\n    ;\r\n    args.push(this.CurveForm);\r\n    ;\r\n    args.push(this.ClosedCurve);\r\n    ;\r\n    args.push(this.SelfIntersect);\r\n    ;\r\n    args.push(this.KnotMultiplicities);\r\n    ;\r\n    args.push(this.Knots);\r\n    ;\r\n    args.push(this.KnotSpec);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBSplineSurface = class {\r\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.UDegree = UDegree;\r\n    this.VDegree = VDegree;\r\n    this.ControlPointsList = ControlPointsList;\r\n    this.SurfaceForm = SurfaceForm;\r\n    this.UClosed = UClosed;\r\n    this.VClosed = VClosed;\r\n    this.SelfIntersect = SelfIntersect;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let UDegree = tape[ptr++];\r\n    let VDegree = tape[ptr++];\r\n    let ControlPointsList = tape[ptr++];\r\n    let SurfaceForm = tape[ptr++];\r\n    let UClosed = tape[ptr++];\r\n    let VClosed = tape[ptr++];\r\n    let SelfIntersect = tape[ptr++];\r\n    return new IfcBSplineSurface(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.UDegree);\r\n    ;\r\n    args.push(this.VDegree);\r\n    ;\r\n    args.push(this.ControlPointsList);\r\n    ;\r\n    args.push(this.SurfaceForm);\r\n    ;\r\n    args.push(this.UClosed);\r\n    ;\r\n    args.push(this.VClosed);\r\n    ;\r\n    args.push(this.SelfIntersect);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBSplineSurfaceWithKnots = class {\r\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.UDegree = UDegree;\r\n    this.VDegree = VDegree;\r\n    this.ControlPointsList = ControlPointsList;\r\n    this.SurfaceForm = SurfaceForm;\r\n    this.UClosed = UClosed;\r\n    this.VClosed = VClosed;\r\n    this.SelfIntersect = SelfIntersect;\r\n    this.UMultiplicities = UMultiplicities;\r\n    this.VMultiplicities = VMultiplicities;\r\n    this.UKnots = UKnots;\r\n    this.VKnots = VKnots;\r\n    this.KnotSpec = KnotSpec;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let UDegree = tape[ptr++];\r\n    let VDegree = tape[ptr++];\r\n    let ControlPointsList = tape[ptr++];\r\n    let SurfaceForm = tape[ptr++];\r\n    let UClosed = tape[ptr++];\r\n    let VClosed = tape[ptr++];\r\n    let SelfIntersect = tape[ptr++];\r\n    let UMultiplicities = tape[ptr++];\r\n    let VMultiplicities = tape[ptr++];\r\n    let UKnots = tape[ptr++];\r\n    let VKnots = tape[ptr++];\r\n    let KnotSpec = tape[ptr++];\r\n    return new IfcBSplineSurfaceWithKnots(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.UDegree);\r\n    ;\r\n    args.push(this.VDegree);\r\n    ;\r\n    args.push(this.ControlPointsList);\r\n    ;\r\n    args.push(this.SurfaceForm);\r\n    ;\r\n    args.push(this.UClosed);\r\n    ;\r\n    args.push(this.VClosed);\r\n    ;\r\n    args.push(this.SelfIntersect);\r\n    ;\r\n    args.push(this.UMultiplicities);\r\n    ;\r\n    args.push(this.VMultiplicities);\r\n    ;\r\n    args.push(this.UKnots);\r\n    ;\r\n    args.push(this.VKnots);\r\n    ;\r\n    args.push(this.KnotSpec);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBeam = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcBeam(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBeamStandardCase = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcBeamStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBeamType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcBeamType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBearing = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcBearing(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBearingType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcBearingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBlobTexture = class {\r\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, RasterFormat, RasterCode) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.RepeatS = RepeatS;\r\n    this.RepeatT = RepeatT;\r\n    this.Mode = Mode;\r\n    this.TextureTransform = TextureTransform;\r\n    this.Parameter = Parameter;\r\n    this.RasterFormat = RasterFormat;\r\n    this.RasterCode = RasterCode;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let RepeatS = tape[ptr++];\r\n    let RepeatT = tape[ptr++];\r\n    let Mode = tape[ptr++];\r\n    let TextureTransform = tape[ptr++];\r\n    let Parameter = tape[ptr++];\r\n    let RasterFormat = tape[ptr++];\r\n    let RasterCode = tape[ptr++];\r\n    return new IfcBlobTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, RasterFormat, RasterCode);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.RepeatS);\r\n    ;\r\n    args.push(this.RepeatT);\r\n    ;\r\n    args.push(this.Mode);\r\n    ;\r\n    args.push(this.TextureTransform);\r\n    ;\r\n    args.push(this.Parameter);\r\n    ;\r\n    args.push(this.RasterFormat);\r\n    ;\r\n    args.push(this.RasterCode);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBlock = class {\r\n  constructor(expressID, type, Position, XLength, YLength, ZLength) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Position = Position;\r\n    this.XLength = XLength;\r\n    this.YLength = YLength;\r\n    this.ZLength = ZLength;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Position = tape[ptr++];\r\n    let XLength = tape[ptr++];\r\n    let YLength = tape[ptr++];\r\n    let ZLength = tape[ptr++];\r\n    return new IfcBlock(expressID, type, Position, XLength, YLength, ZLength);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.XLength);\r\n    ;\r\n    args.push(this.YLength);\r\n    ;\r\n    args.push(this.ZLength);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBoiler = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcBoiler(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBoilerType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcBoilerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBooleanClippingResult = class {\r\n  constructor(expressID, type, Operator, FirstOperand, SecondOperand) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Operator = Operator;\r\n    this.FirstOperand = FirstOperand;\r\n    this.SecondOperand = SecondOperand;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Operator = tape[ptr++];\r\n    let FirstOperand = tape[ptr++];\r\n    let SecondOperand = tape[ptr++];\r\n    return new IfcBooleanClippingResult(expressID, type, Operator, FirstOperand, SecondOperand);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Operator);\r\n    ;\r\n    args.push(this.FirstOperand);\r\n    ;\r\n    args.push(this.SecondOperand);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBooleanResult = class {\r\n  constructor(expressID, type, Operator, FirstOperand, SecondOperand) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Operator = Operator;\r\n    this.FirstOperand = FirstOperand;\r\n    this.SecondOperand = SecondOperand;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Operator = tape[ptr++];\r\n    let FirstOperand = tape[ptr++];\r\n    let SecondOperand = tape[ptr++];\r\n    return new IfcBooleanResult(expressID, type, Operator, FirstOperand, SecondOperand);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Operator);\r\n    ;\r\n    args.push(this.FirstOperand);\r\n    ;\r\n    args.push(this.SecondOperand);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBoundaryCondition = class {\r\n  constructor(expressID, type, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    return new IfcBoundaryCondition(expressID, type, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBoundaryCurve = class {\r\n  constructor(expressID, type, Segments, SelfIntersect) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Segments = Segments;\r\n    this.SelfIntersect = SelfIntersect;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Segments = tape[ptr++];\r\n    let SelfIntersect = tape[ptr++];\r\n    return new IfcBoundaryCurve(expressID, type, Segments, SelfIntersect);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Segments);\r\n    ;\r\n    args.push(this.SelfIntersect);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBoundaryEdgeCondition = class {\r\n  constructor(expressID, type, Name, TranslationalStiffnessByLengthX, TranslationalStiffnessByLengthY, TranslationalStiffnessByLengthZ, RotationalStiffnessByLengthX, RotationalStiffnessByLengthY, RotationalStiffnessByLengthZ) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.TranslationalStiffnessByLengthX = TranslationalStiffnessByLengthX;\r\n    this.TranslationalStiffnessByLengthY = TranslationalStiffnessByLengthY;\r\n    this.TranslationalStiffnessByLengthZ = TranslationalStiffnessByLengthZ;\r\n    this.RotationalStiffnessByLengthX = RotationalStiffnessByLengthX;\r\n    this.RotationalStiffnessByLengthY = RotationalStiffnessByLengthY;\r\n    this.RotationalStiffnessByLengthZ = RotationalStiffnessByLengthZ;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let TranslationalStiffnessByLengthX = tape[ptr++];\r\n    let TranslationalStiffnessByLengthY = tape[ptr++];\r\n    let TranslationalStiffnessByLengthZ = tape[ptr++];\r\n    let RotationalStiffnessByLengthX = tape[ptr++];\r\n    let RotationalStiffnessByLengthY = tape[ptr++];\r\n    let RotationalStiffnessByLengthZ = tape[ptr++];\r\n    return new IfcBoundaryEdgeCondition(expressID, type, Name, TranslationalStiffnessByLengthX, TranslationalStiffnessByLengthY, TranslationalStiffnessByLengthZ, RotationalStiffnessByLengthX, RotationalStiffnessByLengthY, RotationalStiffnessByLengthZ);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.TranslationalStiffnessByLengthX);\r\n    ;\r\n    args.push(this.TranslationalStiffnessByLengthY);\r\n    ;\r\n    args.push(this.TranslationalStiffnessByLengthZ);\r\n    ;\r\n    args.push(this.RotationalStiffnessByLengthX);\r\n    ;\r\n    args.push(this.RotationalStiffnessByLengthY);\r\n    ;\r\n    args.push(this.RotationalStiffnessByLengthZ);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBoundaryFaceCondition = class {\r\n  constructor(expressID, type, Name, TranslationalStiffnessByAreaX, TranslationalStiffnessByAreaY, TranslationalStiffnessByAreaZ) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.TranslationalStiffnessByAreaX = TranslationalStiffnessByAreaX;\r\n    this.TranslationalStiffnessByAreaY = TranslationalStiffnessByAreaY;\r\n    this.TranslationalStiffnessByAreaZ = TranslationalStiffnessByAreaZ;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let TranslationalStiffnessByAreaX = tape[ptr++];\r\n    let TranslationalStiffnessByAreaY = tape[ptr++];\r\n    let TranslationalStiffnessByAreaZ = tape[ptr++];\r\n    return new IfcBoundaryFaceCondition(expressID, type, Name, TranslationalStiffnessByAreaX, TranslationalStiffnessByAreaY, TranslationalStiffnessByAreaZ);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.TranslationalStiffnessByAreaX);\r\n    ;\r\n    args.push(this.TranslationalStiffnessByAreaY);\r\n    ;\r\n    args.push(this.TranslationalStiffnessByAreaZ);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBoundaryNodeCondition = class {\r\n  constructor(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.TranslationalStiffnessX = TranslationalStiffnessX;\r\n    this.TranslationalStiffnessY = TranslationalStiffnessY;\r\n    this.TranslationalStiffnessZ = TranslationalStiffnessZ;\r\n    this.RotationalStiffnessX = RotationalStiffnessX;\r\n    this.RotationalStiffnessY = RotationalStiffnessY;\r\n    this.RotationalStiffnessZ = RotationalStiffnessZ;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let TranslationalStiffnessX = tape[ptr++];\r\n    let TranslationalStiffnessY = tape[ptr++];\r\n    let TranslationalStiffnessZ = tape[ptr++];\r\n    let RotationalStiffnessX = tape[ptr++];\r\n    let RotationalStiffnessY = tape[ptr++];\r\n    let RotationalStiffnessZ = tape[ptr++];\r\n    return new IfcBoundaryNodeCondition(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.TranslationalStiffnessX);\r\n    ;\r\n    args.push(this.TranslationalStiffnessY);\r\n    ;\r\n    args.push(this.TranslationalStiffnessZ);\r\n    ;\r\n    args.push(this.RotationalStiffnessX);\r\n    ;\r\n    args.push(this.RotationalStiffnessY);\r\n    ;\r\n    args.push(this.RotationalStiffnessZ);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBoundaryNodeConditionWarping = class {\r\n  constructor(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ, WarpingStiffness) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.TranslationalStiffnessX = TranslationalStiffnessX;\r\n    this.TranslationalStiffnessY = TranslationalStiffnessY;\r\n    this.TranslationalStiffnessZ = TranslationalStiffnessZ;\r\n    this.RotationalStiffnessX = RotationalStiffnessX;\r\n    this.RotationalStiffnessY = RotationalStiffnessY;\r\n    this.RotationalStiffnessZ = RotationalStiffnessZ;\r\n    this.WarpingStiffness = WarpingStiffness;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let TranslationalStiffnessX = tape[ptr++];\r\n    let TranslationalStiffnessY = tape[ptr++];\r\n    let TranslationalStiffnessZ = tape[ptr++];\r\n    let RotationalStiffnessX = tape[ptr++];\r\n    let RotationalStiffnessY = tape[ptr++];\r\n    let RotationalStiffnessZ = tape[ptr++];\r\n    let WarpingStiffness = tape[ptr++];\r\n    return new IfcBoundaryNodeConditionWarping(expressID, type, Name, TranslationalStiffnessX, TranslationalStiffnessY, TranslationalStiffnessZ, RotationalStiffnessX, RotationalStiffnessY, RotationalStiffnessZ, WarpingStiffness);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.TranslationalStiffnessX);\r\n    ;\r\n    args.push(this.TranslationalStiffnessY);\r\n    ;\r\n    args.push(this.TranslationalStiffnessZ);\r\n    ;\r\n    args.push(this.RotationalStiffnessX);\r\n    ;\r\n    args.push(this.RotationalStiffnessY);\r\n    ;\r\n    args.push(this.RotationalStiffnessZ);\r\n    ;\r\n    args.push(this.WarpingStiffness);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBoundedCurve = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcBoundedCurve(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcBoundedSurface = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcBoundedSurface(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcBoundingBox = class {\r\n  constructor(expressID, type, Corner, XDim, YDim, ZDim) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Corner = Corner;\r\n    this.XDim = XDim;\r\n    this.YDim = YDim;\r\n    this.ZDim = ZDim;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Corner = tape[ptr++];\r\n    let XDim = tape[ptr++];\r\n    let YDim = tape[ptr++];\r\n    let ZDim = tape[ptr++];\r\n    return new IfcBoundingBox(expressID, type, Corner, XDim, YDim, ZDim);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Corner);\r\n    ;\r\n    args.push(this.XDim);\r\n    ;\r\n    args.push(this.YDim);\r\n    ;\r\n    args.push(this.ZDim);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBoxedHalfSpace = class {\r\n  constructor(expressID, type, BaseSurface, AgreementFlag, Enclosure) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.BaseSurface = BaseSurface;\r\n    this.AgreementFlag = AgreementFlag;\r\n    this.Enclosure = Enclosure;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let BaseSurface = tape[ptr++];\r\n    let AgreementFlag = tape[ptr++];\r\n    let Enclosure = tape[ptr++];\r\n    return new IfcBoxedHalfSpace(expressID, type, BaseSurface, AgreementFlag, Enclosure);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.BaseSurface);\r\n    ;\r\n    args.push(this.AgreementFlag);\r\n    ;\r\n    args.push(this.Enclosure);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBridge = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.LongName = LongName;\r\n    this.CompositionType = CompositionType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    let CompositionType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcBridge(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    args.push(this.CompositionType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBridgePart = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.LongName = LongName;\r\n    this.CompositionType = CompositionType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    let CompositionType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcBridgePart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    args.push(this.CompositionType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBuilding = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, ElevationOfRefHeight, ElevationOfTerrain, BuildingAddress) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.LongName = LongName;\r\n    this.CompositionType = CompositionType;\r\n    this.ElevationOfRefHeight = ElevationOfRefHeight;\r\n    this.ElevationOfTerrain = ElevationOfTerrain;\r\n    this.BuildingAddress = BuildingAddress;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    let CompositionType = tape[ptr++];\r\n    let ElevationOfRefHeight = tape[ptr++];\r\n    let ElevationOfTerrain = tape[ptr++];\r\n    let BuildingAddress = tape[ptr++];\r\n    return new IfcBuilding(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, ElevationOfRefHeight, ElevationOfTerrain, BuildingAddress);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    args.push(this.CompositionType);\r\n    ;\r\n    args.push(this.ElevationOfRefHeight);\r\n    ;\r\n    args.push(this.ElevationOfTerrain);\r\n    ;\r\n    args.push(this.BuildingAddress);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBuildingElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcBuildingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBuildingElementPart = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcBuildingElementPart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBuildingElementPartType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcBuildingElementPartType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBuildingElementProxy = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcBuildingElementProxy(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBuildingElementProxyType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcBuildingElementProxyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBuildingElementType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcBuildingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBuildingStorey = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, Elevation) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.LongName = LongName;\r\n    this.CompositionType = CompositionType;\r\n    this.Elevation = Elevation;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    let CompositionType = tape[ptr++];\r\n    let Elevation = tape[ptr++];\r\n    return new IfcBuildingStorey(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, Elevation);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    args.push(this.CompositionType);\r\n    ;\r\n    args.push(this.Elevation);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBuildingSystem = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, LongName) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.PredefinedType = PredefinedType;\r\n    this.LongName = LongName;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    return new IfcBuildingSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, LongName);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBurner = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcBurner(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcBurnerType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcBurnerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCShapeProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, Width, WallThickness, Girth, InternalFilletRadius) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.Position = Position;\r\n    this.Depth = Depth;\r\n    this.Width = Width;\r\n    this.WallThickness = WallThickness;\r\n    this.Girth = Girth;\r\n    this.InternalFilletRadius = InternalFilletRadius;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let Depth = tape[ptr++];\r\n    let Width = tape[ptr++];\r\n    let WallThickness = tape[ptr++];\r\n    let Girth = tape[ptr++];\r\n    let InternalFilletRadius = tape[ptr++];\r\n    return new IfcCShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, Width, WallThickness, Girth, InternalFilletRadius);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Depth);\r\n    ;\r\n    args.push(this.Width);\r\n    ;\r\n    args.push(this.WallThickness);\r\n    ;\r\n    args.push(this.Girth);\r\n    ;\r\n    args.push(this.InternalFilletRadius);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCableCarrierFitting = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCableCarrierFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCableCarrierFittingType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCableCarrierFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCableCarrierSegment = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCableCarrierSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCableCarrierSegmentType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCableCarrierSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCableFitting = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCableFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCableFittingType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCableFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCableSegment = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCableSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCableSegmentType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCableSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCaissonFoundation = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCaissonFoundation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCaissonFoundationType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCaissonFoundationType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCartesianPoint = class {\r\n  constructor(expressID, type, Coordinates) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Coordinates = Coordinates;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Coordinates = tape[ptr++];\r\n    return new IfcCartesianPoint(expressID, type, Coordinates);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Coordinates);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCartesianPointList = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcCartesianPointList(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcCartesianPointList2D = class {\r\n  constructor(expressID, type, CoordList, TagList) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.CoordList = CoordList;\r\n    this.TagList = TagList;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let CoordList = tape[ptr++];\r\n    let TagList = tape[ptr++];\r\n    return new IfcCartesianPointList2D(expressID, type, CoordList, TagList);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.CoordList);\r\n    ;\r\n    args.push(this.TagList);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCartesianPointList3D = class {\r\n  constructor(expressID, type, CoordList, TagList) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.CoordList = CoordList;\r\n    this.TagList = TagList;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let CoordList = tape[ptr++];\r\n    let TagList = tape[ptr++];\r\n    return new IfcCartesianPointList3D(expressID, type, CoordList, TagList);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.CoordList);\r\n    ;\r\n    args.push(this.TagList);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCartesianTransformationOperator = class {\r\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Axis1 = Axis1;\r\n    this.Axis2 = Axis2;\r\n    this.LocalOrigin = LocalOrigin;\r\n    this.Scale = Scale;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Axis1 = tape[ptr++];\r\n    let Axis2 = tape[ptr++];\r\n    let LocalOrigin = tape[ptr++];\r\n    let Scale = tape[ptr++];\r\n    return new IfcCartesianTransformationOperator(expressID, type, Axis1, Axis2, LocalOrigin, Scale);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Axis1);\r\n    ;\r\n    args.push(this.Axis2);\r\n    ;\r\n    args.push(this.LocalOrigin);\r\n    ;\r\n    args.push(this.Scale);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCartesianTransformationOperator2D = class {\r\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Axis1 = Axis1;\r\n    this.Axis2 = Axis2;\r\n    this.LocalOrigin = LocalOrigin;\r\n    this.Scale = Scale;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Axis1 = tape[ptr++];\r\n    let Axis2 = tape[ptr++];\r\n    let LocalOrigin = tape[ptr++];\r\n    let Scale = tape[ptr++];\r\n    return new IfcCartesianTransformationOperator2D(expressID, type, Axis1, Axis2, LocalOrigin, Scale);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Axis1);\r\n    ;\r\n    args.push(this.Axis2);\r\n    ;\r\n    args.push(this.LocalOrigin);\r\n    ;\r\n    args.push(this.Scale);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCartesianTransformationOperator2DnonUniform = class {\r\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Scale2) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Axis1 = Axis1;\r\n    this.Axis2 = Axis2;\r\n    this.LocalOrigin = LocalOrigin;\r\n    this.Scale = Scale;\r\n    this.Scale2 = Scale2;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Axis1 = tape[ptr++];\r\n    let Axis2 = tape[ptr++];\r\n    let LocalOrigin = tape[ptr++];\r\n    let Scale = tape[ptr++];\r\n    let Scale2 = tape[ptr++];\r\n    return new IfcCartesianTransformationOperator2DnonUniform(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Scale2);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Axis1);\r\n    ;\r\n    args.push(this.Axis2);\r\n    ;\r\n    args.push(this.LocalOrigin);\r\n    ;\r\n    args.push(this.Scale);\r\n    ;\r\n    args.push(this.Scale2);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCartesianTransformationOperator3D = class {\r\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Axis1 = Axis1;\r\n    this.Axis2 = Axis2;\r\n    this.LocalOrigin = LocalOrigin;\r\n    this.Scale = Scale;\r\n    this.Axis3 = Axis3;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Axis1 = tape[ptr++];\r\n    let Axis2 = tape[ptr++];\r\n    let LocalOrigin = tape[ptr++];\r\n    let Scale = tape[ptr++];\r\n    let Axis3 = tape[ptr++];\r\n    return new IfcCartesianTransformationOperator3D(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Axis1);\r\n    ;\r\n    args.push(this.Axis2);\r\n    ;\r\n    args.push(this.LocalOrigin);\r\n    ;\r\n    args.push(this.Scale);\r\n    ;\r\n    args.push(this.Axis3);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCartesianTransformationOperator3DnonUniform = class {\r\n  constructor(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3, Scale2, Scale3) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Axis1 = Axis1;\r\n    this.Axis2 = Axis2;\r\n    this.LocalOrigin = LocalOrigin;\r\n    this.Scale = Scale;\r\n    this.Axis3 = Axis3;\r\n    this.Scale2 = Scale2;\r\n    this.Scale3 = Scale3;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Axis1 = tape[ptr++];\r\n    let Axis2 = tape[ptr++];\r\n    let LocalOrigin = tape[ptr++];\r\n    let Scale = tape[ptr++];\r\n    let Axis3 = tape[ptr++];\r\n    let Scale2 = tape[ptr++];\r\n    let Scale3 = tape[ptr++];\r\n    return new IfcCartesianTransformationOperator3DnonUniform(expressID, type, Axis1, Axis2, LocalOrigin, Scale, Axis3, Scale2, Scale3);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Axis1);\r\n    ;\r\n    args.push(this.Axis2);\r\n    ;\r\n    args.push(this.LocalOrigin);\r\n    ;\r\n    args.push(this.Scale);\r\n    ;\r\n    args.push(this.Axis3);\r\n    ;\r\n    args.push(this.Scale2);\r\n    ;\r\n    args.push(this.Scale3);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCenterLineProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, Curve, Thickness) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.Curve = Curve;\r\n    this.Thickness = Thickness;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let Curve = tape[ptr++];\r\n    let Thickness = tape[ptr++];\r\n    return new IfcCenterLineProfileDef(expressID, type, ProfileType, ProfileName, Curve, Thickness);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.Curve);\r\n    ;\r\n    args.push(this.Thickness);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcChiller = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcChiller(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcChillerType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcChillerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcChimney = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcChimney(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcChimneyType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcChimneyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCircle = class {\r\n  constructor(expressID, type, Position, Radius) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Position = Position;\r\n    this.Radius = Radius;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Position = tape[ptr++];\r\n    let Radius = tape[ptr++];\r\n    return new IfcCircle(expressID, type, Position, Radius);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Radius);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCircleHollowProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, Position, Radius, WallThickness) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.Position = Position;\r\n    this.Radius = Radius;\r\n    this.WallThickness = WallThickness;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let Radius = tape[ptr++];\r\n    let WallThickness = tape[ptr++];\r\n    return new IfcCircleHollowProfileDef(expressID, type, ProfileType, ProfileName, Position, Radius, WallThickness);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Radius);\r\n    ;\r\n    args.push(this.WallThickness);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCircleProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, Position, Radius) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.Position = Position;\r\n    this.Radius = Radius;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let Radius = tape[ptr++];\r\n    return new IfcCircleProfileDef(expressID, type, ProfileType, ProfileName, Position, Radius);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Radius);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCircularArcSegment2D = class {\r\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength, Radius, IsCCW) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.StartPoint = StartPoint;\r\n    this.StartDirection = StartDirection;\r\n    this.SegmentLength = SegmentLength;\r\n    this.Radius = Radius;\r\n    this.IsCCW = IsCCW;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let StartPoint = tape[ptr++];\r\n    let StartDirection = tape[ptr++];\r\n    let SegmentLength = tape[ptr++];\r\n    let Radius = tape[ptr++];\r\n    let IsCCW = tape[ptr++];\r\n    return new IfcCircularArcSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength, Radius, IsCCW);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.StartPoint);\r\n    ;\r\n    args.push(this.StartDirection);\r\n    ;\r\n    args.push(this.SegmentLength);\r\n    ;\r\n    args.push(this.Radius);\r\n    ;\r\n    args.push(this.IsCCW);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCivilElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcCivilElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCivilElementType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcCivilElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcClassification = class {\r\n  constructor(expressID, type, Source, Edition, EditionDate, Name, Description, Location, ReferenceTokens) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Source = Source;\r\n    this.Edition = Edition;\r\n    this.EditionDate = EditionDate;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Location = Location;\r\n    this.ReferenceTokens = ReferenceTokens;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Source = tape[ptr++];\r\n    let Edition = tape[ptr++];\r\n    let EditionDate = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Location = tape[ptr++];\r\n    let ReferenceTokens = tape[ptr++];\r\n    return new IfcClassification(expressID, type, Source, Edition, EditionDate, Name, Description, Location, ReferenceTokens);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Source);\r\n    ;\r\n    args.push(this.Edition);\r\n    ;\r\n    args.push(this.EditionDate);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Location);\r\n    ;\r\n    args.push(this.ReferenceTokens);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcClassificationReference = class {\r\n  constructor(expressID, type, Location, Identification, Name, ReferencedSource, Description, Sort) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Location = Location;\r\n    this.Identification = Identification;\r\n    this.Name = Name;\r\n    this.ReferencedSource = ReferencedSource;\r\n    this.Description = Description;\r\n    this.Sort = Sort;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Location = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let ReferencedSource = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Sort = tape[ptr++];\r\n    return new IfcClassificationReference(expressID, type, Location, Identification, Name, ReferencedSource, Description, Sort);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Location);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.ReferencedSource);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Sort);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcClosedShell = class {\r\n  constructor(expressID, type, CfsFaces) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.CfsFaces = CfsFaces;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let CfsFaces = tape[ptr++];\r\n    return new IfcClosedShell(expressID, type, CfsFaces);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.CfsFaces);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCoil = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCoil(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCoilType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCoilType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcColourRgb = class {\r\n  constructor(expressID, type, Name, Red, Green, Blue) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Red = Red;\r\n    this.Green = Green;\r\n    this.Blue = Blue;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Red = tape[ptr++];\r\n    let Green = tape[ptr++];\r\n    let Blue = tape[ptr++];\r\n    return new IfcColourRgb(expressID, type, Name, Red, Green, Blue);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Red);\r\n    ;\r\n    args.push(this.Green);\r\n    ;\r\n    args.push(this.Blue);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcColourRgbList = class {\r\n  constructor(expressID, type, ColourList) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ColourList = ColourList;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ColourList = tape[ptr++];\r\n    return new IfcColourRgbList(expressID, type, ColourList);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ColourList);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcColourSpecification = class {\r\n  constructor(expressID, type, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    return new IfcColourSpecification(expressID, type, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcColumn = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcColumn(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcColumnStandardCase = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcColumnStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcColumnType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcColumnType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCommunicationsAppliance = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCommunicationsAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCommunicationsApplianceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCommunicationsApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcComplexProperty = class {\r\n  constructor(expressID, type, Name, Description, UsageName, HasProperties) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.UsageName = UsageName;\r\n    this.HasProperties = HasProperties;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let UsageName = tape[ptr++];\r\n    let HasProperties = tape[ptr++];\r\n    return new IfcComplexProperty(expressID, type, Name, Description, UsageName, HasProperties);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.UsageName);\r\n    ;\r\n    args.push(this.HasProperties);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcComplexPropertyTemplate = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, UsageName, TemplateType, HasPropertyTemplates) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.UsageName = UsageName;\r\n    this.TemplateType = TemplateType;\r\n    this.HasPropertyTemplates = HasPropertyTemplates;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let UsageName = tape[ptr++];\r\n    let TemplateType = tape[ptr++];\r\n    let HasPropertyTemplates = tape[ptr++];\r\n    return new IfcComplexPropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, UsageName, TemplateType, HasPropertyTemplates);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.UsageName);\r\n    ;\r\n    args.push(this.TemplateType);\r\n    ;\r\n    args.push(this.HasPropertyTemplates);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCompositeCurve = class {\r\n  constructor(expressID, type, Segments, SelfIntersect) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Segments = Segments;\r\n    this.SelfIntersect = SelfIntersect;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Segments = tape[ptr++];\r\n    let SelfIntersect = tape[ptr++];\r\n    return new IfcCompositeCurve(expressID, type, Segments, SelfIntersect);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Segments);\r\n    ;\r\n    args.push(this.SelfIntersect);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCompositeCurveOnSurface = class {\r\n  constructor(expressID, type, Segments, SelfIntersect) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Segments = Segments;\r\n    this.SelfIntersect = SelfIntersect;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Segments = tape[ptr++];\r\n    let SelfIntersect = tape[ptr++];\r\n    return new IfcCompositeCurveOnSurface(expressID, type, Segments, SelfIntersect);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Segments);\r\n    ;\r\n    args.push(this.SelfIntersect);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCompositeCurveSegment = class {\r\n  constructor(expressID, type, Transition, SameSense, ParentCurve) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Transition = Transition;\r\n    this.SameSense = SameSense;\r\n    this.ParentCurve = ParentCurve;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Transition = tape[ptr++];\r\n    let SameSense = tape[ptr++];\r\n    let ParentCurve = tape[ptr++];\r\n    return new IfcCompositeCurveSegment(expressID, type, Transition, SameSense, ParentCurve);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Transition);\r\n    ;\r\n    args.push(this.SameSense);\r\n    ;\r\n    args.push(this.ParentCurve);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCompositeProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, Profiles, Label) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.Profiles = Profiles;\r\n    this.Label = Label;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let Profiles = tape[ptr++];\r\n    let Label = tape[ptr++];\r\n    return new IfcCompositeProfileDef(expressID, type, ProfileType, ProfileName, Profiles, Label);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.Profiles);\r\n    ;\r\n    args.push(this.Label);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCompressor = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCompressor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCompressorType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCompressorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCondenser = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCondenser(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCondenserType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCondenserType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcConic = class {\r\n  constructor(expressID, type, Position) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Position = Position;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Position = tape[ptr++];\r\n    return new IfcConic(expressID, type, Position);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Position);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcConnectedFaceSet = class {\r\n  constructor(expressID, type, CfsFaces) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.CfsFaces = CfsFaces;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let CfsFaces = tape[ptr++];\r\n    return new IfcConnectedFaceSet(expressID, type, CfsFaces);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.CfsFaces);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcConnectionCurveGeometry = class {\r\n  constructor(expressID, type, CurveOnRelatingElement, CurveOnRelatedElement) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.CurveOnRelatingElement = CurveOnRelatingElement;\r\n    this.CurveOnRelatedElement = CurveOnRelatedElement;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let CurveOnRelatingElement = tape[ptr++];\r\n    let CurveOnRelatedElement = tape[ptr++];\r\n    return new IfcConnectionCurveGeometry(expressID, type, CurveOnRelatingElement, CurveOnRelatedElement);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.CurveOnRelatingElement);\r\n    ;\r\n    args.push(this.CurveOnRelatedElement);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcConnectionGeometry = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcConnectionGeometry(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcConnectionPointEccentricity = class {\r\n  constructor(expressID, type, PointOnRelatingElement, PointOnRelatedElement, EccentricityInX, EccentricityInY, EccentricityInZ) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.PointOnRelatingElement = PointOnRelatingElement;\r\n    this.PointOnRelatedElement = PointOnRelatedElement;\r\n    this.EccentricityInX = EccentricityInX;\r\n    this.EccentricityInY = EccentricityInY;\r\n    this.EccentricityInZ = EccentricityInZ;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let PointOnRelatingElement = tape[ptr++];\r\n    let PointOnRelatedElement = tape[ptr++];\r\n    let EccentricityInX = tape[ptr++];\r\n    let EccentricityInY = tape[ptr++];\r\n    let EccentricityInZ = tape[ptr++];\r\n    return new IfcConnectionPointEccentricity(expressID, type, PointOnRelatingElement, PointOnRelatedElement, EccentricityInX, EccentricityInY, EccentricityInZ);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.PointOnRelatingElement);\r\n    ;\r\n    args.push(this.PointOnRelatedElement);\r\n    ;\r\n    args.push(this.EccentricityInX);\r\n    ;\r\n    args.push(this.EccentricityInY);\r\n    ;\r\n    args.push(this.EccentricityInZ);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcConnectionPointGeometry = class {\r\n  constructor(expressID, type, PointOnRelatingElement, PointOnRelatedElement) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.PointOnRelatingElement = PointOnRelatingElement;\r\n    this.PointOnRelatedElement = PointOnRelatedElement;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let PointOnRelatingElement = tape[ptr++];\r\n    let PointOnRelatedElement = tape[ptr++];\r\n    return new IfcConnectionPointGeometry(expressID, type, PointOnRelatingElement, PointOnRelatedElement);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.PointOnRelatingElement);\r\n    ;\r\n    args.push(this.PointOnRelatedElement);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcConnectionSurfaceGeometry = class {\r\n  constructor(expressID, type, SurfaceOnRelatingElement, SurfaceOnRelatedElement) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SurfaceOnRelatingElement = SurfaceOnRelatingElement;\r\n    this.SurfaceOnRelatedElement = SurfaceOnRelatedElement;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SurfaceOnRelatingElement = tape[ptr++];\r\n    let SurfaceOnRelatedElement = tape[ptr++];\r\n    return new IfcConnectionSurfaceGeometry(expressID, type, SurfaceOnRelatingElement, SurfaceOnRelatedElement);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SurfaceOnRelatingElement);\r\n    ;\r\n    args.push(this.SurfaceOnRelatedElement);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcConnectionVolumeGeometry = class {\r\n  constructor(expressID, type, VolumeOnRelatingElement, VolumeOnRelatedElement) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.VolumeOnRelatingElement = VolumeOnRelatingElement;\r\n    this.VolumeOnRelatedElement = VolumeOnRelatedElement;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let VolumeOnRelatingElement = tape[ptr++];\r\n    let VolumeOnRelatedElement = tape[ptr++];\r\n    return new IfcConnectionVolumeGeometry(expressID, type, VolumeOnRelatingElement, VolumeOnRelatedElement);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.VolumeOnRelatingElement);\r\n    ;\r\n    args.push(this.VolumeOnRelatedElement);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcConstraint = class {\r\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ConstraintGrade = ConstraintGrade;\r\n    this.ConstraintSource = ConstraintSource;\r\n    this.CreatingActor = CreatingActor;\r\n    this.CreationTime = CreationTime;\r\n    this.UserDefinedGrade = UserDefinedGrade;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ConstraintGrade = tape[ptr++];\r\n    let ConstraintSource = tape[ptr++];\r\n    let CreatingActor = tape[ptr++];\r\n    let CreationTime = tape[ptr++];\r\n    let UserDefinedGrade = tape[ptr++];\r\n    return new IfcConstraint(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ConstraintGrade);\r\n    ;\r\n    args.push(this.ConstraintSource);\r\n    ;\r\n    args.push(this.CreatingActor);\r\n    ;\r\n    args.push(this.CreationTime);\r\n    ;\r\n    args.push(this.UserDefinedGrade);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcConstructionEquipmentResource = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.Usage = Usage;\r\n    this.BaseCosts = BaseCosts;\r\n    this.BaseQuantity = BaseQuantity;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let Usage = tape[ptr++];\r\n    let BaseCosts = tape[ptr++];\r\n    let BaseQuantity = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcConstructionEquipmentResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.Usage);\r\n    ;\r\n    args.push(this.BaseCosts);\r\n    ;\r\n    args.push(this.BaseQuantity);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcConstructionEquipmentResourceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.ResourceType = ResourceType;\r\n    this.BaseCosts = BaseCosts;\r\n    this.BaseQuantity = BaseQuantity;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let ResourceType = tape[ptr++];\r\n    let BaseCosts = tape[ptr++];\r\n    let BaseQuantity = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcConstructionEquipmentResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.ResourceType);\r\n    ;\r\n    args.push(this.BaseCosts);\r\n    ;\r\n    args.push(this.BaseQuantity);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcConstructionMaterialResource = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.Usage = Usage;\r\n    this.BaseCosts = BaseCosts;\r\n    this.BaseQuantity = BaseQuantity;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let Usage = tape[ptr++];\r\n    let BaseCosts = tape[ptr++];\r\n    let BaseQuantity = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcConstructionMaterialResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.Usage);\r\n    ;\r\n    args.push(this.BaseCosts);\r\n    ;\r\n    args.push(this.BaseQuantity);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcConstructionMaterialResourceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.ResourceType = ResourceType;\r\n    this.BaseCosts = BaseCosts;\r\n    this.BaseQuantity = BaseQuantity;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let ResourceType = tape[ptr++];\r\n    let BaseCosts = tape[ptr++];\r\n    let BaseQuantity = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcConstructionMaterialResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.ResourceType);\r\n    ;\r\n    args.push(this.BaseCosts);\r\n    ;\r\n    args.push(this.BaseQuantity);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcConstructionProductResource = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.Usage = Usage;\r\n    this.BaseCosts = BaseCosts;\r\n    this.BaseQuantity = BaseQuantity;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let Usage = tape[ptr++];\r\n    let BaseCosts = tape[ptr++];\r\n    let BaseQuantity = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcConstructionProductResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.Usage);\r\n    ;\r\n    args.push(this.BaseCosts);\r\n    ;\r\n    args.push(this.BaseQuantity);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcConstructionProductResourceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.ResourceType = ResourceType;\r\n    this.BaseCosts = BaseCosts;\r\n    this.BaseQuantity = BaseQuantity;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let ResourceType = tape[ptr++];\r\n    let BaseCosts = tape[ptr++];\r\n    let BaseQuantity = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcConstructionProductResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.ResourceType);\r\n    ;\r\n    args.push(this.BaseCosts);\r\n    ;\r\n    args.push(this.BaseQuantity);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcConstructionResource = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.Usage = Usage;\r\n    this.BaseCosts = BaseCosts;\r\n    this.BaseQuantity = BaseQuantity;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let Usage = tape[ptr++];\r\n    let BaseCosts = tape[ptr++];\r\n    let BaseQuantity = tape[ptr++];\r\n    return new IfcConstructionResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.Usage);\r\n    ;\r\n    args.push(this.BaseCosts);\r\n    ;\r\n    args.push(this.BaseQuantity);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcConstructionResourceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.ResourceType = ResourceType;\r\n    this.BaseCosts = BaseCosts;\r\n    this.BaseQuantity = BaseQuantity;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let ResourceType = tape[ptr++];\r\n    let BaseCosts = tape[ptr++];\r\n    let BaseQuantity = tape[ptr++];\r\n    return new IfcConstructionResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.ResourceType);\r\n    ;\r\n    args.push(this.BaseCosts);\r\n    ;\r\n    args.push(this.BaseQuantity);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcContext = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.LongName = LongName;\r\n    this.Phase = Phase;\r\n    this.RepresentationContexts = RepresentationContexts;\r\n    this.UnitsInContext = UnitsInContext;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    let Phase = tape[ptr++];\r\n    let RepresentationContexts = tape[ptr++];\r\n    let UnitsInContext = tape[ptr++];\r\n    return new IfcContext(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    args.push(this.Phase);\r\n    ;\r\n    args.push(this.RepresentationContexts);\r\n    ;\r\n    args.push(this.UnitsInContext);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcContextDependentUnit = class {\r\n  constructor(expressID, type, Dimensions, UnitType, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Dimensions = Dimensions;\r\n    this.UnitType = UnitType;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Dimensions = tape[ptr++];\r\n    let UnitType = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    return new IfcContextDependentUnit(expressID, type, Dimensions, UnitType, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Dimensions);\r\n    ;\r\n    args.push(this.UnitType);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcControl = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    return new IfcControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcController = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcController(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcControllerType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcControllerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcConversionBasedUnit = class {\r\n  constructor(expressID, type, Dimensions, UnitType, Name, ConversionFactor) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Dimensions = Dimensions;\r\n    this.UnitType = UnitType;\r\n    this.Name = Name;\r\n    this.ConversionFactor = ConversionFactor;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Dimensions = tape[ptr++];\r\n    let UnitType = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let ConversionFactor = tape[ptr++];\r\n    return new IfcConversionBasedUnit(expressID, type, Dimensions, UnitType, Name, ConversionFactor);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Dimensions);\r\n    ;\r\n    args.push(this.UnitType);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.ConversionFactor);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcConversionBasedUnitWithOffset = class {\r\n  constructor(expressID, type, Dimensions, UnitType, Name, ConversionFactor, ConversionOffset) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Dimensions = Dimensions;\r\n    this.UnitType = UnitType;\r\n    this.Name = Name;\r\n    this.ConversionFactor = ConversionFactor;\r\n    this.ConversionOffset = ConversionOffset;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Dimensions = tape[ptr++];\r\n    let UnitType = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let ConversionFactor = tape[ptr++];\r\n    let ConversionOffset = tape[ptr++];\r\n    return new IfcConversionBasedUnitWithOffset(expressID, type, Dimensions, UnitType, Name, ConversionFactor, ConversionOffset);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Dimensions);\r\n    ;\r\n    args.push(this.UnitType);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.ConversionFactor);\r\n    ;\r\n    args.push(this.ConversionOffset);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCooledBeam = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCooledBeam(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCooledBeamType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCooledBeamType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCoolingTower = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCoolingTower(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCoolingTowerType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCoolingTowerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCoordinateOperation = class {\r\n  constructor(expressID, type, SourceCRS, TargetCRS) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SourceCRS = SourceCRS;\r\n    this.TargetCRS = TargetCRS;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SourceCRS = tape[ptr++];\r\n    let TargetCRS = tape[ptr++];\r\n    return new IfcCoordinateOperation(expressID, type, SourceCRS, TargetCRS);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SourceCRS);\r\n    ;\r\n    args.push(this.TargetCRS);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCoordinateReferenceSystem = class {\r\n  constructor(expressID, type, Name, Description, GeodeticDatum, VerticalDatum) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.GeodeticDatum = GeodeticDatum;\r\n    this.VerticalDatum = VerticalDatum;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let GeodeticDatum = tape[ptr++];\r\n    let VerticalDatum = tape[ptr++];\r\n    return new IfcCoordinateReferenceSystem(expressID, type, Name, Description, GeodeticDatum, VerticalDatum);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.GeodeticDatum);\r\n    ;\r\n    args.push(this.VerticalDatum);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCostItem = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, CostValues, CostQuantities) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.PredefinedType = PredefinedType;\r\n    this.CostValues = CostValues;\r\n    this.CostQuantities = CostQuantities;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let CostValues = tape[ptr++];\r\n    let CostQuantities = tape[ptr++];\r\n    return new IfcCostItem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, CostValues, CostQuantities);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.CostValues);\r\n    ;\r\n    args.push(this.CostQuantities);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCostSchedule = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, SubmittedOn, UpdateDate) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.PredefinedType = PredefinedType;\r\n    this.Status = Status;\r\n    this.SubmittedOn = SubmittedOn;\r\n    this.UpdateDate = UpdateDate;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let Status = tape[ptr++];\r\n    let SubmittedOn = tape[ptr++];\r\n    let UpdateDate = tape[ptr++];\r\n    return new IfcCostSchedule(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, SubmittedOn, UpdateDate);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.Status);\r\n    ;\r\n    args.push(this.SubmittedOn);\r\n    ;\r\n    args.push(this.UpdateDate);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCostValue = class {\r\n  constructor(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.AppliedValue = AppliedValue;\r\n    this.UnitBasis = UnitBasis;\r\n    this.ApplicableDate = ApplicableDate;\r\n    this.FixedUntilDate = FixedUntilDate;\r\n    this.Category = Category;\r\n    this.Condition = Condition;\r\n    this.ArithmeticOperator = ArithmeticOperator;\r\n    this.Components = Components;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let AppliedValue = tape[ptr++];\r\n    let UnitBasis = tape[ptr++];\r\n    let ApplicableDate = tape[ptr++];\r\n    let FixedUntilDate = tape[ptr++];\r\n    let Category = tape[ptr++];\r\n    let Condition = tape[ptr++];\r\n    let ArithmeticOperator = tape[ptr++];\r\n    let Components = tape[ptr++];\r\n    return new IfcCostValue(expressID, type, Name, Description, AppliedValue, UnitBasis, ApplicableDate, FixedUntilDate, Category, Condition, ArithmeticOperator, Components);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.AppliedValue);\r\n    ;\r\n    args.push(this.UnitBasis);\r\n    ;\r\n    args.push(this.ApplicableDate);\r\n    ;\r\n    args.push(this.FixedUntilDate);\r\n    ;\r\n    args.push(this.Category);\r\n    ;\r\n    args.push(this.Condition);\r\n    ;\r\n    args.push(this.ArithmeticOperator);\r\n    ;\r\n    args.push(this.Components);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCovering = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCovering(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCoveringType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCoveringType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCrewResource = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.Usage = Usage;\r\n    this.BaseCosts = BaseCosts;\r\n    this.BaseQuantity = BaseQuantity;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let Usage = tape[ptr++];\r\n    let BaseCosts = tape[ptr++];\r\n    let BaseQuantity = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCrewResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.Usage);\r\n    ;\r\n    args.push(this.BaseCosts);\r\n    ;\r\n    args.push(this.BaseQuantity);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCrewResourceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.ResourceType = ResourceType;\r\n    this.BaseCosts = BaseCosts;\r\n    this.BaseQuantity = BaseQuantity;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let ResourceType = tape[ptr++];\r\n    let BaseCosts = tape[ptr++];\r\n    let BaseQuantity = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCrewResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.ResourceType);\r\n    ;\r\n    args.push(this.BaseCosts);\r\n    ;\r\n    args.push(this.BaseQuantity);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCsgPrimitive3D = class {\r\n  constructor(expressID, type, Position) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Position = Position;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Position = tape[ptr++];\r\n    return new IfcCsgPrimitive3D(expressID, type, Position);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Position);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCsgSolid = class {\r\n  constructor(expressID, type, TreeRootExpression) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.TreeRootExpression = TreeRootExpression;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let TreeRootExpression = tape[ptr++];\r\n    return new IfcCsgSolid(expressID, type, TreeRootExpression);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.TreeRootExpression);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCurrencyRelationship = class {\r\n  constructor(expressID, type, Name, Description, RelatingMonetaryUnit, RelatedMonetaryUnit, ExchangeRate, RateDateTime, RateSource) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingMonetaryUnit = RelatingMonetaryUnit;\r\n    this.RelatedMonetaryUnit = RelatedMonetaryUnit;\r\n    this.ExchangeRate = ExchangeRate;\r\n    this.RateDateTime = RateDateTime;\r\n    this.RateSource = RateSource;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingMonetaryUnit = tape[ptr++];\r\n    let RelatedMonetaryUnit = tape[ptr++];\r\n    let ExchangeRate = tape[ptr++];\r\n    let RateDateTime = tape[ptr++];\r\n    let RateSource = tape[ptr++];\r\n    return new IfcCurrencyRelationship(expressID, type, Name, Description, RelatingMonetaryUnit, RelatedMonetaryUnit, ExchangeRate, RateDateTime, RateSource);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingMonetaryUnit);\r\n    ;\r\n    args.push(this.RelatedMonetaryUnit);\r\n    ;\r\n    args.push(this.ExchangeRate);\r\n    ;\r\n    args.push(this.RateDateTime);\r\n    ;\r\n    args.push(this.RateSource);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCurtainWall = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCurtainWall(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCurtainWallType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcCurtainWallType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCurve = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcCurve(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcCurveBoundedPlane = class {\r\n  constructor(expressID, type, BasisSurface, OuterBoundary, InnerBoundaries) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.BasisSurface = BasisSurface;\r\n    this.OuterBoundary = OuterBoundary;\r\n    this.InnerBoundaries = InnerBoundaries;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let BasisSurface = tape[ptr++];\r\n    let OuterBoundary = tape[ptr++];\r\n    let InnerBoundaries = tape[ptr++];\r\n    return new IfcCurveBoundedPlane(expressID, type, BasisSurface, OuterBoundary, InnerBoundaries);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.BasisSurface);\r\n    ;\r\n    args.push(this.OuterBoundary);\r\n    ;\r\n    args.push(this.InnerBoundaries);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCurveBoundedSurface = class {\r\n  constructor(expressID, type, BasisSurface, Boundaries, ImplicitOuter) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.BasisSurface = BasisSurface;\r\n    this.Boundaries = Boundaries;\r\n    this.ImplicitOuter = ImplicitOuter;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let BasisSurface = tape[ptr++];\r\n    let Boundaries = tape[ptr++];\r\n    let ImplicitOuter = tape[ptr++];\r\n    return new IfcCurveBoundedSurface(expressID, type, BasisSurface, Boundaries, ImplicitOuter);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.BasisSurface);\r\n    ;\r\n    args.push(this.Boundaries);\r\n    ;\r\n    args.push(this.ImplicitOuter);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCurveSegment2D = class {\r\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.StartPoint = StartPoint;\r\n    this.StartDirection = StartDirection;\r\n    this.SegmentLength = SegmentLength;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let StartPoint = tape[ptr++];\r\n    let StartDirection = tape[ptr++];\r\n    let SegmentLength = tape[ptr++];\r\n    return new IfcCurveSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.StartPoint);\r\n    ;\r\n    args.push(this.StartDirection);\r\n    ;\r\n    args.push(this.SegmentLength);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCurveStyle = class {\r\n  constructor(expressID, type, Name, CurveFont, CurveWidth, CurveColour, ModelOrDraughting) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.CurveFont = CurveFont;\r\n    this.CurveWidth = CurveWidth;\r\n    this.CurveColour = CurveColour;\r\n    this.ModelOrDraughting = ModelOrDraughting;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let CurveFont = tape[ptr++];\r\n    let CurveWidth = tape[ptr++];\r\n    let CurveColour = tape[ptr++];\r\n    let ModelOrDraughting = tape[ptr++];\r\n    return new IfcCurveStyle(expressID, type, Name, CurveFont, CurveWidth, CurveColour, ModelOrDraughting);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.CurveFont);\r\n    ;\r\n    args.push(this.CurveWidth);\r\n    ;\r\n    args.push(this.CurveColour);\r\n    ;\r\n    args.push(this.ModelOrDraughting);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCurveStyleFont = class {\r\n  constructor(expressID, type, Name, PatternList) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.PatternList = PatternList;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let PatternList = tape[ptr++];\r\n    return new IfcCurveStyleFont(expressID, type, Name, PatternList);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.PatternList);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCurveStyleFontAndScaling = class {\r\n  constructor(expressID, type, Name, CurveFont, CurveFontScaling) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.CurveFont = CurveFont;\r\n    this.CurveFontScaling = CurveFontScaling;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let CurveFont = tape[ptr++];\r\n    let CurveFontScaling = tape[ptr++];\r\n    return new IfcCurveStyleFontAndScaling(expressID, type, Name, CurveFont, CurveFontScaling);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.CurveFont);\r\n    ;\r\n    args.push(this.CurveFontScaling);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCurveStyleFontPattern = class {\r\n  constructor(expressID, type, VisibleSegmentLength, InvisibleSegmentLength) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.VisibleSegmentLength = VisibleSegmentLength;\r\n    this.InvisibleSegmentLength = InvisibleSegmentLength;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let VisibleSegmentLength = tape[ptr++];\r\n    let InvisibleSegmentLength = tape[ptr++];\r\n    return new IfcCurveStyleFontPattern(expressID, type, VisibleSegmentLength, InvisibleSegmentLength);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.VisibleSegmentLength);\r\n    ;\r\n    args.push(this.InvisibleSegmentLength);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcCylindricalSurface = class {\r\n  constructor(expressID, type, Position, Radius) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Position = Position;\r\n    this.Radius = Radius;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Position = tape[ptr++];\r\n    let Radius = tape[ptr++];\r\n    return new IfcCylindricalSurface(expressID, type, Position, Radius);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Radius);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDamper = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcDamper(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDamperType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcDamperType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDeepFoundation = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcDeepFoundation(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDeepFoundationType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcDeepFoundationType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDerivedProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.ParentProfile = ParentProfile;\r\n    this.Operator = Operator;\r\n    this.Label = Label;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let ParentProfile = tape[ptr++];\r\n    let Operator = tape[ptr++];\r\n    let Label = tape[ptr++];\r\n    return new IfcDerivedProfileDef(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.ParentProfile);\r\n    ;\r\n    args.push(this.Operator);\r\n    ;\r\n    args.push(this.Label);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDerivedUnit = class {\r\n  constructor(expressID, type, Elements, UnitType, UserDefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Elements = Elements;\r\n    this.UnitType = UnitType;\r\n    this.UserDefinedType = UserDefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Elements = tape[ptr++];\r\n    let UnitType = tape[ptr++];\r\n    let UserDefinedType = tape[ptr++];\r\n    return new IfcDerivedUnit(expressID, type, Elements, UnitType, UserDefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Elements);\r\n    ;\r\n    args.push(this.UnitType);\r\n    ;\r\n    args.push(this.UserDefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDerivedUnitElement = class {\r\n  constructor(expressID, type, Unit, Exponent) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Unit = Unit;\r\n    this.Exponent = Exponent;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Unit = tape[ptr++];\r\n    let Exponent = tape[ptr++];\r\n    return new IfcDerivedUnitElement(expressID, type, Unit, Exponent);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Unit);\r\n    ;\r\n    args.push(this.Exponent);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDimensionalExponents = class {\r\n  constructor(expressID, type, LengthExponent, MassExponent, TimeExponent, ElectricCurrentExponent, ThermodynamicTemperatureExponent, AmountOfSubstanceExponent, LuminousIntensityExponent) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.LengthExponent = LengthExponent;\r\n    this.MassExponent = MassExponent;\r\n    this.TimeExponent = TimeExponent;\r\n    this.ElectricCurrentExponent = ElectricCurrentExponent;\r\n    this.ThermodynamicTemperatureExponent = ThermodynamicTemperatureExponent;\r\n    this.AmountOfSubstanceExponent = AmountOfSubstanceExponent;\r\n    this.LuminousIntensityExponent = LuminousIntensityExponent;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let LengthExponent = tape[ptr++];\r\n    let MassExponent = tape[ptr++];\r\n    let TimeExponent = tape[ptr++];\r\n    let ElectricCurrentExponent = tape[ptr++];\r\n    let ThermodynamicTemperatureExponent = tape[ptr++];\r\n    let AmountOfSubstanceExponent = tape[ptr++];\r\n    let LuminousIntensityExponent = tape[ptr++];\r\n    return new IfcDimensionalExponents(expressID, type, LengthExponent, MassExponent, TimeExponent, ElectricCurrentExponent, ThermodynamicTemperatureExponent, AmountOfSubstanceExponent, LuminousIntensityExponent);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.LengthExponent);\r\n    ;\r\n    args.push(this.MassExponent);\r\n    ;\r\n    args.push(this.TimeExponent);\r\n    ;\r\n    args.push(this.ElectricCurrentExponent);\r\n    ;\r\n    args.push(this.ThermodynamicTemperatureExponent);\r\n    ;\r\n    args.push(this.AmountOfSubstanceExponent);\r\n    ;\r\n    args.push(this.LuminousIntensityExponent);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDirection = class {\r\n  constructor(expressID, type, DirectionRatios) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.DirectionRatios = DirectionRatios;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let DirectionRatios = tape[ptr++];\r\n    return new IfcDirection(expressID, type, DirectionRatios);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.DirectionRatios);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDiscreteAccessory = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcDiscreteAccessory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDiscreteAccessoryType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcDiscreteAccessoryType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDistanceExpression = class {\r\n  constructor(expressID, type, DistanceAlong, OffsetLateral, OffsetVertical, OffsetLongitudinal, AlongHorizontal) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.DistanceAlong = DistanceAlong;\r\n    this.OffsetLateral = OffsetLateral;\r\n    this.OffsetVertical = OffsetVertical;\r\n    this.OffsetLongitudinal = OffsetLongitudinal;\r\n    this.AlongHorizontal = AlongHorizontal;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let DistanceAlong = tape[ptr++];\r\n    let OffsetLateral = tape[ptr++];\r\n    let OffsetVertical = tape[ptr++];\r\n    let OffsetLongitudinal = tape[ptr++];\r\n    let AlongHorizontal = tape[ptr++];\r\n    return new IfcDistanceExpression(expressID, type, DistanceAlong, OffsetLateral, OffsetVertical, OffsetLongitudinal, AlongHorizontal);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.DistanceAlong);\r\n    ;\r\n    args.push(this.OffsetLateral);\r\n    ;\r\n    args.push(this.OffsetVertical);\r\n    ;\r\n    args.push(this.OffsetLongitudinal);\r\n    ;\r\n    args.push(this.AlongHorizontal);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDistributionChamberElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcDistributionChamberElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDistributionChamberElementType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcDistributionChamberElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDistributionCircuit = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.LongName = LongName;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcDistributionCircuit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDistributionControlElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcDistributionControlElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDistributionControlElementType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcDistributionControlElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDistributionElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcDistributionElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDistributionElementType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcDistributionElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDistributionFlowElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcDistributionFlowElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDistributionFlowElementType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcDistributionFlowElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDistributionPort = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, FlowDirection, PredefinedType, SystemType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.FlowDirection = FlowDirection;\r\n    this.PredefinedType = PredefinedType;\r\n    this.SystemType = SystemType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let FlowDirection = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let SystemType = tape[ptr++];\r\n    return new IfcDistributionPort(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, FlowDirection, PredefinedType, SystemType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.FlowDirection);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.SystemType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDistributionSystem = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.LongName = LongName;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcDistributionSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDocumentInformation = class {\r\n  constructor(expressID, type, Identification, Name, Description, Location, Purpose, IntendedUse, Scope, Revision, DocumentOwner, Editors, CreationTime, LastRevisionTime, ElectronicFormat, ValidFrom, ValidUntil, Confidentiality, Status) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Identification = Identification;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Location = Location;\r\n    this.Purpose = Purpose;\r\n    this.IntendedUse = IntendedUse;\r\n    this.Scope = Scope;\r\n    this.Revision = Revision;\r\n    this.DocumentOwner = DocumentOwner;\r\n    this.Editors = Editors;\r\n    this.CreationTime = CreationTime;\r\n    this.LastRevisionTime = LastRevisionTime;\r\n    this.ElectronicFormat = ElectronicFormat;\r\n    this.ValidFrom = ValidFrom;\r\n    this.ValidUntil = ValidUntil;\r\n    this.Confidentiality = Confidentiality;\r\n    this.Status = Status;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Identification = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Location = tape[ptr++];\r\n    let Purpose = tape[ptr++];\r\n    let IntendedUse = tape[ptr++];\r\n    let Scope = tape[ptr++];\r\n    let Revision = tape[ptr++];\r\n    let DocumentOwner = tape[ptr++];\r\n    let Editors = tape[ptr++];\r\n    let CreationTime = tape[ptr++];\r\n    let LastRevisionTime = tape[ptr++];\r\n    let ElectronicFormat = tape[ptr++];\r\n    let ValidFrom = tape[ptr++];\r\n    let ValidUntil = tape[ptr++];\r\n    let Confidentiality = tape[ptr++];\r\n    let Status = tape[ptr++];\r\n    return new IfcDocumentInformation(expressID, type, Identification, Name, Description, Location, Purpose, IntendedUse, Scope, Revision, DocumentOwner, Editors, CreationTime, LastRevisionTime, ElectronicFormat, ValidFrom, ValidUntil, Confidentiality, Status);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Location);\r\n    ;\r\n    args.push(this.Purpose);\r\n    ;\r\n    args.push(this.IntendedUse);\r\n    ;\r\n    args.push(this.Scope);\r\n    ;\r\n    args.push(this.Revision);\r\n    ;\r\n    args.push(this.DocumentOwner);\r\n    ;\r\n    args.push(this.Editors);\r\n    ;\r\n    args.push(this.CreationTime);\r\n    ;\r\n    args.push(this.LastRevisionTime);\r\n    ;\r\n    args.push(this.ElectronicFormat);\r\n    ;\r\n    args.push(this.ValidFrom);\r\n    ;\r\n    args.push(this.ValidUntil);\r\n    ;\r\n    args.push(this.Confidentiality);\r\n    ;\r\n    args.push(this.Status);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDocumentInformationRelationship = class {\r\n  constructor(expressID, type, Name, Description, RelatingDocument, RelatedDocuments, RelationshipType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingDocument = RelatingDocument;\r\n    this.RelatedDocuments = RelatedDocuments;\r\n    this.RelationshipType = RelationshipType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingDocument = tape[ptr++];\r\n    let RelatedDocuments = tape[ptr++];\r\n    let RelationshipType = tape[ptr++];\r\n    return new IfcDocumentInformationRelationship(expressID, type, Name, Description, RelatingDocument, RelatedDocuments, RelationshipType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingDocument);\r\n    ;\r\n    args.push(this.RelatedDocuments);\r\n    ;\r\n    args.push(this.RelationshipType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDocumentReference = class {\r\n  constructor(expressID, type, Location, Identification, Name, Description, ReferencedDocument) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Location = Location;\r\n    this.Identification = Identification;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ReferencedDocument = ReferencedDocument;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Location = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ReferencedDocument = tape[ptr++];\r\n    return new IfcDocumentReference(expressID, type, Location, Identification, Name, Description, ReferencedDocument);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Location);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ReferencedDocument);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDoor = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.OverallHeight = OverallHeight;\r\n    this.OverallWidth = OverallWidth;\r\n    this.PredefinedType = PredefinedType;\r\n    this.OperationType = OperationType;\r\n    this.UserDefinedOperationType = UserDefinedOperationType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let OverallHeight = tape[ptr++];\r\n    let OverallWidth = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let OperationType = tape[ptr++];\r\n    let UserDefinedOperationType = tape[ptr++];\r\n    return new IfcDoor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.OverallHeight);\r\n    ;\r\n    args.push(this.OverallWidth);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.OperationType);\r\n    ;\r\n    args.push(this.UserDefinedOperationType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDoorLiningProperties = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, ThresholdDepth, ThresholdThickness, TransomThickness, TransomOffset, LiningOffset, ThresholdOffset, CasingThickness, CasingDepth, ShapeAspectStyle, LiningToPanelOffsetX, LiningToPanelOffsetY) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.LiningDepth = LiningDepth;\r\n    this.LiningThickness = LiningThickness;\r\n    this.ThresholdDepth = ThresholdDepth;\r\n    this.ThresholdThickness = ThresholdThickness;\r\n    this.TransomThickness = TransomThickness;\r\n    this.TransomOffset = TransomOffset;\r\n    this.LiningOffset = LiningOffset;\r\n    this.ThresholdOffset = ThresholdOffset;\r\n    this.CasingThickness = CasingThickness;\r\n    this.CasingDepth = CasingDepth;\r\n    this.ShapeAspectStyle = ShapeAspectStyle;\r\n    this.LiningToPanelOffsetX = LiningToPanelOffsetX;\r\n    this.LiningToPanelOffsetY = LiningToPanelOffsetY;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let LiningDepth = tape[ptr++];\r\n    let LiningThickness = tape[ptr++];\r\n    let ThresholdDepth = tape[ptr++];\r\n    let ThresholdThickness = tape[ptr++];\r\n    let TransomThickness = tape[ptr++];\r\n    let TransomOffset = tape[ptr++];\r\n    let LiningOffset = tape[ptr++];\r\n    let ThresholdOffset = tape[ptr++];\r\n    let CasingThickness = tape[ptr++];\r\n    let CasingDepth = tape[ptr++];\r\n    let ShapeAspectStyle = tape[ptr++];\r\n    let LiningToPanelOffsetX = tape[ptr++];\r\n    let LiningToPanelOffsetY = tape[ptr++];\r\n    return new IfcDoorLiningProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, ThresholdDepth, ThresholdThickness, TransomThickness, TransomOffset, LiningOffset, ThresholdOffset, CasingThickness, CasingDepth, ShapeAspectStyle, LiningToPanelOffsetX, LiningToPanelOffsetY);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.LiningDepth);\r\n    ;\r\n    args.push(this.LiningThickness);\r\n    ;\r\n    args.push(this.ThresholdDepth);\r\n    ;\r\n    args.push(this.ThresholdThickness);\r\n    ;\r\n    args.push(this.TransomThickness);\r\n    ;\r\n    args.push(this.TransomOffset);\r\n    ;\r\n    args.push(this.LiningOffset);\r\n    ;\r\n    args.push(this.ThresholdOffset);\r\n    ;\r\n    args.push(this.CasingThickness);\r\n    ;\r\n    args.push(this.CasingDepth);\r\n    ;\r\n    args.push(this.ShapeAspectStyle);\r\n    ;\r\n    args.push(this.LiningToPanelOffsetX);\r\n    ;\r\n    args.push(this.LiningToPanelOffsetY);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDoorPanelProperties = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, PanelDepth, PanelOperation, PanelWidth, PanelPosition, ShapeAspectStyle) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.PanelDepth = PanelDepth;\r\n    this.PanelOperation = PanelOperation;\r\n    this.PanelWidth = PanelWidth;\r\n    this.PanelPosition = PanelPosition;\r\n    this.ShapeAspectStyle = ShapeAspectStyle;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let PanelDepth = tape[ptr++];\r\n    let PanelOperation = tape[ptr++];\r\n    let PanelWidth = tape[ptr++];\r\n    let PanelPosition = tape[ptr++];\r\n    let ShapeAspectStyle = tape[ptr++];\r\n    return new IfcDoorPanelProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, PanelDepth, PanelOperation, PanelWidth, PanelPosition, ShapeAspectStyle);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.PanelDepth);\r\n    ;\r\n    args.push(this.PanelOperation);\r\n    ;\r\n    args.push(this.PanelWidth);\r\n    ;\r\n    args.push(this.PanelPosition);\r\n    ;\r\n    args.push(this.ShapeAspectStyle);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDoorStandardCase = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.OverallHeight = OverallHeight;\r\n    this.OverallWidth = OverallWidth;\r\n    this.PredefinedType = PredefinedType;\r\n    this.OperationType = OperationType;\r\n    this.UserDefinedOperationType = UserDefinedOperationType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let OverallHeight = tape[ptr++];\r\n    let OverallWidth = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let OperationType = tape[ptr++];\r\n    let UserDefinedOperationType = tape[ptr++];\r\n    return new IfcDoorStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, OperationType, UserDefinedOperationType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.OverallHeight);\r\n    ;\r\n    args.push(this.OverallWidth);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.OperationType);\r\n    ;\r\n    args.push(this.UserDefinedOperationType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDoorStyle = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, OperationType, ConstructionType, ParameterTakesPrecedence, Sizeable) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.OperationType = OperationType;\r\n    this.ConstructionType = ConstructionType;\r\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\r\n    this.Sizeable = Sizeable;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let OperationType = tape[ptr++];\r\n    let ConstructionType = tape[ptr++];\r\n    let ParameterTakesPrecedence = tape[ptr++];\r\n    let Sizeable = tape[ptr++];\r\n    return new IfcDoorStyle(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, OperationType, ConstructionType, ParameterTakesPrecedence, Sizeable);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.OperationType);\r\n    ;\r\n    args.push(this.ConstructionType);\r\n    ;\r\n    args.push(this.ParameterTakesPrecedence);\r\n    ;\r\n    args.push(this.Sizeable);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDoorType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, OperationType, ParameterTakesPrecedence, UserDefinedOperationType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n    this.OperationType = OperationType;\r\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\r\n    this.UserDefinedOperationType = UserDefinedOperationType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let OperationType = tape[ptr++];\r\n    let ParameterTakesPrecedence = tape[ptr++];\r\n    let UserDefinedOperationType = tape[ptr++];\r\n    return new IfcDoorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, OperationType, ParameterTakesPrecedence, UserDefinedOperationType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.OperationType);\r\n    ;\r\n    args.push(this.ParameterTakesPrecedence);\r\n    ;\r\n    args.push(this.UserDefinedOperationType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDraughtingPreDefinedColour = class {\r\n  constructor(expressID, type, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    return new IfcDraughtingPreDefinedColour(expressID, type, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDraughtingPreDefinedCurveFont = class {\r\n  constructor(expressID, type, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    return new IfcDraughtingPreDefinedCurveFont(expressID, type, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDuctFitting = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcDuctFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDuctFittingType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcDuctFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDuctSegment = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcDuctSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDuctSegmentType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcDuctSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDuctSilencer = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcDuctSilencer(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcDuctSilencerType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcDuctSilencerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcEdge = class {\r\n  constructor(expressID, type, EdgeStart, EdgeEnd) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.EdgeStart = EdgeStart;\r\n    this.EdgeEnd = EdgeEnd;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let EdgeStart = tape[ptr++];\r\n    let EdgeEnd = tape[ptr++];\r\n    return new IfcEdge(expressID, type, EdgeStart, EdgeEnd);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.EdgeStart);\r\n    ;\r\n    args.push(this.EdgeEnd);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcEdgeCurve = class {\r\n  constructor(expressID, type, EdgeStart, EdgeEnd, EdgeGeometry, SameSense) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.EdgeStart = EdgeStart;\r\n    this.EdgeEnd = EdgeEnd;\r\n    this.EdgeGeometry = EdgeGeometry;\r\n    this.SameSense = SameSense;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let EdgeStart = tape[ptr++];\r\n    let EdgeEnd = tape[ptr++];\r\n    let EdgeGeometry = tape[ptr++];\r\n    let SameSense = tape[ptr++];\r\n    return new IfcEdgeCurve(expressID, type, EdgeStart, EdgeEnd, EdgeGeometry, SameSense);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.EdgeStart);\r\n    ;\r\n    args.push(this.EdgeEnd);\r\n    ;\r\n    args.push(this.EdgeGeometry);\r\n    ;\r\n    args.push(this.SameSense);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcEdgeLoop = class {\r\n  constructor(expressID, type, EdgeList) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.EdgeList = EdgeList;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let EdgeList = tape[ptr++];\r\n    return new IfcEdgeLoop(expressID, type, EdgeList);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.EdgeList);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElectricAppliance = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcElectricAppliance(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElectricApplianceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcElectricApplianceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElectricDistributionBoard = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcElectricDistributionBoard(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElectricDistributionBoardType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcElectricDistributionBoardType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElectricFlowStorageDevice = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcElectricFlowStorageDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElectricFlowStorageDeviceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcElectricFlowStorageDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElectricGenerator = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcElectricGenerator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElectricGeneratorType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcElectricGeneratorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElectricMotor = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcElectricMotor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElectricMotorType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcElectricMotorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElectricTimeControl = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcElectricTimeControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElectricTimeControlType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcElectricTimeControlType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElementAssembly = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, AssemblyPlace, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.AssemblyPlace = AssemblyPlace;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let AssemblyPlace = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcElementAssembly(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, AssemblyPlace, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.AssemblyPlace);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElementAssemblyType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcElementAssemblyType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElementComponent = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcElementComponent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElementComponentType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcElementComponentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElementQuantity = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, MethodOfMeasurement, Quantities) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.MethodOfMeasurement = MethodOfMeasurement;\r\n    this.Quantities = Quantities;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let MethodOfMeasurement = tape[ptr++];\r\n    let Quantities = tape[ptr++];\r\n    return new IfcElementQuantity(expressID, type, GlobalId, OwnerHistory, Name, Description, MethodOfMeasurement, Quantities);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.MethodOfMeasurement);\r\n    ;\r\n    args.push(this.Quantities);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElementType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcElementarySurface = class {\r\n  constructor(expressID, type, Position) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Position = Position;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Position = tape[ptr++];\r\n    return new IfcElementarySurface(expressID, type, Position);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Position);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcEllipse = class {\r\n  constructor(expressID, type, Position, SemiAxis1, SemiAxis2) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Position = Position;\r\n    this.SemiAxis1 = SemiAxis1;\r\n    this.SemiAxis2 = SemiAxis2;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Position = tape[ptr++];\r\n    let SemiAxis1 = tape[ptr++];\r\n    let SemiAxis2 = tape[ptr++];\r\n    return new IfcEllipse(expressID, type, Position, SemiAxis1, SemiAxis2);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.SemiAxis1);\r\n    ;\r\n    args.push(this.SemiAxis2);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcEllipseProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, Position, SemiAxis1, SemiAxis2) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.Position = Position;\r\n    this.SemiAxis1 = SemiAxis1;\r\n    this.SemiAxis2 = SemiAxis2;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let SemiAxis1 = tape[ptr++];\r\n    let SemiAxis2 = tape[ptr++];\r\n    return new IfcEllipseProfileDef(expressID, type, ProfileType, ProfileName, Position, SemiAxis1, SemiAxis2);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.SemiAxis1);\r\n    ;\r\n    args.push(this.SemiAxis2);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcEnergyConversionDevice = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcEnergyConversionDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcEnergyConversionDeviceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcEnergyConversionDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcEngine = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcEngine(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcEngineType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcEngineType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcEvaporativeCooler = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcEvaporativeCooler(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcEvaporativeCoolerType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcEvaporativeCoolerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcEvaporator = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcEvaporator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcEvaporatorType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcEvaporatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcEvent = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType, EventTriggerType, UserDefinedEventTriggerType, EventOccurenceTime) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.PredefinedType = PredefinedType;\r\n    this.EventTriggerType = EventTriggerType;\r\n    this.UserDefinedEventTriggerType = UserDefinedEventTriggerType;\r\n    this.EventOccurenceTime = EventOccurenceTime;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let EventTriggerType = tape[ptr++];\r\n    let UserDefinedEventTriggerType = tape[ptr++];\r\n    let EventOccurenceTime = tape[ptr++];\r\n    return new IfcEvent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType, EventTriggerType, UserDefinedEventTriggerType, EventOccurenceTime);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.EventTriggerType);\r\n    ;\r\n    args.push(this.UserDefinedEventTriggerType);\r\n    ;\r\n    args.push(this.EventOccurenceTime);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcEventTime = class {\r\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ActualDate, EarlyDate, LateDate, ScheduleDate) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.DataOrigin = DataOrigin;\r\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\r\n    this.ActualDate = ActualDate;\r\n    this.EarlyDate = EarlyDate;\r\n    this.LateDate = LateDate;\r\n    this.ScheduleDate = ScheduleDate;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let DataOrigin = tape[ptr++];\r\n    let UserDefinedDataOrigin = tape[ptr++];\r\n    let ActualDate = tape[ptr++];\r\n    let EarlyDate = tape[ptr++];\r\n    let LateDate = tape[ptr++];\r\n    let ScheduleDate = tape[ptr++];\r\n    return new IfcEventTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ActualDate, EarlyDate, LateDate, ScheduleDate);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.DataOrigin);\r\n    ;\r\n    args.push(this.UserDefinedDataOrigin);\r\n    ;\r\n    args.push(this.ActualDate);\r\n    ;\r\n    args.push(this.EarlyDate);\r\n    ;\r\n    args.push(this.LateDate);\r\n    ;\r\n    args.push(this.ScheduleDate);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcEventType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, EventTriggerType, UserDefinedEventTriggerType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.ProcessType = ProcessType;\r\n    this.PredefinedType = PredefinedType;\r\n    this.EventTriggerType = EventTriggerType;\r\n    this.UserDefinedEventTriggerType = UserDefinedEventTriggerType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let ProcessType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let EventTriggerType = tape[ptr++];\r\n    let UserDefinedEventTriggerType = tape[ptr++];\r\n    return new IfcEventType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, EventTriggerType, UserDefinedEventTriggerType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.ProcessType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.EventTriggerType);\r\n    ;\r\n    args.push(this.UserDefinedEventTriggerType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcExtendedProperties = class {\r\n  constructor(expressID, type, Name, Description, Properties) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Properties = Properties;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Properties = tape[ptr++];\r\n    return new IfcExtendedProperties(expressID, type, Name, Description, Properties);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Properties);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcExternalInformation = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcExternalInformation(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcExternalReference = class {\r\n  constructor(expressID, type, Location, Identification, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Location = Location;\r\n    this.Identification = Identification;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Location = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    return new IfcExternalReference(expressID, type, Location, Identification, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Location);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcExternalReferenceRelationship = class {\r\n  constructor(expressID, type, Name, Description, RelatingReference, RelatedResourceObjects) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingReference = RelatingReference;\r\n    this.RelatedResourceObjects = RelatedResourceObjects;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingReference = tape[ptr++];\r\n    let RelatedResourceObjects = tape[ptr++];\r\n    return new IfcExternalReferenceRelationship(expressID, type, Name, Description, RelatingReference, RelatedResourceObjects);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingReference);\r\n    ;\r\n    args.push(this.RelatedResourceObjects);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcExternalSpatialElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.LongName = LongName;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcExternalSpatialElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcExternalSpatialStructureElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.LongName = LongName;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    return new IfcExternalSpatialStructureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcExternallyDefinedHatchStyle = class {\r\n  constructor(expressID, type, Location, Identification, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Location = Location;\r\n    this.Identification = Identification;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Location = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    return new IfcExternallyDefinedHatchStyle(expressID, type, Location, Identification, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Location);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcExternallyDefinedSurfaceStyle = class {\r\n  constructor(expressID, type, Location, Identification, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Location = Location;\r\n    this.Identification = Identification;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Location = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    return new IfcExternallyDefinedSurfaceStyle(expressID, type, Location, Identification, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Location);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcExternallyDefinedTextFont = class {\r\n  constructor(expressID, type, Location, Identification, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Location = Location;\r\n    this.Identification = Identification;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Location = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    return new IfcExternallyDefinedTextFont(expressID, type, Location, Identification, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Location);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcExtrudedAreaSolid = class {\r\n  constructor(expressID, type, SweptArea, Position, ExtrudedDirection, Depth) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SweptArea = SweptArea;\r\n    this.Position = Position;\r\n    this.ExtrudedDirection = ExtrudedDirection;\r\n    this.Depth = Depth;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SweptArea = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let ExtrudedDirection = tape[ptr++];\r\n    let Depth = tape[ptr++];\r\n    return new IfcExtrudedAreaSolid(expressID, type, SweptArea, Position, ExtrudedDirection, Depth);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SweptArea);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.ExtrudedDirection);\r\n    ;\r\n    args.push(this.Depth);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcExtrudedAreaSolidTapered = class {\r\n  constructor(expressID, type, SweptArea, Position, ExtrudedDirection, Depth, EndSweptArea) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SweptArea = SweptArea;\r\n    this.Position = Position;\r\n    this.ExtrudedDirection = ExtrudedDirection;\r\n    this.Depth = Depth;\r\n    this.EndSweptArea = EndSweptArea;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SweptArea = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let ExtrudedDirection = tape[ptr++];\r\n    let Depth = tape[ptr++];\r\n    let EndSweptArea = tape[ptr++];\r\n    return new IfcExtrudedAreaSolidTapered(expressID, type, SweptArea, Position, ExtrudedDirection, Depth, EndSweptArea);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SweptArea);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.ExtrudedDirection);\r\n    ;\r\n    args.push(this.Depth);\r\n    ;\r\n    args.push(this.EndSweptArea);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFace = class {\r\n  constructor(expressID, type, Bounds) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Bounds = Bounds;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Bounds = tape[ptr++];\r\n    return new IfcFace(expressID, type, Bounds);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Bounds);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFaceBasedSurfaceModel = class {\r\n  constructor(expressID, type, FbsmFaces) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.FbsmFaces = FbsmFaces;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let FbsmFaces = tape[ptr++];\r\n    return new IfcFaceBasedSurfaceModel(expressID, type, FbsmFaces);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.FbsmFaces);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFaceBound = class {\r\n  constructor(expressID, type, Bound, Orientation) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Bound = Bound;\r\n    this.Orientation = Orientation;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Bound = tape[ptr++];\r\n    let Orientation = tape[ptr++];\r\n    return new IfcFaceBound(expressID, type, Bound, Orientation);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Bound);\r\n    ;\r\n    args.push(this.Orientation);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFaceOuterBound = class {\r\n  constructor(expressID, type, Bound, Orientation) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Bound = Bound;\r\n    this.Orientation = Orientation;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Bound = tape[ptr++];\r\n    let Orientation = tape[ptr++];\r\n    return new IfcFaceOuterBound(expressID, type, Bound, Orientation);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Bound);\r\n    ;\r\n    args.push(this.Orientation);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFaceSurface = class {\r\n  constructor(expressID, type, Bounds, FaceSurface, SameSense) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Bounds = Bounds;\r\n    this.FaceSurface = FaceSurface;\r\n    this.SameSense = SameSense;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Bounds = tape[ptr++];\r\n    let FaceSurface = tape[ptr++];\r\n    let SameSense = tape[ptr++];\r\n    return new IfcFaceSurface(expressID, type, Bounds, FaceSurface, SameSense);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Bounds);\r\n    ;\r\n    args.push(this.FaceSurface);\r\n    ;\r\n    args.push(this.SameSense);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFacetedBrep = class {\r\n  constructor(expressID, type, Outer) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Outer = Outer;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Outer = tape[ptr++];\r\n    return new IfcFacetedBrep(expressID, type, Outer);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Outer);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFacetedBrepWithVoids = class {\r\n  constructor(expressID, type, Outer, Voids) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Outer = Outer;\r\n    this.Voids = Voids;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Outer = tape[ptr++];\r\n    let Voids = tape[ptr++];\r\n    return new IfcFacetedBrepWithVoids(expressID, type, Outer, Voids);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Outer);\r\n    ;\r\n    args.push(this.Voids);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFacility = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.LongName = LongName;\r\n    this.CompositionType = CompositionType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    let CompositionType = tape[ptr++];\r\n    return new IfcFacility(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    args.push(this.CompositionType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFacilityPart = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.LongName = LongName;\r\n    this.CompositionType = CompositionType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    let CompositionType = tape[ptr++];\r\n    return new IfcFacilityPart(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    args.push(this.CompositionType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFailureConnectionCondition = class {\r\n  constructor(expressID, type, Name, TensionFailureX, TensionFailureY, TensionFailureZ, CompressionFailureX, CompressionFailureY, CompressionFailureZ) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.TensionFailureX = TensionFailureX;\r\n    this.TensionFailureY = TensionFailureY;\r\n    this.TensionFailureZ = TensionFailureZ;\r\n    this.CompressionFailureX = CompressionFailureX;\r\n    this.CompressionFailureY = CompressionFailureY;\r\n    this.CompressionFailureZ = CompressionFailureZ;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let TensionFailureX = tape[ptr++];\r\n    let TensionFailureY = tape[ptr++];\r\n    let TensionFailureZ = tape[ptr++];\r\n    let CompressionFailureX = tape[ptr++];\r\n    let CompressionFailureY = tape[ptr++];\r\n    let CompressionFailureZ = tape[ptr++];\r\n    return new IfcFailureConnectionCondition(expressID, type, Name, TensionFailureX, TensionFailureY, TensionFailureZ, CompressionFailureX, CompressionFailureY, CompressionFailureZ);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.TensionFailureX);\r\n    ;\r\n    args.push(this.TensionFailureY);\r\n    ;\r\n    args.push(this.TensionFailureZ);\r\n    ;\r\n    args.push(this.CompressionFailureX);\r\n    ;\r\n    args.push(this.CompressionFailureY);\r\n    ;\r\n    args.push(this.CompressionFailureZ);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFan = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcFan(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFanType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcFanType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFastener = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcFastener(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFastenerType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcFastenerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFeatureElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcFeatureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFeatureElementAddition = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcFeatureElementAddition(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFeatureElementSubtraction = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcFeatureElementSubtraction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFillAreaStyle = class {\r\n  constructor(expressID, type, Name, FillStyles, ModelorDraughting) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.FillStyles = FillStyles;\r\n    this.ModelorDraughting = ModelorDraughting;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let FillStyles = tape[ptr++];\r\n    let ModelorDraughting = tape[ptr++];\r\n    return new IfcFillAreaStyle(expressID, type, Name, FillStyles, ModelorDraughting);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.FillStyles);\r\n    ;\r\n    args.push(this.ModelorDraughting);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFillAreaStyleHatching = class {\r\n  constructor(expressID, type, HatchLineAppearance, StartOfNextHatchLine, PointOfReferenceHatchLine, PatternStart, HatchLineAngle) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.HatchLineAppearance = HatchLineAppearance;\r\n    this.StartOfNextHatchLine = StartOfNextHatchLine;\r\n    this.PointOfReferenceHatchLine = PointOfReferenceHatchLine;\r\n    this.PatternStart = PatternStart;\r\n    this.HatchLineAngle = HatchLineAngle;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let HatchLineAppearance = tape[ptr++];\r\n    let StartOfNextHatchLine = tape[ptr++];\r\n    let PointOfReferenceHatchLine = tape[ptr++];\r\n    let PatternStart = tape[ptr++];\r\n    let HatchLineAngle = tape[ptr++];\r\n    return new IfcFillAreaStyleHatching(expressID, type, HatchLineAppearance, StartOfNextHatchLine, PointOfReferenceHatchLine, PatternStart, HatchLineAngle);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.HatchLineAppearance);\r\n    ;\r\n    args.push(this.StartOfNextHatchLine);\r\n    ;\r\n    args.push(this.PointOfReferenceHatchLine);\r\n    ;\r\n    args.push(this.PatternStart);\r\n    ;\r\n    args.push(this.HatchLineAngle);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFillAreaStyleTiles = class {\r\n  constructor(expressID, type, TilingPattern, Tiles, TilingScale) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.TilingPattern = TilingPattern;\r\n    this.Tiles = Tiles;\r\n    this.TilingScale = TilingScale;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let TilingPattern = tape[ptr++];\r\n    let Tiles = tape[ptr++];\r\n    let TilingScale = tape[ptr++];\r\n    return new IfcFillAreaStyleTiles(expressID, type, TilingPattern, Tiles, TilingScale);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.TilingPattern);\r\n    ;\r\n    args.push(this.Tiles);\r\n    ;\r\n    args.push(this.TilingScale);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFilter = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcFilter(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFilterType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcFilterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFireSuppressionTerminal = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcFireSuppressionTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFireSuppressionTerminalType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcFireSuppressionTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFixedReferenceSweptAreaSolid = class {\r\n  constructor(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, FixedReference) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SweptArea = SweptArea;\r\n    this.Position = Position;\r\n    this.Directrix = Directrix;\r\n    this.StartParam = StartParam;\r\n    this.EndParam = EndParam;\r\n    this.FixedReference = FixedReference;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SweptArea = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let Directrix = tape[ptr++];\r\n    let StartParam = tape[ptr++];\r\n    let EndParam = tape[ptr++];\r\n    let FixedReference = tape[ptr++];\r\n    return new IfcFixedReferenceSweptAreaSolid(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, FixedReference);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SweptArea);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Directrix);\r\n    ;\r\n    args.push(this.StartParam);\r\n    ;\r\n    args.push(this.EndParam);\r\n    ;\r\n    args.push(this.FixedReference);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFlowController = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcFlowController(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFlowControllerType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcFlowControllerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFlowFitting = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcFlowFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFlowFittingType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcFlowFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFlowInstrument = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcFlowInstrument(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFlowInstrumentType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcFlowInstrumentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFlowMeter = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcFlowMeter(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFlowMeterType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcFlowMeterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFlowMovingDevice = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcFlowMovingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFlowMovingDeviceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcFlowMovingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFlowSegment = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcFlowSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFlowSegmentType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcFlowSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFlowStorageDevice = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcFlowStorageDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFlowStorageDeviceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcFlowStorageDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFlowTerminal = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcFlowTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFlowTerminalType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcFlowTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFlowTreatmentDevice = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcFlowTreatmentDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFlowTreatmentDeviceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcFlowTreatmentDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFooting = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcFooting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFootingType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcFootingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFurnishingElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcFurnishingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFurnishingElementType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcFurnishingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFurniture = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcFurniture(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcFurnitureType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, AssemblyPlace, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.AssemblyPlace = AssemblyPlace;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let AssemblyPlace = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcFurnitureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, AssemblyPlace, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.AssemblyPlace);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcGeographicElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcGeographicElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcGeographicElementType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcGeographicElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcGeometricCurveSet = class {\r\n  constructor(expressID, type, Elements) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Elements = Elements;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Elements = tape[ptr++];\r\n    return new IfcGeometricCurveSet(expressID, type, Elements);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Elements);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcGeometricRepresentationContext = class {\r\n  constructor(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ContextIdentifier = ContextIdentifier;\r\n    this.ContextType = ContextType;\r\n    this.CoordinateSpaceDimension = CoordinateSpaceDimension;\r\n    this.Precision = Precision;\r\n    this.WorldCoordinateSystem = WorldCoordinateSystem;\r\n    this.TrueNorth = TrueNorth;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ContextIdentifier = tape[ptr++];\r\n    let ContextType = tape[ptr++];\r\n    let CoordinateSpaceDimension = tape[ptr++];\r\n    let Precision = tape[ptr++];\r\n    let WorldCoordinateSystem = tape[ptr++];\r\n    let TrueNorth = tape[ptr++];\r\n    return new IfcGeometricRepresentationContext(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ContextIdentifier);\r\n    ;\r\n    args.push(this.ContextType);\r\n    ;\r\n    args.push(this.CoordinateSpaceDimension);\r\n    ;\r\n    args.push(this.Precision);\r\n    ;\r\n    args.push(this.WorldCoordinateSystem);\r\n    ;\r\n    args.push(this.TrueNorth);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcGeometricRepresentationItem = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcGeometricRepresentationItem(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcGeometricRepresentationSubContext = class {\r\n  constructor(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth, ParentContext, TargetScale, TargetView, UserDefinedTargetView) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ContextIdentifier = ContextIdentifier;\r\n    this.ContextType = ContextType;\r\n    this.CoordinateSpaceDimension = CoordinateSpaceDimension;\r\n    this.Precision = Precision;\r\n    this.WorldCoordinateSystem = WorldCoordinateSystem;\r\n    this.TrueNorth = TrueNorth;\r\n    this.ParentContext = ParentContext;\r\n    this.TargetScale = TargetScale;\r\n    this.TargetView = TargetView;\r\n    this.UserDefinedTargetView = UserDefinedTargetView;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ContextIdentifier = tape[ptr++];\r\n    let ContextType = tape[ptr++];\r\n    let CoordinateSpaceDimension = tape[ptr++];\r\n    let Precision = tape[ptr++];\r\n    let WorldCoordinateSystem = tape[ptr++];\r\n    let TrueNorth = tape[ptr++];\r\n    let ParentContext = tape[ptr++];\r\n    let TargetScale = tape[ptr++];\r\n    let TargetView = tape[ptr++];\r\n    let UserDefinedTargetView = tape[ptr++];\r\n    return new IfcGeometricRepresentationSubContext(expressID, type, ContextIdentifier, ContextType, CoordinateSpaceDimension, Precision, WorldCoordinateSystem, TrueNorth, ParentContext, TargetScale, TargetView, UserDefinedTargetView);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ContextIdentifier);\r\n    ;\r\n    args.push(this.ContextType);\r\n    ;\r\n    args.push(this.CoordinateSpaceDimension);\r\n    ;\r\n    args.push(this.Precision);\r\n    ;\r\n    args.push(this.WorldCoordinateSystem);\r\n    ;\r\n    args.push(this.TrueNorth);\r\n    ;\r\n    args.push(this.ParentContext);\r\n    ;\r\n    args.push(this.TargetScale);\r\n    ;\r\n    args.push(this.TargetView);\r\n    ;\r\n    args.push(this.UserDefinedTargetView);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcGeometricSet = class {\r\n  constructor(expressID, type, Elements) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Elements = Elements;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Elements = tape[ptr++];\r\n    return new IfcGeometricSet(expressID, type, Elements);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Elements);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcGrid = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, UAxes, VAxes, WAxes, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.UAxes = UAxes;\r\n    this.VAxes = VAxes;\r\n    this.WAxes = WAxes;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let UAxes = tape[ptr++];\r\n    let VAxes = tape[ptr++];\r\n    let WAxes = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcGrid(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, UAxes, VAxes, WAxes, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.UAxes);\r\n    ;\r\n    args.push(this.VAxes);\r\n    ;\r\n    args.push(this.WAxes);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcGridAxis = class {\r\n  constructor(expressID, type, AxisTag, AxisCurve, SameSense) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.AxisTag = AxisTag;\r\n    this.AxisCurve = AxisCurve;\r\n    this.SameSense = SameSense;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let AxisTag = tape[ptr++];\r\n    let AxisCurve = tape[ptr++];\r\n    let SameSense = tape[ptr++];\r\n    return new IfcGridAxis(expressID, type, AxisTag, AxisCurve, SameSense);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.AxisTag);\r\n    ;\r\n    args.push(this.AxisCurve);\r\n    ;\r\n    args.push(this.SameSense);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcGridPlacement = class {\r\n  constructor(expressID, type, PlacementRelTo, PlacementLocation, PlacementRefDirection) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.PlacementRelTo = PlacementRelTo;\r\n    this.PlacementLocation = PlacementLocation;\r\n    this.PlacementRefDirection = PlacementRefDirection;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let PlacementRelTo = tape[ptr++];\r\n    let PlacementLocation = tape[ptr++];\r\n    let PlacementRefDirection = tape[ptr++];\r\n    return new IfcGridPlacement(expressID, type, PlacementRelTo, PlacementLocation, PlacementRefDirection);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.PlacementRelTo);\r\n    ;\r\n    args.push(this.PlacementLocation);\r\n    ;\r\n    args.push(this.PlacementRefDirection);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcGroup = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    return new IfcGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcHalfSpaceSolid = class {\r\n  constructor(expressID, type, BaseSurface, AgreementFlag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.BaseSurface = BaseSurface;\r\n    this.AgreementFlag = AgreementFlag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let BaseSurface = tape[ptr++];\r\n    let AgreementFlag = tape[ptr++];\r\n    return new IfcHalfSpaceSolid(expressID, type, BaseSurface, AgreementFlag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.BaseSurface);\r\n    ;\r\n    args.push(this.AgreementFlag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcHeatExchanger = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcHeatExchanger(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcHeatExchangerType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcHeatExchangerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcHumidifier = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcHumidifier(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcHumidifierType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcHumidifierType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcIShapeProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, Position, OverallWidth, OverallDepth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, FlangeSlope) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.Position = Position;\r\n    this.OverallWidth = OverallWidth;\r\n    this.OverallDepth = OverallDepth;\r\n    this.WebThickness = WebThickness;\r\n    this.FlangeThickness = FlangeThickness;\r\n    this.FilletRadius = FilletRadius;\r\n    this.FlangeEdgeRadius = FlangeEdgeRadius;\r\n    this.FlangeSlope = FlangeSlope;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let OverallWidth = tape[ptr++];\r\n    let OverallDepth = tape[ptr++];\r\n    let WebThickness = tape[ptr++];\r\n    let FlangeThickness = tape[ptr++];\r\n    let FilletRadius = tape[ptr++];\r\n    let FlangeEdgeRadius = tape[ptr++];\r\n    let FlangeSlope = tape[ptr++];\r\n    return new IfcIShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, OverallWidth, OverallDepth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, FlangeSlope);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.OverallWidth);\r\n    ;\r\n    args.push(this.OverallDepth);\r\n    ;\r\n    args.push(this.WebThickness);\r\n    ;\r\n    args.push(this.FlangeThickness);\r\n    ;\r\n    args.push(this.FilletRadius);\r\n    ;\r\n    args.push(this.FlangeEdgeRadius);\r\n    ;\r\n    args.push(this.FlangeSlope);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcImageTexture = class {\r\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, URLReference) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.RepeatS = RepeatS;\r\n    this.RepeatT = RepeatT;\r\n    this.Mode = Mode;\r\n    this.TextureTransform = TextureTransform;\r\n    this.Parameter = Parameter;\r\n    this.URLReference = URLReference;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let RepeatS = tape[ptr++];\r\n    let RepeatT = tape[ptr++];\r\n    let Mode = tape[ptr++];\r\n    let TextureTransform = tape[ptr++];\r\n    let Parameter = tape[ptr++];\r\n    let URLReference = tape[ptr++];\r\n    return new IfcImageTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, URLReference);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.RepeatS);\r\n    ;\r\n    args.push(this.RepeatT);\r\n    ;\r\n    args.push(this.Mode);\r\n    ;\r\n    args.push(this.TextureTransform);\r\n    ;\r\n    args.push(this.Parameter);\r\n    ;\r\n    args.push(this.URLReference);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcIndexedColourMap = class {\r\n  constructor(expressID, type, MappedTo, Opacity, Colours, ColourIndex) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.MappedTo = MappedTo;\r\n    this.Opacity = Opacity;\r\n    this.Colours = Colours;\r\n    this.ColourIndex = ColourIndex;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let MappedTo = tape[ptr++];\r\n    let Opacity = tape[ptr++];\r\n    let Colours = tape[ptr++];\r\n    let ColourIndex = tape[ptr++];\r\n    return new IfcIndexedColourMap(expressID, type, MappedTo, Opacity, Colours, ColourIndex);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.MappedTo);\r\n    ;\r\n    args.push(this.Opacity);\r\n    ;\r\n    args.push(this.Colours);\r\n    ;\r\n    args.push(this.ColourIndex);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcIndexedPolyCurve = class {\r\n  constructor(expressID, type, Points, Segments, SelfIntersect) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Points = Points;\r\n    this.Segments = Segments;\r\n    this.SelfIntersect = SelfIntersect;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Points = tape[ptr++];\r\n    let Segments = tape[ptr++];\r\n    let SelfIntersect = tape[ptr++];\r\n    return new IfcIndexedPolyCurve(expressID, type, Points, Segments, SelfIntersect);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Points);\r\n    ;\r\n    args.push(this.Segments);\r\n    ;\r\n    args.push(this.SelfIntersect);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcIndexedPolygonalFace = class {\r\n  constructor(expressID, type, CoordIndex) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.CoordIndex = CoordIndex;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let CoordIndex = tape[ptr++];\r\n    return new IfcIndexedPolygonalFace(expressID, type, CoordIndex);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.CoordIndex);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcIndexedPolygonalFaceWithVoids = class {\r\n  constructor(expressID, type, CoordIndex, InnerCoordIndices) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.CoordIndex = CoordIndex;\r\n    this.InnerCoordIndices = InnerCoordIndices;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let CoordIndex = tape[ptr++];\r\n    let InnerCoordIndices = tape[ptr++];\r\n    return new IfcIndexedPolygonalFaceWithVoids(expressID, type, CoordIndex, InnerCoordIndices);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.CoordIndex);\r\n    ;\r\n    args.push(this.InnerCoordIndices);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcIndexedTextureMap = class {\r\n  constructor(expressID, type, Maps, MappedTo, TexCoords) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Maps = Maps;\r\n    this.MappedTo = MappedTo;\r\n    this.TexCoords = TexCoords;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Maps = tape[ptr++];\r\n    let MappedTo = tape[ptr++];\r\n    let TexCoords = tape[ptr++];\r\n    return new IfcIndexedTextureMap(expressID, type, Maps, MappedTo, TexCoords);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Maps);\r\n    ;\r\n    args.push(this.MappedTo);\r\n    ;\r\n    args.push(this.TexCoords);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcIndexedTriangleTextureMap = class {\r\n  constructor(expressID, type, Maps, MappedTo, TexCoords, TexCoordIndex) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Maps = Maps;\r\n    this.MappedTo = MappedTo;\r\n    this.TexCoords = TexCoords;\r\n    this.TexCoordIndex = TexCoordIndex;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Maps = tape[ptr++];\r\n    let MappedTo = tape[ptr++];\r\n    let TexCoords = tape[ptr++];\r\n    let TexCoordIndex = tape[ptr++];\r\n    return new IfcIndexedTriangleTextureMap(expressID, type, Maps, MappedTo, TexCoords, TexCoordIndex);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Maps);\r\n    ;\r\n    args.push(this.MappedTo);\r\n    ;\r\n    args.push(this.TexCoords);\r\n    ;\r\n    args.push(this.TexCoordIndex);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcInterceptor = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcInterceptor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcInterceptorType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcInterceptorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcIntersectionCurve = class {\r\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Curve3D = Curve3D;\r\n    this.AssociatedGeometry = AssociatedGeometry;\r\n    this.MasterRepresentation = MasterRepresentation;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Curve3D = tape[ptr++];\r\n    let AssociatedGeometry = tape[ptr++];\r\n    let MasterRepresentation = tape[ptr++];\r\n    return new IfcIntersectionCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Curve3D);\r\n    ;\r\n    args.push(this.AssociatedGeometry);\r\n    ;\r\n    args.push(this.MasterRepresentation);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcInventory = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, Jurisdiction, ResponsiblePersons, LastUpdateDate, CurrentValue, OriginalValue) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.PredefinedType = PredefinedType;\r\n    this.Jurisdiction = Jurisdiction;\r\n    this.ResponsiblePersons = ResponsiblePersons;\r\n    this.LastUpdateDate = LastUpdateDate;\r\n    this.CurrentValue = CurrentValue;\r\n    this.OriginalValue = OriginalValue;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let Jurisdiction = tape[ptr++];\r\n    let ResponsiblePersons = tape[ptr++];\r\n    let LastUpdateDate = tape[ptr++];\r\n    let CurrentValue = tape[ptr++];\r\n    let OriginalValue = tape[ptr++];\r\n    return new IfcInventory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, Jurisdiction, ResponsiblePersons, LastUpdateDate, CurrentValue, OriginalValue);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.Jurisdiction);\r\n    ;\r\n    args.push(this.ResponsiblePersons);\r\n    ;\r\n    args.push(this.LastUpdateDate);\r\n    ;\r\n    args.push(this.CurrentValue);\r\n    ;\r\n    args.push(this.OriginalValue);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcIrregularTimeSeries = class {\r\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, Values) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.StartTime = StartTime;\r\n    this.EndTime = EndTime;\r\n    this.TimeSeriesDataType = TimeSeriesDataType;\r\n    this.DataOrigin = DataOrigin;\r\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\r\n    this.Unit = Unit;\r\n    this.Values = Values;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let StartTime = tape[ptr++];\r\n    let EndTime = tape[ptr++];\r\n    let TimeSeriesDataType = tape[ptr++];\r\n    let DataOrigin = tape[ptr++];\r\n    let UserDefinedDataOrigin = tape[ptr++];\r\n    let Unit = tape[ptr++];\r\n    let Values = tape[ptr++];\r\n    return new IfcIrregularTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, Values);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.StartTime);\r\n    ;\r\n    args.push(this.EndTime);\r\n    ;\r\n    args.push(this.TimeSeriesDataType);\r\n    ;\r\n    args.push(this.DataOrigin);\r\n    ;\r\n    args.push(this.UserDefinedDataOrigin);\r\n    ;\r\n    args.push(this.Unit);\r\n    ;\r\n    args.push(this.Values);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcIrregularTimeSeriesValue = class {\r\n  constructor(expressID, type, TimeStamp, ListValues) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.TimeStamp = TimeStamp;\r\n    this.ListValues = ListValues;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let TimeStamp = tape[ptr++];\r\n    let ListValues = tape[ptr++];\r\n    return new IfcIrregularTimeSeriesValue(expressID, type, TimeStamp, ListValues);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.TimeStamp);\r\n    ;\r\n    args.push(this.ListValues);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcJunctionBox = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcJunctionBox(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcJunctionBoxType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcJunctionBoxType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLShapeProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, Width, Thickness, FilletRadius, EdgeRadius, LegSlope) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.Position = Position;\r\n    this.Depth = Depth;\r\n    this.Width = Width;\r\n    this.Thickness = Thickness;\r\n    this.FilletRadius = FilletRadius;\r\n    this.EdgeRadius = EdgeRadius;\r\n    this.LegSlope = LegSlope;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let Depth = tape[ptr++];\r\n    let Width = tape[ptr++];\r\n    let Thickness = tape[ptr++];\r\n    let FilletRadius = tape[ptr++];\r\n    let EdgeRadius = tape[ptr++];\r\n    let LegSlope = tape[ptr++];\r\n    return new IfcLShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, Width, Thickness, FilletRadius, EdgeRadius, LegSlope);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Depth);\r\n    ;\r\n    args.push(this.Width);\r\n    ;\r\n    args.push(this.Thickness);\r\n    ;\r\n    args.push(this.FilletRadius);\r\n    ;\r\n    args.push(this.EdgeRadius);\r\n    ;\r\n    args.push(this.LegSlope);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLaborResource = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.Usage = Usage;\r\n    this.BaseCosts = BaseCosts;\r\n    this.BaseQuantity = BaseQuantity;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let Usage = tape[ptr++];\r\n    let BaseCosts = tape[ptr++];\r\n    let BaseQuantity = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcLaborResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.Usage);\r\n    ;\r\n    args.push(this.BaseCosts);\r\n    ;\r\n    args.push(this.BaseQuantity);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLaborResourceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.ResourceType = ResourceType;\r\n    this.BaseCosts = BaseCosts;\r\n    this.BaseQuantity = BaseQuantity;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let ResourceType = tape[ptr++];\r\n    let BaseCosts = tape[ptr++];\r\n    let BaseQuantity = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcLaborResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.ResourceType);\r\n    ;\r\n    args.push(this.BaseCosts);\r\n    ;\r\n    args.push(this.BaseQuantity);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLagTime = class {\r\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, LagValue, DurationType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.DataOrigin = DataOrigin;\r\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\r\n    this.LagValue = LagValue;\r\n    this.DurationType = DurationType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let DataOrigin = tape[ptr++];\r\n    let UserDefinedDataOrigin = tape[ptr++];\r\n    let LagValue = tape[ptr++];\r\n    let DurationType = tape[ptr++];\r\n    return new IfcLagTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, LagValue, DurationType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.DataOrigin);\r\n    ;\r\n    args.push(this.UserDefinedDataOrigin);\r\n    ;\r\n    args.push(this.LagValue);\r\n    ;\r\n    args.push(this.DurationType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLamp = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcLamp(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLampType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcLampType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLibraryInformation = class {\r\n  constructor(expressID, type, Name, Version, Publisher, VersionDate, Location, Description) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Version = Version;\r\n    this.Publisher = Publisher;\r\n    this.VersionDate = VersionDate;\r\n    this.Location = Location;\r\n    this.Description = Description;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Version = tape[ptr++];\r\n    let Publisher = tape[ptr++];\r\n    let VersionDate = tape[ptr++];\r\n    let Location = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    return new IfcLibraryInformation(expressID, type, Name, Version, Publisher, VersionDate, Location, Description);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Version);\r\n    ;\r\n    args.push(this.Publisher);\r\n    ;\r\n    args.push(this.VersionDate);\r\n    ;\r\n    args.push(this.Location);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLibraryReference = class {\r\n  constructor(expressID, type, Location, Identification, Name, Description, Language, ReferencedLibrary) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Location = Location;\r\n    this.Identification = Identification;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Language = Language;\r\n    this.ReferencedLibrary = ReferencedLibrary;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Location = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Language = tape[ptr++];\r\n    let ReferencedLibrary = tape[ptr++];\r\n    return new IfcLibraryReference(expressID, type, Location, Identification, Name, Description, Language, ReferencedLibrary);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Location);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Language);\r\n    ;\r\n    args.push(this.ReferencedLibrary);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLightDistributionData = class {\r\n  constructor(expressID, type, MainPlaneAngle, SecondaryPlaneAngle, LuminousIntensity) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.MainPlaneAngle = MainPlaneAngle;\r\n    this.SecondaryPlaneAngle = SecondaryPlaneAngle;\r\n    this.LuminousIntensity = LuminousIntensity;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let MainPlaneAngle = tape[ptr++];\r\n    let SecondaryPlaneAngle = tape[ptr++];\r\n    let LuminousIntensity = tape[ptr++];\r\n    return new IfcLightDistributionData(expressID, type, MainPlaneAngle, SecondaryPlaneAngle, LuminousIntensity);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.MainPlaneAngle);\r\n    ;\r\n    args.push(this.SecondaryPlaneAngle);\r\n    ;\r\n    args.push(this.LuminousIntensity);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLightFixture = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcLightFixture(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLightFixtureType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcLightFixtureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLightIntensityDistribution = class {\r\n  constructor(expressID, type, LightDistributionCurve, DistributionData) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.LightDistributionCurve = LightDistributionCurve;\r\n    this.DistributionData = DistributionData;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let LightDistributionCurve = tape[ptr++];\r\n    let DistributionData = tape[ptr++];\r\n    return new IfcLightIntensityDistribution(expressID, type, LightDistributionCurve, DistributionData);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.LightDistributionCurve);\r\n    ;\r\n    args.push(this.DistributionData);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLightSource = class {\r\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.LightColour = LightColour;\r\n    this.AmbientIntensity = AmbientIntensity;\r\n    this.Intensity = Intensity;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let LightColour = tape[ptr++];\r\n    let AmbientIntensity = tape[ptr++];\r\n    let Intensity = tape[ptr++];\r\n    return new IfcLightSource(expressID, type, Name, LightColour, AmbientIntensity, Intensity);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.LightColour);\r\n    ;\r\n    args.push(this.AmbientIntensity);\r\n    ;\r\n    args.push(this.Intensity);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLightSourceAmbient = class {\r\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.LightColour = LightColour;\r\n    this.AmbientIntensity = AmbientIntensity;\r\n    this.Intensity = Intensity;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let LightColour = tape[ptr++];\r\n    let AmbientIntensity = tape[ptr++];\r\n    let Intensity = tape[ptr++];\r\n    return new IfcLightSourceAmbient(expressID, type, Name, LightColour, AmbientIntensity, Intensity);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.LightColour);\r\n    ;\r\n    args.push(this.AmbientIntensity);\r\n    ;\r\n    args.push(this.Intensity);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLightSourceDirectional = class {\r\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Orientation) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.LightColour = LightColour;\r\n    this.AmbientIntensity = AmbientIntensity;\r\n    this.Intensity = Intensity;\r\n    this.Orientation = Orientation;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let LightColour = tape[ptr++];\r\n    let AmbientIntensity = tape[ptr++];\r\n    let Intensity = tape[ptr++];\r\n    let Orientation = tape[ptr++];\r\n    return new IfcLightSourceDirectional(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Orientation);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.LightColour);\r\n    ;\r\n    args.push(this.AmbientIntensity);\r\n    ;\r\n    args.push(this.Intensity);\r\n    ;\r\n    args.push(this.Orientation);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLightSourceGoniometric = class {\r\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, ColourAppearance, ColourTemperature, LuminousFlux, LightEmissionSource, LightDistributionDataSource) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.LightColour = LightColour;\r\n    this.AmbientIntensity = AmbientIntensity;\r\n    this.Intensity = Intensity;\r\n    this.Position = Position;\r\n    this.ColourAppearance = ColourAppearance;\r\n    this.ColourTemperature = ColourTemperature;\r\n    this.LuminousFlux = LuminousFlux;\r\n    this.LightEmissionSource = LightEmissionSource;\r\n    this.LightDistributionDataSource = LightDistributionDataSource;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let LightColour = tape[ptr++];\r\n    let AmbientIntensity = tape[ptr++];\r\n    let Intensity = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let ColourAppearance = tape[ptr++];\r\n    let ColourTemperature = tape[ptr++];\r\n    let LuminousFlux = tape[ptr++];\r\n    let LightEmissionSource = tape[ptr++];\r\n    let LightDistributionDataSource = tape[ptr++];\r\n    return new IfcLightSourceGoniometric(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, ColourAppearance, ColourTemperature, LuminousFlux, LightEmissionSource, LightDistributionDataSource);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.LightColour);\r\n    ;\r\n    args.push(this.AmbientIntensity);\r\n    ;\r\n    args.push(this.Intensity);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.ColourAppearance);\r\n    ;\r\n    args.push(this.ColourTemperature);\r\n    ;\r\n    args.push(this.LuminousFlux);\r\n    ;\r\n    args.push(this.LightEmissionSource);\r\n    ;\r\n    args.push(this.LightDistributionDataSource);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLightSourcePositional = class {\r\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.LightColour = LightColour;\r\n    this.AmbientIntensity = AmbientIntensity;\r\n    this.Intensity = Intensity;\r\n    this.Position = Position;\r\n    this.Radius = Radius;\r\n    this.ConstantAttenuation = ConstantAttenuation;\r\n    this.DistanceAttenuation = DistanceAttenuation;\r\n    this.QuadricAttenuation = QuadricAttenuation;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let LightColour = tape[ptr++];\r\n    let AmbientIntensity = tape[ptr++];\r\n    let Intensity = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let Radius = tape[ptr++];\r\n    let ConstantAttenuation = tape[ptr++];\r\n    let DistanceAttenuation = tape[ptr++];\r\n    let QuadricAttenuation = tape[ptr++];\r\n    return new IfcLightSourcePositional(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.LightColour);\r\n    ;\r\n    args.push(this.AmbientIntensity);\r\n    ;\r\n    args.push(this.Intensity);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Radius);\r\n    ;\r\n    args.push(this.ConstantAttenuation);\r\n    ;\r\n    args.push(this.DistanceAttenuation);\r\n    ;\r\n    args.push(this.QuadricAttenuation);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLightSourceSpot = class {\r\n  constructor(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation, Orientation, ConcentrationExponent, SpreadAngle, BeamWidthAngle) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.LightColour = LightColour;\r\n    this.AmbientIntensity = AmbientIntensity;\r\n    this.Intensity = Intensity;\r\n    this.Position = Position;\r\n    this.Radius = Radius;\r\n    this.ConstantAttenuation = ConstantAttenuation;\r\n    this.DistanceAttenuation = DistanceAttenuation;\r\n    this.QuadricAttenuation = QuadricAttenuation;\r\n    this.Orientation = Orientation;\r\n    this.ConcentrationExponent = ConcentrationExponent;\r\n    this.SpreadAngle = SpreadAngle;\r\n    this.BeamWidthAngle = BeamWidthAngle;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let LightColour = tape[ptr++];\r\n    let AmbientIntensity = tape[ptr++];\r\n    let Intensity = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let Radius = tape[ptr++];\r\n    let ConstantAttenuation = tape[ptr++];\r\n    let DistanceAttenuation = tape[ptr++];\r\n    let QuadricAttenuation = tape[ptr++];\r\n    let Orientation = tape[ptr++];\r\n    let ConcentrationExponent = tape[ptr++];\r\n    let SpreadAngle = tape[ptr++];\r\n    let BeamWidthAngle = tape[ptr++];\r\n    return new IfcLightSourceSpot(expressID, type, Name, LightColour, AmbientIntensity, Intensity, Position, Radius, ConstantAttenuation, DistanceAttenuation, QuadricAttenuation, Orientation, ConcentrationExponent, SpreadAngle, BeamWidthAngle);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.LightColour);\r\n    ;\r\n    args.push(this.AmbientIntensity);\r\n    ;\r\n    args.push(this.Intensity);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Radius);\r\n    ;\r\n    args.push(this.ConstantAttenuation);\r\n    ;\r\n    args.push(this.DistanceAttenuation);\r\n    ;\r\n    args.push(this.QuadricAttenuation);\r\n    ;\r\n    args.push(this.Orientation);\r\n    ;\r\n    args.push(this.ConcentrationExponent);\r\n    ;\r\n    args.push(this.SpreadAngle);\r\n    ;\r\n    args.push(this.BeamWidthAngle);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLine = class {\r\n  constructor(expressID, type, Pnt, Dir) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Pnt = Pnt;\r\n    this.Dir = Dir;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Pnt = tape[ptr++];\r\n    let Dir = tape[ptr++];\r\n    return new IfcLine(expressID, type, Pnt, Dir);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Pnt);\r\n    ;\r\n    args.push(this.Dir);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLineSegment2D = class {\r\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.StartPoint = StartPoint;\r\n    this.StartDirection = StartDirection;\r\n    this.SegmentLength = SegmentLength;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let StartPoint = tape[ptr++];\r\n    let StartDirection = tape[ptr++];\r\n    let SegmentLength = tape[ptr++];\r\n    return new IfcLineSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.StartPoint);\r\n    ;\r\n    args.push(this.StartDirection);\r\n    ;\r\n    args.push(this.SegmentLength);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLinearPlacement = class {\r\n  constructor(expressID, type, PlacementRelTo, PlacementMeasuredAlong, Distance, Orientation, CartesianPosition) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.PlacementRelTo = PlacementRelTo;\r\n    this.PlacementMeasuredAlong = PlacementMeasuredAlong;\r\n    this.Distance = Distance;\r\n    this.Orientation = Orientation;\r\n    this.CartesianPosition = CartesianPosition;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let PlacementRelTo = tape[ptr++];\r\n    let PlacementMeasuredAlong = tape[ptr++];\r\n    let Distance = tape[ptr++];\r\n    let Orientation = tape[ptr++];\r\n    let CartesianPosition = tape[ptr++];\r\n    return new IfcLinearPlacement(expressID, type, PlacementRelTo, PlacementMeasuredAlong, Distance, Orientation, CartesianPosition);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.PlacementRelTo);\r\n    ;\r\n    args.push(this.PlacementMeasuredAlong);\r\n    ;\r\n    args.push(this.Distance);\r\n    ;\r\n    args.push(this.Orientation);\r\n    ;\r\n    args.push(this.CartesianPosition);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLinearPositioningElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Axis = Axis;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Axis = tape[ptr++];\r\n    return new IfcLinearPositioningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Axis);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Axis);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLocalPlacement = class {\r\n  constructor(expressID, type, PlacementRelTo, RelativePlacement) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.PlacementRelTo = PlacementRelTo;\r\n    this.RelativePlacement = RelativePlacement;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let PlacementRelTo = tape[ptr++];\r\n    let RelativePlacement = tape[ptr++];\r\n    return new IfcLocalPlacement(expressID, type, PlacementRelTo, RelativePlacement);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.PlacementRelTo);\r\n    ;\r\n    args.push(this.RelativePlacement);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcLoop = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcLoop(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcManifoldSolidBrep = class {\r\n  constructor(expressID, type, Outer) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Outer = Outer;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Outer = tape[ptr++];\r\n    return new IfcManifoldSolidBrep(expressID, type, Outer);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Outer);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMapConversion = class {\r\n  constructor(expressID, type, SourceCRS, TargetCRS, Eastings, Northings, OrthogonalHeight, XAxisAbscissa, XAxisOrdinate, Scale) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SourceCRS = SourceCRS;\r\n    this.TargetCRS = TargetCRS;\r\n    this.Eastings = Eastings;\r\n    this.Northings = Northings;\r\n    this.OrthogonalHeight = OrthogonalHeight;\r\n    this.XAxisAbscissa = XAxisAbscissa;\r\n    this.XAxisOrdinate = XAxisOrdinate;\r\n    this.Scale = Scale;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SourceCRS = tape[ptr++];\r\n    let TargetCRS = tape[ptr++];\r\n    let Eastings = tape[ptr++];\r\n    let Northings = tape[ptr++];\r\n    let OrthogonalHeight = tape[ptr++];\r\n    let XAxisAbscissa = tape[ptr++];\r\n    let XAxisOrdinate = tape[ptr++];\r\n    let Scale = tape[ptr++];\r\n    return new IfcMapConversion(expressID, type, SourceCRS, TargetCRS, Eastings, Northings, OrthogonalHeight, XAxisAbscissa, XAxisOrdinate, Scale);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SourceCRS);\r\n    ;\r\n    args.push(this.TargetCRS);\r\n    ;\r\n    args.push(this.Eastings);\r\n    ;\r\n    args.push(this.Northings);\r\n    ;\r\n    args.push(this.OrthogonalHeight);\r\n    ;\r\n    args.push(this.XAxisAbscissa);\r\n    ;\r\n    args.push(this.XAxisOrdinate);\r\n    ;\r\n    args.push(this.Scale);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMappedItem = class {\r\n  constructor(expressID, type, MappingSource, MappingTarget) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.MappingSource = MappingSource;\r\n    this.MappingTarget = MappingTarget;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let MappingSource = tape[ptr++];\r\n    let MappingTarget = tape[ptr++];\r\n    return new IfcMappedItem(expressID, type, MappingSource, MappingTarget);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.MappingSource);\r\n    ;\r\n    args.push(this.MappingTarget);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMaterial = class {\r\n  constructor(expressID, type, Name, Description, Category) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Category = Category;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Category = tape[ptr++];\r\n    return new IfcMaterial(expressID, type, Name, Description, Category);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Category);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMaterialClassificationRelationship = class {\r\n  constructor(expressID, type, MaterialClassifications, ClassifiedMaterial) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.MaterialClassifications = MaterialClassifications;\r\n    this.ClassifiedMaterial = ClassifiedMaterial;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let MaterialClassifications = tape[ptr++];\r\n    let ClassifiedMaterial = tape[ptr++];\r\n    return new IfcMaterialClassificationRelationship(expressID, type, MaterialClassifications, ClassifiedMaterial);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.MaterialClassifications);\r\n    ;\r\n    args.push(this.ClassifiedMaterial);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMaterialConstituent = class {\r\n  constructor(expressID, type, Name, Description, Material, Fraction, Category) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Material = Material;\r\n    this.Fraction = Fraction;\r\n    this.Category = Category;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Material = tape[ptr++];\r\n    let Fraction = tape[ptr++];\r\n    let Category = tape[ptr++];\r\n    return new IfcMaterialConstituent(expressID, type, Name, Description, Material, Fraction, Category);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Material);\r\n    ;\r\n    args.push(this.Fraction);\r\n    ;\r\n    args.push(this.Category);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMaterialConstituentSet = class {\r\n  constructor(expressID, type, Name, Description, MaterialConstituents) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.MaterialConstituents = MaterialConstituents;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let MaterialConstituents = tape[ptr++];\r\n    return new IfcMaterialConstituentSet(expressID, type, Name, Description, MaterialConstituents);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.MaterialConstituents);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMaterialDefinition = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcMaterialDefinition(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcMaterialDefinitionRepresentation = class {\r\n  constructor(expressID, type, Name, Description, Representations, RepresentedMaterial) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Representations = Representations;\r\n    this.RepresentedMaterial = RepresentedMaterial;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Representations = tape[ptr++];\r\n    let RepresentedMaterial = tape[ptr++];\r\n    return new IfcMaterialDefinitionRepresentation(expressID, type, Name, Description, Representations, RepresentedMaterial);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Representations);\r\n    ;\r\n    args.push(this.RepresentedMaterial);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMaterialLayer = class {\r\n  constructor(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Material = Material;\r\n    this.LayerThickness = LayerThickness;\r\n    this.IsVentilated = IsVentilated;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Category = Category;\r\n    this.Priority = Priority;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Material = tape[ptr++];\r\n    let LayerThickness = tape[ptr++];\r\n    let IsVentilated = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Category = tape[ptr++];\r\n    let Priority = tape[ptr++];\r\n    return new IfcMaterialLayer(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Material);\r\n    ;\r\n    args.push(this.LayerThickness);\r\n    ;\r\n    args.push(this.IsVentilated);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Category);\r\n    ;\r\n    args.push(this.Priority);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMaterialLayerSet = class {\r\n  constructor(expressID, type, MaterialLayers, LayerSetName, Description) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.MaterialLayers = MaterialLayers;\r\n    this.LayerSetName = LayerSetName;\r\n    this.Description = Description;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let MaterialLayers = tape[ptr++];\r\n    let LayerSetName = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    return new IfcMaterialLayerSet(expressID, type, MaterialLayers, LayerSetName, Description);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.MaterialLayers);\r\n    ;\r\n    args.push(this.LayerSetName);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMaterialLayerSetUsage = class {\r\n  constructor(expressID, type, ForLayerSet, LayerSetDirection, DirectionSense, OffsetFromReferenceLine, ReferenceExtent) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ForLayerSet = ForLayerSet;\r\n    this.LayerSetDirection = LayerSetDirection;\r\n    this.DirectionSense = DirectionSense;\r\n    this.OffsetFromReferenceLine = OffsetFromReferenceLine;\r\n    this.ReferenceExtent = ReferenceExtent;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ForLayerSet = tape[ptr++];\r\n    let LayerSetDirection = tape[ptr++];\r\n    let DirectionSense = tape[ptr++];\r\n    let OffsetFromReferenceLine = tape[ptr++];\r\n    let ReferenceExtent = tape[ptr++];\r\n    return new IfcMaterialLayerSetUsage(expressID, type, ForLayerSet, LayerSetDirection, DirectionSense, OffsetFromReferenceLine, ReferenceExtent);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ForLayerSet);\r\n    ;\r\n    args.push(this.LayerSetDirection);\r\n    ;\r\n    args.push(this.DirectionSense);\r\n    ;\r\n    args.push(this.OffsetFromReferenceLine);\r\n    ;\r\n    args.push(this.ReferenceExtent);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMaterialLayerWithOffsets = class {\r\n  constructor(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority, OffsetDirection, OffsetValues) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Material = Material;\r\n    this.LayerThickness = LayerThickness;\r\n    this.IsVentilated = IsVentilated;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Category = Category;\r\n    this.Priority = Priority;\r\n    this.OffsetDirection = OffsetDirection;\r\n    this.OffsetValues = OffsetValues;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Material = tape[ptr++];\r\n    let LayerThickness = tape[ptr++];\r\n    let IsVentilated = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Category = tape[ptr++];\r\n    let Priority = tape[ptr++];\r\n    let OffsetDirection = tape[ptr++];\r\n    let OffsetValues = tape[ptr++];\r\n    return new IfcMaterialLayerWithOffsets(expressID, type, Material, LayerThickness, IsVentilated, Name, Description, Category, Priority, OffsetDirection, OffsetValues);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Material);\r\n    ;\r\n    args.push(this.LayerThickness);\r\n    ;\r\n    args.push(this.IsVentilated);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Category);\r\n    ;\r\n    args.push(this.Priority);\r\n    ;\r\n    args.push(this.OffsetDirection);\r\n    ;\r\n    args.push(this.OffsetValues);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMaterialList = class {\r\n  constructor(expressID, type, Materials) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Materials = Materials;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Materials = tape[ptr++];\r\n    return new IfcMaterialList(expressID, type, Materials);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Materials);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMaterialProfile = class {\r\n  constructor(expressID, type, Name, Description, Material, Profile, Priority, Category) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Material = Material;\r\n    this.Profile = Profile;\r\n    this.Priority = Priority;\r\n    this.Category = Category;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Material = tape[ptr++];\r\n    let Profile = tape[ptr++];\r\n    let Priority = tape[ptr++];\r\n    let Category = tape[ptr++];\r\n    return new IfcMaterialProfile(expressID, type, Name, Description, Material, Profile, Priority, Category);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Material);\r\n    ;\r\n    args.push(this.Profile);\r\n    ;\r\n    args.push(this.Priority);\r\n    ;\r\n    args.push(this.Category);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMaterialProfileSet = class {\r\n  constructor(expressID, type, Name, Description, MaterialProfiles, CompositeProfile) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.MaterialProfiles = MaterialProfiles;\r\n    this.CompositeProfile = CompositeProfile;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let MaterialProfiles = tape[ptr++];\r\n    let CompositeProfile = tape[ptr++];\r\n    return new IfcMaterialProfileSet(expressID, type, Name, Description, MaterialProfiles, CompositeProfile);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.MaterialProfiles);\r\n    ;\r\n    args.push(this.CompositeProfile);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMaterialProfileSetUsage = class {\r\n  constructor(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ForProfileSet = ForProfileSet;\r\n    this.CardinalPoint = CardinalPoint;\r\n    this.ReferenceExtent = ReferenceExtent;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ForProfileSet = tape[ptr++];\r\n    let CardinalPoint = tape[ptr++];\r\n    let ReferenceExtent = tape[ptr++];\r\n    return new IfcMaterialProfileSetUsage(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ForProfileSet);\r\n    ;\r\n    args.push(this.CardinalPoint);\r\n    ;\r\n    args.push(this.ReferenceExtent);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMaterialProfileSetUsageTapering = class {\r\n  constructor(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent, ForProfileEndSet, CardinalEndPoint) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ForProfileSet = ForProfileSet;\r\n    this.CardinalPoint = CardinalPoint;\r\n    this.ReferenceExtent = ReferenceExtent;\r\n    this.ForProfileEndSet = ForProfileEndSet;\r\n    this.CardinalEndPoint = CardinalEndPoint;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ForProfileSet = tape[ptr++];\r\n    let CardinalPoint = tape[ptr++];\r\n    let ReferenceExtent = tape[ptr++];\r\n    let ForProfileEndSet = tape[ptr++];\r\n    let CardinalEndPoint = tape[ptr++];\r\n    return new IfcMaterialProfileSetUsageTapering(expressID, type, ForProfileSet, CardinalPoint, ReferenceExtent, ForProfileEndSet, CardinalEndPoint);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ForProfileSet);\r\n    ;\r\n    args.push(this.CardinalPoint);\r\n    ;\r\n    args.push(this.ReferenceExtent);\r\n    ;\r\n    args.push(this.ForProfileEndSet);\r\n    ;\r\n    args.push(this.CardinalEndPoint);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMaterialProfileWithOffsets = class {\r\n  constructor(expressID, type, Name, Description, Material, Profile, Priority, Category, OffsetValues) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Material = Material;\r\n    this.Profile = Profile;\r\n    this.Priority = Priority;\r\n    this.Category = Category;\r\n    this.OffsetValues = OffsetValues;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Material = tape[ptr++];\r\n    let Profile = tape[ptr++];\r\n    let Priority = tape[ptr++];\r\n    let Category = tape[ptr++];\r\n    let OffsetValues = tape[ptr++];\r\n    return new IfcMaterialProfileWithOffsets(expressID, type, Name, Description, Material, Profile, Priority, Category, OffsetValues);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Material);\r\n    ;\r\n    args.push(this.Profile);\r\n    ;\r\n    args.push(this.Priority);\r\n    ;\r\n    args.push(this.Category);\r\n    ;\r\n    args.push(this.OffsetValues);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMaterialProperties = class {\r\n  constructor(expressID, type, Name, Description, Properties, Material) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Properties = Properties;\r\n    this.Material = Material;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Properties = tape[ptr++];\r\n    let Material = tape[ptr++];\r\n    return new IfcMaterialProperties(expressID, type, Name, Description, Properties, Material);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Properties);\r\n    ;\r\n    args.push(this.Material);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMaterialRelationship = class {\r\n  constructor(expressID, type, Name, Description, RelatingMaterial, RelatedMaterials, Expression) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingMaterial = RelatingMaterial;\r\n    this.RelatedMaterials = RelatedMaterials;\r\n    this.Expression = Expression;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingMaterial = tape[ptr++];\r\n    let RelatedMaterials = tape[ptr++];\r\n    let Expression = tape[ptr++];\r\n    return new IfcMaterialRelationship(expressID, type, Name, Description, RelatingMaterial, RelatedMaterials, Expression);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingMaterial);\r\n    ;\r\n    args.push(this.RelatedMaterials);\r\n    ;\r\n    args.push(this.Expression);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMaterialUsageDefinition = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcMaterialUsageDefinition(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcMeasureWithUnit = class {\r\n  constructor(expressID, type, ValueComponent, UnitComponent) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ValueComponent = ValueComponent;\r\n    this.UnitComponent = UnitComponent;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ValueComponent = tape[ptr++];\r\n    let UnitComponent = tape[ptr++];\r\n    return new IfcMeasureWithUnit(expressID, type, ValueComponent, UnitComponent);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ValueComponent);\r\n    ;\r\n    args.push(this.UnitComponent);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMechanicalFastener = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NominalDiameter, NominalLength, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.NominalDiameter = NominalDiameter;\r\n    this.NominalLength = NominalLength;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let NominalDiameter = tape[ptr++];\r\n    let NominalLength = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcMechanicalFastener(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NominalDiameter, NominalLength, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.NominalDiameter);\r\n    ;\r\n    args.push(this.NominalLength);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMechanicalFastenerType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, NominalLength) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n    this.NominalDiameter = NominalDiameter;\r\n    this.NominalLength = NominalLength;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let NominalDiameter = tape[ptr++];\r\n    let NominalLength = tape[ptr++];\r\n    return new IfcMechanicalFastenerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, NominalLength);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.NominalDiameter);\r\n    ;\r\n    args.push(this.NominalLength);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMedicalDevice = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcMedicalDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMedicalDeviceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcMedicalDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMember = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMemberStandardCase = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcMemberStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMemberType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcMemberType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMetric = class {\r\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, Benchmark, ValueSource, DataValue, ReferencePath) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ConstraintGrade = ConstraintGrade;\r\n    this.ConstraintSource = ConstraintSource;\r\n    this.CreatingActor = CreatingActor;\r\n    this.CreationTime = CreationTime;\r\n    this.UserDefinedGrade = UserDefinedGrade;\r\n    this.Benchmark = Benchmark;\r\n    this.ValueSource = ValueSource;\r\n    this.DataValue = DataValue;\r\n    this.ReferencePath = ReferencePath;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ConstraintGrade = tape[ptr++];\r\n    let ConstraintSource = tape[ptr++];\r\n    let CreatingActor = tape[ptr++];\r\n    let CreationTime = tape[ptr++];\r\n    let UserDefinedGrade = tape[ptr++];\r\n    let Benchmark = tape[ptr++];\r\n    let ValueSource = tape[ptr++];\r\n    let DataValue = tape[ptr++];\r\n    let ReferencePath = tape[ptr++];\r\n    return new IfcMetric(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, Benchmark, ValueSource, DataValue, ReferencePath);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ConstraintGrade);\r\n    ;\r\n    args.push(this.ConstraintSource);\r\n    ;\r\n    args.push(this.CreatingActor);\r\n    ;\r\n    args.push(this.CreationTime);\r\n    ;\r\n    args.push(this.UserDefinedGrade);\r\n    ;\r\n    args.push(this.Benchmark);\r\n    ;\r\n    args.push(this.ValueSource);\r\n    ;\r\n    args.push(this.DataValue);\r\n    ;\r\n    args.push(this.ReferencePath);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMirroredProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.ParentProfile = ParentProfile;\r\n    this.Operator = Operator;\r\n    this.Label = Label;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let ParentProfile = tape[ptr++];\r\n    let Operator = tape[ptr++];\r\n    let Label = tape[ptr++];\r\n    return new IfcMirroredProfileDef(expressID, type, ProfileType, ProfileName, ParentProfile, Operator, Label);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.ParentProfile);\r\n    ;\r\n    args.push(this.Operator);\r\n    ;\r\n    args.push(this.Label);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMonetaryUnit = class {\r\n  constructor(expressID, type, Currency) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Currency = Currency;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Currency = tape[ptr++];\r\n    return new IfcMonetaryUnit(expressID, type, Currency);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Currency);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMotorConnection = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcMotorConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcMotorConnectionType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcMotorConnectionType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcNamedUnit = class {\r\n  constructor(expressID, type, Dimensions, UnitType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Dimensions = Dimensions;\r\n    this.UnitType = UnitType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Dimensions = tape[ptr++];\r\n    let UnitType = tape[ptr++];\r\n    return new IfcNamedUnit(expressID, type, Dimensions, UnitType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Dimensions);\r\n    ;\r\n    args.push(this.UnitType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcObject = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    return new IfcObject(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcObjectDefinition = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    return new IfcObjectDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcObjectPlacement = class {\r\n  constructor(expressID, type, PlacementRelTo) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.PlacementRelTo = PlacementRelTo;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let PlacementRelTo = tape[ptr++];\r\n    return new IfcObjectPlacement(expressID, type, PlacementRelTo);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.PlacementRelTo);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcObjective = class {\r\n  constructor(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, BenchmarkValues, LogicalAggregator, ObjectiveQualifier, UserDefinedQualifier) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ConstraintGrade = ConstraintGrade;\r\n    this.ConstraintSource = ConstraintSource;\r\n    this.CreatingActor = CreatingActor;\r\n    this.CreationTime = CreationTime;\r\n    this.UserDefinedGrade = UserDefinedGrade;\r\n    this.BenchmarkValues = BenchmarkValues;\r\n    this.LogicalAggregator = LogicalAggregator;\r\n    this.ObjectiveQualifier = ObjectiveQualifier;\r\n    this.UserDefinedQualifier = UserDefinedQualifier;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ConstraintGrade = tape[ptr++];\r\n    let ConstraintSource = tape[ptr++];\r\n    let CreatingActor = tape[ptr++];\r\n    let CreationTime = tape[ptr++];\r\n    let UserDefinedGrade = tape[ptr++];\r\n    let BenchmarkValues = tape[ptr++];\r\n    let LogicalAggregator = tape[ptr++];\r\n    let ObjectiveQualifier = tape[ptr++];\r\n    let UserDefinedQualifier = tape[ptr++];\r\n    return new IfcObjective(expressID, type, Name, Description, ConstraintGrade, ConstraintSource, CreatingActor, CreationTime, UserDefinedGrade, BenchmarkValues, LogicalAggregator, ObjectiveQualifier, UserDefinedQualifier);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ConstraintGrade);\r\n    ;\r\n    args.push(this.ConstraintSource);\r\n    ;\r\n    args.push(this.CreatingActor);\r\n    ;\r\n    args.push(this.CreationTime);\r\n    ;\r\n    args.push(this.UserDefinedGrade);\r\n    ;\r\n    args.push(this.BenchmarkValues);\r\n    ;\r\n    args.push(this.LogicalAggregator);\r\n    ;\r\n    args.push(this.ObjectiveQualifier);\r\n    ;\r\n    args.push(this.UserDefinedQualifier);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcOccupant = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.TheActor = TheActor;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let TheActor = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcOccupant(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheActor, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.TheActor);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcOffsetCurve = class {\r\n  constructor(expressID, type, BasisCurve) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.BasisCurve = BasisCurve;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let BasisCurve = tape[ptr++];\r\n    return new IfcOffsetCurve(expressID, type, BasisCurve);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.BasisCurve);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcOffsetCurve2D = class {\r\n  constructor(expressID, type, BasisCurve, Distance, SelfIntersect) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.BasisCurve = BasisCurve;\r\n    this.Distance = Distance;\r\n    this.SelfIntersect = SelfIntersect;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let BasisCurve = tape[ptr++];\r\n    let Distance = tape[ptr++];\r\n    let SelfIntersect = tape[ptr++];\r\n    return new IfcOffsetCurve2D(expressID, type, BasisCurve, Distance, SelfIntersect);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.BasisCurve);\r\n    ;\r\n    args.push(this.Distance);\r\n    ;\r\n    args.push(this.SelfIntersect);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcOffsetCurve3D = class {\r\n  constructor(expressID, type, BasisCurve, Distance, SelfIntersect, RefDirection) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.BasisCurve = BasisCurve;\r\n    this.Distance = Distance;\r\n    this.SelfIntersect = SelfIntersect;\r\n    this.RefDirection = RefDirection;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let BasisCurve = tape[ptr++];\r\n    let Distance = tape[ptr++];\r\n    let SelfIntersect = tape[ptr++];\r\n    let RefDirection = tape[ptr++];\r\n    return new IfcOffsetCurve3D(expressID, type, BasisCurve, Distance, SelfIntersect, RefDirection);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.BasisCurve);\r\n    ;\r\n    args.push(this.Distance);\r\n    ;\r\n    args.push(this.SelfIntersect);\r\n    ;\r\n    args.push(this.RefDirection);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcOffsetCurveByDistances = class {\r\n  constructor(expressID, type, BasisCurve, OffsetValues, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.BasisCurve = BasisCurve;\r\n    this.OffsetValues = OffsetValues;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let BasisCurve = tape[ptr++];\r\n    let OffsetValues = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcOffsetCurveByDistances(expressID, type, BasisCurve, OffsetValues, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.BasisCurve);\r\n    ;\r\n    args.push(this.OffsetValues);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcOpenShell = class {\r\n  constructor(expressID, type, CfsFaces) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.CfsFaces = CfsFaces;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let CfsFaces = tape[ptr++];\r\n    return new IfcOpenShell(expressID, type, CfsFaces);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.CfsFaces);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcOpeningElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcOpeningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcOpeningStandardCase = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcOpeningStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcOrganization = class {\r\n  constructor(expressID, type, Identification, Name, Description, Roles, Addresses) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Identification = Identification;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Roles = Roles;\r\n    this.Addresses = Addresses;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Identification = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Roles = tape[ptr++];\r\n    let Addresses = tape[ptr++];\r\n    return new IfcOrganization(expressID, type, Identification, Name, Description, Roles, Addresses);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Roles);\r\n    ;\r\n    args.push(this.Addresses);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcOrganizationRelationship = class {\r\n  constructor(expressID, type, Name, Description, RelatingOrganization, RelatedOrganizations) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingOrganization = RelatingOrganization;\r\n    this.RelatedOrganizations = RelatedOrganizations;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingOrganization = tape[ptr++];\r\n    let RelatedOrganizations = tape[ptr++];\r\n    return new IfcOrganizationRelationship(expressID, type, Name, Description, RelatingOrganization, RelatedOrganizations);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingOrganization);\r\n    ;\r\n    args.push(this.RelatedOrganizations);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcOrientationExpression = class {\r\n  constructor(expressID, type, LateralAxisDirection, VerticalAxisDirection) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.LateralAxisDirection = LateralAxisDirection;\r\n    this.VerticalAxisDirection = VerticalAxisDirection;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let LateralAxisDirection = tape[ptr++];\r\n    let VerticalAxisDirection = tape[ptr++];\r\n    return new IfcOrientationExpression(expressID, type, LateralAxisDirection, VerticalAxisDirection);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.LateralAxisDirection);\r\n    ;\r\n    args.push(this.VerticalAxisDirection);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcOrientedEdge = class {\r\n  constructor(expressID, type, EdgeStart, EdgeEnd, EdgeElement, Orientation) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.EdgeStart = EdgeStart;\r\n    this.EdgeEnd = EdgeEnd;\r\n    this.EdgeElement = EdgeElement;\r\n    this.Orientation = Orientation;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let EdgeStart = tape[ptr++];\r\n    let EdgeEnd = tape[ptr++];\r\n    let EdgeElement = tape[ptr++];\r\n    let Orientation = tape[ptr++];\r\n    return new IfcOrientedEdge(expressID, type, EdgeStart, EdgeEnd, EdgeElement, Orientation);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.EdgeStart);\r\n    ;\r\n    args.push(this.EdgeEnd);\r\n    ;\r\n    args.push(this.EdgeElement);\r\n    ;\r\n    args.push(this.Orientation);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcOuterBoundaryCurve = class {\r\n  constructor(expressID, type, Segments, SelfIntersect) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Segments = Segments;\r\n    this.SelfIntersect = SelfIntersect;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Segments = tape[ptr++];\r\n    let SelfIntersect = tape[ptr++];\r\n    return new IfcOuterBoundaryCurve(expressID, type, Segments, SelfIntersect);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Segments);\r\n    ;\r\n    args.push(this.SelfIntersect);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcOutlet = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcOutlet(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcOutletType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcOutletType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcOwnerHistory = class {\r\n  constructor(expressID, type, OwningUser, OwningApplication, State, ChangeAction, LastModifiedDate, LastModifyingUser, LastModifyingApplication, CreationDate) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.OwningUser = OwningUser;\r\n    this.OwningApplication = OwningApplication;\r\n    this.State = State;\r\n    this.ChangeAction = ChangeAction;\r\n    this.LastModifiedDate = LastModifiedDate;\r\n    this.LastModifyingUser = LastModifyingUser;\r\n    this.LastModifyingApplication = LastModifyingApplication;\r\n    this.CreationDate = CreationDate;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let OwningUser = tape[ptr++];\r\n    let OwningApplication = tape[ptr++];\r\n    let State = tape[ptr++];\r\n    let ChangeAction = tape[ptr++];\r\n    let LastModifiedDate = tape[ptr++];\r\n    let LastModifyingUser = tape[ptr++];\r\n    let LastModifyingApplication = tape[ptr++];\r\n    let CreationDate = tape[ptr++];\r\n    return new IfcOwnerHistory(expressID, type, OwningUser, OwningApplication, State, ChangeAction, LastModifiedDate, LastModifyingUser, LastModifyingApplication, CreationDate);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.OwningUser);\r\n    ;\r\n    args.push(this.OwningApplication);\r\n    ;\r\n    args.push(this.State);\r\n    ;\r\n    args.push(this.ChangeAction);\r\n    ;\r\n    args.push(this.LastModifiedDate);\r\n    ;\r\n    args.push(this.LastModifyingUser);\r\n    ;\r\n    args.push(this.LastModifyingApplication);\r\n    ;\r\n    args.push(this.CreationDate);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcParameterizedProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, Position) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.Position = Position;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    return new IfcParameterizedProfileDef(expressID, type, ProfileType, ProfileName, Position);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPath = class {\r\n  constructor(expressID, type, EdgeList) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.EdgeList = EdgeList;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let EdgeList = tape[ptr++];\r\n    return new IfcPath(expressID, type, EdgeList);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.EdgeList);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPcurve = class {\r\n  constructor(expressID, type, BasisSurface, ReferenceCurve) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.BasisSurface = BasisSurface;\r\n    this.ReferenceCurve = ReferenceCurve;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let BasisSurface = tape[ptr++];\r\n    let ReferenceCurve = tape[ptr++];\r\n    return new IfcPcurve(expressID, type, BasisSurface, ReferenceCurve);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.BasisSurface);\r\n    ;\r\n    args.push(this.ReferenceCurve);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPerformanceHistory = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LifeCyclePhase, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.LifeCyclePhase = LifeCyclePhase;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LifeCyclePhase = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcPerformanceHistory(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LifeCyclePhase, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LifeCyclePhase);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPermeableCoveringProperties = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.OperationType = OperationType;\r\n    this.PanelPosition = PanelPosition;\r\n    this.FrameDepth = FrameDepth;\r\n    this.FrameThickness = FrameThickness;\r\n    this.ShapeAspectStyle = ShapeAspectStyle;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let OperationType = tape[ptr++];\r\n    let PanelPosition = tape[ptr++];\r\n    let FrameDepth = tape[ptr++];\r\n    let FrameThickness = tape[ptr++];\r\n    let ShapeAspectStyle = tape[ptr++];\r\n    return new IfcPermeableCoveringProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.OperationType);\r\n    ;\r\n    args.push(this.PanelPosition);\r\n    ;\r\n    args.push(this.FrameDepth);\r\n    ;\r\n    args.push(this.FrameThickness);\r\n    ;\r\n    args.push(this.ShapeAspectStyle);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPermit = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.PredefinedType = PredefinedType;\r\n    this.Status = Status;\r\n    this.LongDescription = LongDescription;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let Status = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    return new IfcPermit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.Status);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPerson = class {\r\n  constructor(expressID, type, Identification, FamilyName, GivenName, MiddleNames, PrefixTitles, SuffixTitles, Roles, Addresses) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Identification = Identification;\r\n    this.FamilyName = FamilyName;\r\n    this.GivenName = GivenName;\r\n    this.MiddleNames = MiddleNames;\r\n    this.PrefixTitles = PrefixTitles;\r\n    this.SuffixTitles = SuffixTitles;\r\n    this.Roles = Roles;\r\n    this.Addresses = Addresses;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Identification = tape[ptr++];\r\n    let FamilyName = tape[ptr++];\r\n    let GivenName = tape[ptr++];\r\n    let MiddleNames = tape[ptr++];\r\n    let PrefixTitles = tape[ptr++];\r\n    let SuffixTitles = tape[ptr++];\r\n    let Roles = tape[ptr++];\r\n    let Addresses = tape[ptr++];\r\n    return new IfcPerson(expressID, type, Identification, FamilyName, GivenName, MiddleNames, PrefixTitles, SuffixTitles, Roles, Addresses);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.FamilyName);\r\n    ;\r\n    args.push(this.GivenName);\r\n    ;\r\n    args.push(this.MiddleNames);\r\n    ;\r\n    args.push(this.PrefixTitles);\r\n    ;\r\n    args.push(this.SuffixTitles);\r\n    ;\r\n    args.push(this.Roles);\r\n    ;\r\n    args.push(this.Addresses);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPersonAndOrganization = class {\r\n  constructor(expressID, type, ThePerson, TheOrganization, Roles) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ThePerson = ThePerson;\r\n    this.TheOrganization = TheOrganization;\r\n    this.Roles = Roles;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ThePerson = tape[ptr++];\r\n    let TheOrganization = tape[ptr++];\r\n    let Roles = tape[ptr++];\r\n    return new IfcPersonAndOrganization(expressID, type, ThePerson, TheOrganization, Roles);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ThePerson);\r\n    ;\r\n    args.push(this.TheOrganization);\r\n    ;\r\n    args.push(this.Roles);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPhysicalComplexQuantity = class {\r\n  constructor(expressID, type, Name, Description, HasQuantities, Discrimination, Quality, Usage) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.HasQuantities = HasQuantities;\r\n    this.Discrimination = Discrimination;\r\n    this.Quality = Quality;\r\n    this.Usage = Usage;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let HasQuantities = tape[ptr++];\r\n    let Discrimination = tape[ptr++];\r\n    let Quality = tape[ptr++];\r\n    let Usage = tape[ptr++];\r\n    return new IfcPhysicalComplexQuantity(expressID, type, Name, Description, HasQuantities, Discrimination, Quality, Usage);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.HasQuantities);\r\n    ;\r\n    args.push(this.Discrimination);\r\n    ;\r\n    args.push(this.Quality);\r\n    ;\r\n    args.push(this.Usage);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPhysicalQuantity = class {\r\n  constructor(expressID, type, Name, Description) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    return new IfcPhysicalQuantity(expressID, type, Name, Description);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPhysicalSimpleQuantity = class {\r\n  constructor(expressID, type, Name, Description, Unit) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Unit = Unit;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Unit = tape[ptr++];\r\n    return new IfcPhysicalSimpleQuantity(expressID, type, Name, Description, Unit);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Unit);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPile = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType, ConstructionType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n    this.ConstructionType = ConstructionType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let ConstructionType = tape[ptr++];\r\n    return new IfcPile(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType, ConstructionType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.ConstructionType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPileType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcPileType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPipeFitting = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcPipeFitting(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPipeFittingType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcPipeFittingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPipeSegment = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcPipeSegment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPipeSegmentType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcPipeSegmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPixelTexture = class {\r\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, Width, Height, ColourComponents, Pixel) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.RepeatS = RepeatS;\r\n    this.RepeatT = RepeatT;\r\n    this.Mode = Mode;\r\n    this.TextureTransform = TextureTransform;\r\n    this.Parameter = Parameter;\r\n    this.Width = Width;\r\n    this.Height = Height;\r\n    this.ColourComponents = ColourComponents;\r\n    this.Pixel = Pixel;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let RepeatS = tape[ptr++];\r\n    let RepeatT = tape[ptr++];\r\n    let Mode = tape[ptr++];\r\n    let TextureTransform = tape[ptr++];\r\n    let Parameter = tape[ptr++];\r\n    let Width = tape[ptr++];\r\n    let Height = tape[ptr++];\r\n    let ColourComponents = tape[ptr++];\r\n    let Pixel = tape[ptr++];\r\n    return new IfcPixelTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter, Width, Height, ColourComponents, Pixel);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.RepeatS);\r\n    ;\r\n    args.push(this.RepeatT);\r\n    ;\r\n    args.push(this.Mode);\r\n    ;\r\n    args.push(this.TextureTransform);\r\n    ;\r\n    args.push(this.Parameter);\r\n    ;\r\n    args.push(this.Width);\r\n    ;\r\n    args.push(this.Height);\r\n    ;\r\n    args.push(this.ColourComponents);\r\n    ;\r\n    args.push(this.Pixel);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPlacement = class {\r\n  constructor(expressID, type, Location) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Location = Location;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Location = tape[ptr++];\r\n    return new IfcPlacement(expressID, type, Location);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Location);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPlanarBox = class {\r\n  constructor(expressID, type, SizeInX, SizeInY, Placement) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SizeInX = SizeInX;\r\n    this.SizeInY = SizeInY;\r\n    this.Placement = Placement;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SizeInX = tape[ptr++];\r\n    let SizeInY = tape[ptr++];\r\n    let Placement = tape[ptr++];\r\n    return new IfcPlanarBox(expressID, type, SizeInX, SizeInY, Placement);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SizeInX);\r\n    ;\r\n    args.push(this.SizeInY);\r\n    ;\r\n    args.push(this.Placement);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPlanarExtent = class {\r\n  constructor(expressID, type, SizeInX, SizeInY) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SizeInX = SizeInX;\r\n    this.SizeInY = SizeInY;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SizeInX = tape[ptr++];\r\n    let SizeInY = tape[ptr++];\r\n    return new IfcPlanarExtent(expressID, type, SizeInX, SizeInY);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SizeInX);\r\n    ;\r\n    args.push(this.SizeInY);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPlane = class {\r\n  constructor(expressID, type, Position) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Position = Position;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Position = tape[ptr++];\r\n    return new IfcPlane(expressID, type, Position);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Position);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPlate = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcPlate(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPlateStandardCase = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcPlateStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPlateType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcPlateType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPoint = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcPoint(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcPointOnCurve = class {\r\n  constructor(expressID, type, BasisCurve, PointParameter) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.BasisCurve = BasisCurve;\r\n    this.PointParameter = PointParameter;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let BasisCurve = tape[ptr++];\r\n    let PointParameter = tape[ptr++];\r\n    return new IfcPointOnCurve(expressID, type, BasisCurve, PointParameter);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.BasisCurve);\r\n    ;\r\n    args.push(this.PointParameter);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPointOnSurface = class {\r\n  constructor(expressID, type, BasisSurface, PointParameterU, PointParameterV) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.BasisSurface = BasisSurface;\r\n    this.PointParameterU = PointParameterU;\r\n    this.PointParameterV = PointParameterV;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let BasisSurface = tape[ptr++];\r\n    let PointParameterU = tape[ptr++];\r\n    let PointParameterV = tape[ptr++];\r\n    return new IfcPointOnSurface(expressID, type, BasisSurface, PointParameterU, PointParameterV);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.BasisSurface);\r\n    ;\r\n    args.push(this.PointParameterU);\r\n    ;\r\n    args.push(this.PointParameterV);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPolyLoop = class {\r\n  constructor(expressID, type, Polygon) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Polygon = Polygon;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Polygon = tape[ptr++];\r\n    return new IfcPolyLoop(expressID, type, Polygon);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Polygon);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPolygonalBoundedHalfSpace = class {\r\n  constructor(expressID, type, BaseSurface, AgreementFlag, Position, PolygonalBoundary) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.BaseSurface = BaseSurface;\r\n    this.AgreementFlag = AgreementFlag;\r\n    this.Position = Position;\r\n    this.PolygonalBoundary = PolygonalBoundary;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let BaseSurface = tape[ptr++];\r\n    let AgreementFlag = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let PolygonalBoundary = tape[ptr++];\r\n    return new IfcPolygonalBoundedHalfSpace(expressID, type, BaseSurface, AgreementFlag, Position, PolygonalBoundary);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.BaseSurface);\r\n    ;\r\n    args.push(this.AgreementFlag);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.PolygonalBoundary);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPolygonalFaceSet = class {\r\n  constructor(expressID, type, Coordinates, Closed, Faces, PnIndex) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Coordinates = Coordinates;\r\n    this.Closed = Closed;\r\n    this.Faces = Faces;\r\n    this.PnIndex = PnIndex;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Coordinates = tape[ptr++];\r\n    let Closed = tape[ptr++];\r\n    let Faces = tape[ptr++];\r\n    let PnIndex = tape[ptr++];\r\n    return new IfcPolygonalFaceSet(expressID, type, Coordinates, Closed, Faces, PnIndex);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Coordinates);\r\n    ;\r\n    args.push(this.Closed);\r\n    ;\r\n    args.push(this.Faces);\r\n    ;\r\n    args.push(this.PnIndex);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPolyline = class {\r\n  constructor(expressID, type, Points) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Points = Points;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Points = tape[ptr++];\r\n    return new IfcPolyline(expressID, type, Points);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Points);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPort = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    return new IfcPort(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPositioningElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    return new IfcPositioningElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPostalAddress = class {\r\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose, InternalLocation, AddressLines, PostalBox, Town, Region, PostalCode, Country) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Purpose = Purpose;\r\n    this.Description = Description;\r\n    this.UserDefinedPurpose = UserDefinedPurpose;\r\n    this.InternalLocation = InternalLocation;\r\n    this.AddressLines = AddressLines;\r\n    this.PostalBox = PostalBox;\r\n    this.Town = Town;\r\n    this.Region = Region;\r\n    this.PostalCode = PostalCode;\r\n    this.Country = Country;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Purpose = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let UserDefinedPurpose = tape[ptr++];\r\n    let InternalLocation = tape[ptr++];\r\n    let AddressLines = tape[ptr++];\r\n    let PostalBox = tape[ptr++];\r\n    let Town = tape[ptr++];\r\n    let Region = tape[ptr++];\r\n    let PostalCode = tape[ptr++];\r\n    let Country = tape[ptr++];\r\n    return new IfcPostalAddress(expressID, type, Purpose, Description, UserDefinedPurpose, InternalLocation, AddressLines, PostalBox, Town, Region, PostalCode, Country);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Purpose);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.UserDefinedPurpose);\r\n    ;\r\n    args.push(this.InternalLocation);\r\n    ;\r\n    args.push(this.AddressLines);\r\n    ;\r\n    args.push(this.PostalBox);\r\n    ;\r\n    args.push(this.Town);\r\n    ;\r\n    args.push(this.Region);\r\n    ;\r\n    args.push(this.PostalCode);\r\n    ;\r\n    args.push(this.Country);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPreDefinedColour = class {\r\n  constructor(expressID, type, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    return new IfcPreDefinedColour(expressID, type, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPreDefinedCurveFont = class {\r\n  constructor(expressID, type, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    return new IfcPreDefinedCurveFont(expressID, type, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPreDefinedItem = class {\r\n  constructor(expressID, type, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    return new IfcPreDefinedItem(expressID, type, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPreDefinedProperties = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcPreDefinedProperties(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcPreDefinedPropertySet = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    return new IfcPreDefinedPropertySet(expressID, type, GlobalId, OwnerHistory, Name, Description);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPreDefinedTextFont = class {\r\n  constructor(expressID, type, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    return new IfcPreDefinedTextFont(expressID, type, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPresentationItem = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcPresentationItem(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcPresentationLayerAssignment = class {\r\n  constructor(expressID, type, Name, Description, AssignedItems, Identifier) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.AssignedItems = AssignedItems;\r\n    this.Identifier = Identifier;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let AssignedItems = tape[ptr++];\r\n    let Identifier = tape[ptr++];\r\n    return new IfcPresentationLayerAssignment(expressID, type, Name, Description, AssignedItems, Identifier);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.AssignedItems);\r\n    ;\r\n    args.push(this.Identifier);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPresentationLayerWithStyle = class {\r\n  constructor(expressID, type, Name, Description, AssignedItems, Identifier, LayerOn, LayerFrozen, LayerBlocked, LayerStyles) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.AssignedItems = AssignedItems;\r\n    this.Identifier = Identifier;\r\n    this.LayerOn = LayerOn;\r\n    this.LayerFrozen = LayerFrozen;\r\n    this.LayerBlocked = LayerBlocked;\r\n    this.LayerStyles = LayerStyles;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let AssignedItems = tape[ptr++];\r\n    let Identifier = tape[ptr++];\r\n    let LayerOn = tape[ptr++];\r\n    let LayerFrozen = tape[ptr++];\r\n    let LayerBlocked = tape[ptr++];\r\n    let LayerStyles = tape[ptr++];\r\n    return new IfcPresentationLayerWithStyle(expressID, type, Name, Description, AssignedItems, Identifier, LayerOn, LayerFrozen, LayerBlocked, LayerStyles);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.AssignedItems);\r\n    ;\r\n    args.push(this.Identifier);\r\n    ;\r\n    args.push(this.LayerOn);\r\n    ;\r\n    args.push(this.LayerFrozen);\r\n    ;\r\n    args.push(this.LayerBlocked);\r\n    ;\r\n    args.push(this.LayerStyles);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPresentationStyle = class {\r\n  constructor(expressID, type, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    return new IfcPresentationStyle(expressID, type, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPresentationStyleAssignment = class {\r\n  constructor(expressID, type, Styles) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Styles = Styles;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Styles = tape[ptr++];\r\n    return new IfcPresentationStyleAssignment(expressID, type, Styles);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Styles);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcProcedure = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcProcedure(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcProcedureType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.ProcessType = ProcessType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let ProcessType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcProcedureType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.ProcessType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcProcess = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    return new IfcProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcProduct = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    return new IfcProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcProductDefinitionShape = class {\r\n  constructor(expressID, type, Name, Description, Representations) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Representations = Representations;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Representations = tape[ptr++];\r\n    return new IfcProductDefinitionShape(expressID, type, Name, Description, Representations);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Representations);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcProductRepresentation = class {\r\n  constructor(expressID, type, Name, Description, Representations) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Representations = Representations;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Representations = tape[ptr++];\r\n    return new IfcProductRepresentation(expressID, type, Name, Description, Representations);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Representations);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    return new IfcProfileDef(expressID, type, ProfileType, ProfileName);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcProfileProperties = class {\r\n  constructor(expressID, type, Name, Description, Properties, ProfileDefinition) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Properties = Properties;\r\n    this.ProfileDefinition = ProfileDefinition;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Properties = tape[ptr++];\r\n    let ProfileDefinition = tape[ptr++];\r\n    return new IfcProfileProperties(expressID, type, Name, Description, Properties, ProfileDefinition);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Properties);\r\n    ;\r\n    args.push(this.ProfileDefinition);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcProject = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.LongName = LongName;\r\n    this.Phase = Phase;\r\n    this.RepresentationContexts = RepresentationContexts;\r\n    this.UnitsInContext = UnitsInContext;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    let Phase = tape[ptr++];\r\n    let RepresentationContexts = tape[ptr++];\r\n    let UnitsInContext = tape[ptr++];\r\n    return new IfcProject(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    args.push(this.Phase);\r\n    ;\r\n    args.push(this.RepresentationContexts);\r\n    ;\r\n    args.push(this.UnitsInContext);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcProjectLibrary = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.LongName = LongName;\r\n    this.Phase = Phase;\r\n    this.RepresentationContexts = RepresentationContexts;\r\n    this.UnitsInContext = UnitsInContext;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    let Phase = tape[ptr++];\r\n    let RepresentationContexts = tape[ptr++];\r\n    let UnitsInContext = tape[ptr++];\r\n    return new IfcProjectLibrary(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName, Phase, RepresentationContexts, UnitsInContext);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    args.push(this.Phase);\r\n    ;\r\n    args.push(this.RepresentationContexts);\r\n    ;\r\n    args.push(this.UnitsInContext);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcProjectOrder = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.PredefinedType = PredefinedType;\r\n    this.Status = Status;\r\n    this.LongDescription = LongDescription;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let Status = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    return new IfcProjectOrder(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, PredefinedType, Status, LongDescription);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.Status);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcProjectedCRS = class {\r\n  constructor(expressID, type, Name, Description, GeodeticDatum, VerticalDatum, MapProjection, MapZone, MapUnit) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.GeodeticDatum = GeodeticDatum;\r\n    this.VerticalDatum = VerticalDatum;\r\n    this.MapProjection = MapProjection;\r\n    this.MapZone = MapZone;\r\n    this.MapUnit = MapUnit;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let GeodeticDatum = tape[ptr++];\r\n    let VerticalDatum = tape[ptr++];\r\n    let MapProjection = tape[ptr++];\r\n    let MapZone = tape[ptr++];\r\n    let MapUnit = tape[ptr++];\r\n    return new IfcProjectedCRS(expressID, type, Name, Description, GeodeticDatum, VerticalDatum, MapProjection, MapZone, MapUnit);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.GeodeticDatum);\r\n    ;\r\n    args.push(this.VerticalDatum);\r\n    ;\r\n    args.push(this.MapProjection);\r\n    ;\r\n    args.push(this.MapZone);\r\n    ;\r\n    args.push(this.MapUnit);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcProjectionElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcProjectionElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcProperty = class {\r\n  constructor(expressID, type, Name, Description) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    return new IfcProperty(expressID, type, Name, Description);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPropertyAbstraction = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcPropertyAbstraction(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcPropertyBoundedValue = class {\r\n  constructor(expressID, type, Name, Description, UpperBoundValue, LowerBoundValue, Unit, SetPointValue) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.UpperBoundValue = UpperBoundValue;\r\n    this.LowerBoundValue = LowerBoundValue;\r\n    this.Unit = Unit;\r\n    this.SetPointValue = SetPointValue;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let UpperBoundValue = tape[ptr++];\r\n    let LowerBoundValue = tape[ptr++];\r\n    let Unit = tape[ptr++];\r\n    let SetPointValue = tape[ptr++];\r\n    return new IfcPropertyBoundedValue(expressID, type, Name, Description, UpperBoundValue, LowerBoundValue, Unit, SetPointValue);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.UpperBoundValue);\r\n    ;\r\n    args.push(this.LowerBoundValue);\r\n    ;\r\n    args.push(this.Unit);\r\n    ;\r\n    args.push(this.SetPointValue);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPropertyDefinition = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    return new IfcPropertyDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPropertyDependencyRelationship = class {\r\n  constructor(expressID, type, Name, Description, DependingProperty, DependantProperty, Expression) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.DependingProperty = DependingProperty;\r\n    this.DependantProperty = DependantProperty;\r\n    this.Expression = Expression;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let DependingProperty = tape[ptr++];\r\n    let DependantProperty = tape[ptr++];\r\n    let Expression = tape[ptr++];\r\n    return new IfcPropertyDependencyRelationship(expressID, type, Name, Description, DependingProperty, DependantProperty, Expression);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.DependingProperty);\r\n    ;\r\n    args.push(this.DependantProperty);\r\n    ;\r\n    args.push(this.Expression);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPropertyEnumeratedValue = class {\r\n  constructor(expressID, type, Name, Description, EnumerationValues, EnumerationReference) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.EnumerationValues = EnumerationValues;\r\n    this.EnumerationReference = EnumerationReference;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let EnumerationValues = tape[ptr++];\r\n    let EnumerationReference = tape[ptr++];\r\n    return new IfcPropertyEnumeratedValue(expressID, type, Name, Description, EnumerationValues, EnumerationReference);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.EnumerationValues);\r\n    ;\r\n    args.push(this.EnumerationReference);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPropertyEnumeration = class {\r\n  constructor(expressID, type, Name, EnumerationValues, Unit) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.EnumerationValues = EnumerationValues;\r\n    this.Unit = Unit;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let EnumerationValues = tape[ptr++];\r\n    let Unit = tape[ptr++];\r\n    return new IfcPropertyEnumeration(expressID, type, Name, EnumerationValues, Unit);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.EnumerationValues);\r\n    ;\r\n    args.push(this.Unit);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPropertyListValue = class {\r\n  constructor(expressID, type, Name, Description, ListValues, Unit) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ListValues = ListValues;\r\n    this.Unit = Unit;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ListValues = tape[ptr++];\r\n    let Unit = tape[ptr++];\r\n    return new IfcPropertyListValue(expressID, type, Name, Description, ListValues, Unit);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ListValues);\r\n    ;\r\n    args.push(this.Unit);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPropertyReferenceValue = class {\r\n  constructor(expressID, type, Name, Description, UsageName, PropertyReference) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.UsageName = UsageName;\r\n    this.PropertyReference = PropertyReference;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let UsageName = tape[ptr++];\r\n    let PropertyReference = tape[ptr++];\r\n    return new IfcPropertyReferenceValue(expressID, type, Name, Description, UsageName, PropertyReference);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.UsageName);\r\n    ;\r\n    args.push(this.PropertyReference);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPropertySet = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, HasProperties) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.HasProperties = HasProperties;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let HasProperties = tape[ptr++];\r\n    return new IfcPropertySet(expressID, type, GlobalId, OwnerHistory, Name, Description, HasProperties);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.HasProperties);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPropertySetDefinition = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    return new IfcPropertySetDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPropertySetTemplate = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, ApplicableEntity, HasPropertyTemplates) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.TemplateType = TemplateType;\r\n    this.ApplicableEntity = ApplicableEntity;\r\n    this.HasPropertyTemplates = HasPropertyTemplates;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let TemplateType = tape[ptr++];\r\n    let ApplicableEntity = tape[ptr++];\r\n    let HasPropertyTemplates = tape[ptr++];\r\n    return new IfcPropertySetTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, ApplicableEntity, HasPropertyTemplates);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.TemplateType);\r\n    ;\r\n    args.push(this.ApplicableEntity);\r\n    ;\r\n    args.push(this.HasPropertyTemplates);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPropertySingleValue = class {\r\n  constructor(expressID, type, Name, Description, NominalValue, Unit) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.NominalValue = NominalValue;\r\n    this.Unit = Unit;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let NominalValue = tape[ptr++];\r\n    let Unit = tape[ptr++];\r\n    return new IfcPropertySingleValue(expressID, type, Name, Description, NominalValue, Unit);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.NominalValue);\r\n    ;\r\n    args.push(this.Unit);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPropertyTableValue = class {\r\n  constructor(expressID, type, Name, Description, DefiningValues, DefinedValues, Expression, DefiningUnit, DefinedUnit, CurveInterpolation) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.DefiningValues = DefiningValues;\r\n    this.DefinedValues = DefinedValues;\r\n    this.Expression = Expression;\r\n    this.DefiningUnit = DefiningUnit;\r\n    this.DefinedUnit = DefinedUnit;\r\n    this.CurveInterpolation = CurveInterpolation;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let DefiningValues = tape[ptr++];\r\n    let DefinedValues = tape[ptr++];\r\n    let Expression = tape[ptr++];\r\n    let DefiningUnit = tape[ptr++];\r\n    let DefinedUnit = tape[ptr++];\r\n    let CurveInterpolation = tape[ptr++];\r\n    return new IfcPropertyTableValue(expressID, type, Name, Description, DefiningValues, DefinedValues, Expression, DefiningUnit, DefinedUnit, CurveInterpolation);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.DefiningValues);\r\n    ;\r\n    args.push(this.DefinedValues);\r\n    ;\r\n    args.push(this.Expression);\r\n    ;\r\n    args.push(this.DefiningUnit);\r\n    ;\r\n    args.push(this.DefinedUnit);\r\n    ;\r\n    args.push(this.CurveInterpolation);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPropertyTemplate = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    return new IfcPropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPropertyTemplateDefinition = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    return new IfcPropertyTemplateDefinition(expressID, type, GlobalId, OwnerHistory, Name, Description);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcProtectiveDevice = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcProtectiveDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcProtectiveDeviceTrippingUnit = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcProtectiveDeviceTrippingUnit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcProtectiveDeviceTrippingUnitType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcProtectiveDeviceTrippingUnitType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcProtectiveDeviceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcProtectiveDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcProxy = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, ProxyType, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.ProxyType = ProxyType;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let ProxyType = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcProxy(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, ProxyType, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.ProxyType);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPump = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcPump(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcPumpType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcPumpType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcQuantityArea = class {\r\n  constructor(expressID, type, Name, Description, Unit, AreaValue, Formula) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Unit = Unit;\r\n    this.AreaValue = AreaValue;\r\n    this.Formula = Formula;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Unit = tape[ptr++];\r\n    let AreaValue = tape[ptr++];\r\n    let Formula = tape[ptr++];\r\n    return new IfcQuantityArea(expressID, type, Name, Description, Unit, AreaValue, Formula);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Unit);\r\n    ;\r\n    args.push(this.AreaValue);\r\n    ;\r\n    args.push(this.Formula);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcQuantityCount = class {\r\n  constructor(expressID, type, Name, Description, Unit, CountValue, Formula) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Unit = Unit;\r\n    this.CountValue = CountValue;\r\n    this.Formula = Formula;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Unit = tape[ptr++];\r\n    let CountValue = tape[ptr++];\r\n    let Formula = tape[ptr++];\r\n    return new IfcQuantityCount(expressID, type, Name, Description, Unit, CountValue, Formula);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Unit);\r\n    ;\r\n    args.push(this.CountValue);\r\n    ;\r\n    args.push(this.Formula);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcQuantityLength = class {\r\n  constructor(expressID, type, Name, Description, Unit, LengthValue, Formula) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Unit = Unit;\r\n    this.LengthValue = LengthValue;\r\n    this.Formula = Formula;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Unit = tape[ptr++];\r\n    let LengthValue = tape[ptr++];\r\n    let Formula = tape[ptr++];\r\n    return new IfcQuantityLength(expressID, type, Name, Description, Unit, LengthValue, Formula);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Unit);\r\n    ;\r\n    args.push(this.LengthValue);\r\n    ;\r\n    args.push(this.Formula);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcQuantitySet = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    return new IfcQuantitySet(expressID, type, GlobalId, OwnerHistory, Name, Description);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcQuantityTime = class {\r\n  constructor(expressID, type, Name, Description, Unit, TimeValue, Formula) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Unit = Unit;\r\n    this.TimeValue = TimeValue;\r\n    this.Formula = Formula;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Unit = tape[ptr++];\r\n    let TimeValue = tape[ptr++];\r\n    let Formula = tape[ptr++];\r\n    return new IfcQuantityTime(expressID, type, Name, Description, Unit, TimeValue, Formula);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Unit);\r\n    ;\r\n    args.push(this.TimeValue);\r\n    ;\r\n    args.push(this.Formula);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcQuantityVolume = class {\r\n  constructor(expressID, type, Name, Description, Unit, VolumeValue, Formula) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Unit = Unit;\r\n    this.VolumeValue = VolumeValue;\r\n    this.Formula = Formula;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Unit = tape[ptr++];\r\n    let VolumeValue = tape[ptr++];\r\n    let Formula = tape[ptr++];\r\n    return new IfcQuantityVolume(expressID, type, Name, Description, Unit, VolumeValue, Formula);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Unit);\r\n    ;\r\n    args.push(this.VolumeValue);\r\n    ;\r\n    args.push(this.Formula);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcQuantityWeight = class {\r\n  constructor(expressID, type, Name, Description, Unit, WeightValue, Formula) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Unit = Unit;\r\n    this.WeightValue = WeightValue;\r\n    this.Formula = Formula;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Unit = tape[ptr++];\r\n    let WeightValue = tape[ptr++];\r\n    let Formula = tape[ptr++];\r\n    return new IfcQuantityWeight(expressID, type, Name, Description, Unit, WeightValue, Formula);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Unit);\r\n    ;\r\n    args.push(this.WeightValue);\r\n    ;\r\n    args.push(this.Formula);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRailing = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcRailing(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRailingType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcRailingType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRamp = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcRamp(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRampFlight = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcRampFlight(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRampFlightType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcRampFlightType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRampType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcRampType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRationalBSplineCurveWithKnots = class {\r\n  constructor(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec, WeightsData) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Degree = Degree;\r\n    this.ControlPointsList = ControlPointsList;\r\n    this.CurveForm = CurveForm;\r\n    this.ClosedCurve = ClosedCurve;\r\n    this.SelfIntersect = SelfIntersect;\r\n    this.KnotMultiplicities = KnotMultiplicities;\r\n    this.Knots = Knots;\r\n    this.KnotSpec = KnotSpec;\r\n    this.WeightsData = WeightsData;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Degree = tape[ptr++];\r\n    let ControlPointsList = tape[ptr++];\r\n    let CurveForm = tape[ptr++];\r\n    let ClosedCurve = tape[ptr++];\r\n    let SelfIntersect = tape[ptr++];\r\n    let KnotMultiplicities = tape[ptr++];\r\n    let Knots = tape[ptr++];\r\n    let KnotSpec = tape[ptr++];\r\n    let WeightsData = tape[ptr++];\r\n    return new IfcRationalBSplineCurveWithKnots(expressID, type, Degree, ControlPointsList, CurveForm, ClosedCurve, SelfIntersect, KnotMultiplicities, Knots, KnotSpec, WeightsData);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Degree);\r\n    ;\r\n    args.push(this.ControlPointsList);\r\n    ;\r\n    args.push(this.CurveForm);\r\n    ;\r\n    args.push(this.ClosedCurve);\r\n    ;\r\n    args.push(this.SelfIntersect);\r\n    ;\r\n    args.push(this.KnotMultiplicities);\r\n    ;\r\n    args.push(this.Knots);\r\n    ;\r\n    args.push(this.KnotSpec);\r\n    ;\r\n    args.push(this.WeightsData);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRationalBSplineSurfaceWithKnots = class {\r\n  constructor(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec, WeightsData) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.UDegree = UDegree;\r\n    this.VDegree = VDegree;\r\n    this.ControlPointsList = ControlPointsList;\r\n    this.SurfaceForm = SurfaceForm;\r\n    this.UClosed = UClosed;\r\n    this.VClosed = VClosed;\r\n    this.SelfIntersect = SelfIntersect;\r\n    this.UMultiplicities = UMultiplicities;\r\n    this.VMultiplicities = VMultiplicities;\r\n    this.UKnots = UKnots;\r\n    this.VKnots = VKnots;\r\n    this.KnotSpec = KnotSpec;\r\n    this.WeightsData = WeightsData;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let UDegree = tape[ptr++];\r\n    let VDegree = tape[ptr++];\r\n    let ControlPointsList = tape[ptr++];\r\n    let SurfaceForm = tape[ptr++];\r\n    let UClosed = tape[ptr++];\r\n    let VClosed = tape[ptr++];\r\n    let SelfIntersect = tape[ptr++];\r\n    let UMultiplicities = tape[ptr++];\r\n    let VMultiplicities = tape[ptr++];\r\n    let UKnots = tape[ptr++];\r\n    let VKnots = tape[ptr++];\r\n    let KnotSpec = tape[ptr++];\r\n    let WeightsData = tape[ptr++];\r\n    return new IfcRationalBSplineSurfaceWithKnots(expressID, type, UDegree, VDegree, ControlPointsList, SurfaceForm, UClosed, VClosed, SelfIntersect, UMultiplicities, VMultiplicities, UKnots, VKnots, KnotSpec, WeightsData);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.UDegree);\r\n    ;\r\n    args.push(this.VDegree);\r\n    ;\r\n    args.push(this.ControlPointsList);\r\n    ;\r\n    args.push(this.SurfaceForm);\r\n    ;\r\n    args.push(this.UClosed);\r\n    ;\r\n    args.push(this.VClosed);\r\n    ;\r\n    args.push(this.SelfIntersect);\r\n    ;\r\n    args.push(this.UMultiplicities);\r\n    ;\r\n    args.push(this.VMultiplicities);\r\n    ;\r\n    args.push(this.UKnots);\r\n    ;\r\n    args.push(this.VKnots);\r\n    ;\r\n    args.push(this.KnotSpec);\r\n    ;\r\n    args.push(this.WeightsData);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRectangleHollowProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, WallThickness, InnerFilletRadius, OuterFilletRadius) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.Position = Position;\r\n    this.XDim = XDim;\r\n    this.YDim = YDim;\r\n    this.WallThickness = WallThickness;\r\n    this.InnerFilletRadius = InnerFilletRadius;\r\n    this.OuterFilletRadius = OuterFilletRadius;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let XDim = tape[ptr++];\r\n    let YDim = tape[ptr++];\r\n    let WallThickness = tape[ptr++];\r\n    let InnerFilletRadius = tape[ptr++];\r\n    let OuterFilletRadius = tape[ptr++];\r\n    return new IfcRectangleHollowProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, WallThickness, InnerFilletRadius, OuterFilletRadius);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.XDim);\r\n    ;\r\n    args.push(this.YDim);\r\n    ;\r\n    args.push(this.WallThickness);\r\n    ;\r\n    args.push(this.InnerFilletRadius);\r\n    ;\r\n    args.push(this.OuterFilletRadius);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRectangleProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.Position = Position;\r\n    this.XDim = XDim;\r\n    this.YDim = YDim;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let XDim = tape[ptr++];\r\n    let YDim = tape[ptr++];\r\n    return new IfcRectangleProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.XDim);\r\n    ;\r\n    args.push(this.YDim);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRectangularPyramid = class {\r\n  constructor(expressID, type, Position, XLength, YLength, Height) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Position = Position;\r\n    this.XLength = XLength;\r\n    this.YLength = YLength;\r\n    this.Height = Height;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Position = tape[ptr++];\r\n    let XLength = tape[ptr++];\r\n    let YLength = tape[ptr++];\r\n    let Height = tape[ptr++];\r\n    return new IfcRectangularPyramid(expressID, type, Position, XLength, YLength, Height);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.XLength);\r\n    ;\r\n    args.push(this.YLength);\r\n    ;\r\n    args.push(this.Height);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRectangularTrimmedSurface = class {\r\n  constructor(expressID, type, BasisSurface, U1, V1, U2, V2, Usense, Vsense) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.BasisSurface = BasisSurface;\r\n    this.U1 = U1;\r\n    this.V1 = V1;\r\n    this.U2 = U2;\r\n    this.V2 = V2;\r\n    this.Usense = Usense;\r\n    this.Vsense = Vsense;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let BasisSurface = tape[ptr++];\r\n    let U1 = tape[ptr++];\r\n    let V1 = tape[ptr++];\r\n    let U2 = tape[ptr++];\r\n    let V2 = tape[ptr++];\r\n    let Usense = tape[ptr++];\r\n    let Vsense = tape[ptr++];\r\n    return new IfcRectangularTrimmedSurface(expressID, type, BasisSurface, U1, V1, U2, V2, Usense, Vsense);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.BasisSurface);\r\n    ;\r\n    args.push(this.U1);\r\n    ;\r\n    args.push(this.V1);\r\n    ;\r\n    args.push(this.U2);\r\n    ;\r\n    args.push(this.V2);\r\n    ;\r\n    args.push(this.Usense);\r\n    ;\r\n    args.push(this.Vsense);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRecurrencePattern = class {\r\n  constructor(expressID, type, RecurrenceType, DayComponent, WeekdayComponent, MonthComponent, Position, Interval, Occurrences, TimePeriods) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.RecurrenceType = RecurrenceType;\r\n    this.DayComponent = DayComponent;\r\n    this.WeekdayComponent = WeekdayComponent;\r\n    this.MonthComponent = MonthComponent;\r\n    this.Position = Position;\r\n    this.Interval = Interval;\r\n    this.Occurrences = Occurrences;\r\n    this.TimePeriods = TimePeriods;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let RecurrenceType = tape[ptr++];\r\n    let DayComponent = tape[ptr++];\r\n    let WeekdayComponent = tape[ptr++];\r\n    let MonthComponent = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let Interval = tape[ptr++];\r\n    let Occurrences = tape[ptr++];\r\n    let TimePeriods = tape[ptr++];\r\n    return new IfcRecurrencePattern(expressID, type, RecurrenceType, DayComponent, WeekdayComponent, MonthComponent, Position, Interval, Occurrences, TimePeriods);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.RecurrenceType);\r\n    ;\r\n    args.push(this.DayComponent);\r\n    ;\r\n    args.push(this.WeekdayComponent);\r\n    ;\r\n    args.push(this.MonthComponent);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Interval);\r\n    ;\r\n    args.push(this.Occurrences);\r\n    ;\r\n    args.push(this.TimePeriods);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcReference = class {\r\n  constructor(expressID, type, TypeIdentifier, AttributeIdentifier, InstanceName, ListPositions, InnerReference) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.TypeIdentifier = TypeIdentifier;\r\n    this.AttributeIdentifier = AttributeIdentifier;\r\n    this.InstanceName = InstanceName;\r\n    this.ListPositions = ListPositions;\r\n    this.InnerReference = InnerReference;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let TypeIdentifier = tape[ptr++];\r\n    let AttributeIdentifier = tape[ptr++];\r\n    let InstanceName = tape[ptr++];\r\n    let ListPositions = tape[ptr++];\r\n    let InnerReference = tape[ptr++];\r\n    return new IfcReference(expressID, type, TypeIdentifier, AttributeIdentifier, InstanceName, ListPositions, InnerReference);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.TypeIdentifier);\r\n    ;\r\n    args.push(this.AttributeIdentifier);\r\n    ;\r\n    args.push(this.InstanceName);\r\n    ;\r\n    args.push(this.ListPositions);\r\n    ;\r\n    args.push(this.InnerReference);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcReferent = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, RestartDistance) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.PredefinedType = PredefinedType;\r\n    this.RestartDistance = RestartDistance;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let RestartDistance = tape[ptr++];\r\n    return new IfcReferent(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, RestartDistance);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.RestartDistance);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRegularTimeSeries = class {\r\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, TimeStep, Values) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.StartTime = StartTime;\r\n    this.EndTime = EndTime;\r\n    this.TimeSeriesDataType = TimeSeriesDataType;\r\n    this.DataOrigin = DataOrigin;\r\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\r\n    this.Unit = Unit;\r\n    this.TimeStep = TimeStep;\r\n    this.Values = Values;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let StartTime = tape[ptr++];\r\n    let EndTime = tape[ptr++];\r\n    let TimeSeriesDataType = tape[ptr++];\r\n    let DataOrigin = tape[ptr++];\r\n    let UserDefinedDataOrigin = tape[ptr++];\r\n    let Unit = tape[ptr++];\r\n    let TimeStep = tape[ptr++];\r\n    let Values = tape[ptr++];\r\n    return new IfcRegularTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit, TimeStep, Values);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.StartTime);\r\n    ;\r\n    args.push(this.EndTime);\r\n    ;\r\n    args.push(this.TimeSeriesDataType);\r\n    ;\r\n    args.push(this.DataOrigin);\r\n    ;\r\n    args.push(this.UserDefinedDataOrigin);\r\n    ;\r\n    args.push(this.Unit);\r\n    ;\r\n    args.push(this.TimeStep);\r\n    ;\r\n    args.push(this.Values);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcReinforcementBarProperties = class {\r\n  constructor(expressID, type, TotalCrossSectionArea, SteelGrade, BarSurface, EffectiveDepth, NominalBarDiameter, BarCount) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.TotalCrossSectionArea = TotalCrossSectionArea;\r\n    this.SteelGrade = SteelGrade;\r\n    this.BarSurface = BarSurface;\r\n    this.EffectiveDepth = EffectiveDepth;\r\n    this.NominalBarDiameter = NominalBarDiameter;\r\n    this.BarCount = BarCount;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let TotalCrossSectionArea = tape[ptr++];\r\n    let SteelGrade = tape[ptr++];\r\n    let BarSurface = tape[ptr++];\r\n    let EffectiveDepth = tape[ptr++];\r\n    let NominalBarDiameter = tape[ptr++];\r\n    let BarCount = tape[ptr++];\r\n    return new IfcReinforcementBarProperties(expressID, type, TotalCrossSectionArea, SteelGrade, BarSurface, EffectiveDepth, NominalBarDiameter, BarCount);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.TotalCrossSectionArea);\r\n    ;\r\n    args.push(this.SteelGrade);\r\n    ;\r\n    args.push(this.BarSurface);\r\n    ;\r\n    args.push(this.EffectiveDepth);\r\n    ;\r\n    args.push(this.NominalBarDiameter);\r\n    ;\r\n    args.push(this.BarCount);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcReinforcementDefinitionProperties = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, DefinitionType, ReinforcementSectionDefinitions) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.DefinitionType = DefinitionType;\r\n    this.ReinforcementSectionDefinitions = ReinforcementSectionDefinitions;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let DefinitionType = tape[ptr++];\r\n    let ReinforcementSectionDefinitions = tape[ptr++];\r\n    return new IfcReinforcementDefinitionProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, DefinitionType, ReinforcementSectionDefinitions);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.DefinitionType);\r\n    ;\r\n    args.push(this.ReinforcementSectionDefinitions);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcReinforcingBar = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, NominalDiameter, CrossSectionArea, BarLength, PredefinedType, BarSurface) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.SteelGrade = SteelGrade;\r\n    this.NominalDiameter = NominalDiameter;\r\n    this.CrossSectionArea = CrossSectionArea;\r\n    this.BarLength = BarLength;\r\n    this.PredefinedType = PredefinedType;\r\n    this.BarSurface = BarSurface;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let SteelGrade = tape[ptr++];\r\n    let NominalDiameter = tape[ptr++];\r\n    let CrossSectionArea = tape[ptr++];\r\n    let BarLength = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let BarSurface = tape[ptr++];\r\n    return new IfcReinforcingBar(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, NominalDiameter, CrossSectionArea, BarLength, PredefinedType, BarSurface);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.SteelGrade);\r\n    ;\r\n    args.push(this.NominalDiameter);\r\n    ;\r\n    args.push(this.CrossSectionArea);\r\n    ;\r\n    args.push(this.BarLength);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.BarSurface);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcReinforcingBarType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, BarLength, BarSurface, BendingShapeCode, BendingParameters) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n    this.NominalDiameter = NominalDiameter;\r\n    this.CrossSectionArea = CrossSectionArea;\r\n    this.BarLength = BarLength;\r\n    this.BarSurface = BarSurface;\r\n    this.BendingShapeCode = BendingShapeCode;\r\n    this.BendingParameters = BendingParameters;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let NominalDiameter = tape[ptr++];\r\n    let CrossSectionArea = tape[ptr++];\r\n    let BarLength = tape[ptr++];\r\n    let BarSurface = tape[ptr++];\r\n    let BendingShapeCode = tape[ptr++];\r\n    let BendingParameters = tape[ptr++];\r\n    return new IfcReinforcingBarType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, BarLength, BarSurface, BendingShapeCode, BendingParameters);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.NominalDiameter);\r\n    ;\r\n    args.push(this.CrossSectionArea);\r\n    ;\r\n    args.push(this.BarLength);\r\n    ;\r\n    args.push(this.BarSurface);\r\n    ;\r\n    args.push(this.BendingShapeCode);\r\n    ;\r\n    args.push(this.BendingParameters);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcReinforcingElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.SteelGrade = SteelGrade;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let SteelGrade = tape[ptr++];\r\n    return new IfcReinforcingElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.SteelGrade);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcReinforcingElementType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcReinforcingElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcReinforcingMesh = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.SteelGrade = SteelGrade;\r\n    this.MeshLength = MeshLength;\r\n    this.MeshWidth = MeshWidth;\r\n    this.LongitudinalBarNominalDiameter = LongitudinalBarNominalDiameter;\r\n    this.TransverseBarNominalDiameter = TransverseBarNominalDiameter;\r\n    this.LongitudinalBarCrossSectionArea = LongitudinalBarCrossSectionArea;\r\n    this.TransverseBarCrossSectionArea = TransverseBarCrossSectionArea;\r\n    this.LongitudinalBarSpacing = LongitudinalBarSpacing;\r\n    this.TransverseBarSpacing = TransverseBarSpacing;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let SteelGrade = tape[ptr++];\r\n    let MeshLength = tape[ptr++];\r\n    let MeshWidth = tape[ptr++];\r\n    let LongitudinalBarNominalDiameter = tape[ptr++];\r\n    let TransverseBarNominalDiameter = tape[ptr++];\r\n    let LongitudinalBarCrossSectionArea = tape[ptr++];\r\n    let TransverseBarCrossSectionArea = tape[ptr++];\r\n    let LongitudinalBarSpacing = tape[ptr++];\r\n    let TransverseBarSpacing = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcReinforcingMesh(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.SteelGrade);\r\n    ;\r\n    args.push(this.MeshLength);\r\n    ;\r\n    args.push(this.MeshWidth);\r\n    ;\r\n    args.push(this.LongitudinalBarNominalDiameter);\r\n    ;\r\n    args.push(this.TransverseBarNominalDiameter);\r\n    ;\r\n    args.push(this.LongitudinalBarCrossSectionArea);\r\n    ;\r\n    args.push(this.TransverseBarCrossSectionArea);\r\n    ;\r\n    args.push(this.LongitudinalBarSpacing);\r\n    ;\r\n    args.push(this.TransverseBarSpacing);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcReinforcingMeshType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, BendingShapeCode, BendingParameters) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n    this.MeshLength = MeshLength;\r\n    this.MeshWidth = MeshWidth;\r\n    this.LongitudinalBarNominalDiameter = LongitudinalBarNominalDiameter;\r\n    this.TransverseBarNominalDiameter = TransverseBarNominalDiameter;\r\n    this.LongitudinalBarCrossSectionArea = LongitudinalBarCrossSectionArea;\r\n    this.TransverseBarCrossSectionArea = TransverseBarCrossSectionArea;\r\n    this.LongitudinalBarSpacing = LongitudinalBarSpacing;\r\n    this.TransverseBarSpacing = TransverseBarSpacing;\r\n    this.BendingShapeCode = BendingShapeCode;\r\n    this.BendingParameters = BendingParameters;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let MeshLength = tape[ptr++];\r\n    let MeshWidth = tape[ptr++];\r\n    let LongitudinalBarNominalDiameter = tape[ptr++];\r\n    let TransverseBarNominalDiameter = tape[ptr++];\r\n    let LongitudinalBarCrossSectionArea = tape[ptr++];\r\n    let TransverseBarCrossSectionArea = tape[ptr++];\r\n    let LongitudinalBarSpacing = tape[ptr++];\r\n    let TransverseBarSpacing = tape[ptr++];\r\n    let BendingShapeCode = tape[ptr++];\r\n    let BendingParameters = tape[ptr++];\r\n    return new IfcReinforcingMeshType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, MeshLength, MeshWidth, LongitudinalBarNominalDiameter, TransverseBarNominalDiameter, LongitudinalBarCrossSectionArea, TransverseBarCrossSectionArea, LongitudinalBarSpacing, TransverseBarSpacing, BendingShapeCode, BendingParameters);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.MeshLength);\r\n    ;\r\n    args.push(this.MeshWidth);\r\n    ;\r\n    args.push(this.LongitudinalBarNominalDiameter);\r\n    ;\r\n    args.push(this.TransverseBarNominalDiameter);\r\n    ;\r\n    args.push(this.LongitudinalBarCrossSectionArea);\r\n    ;\r\n    args.push(this.TransverseBarCrossSectionArea);\r\n    ;\r\n    args.push(this.LongitudinalBarSpacing);\r\n    ;\r\n    args.push(this.TransverseBarSpacing);\r\n    ;\r\n    args.push(this.BendingShapeCode);\r\n    ;\r\n    args.push(this.BendingParameters);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelAggregates = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingObject = RelatingObject;\r\n    this.RelatedObjects = RelatedObjects;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingObject = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    return new IfcRelAggregates(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingObject);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelAssigns = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedObjects = RelatedObjects;\r\n    this.RelatedObjectsType = RelatedObjectsType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    let RelatedObjectsType = tape[ptr++];\r\n    return new IfcRelAssigns(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    args.push(this.RelatedObjectsType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelAssignsToActor = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingActor, ActingRole) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedObjects = RelatedObjects;\r\n    this.RelatedObjectsType = RelatedObjectsType;\r\n    this.RelatingActor = RelatingActor;\r\n    this.ActingRole = ActingRole;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    let RelatedObjectsType = tape[ptr++];\r\n    let RelatingActor = tape[ptr++];\r\n    let ActingRole = tape[ptr++];\r\n    return new IfcRelAssignsToActor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingActor, ActingRole);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    args.push(this.RelatedObjectsType);\r\n    ;\r\n    args.push(this.RelatingActor);\r\n    ;\r\n    args.push(this.ActingRole);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelAssignsToControl = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingControl) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedObjects = RelatedObjects;\r\n    this.RelatedObjectsType = RelatedObjectsType;\r\n    this.RelatingControl = RelatingControl;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    let RelatedObjectsType = tape[ptr++];\r\n    let RelatingControl = tape[ptr++];\r\n    return new IfcRelAssignsToControl(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingControl);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    args.push(this.RelatedObjectsType);\r\n    ;\r\n    args.push(this.RelatingControl);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelAssignsToGroup = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedObjects = RelatedObjects;\r\n    this.RelatedObjectsType = RelatedObjectsType;\r\n    this.RelatingGroup = RelatingGroup;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    let RelatedObjectsType = tape[ptr++];\r\n    let RelatingGroup = tape[ptr++];\r\n    return new IfcRelAssignsToGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    args.push(this.RelatedObjectsType);\r\n    ;\r\n    args.push(this.RelatingGroup);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelAssignsToGroupByFactor = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup, Factor) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedObjects = RelatedObjects;\r\n    this.RelatedObjectsType = RelatedObjectsType;\r\n    this.RelatingGroup = RelatingGroup;\r\n    this.Factor = Factor;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    let RelatedObjectsType = tape[ptr++];\r\n    let RelatingGroup = tape[ptr++];\r\n    let Factor = tape[ptr++];\r\n    return new IfcRelAssignsToGroupByFactor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingGroup, Factor);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    args.push(this.RelatedObjectsType);\r\n    ;\r\n    args.push(this.RelatingGroup);\r\n    ;\r\n    args.push(this.Factor);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelAssignsToProcess = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProcess, QuantityInProcess) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedObjects = RelatedObjects;\r\n    this.RelatedObjectsType = RelatedObjectsType;\r\n    this.RelatingProcess = RelatingProcess;\r\n    this.QuantityInProcess = QuantityInProcess;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    let RelatedObjectsType = tape[ptr++];\r\n    let RelatingProcess = tape[ptr++];\r\n    let QuantityInProcess = tape[ptr++];\r\n    return new IfcRelAssignsToProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProcess, QuantityInProcess);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    args.push(this.RelatedObjectsType);\r\n    ;\r\n    args.push(this.RelatingProcess);\r\n    ;\r\n    args.push(this.QuantityInProcess);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelAssignsToProduct = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProduct) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedObjects = RelatedObjects;\r\n    this.RelatedObjectsType = RelatedObjectsType;\r\n    this.RelatingProduct = RelatingProduct;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    let RelatedObjectsType = tape[ptr++];\r\n    let RelatingProduct = tape[ptr++];\r\n    return new IfcRelAssignsToProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingProduct);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    args.push(this.RelatedObjectsType);\r\n    ;\r\n    args.push(this.RelatingProduct);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelAssignsToResource = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingResource) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedObjects = RelatedObjects;\r\n    this.RelatedObjectsType = RelatedObjectsType;\r\n    this.RelatingResource = RelatingResource;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    let RelatedObjectsType = tape[ptr++];\r\n    let RelatingResource = tape[ptr++];\r\n    return new IfcRelAssignsToResource(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatedObjectsType, RelatingResource);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    args.push(this.RelatedObjectsType);\r\n    ;\r\n    args.push(this.RelatingResource);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelAssociates = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedObjects = RelatedObjects;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    return new IfcRelAssociates(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelAssociatesApproval = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingApproval) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedObjects = RelatedObjects;\r\n    this.RelatingApproval = RelatingApproval;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    let RelatingApproval = tape[ptr++];\r\n    return new IfcRelAssociatesApproval(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingApproval);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    args.push(this.RelatingApproval);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelAssociatesClassification = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingClassification) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedObjects = RelatedObjects;\r\n    this.RelatingClassification = RelatingClassification;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    let RelatingClassification = tape[ptr++];\r\n    return new IfcRelAssociatesClassification(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingClassification);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    args.push(this.RelatingClassification);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelAssociatesConstraint = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, Intent, RelatingConstraint) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedObjects = RelatedObjects;\r\n    this.Intent = Intent;\r\n    this.RelatingConstraint = RelatingConstraint;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    let Intent = tape[ptr++];\r\n    let RelatingConstraint = tape[ptr++];\r\n    return new IfcRelAssociatesConstraint(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, Intent, RelatingConstraint);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    args.push(this.Intent);\r\n    ;\r\n    args.push(this.RelatingConstraint);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelAssociatesDocument = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingDocument) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedObjects = RelatedObjects;\r\n    this.RelatingDocument = RelatingDocument;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    let RelatingDocument = tape[ptr++];\r\n    return new IfcRelAssociatesDocument(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingDocument);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    args.push(this.RelatingDocument);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelAssociatesLibrary = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingLibrary) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedObjects = RelatedObjects;\r\n    this.RelatingLibrary = RelatingLibrary;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    let RelatingLibrary = tape[ptr++];\r\n    return new IfcRelAssociatesLibrary(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingLibrary);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    args.push(this.RelatingLibrary);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelAssociatesMaterial = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingMaterial) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedObjects = RelatedObjects;\r\n    this.RelatingMaterial = RelatingMaterial;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    let RelatingMaterial = tape[ptr++];\r\n    return new IfcRelAssociatesMaterial(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingMaterial);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    args.push(this.RelatingMaterial);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelConnects = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    return new IfcRelConnects(expressID, type, GlobalId, OwnerHistory, Name, Description);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelConnectsElements = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ConnectionGeometry = ConnectionGeometry;\r\n    this.RelatingElement = RelatingElement;\r\n    this.RelatedElement = RelatedElement;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ConnectionGeometry = tape[ptr++];\r\n    let RelatingElement = tape[ptr++];\r\n    let RelatedElement = tape[ptr++];\r\n    return new IfcRelConnectsElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ConnectionGeometry);\r\n    ;\r\n    args.push(this.RelatingElement);\r\n    ;\r\n    args.push(this.RelatedElement);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelConnectsPathElements = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RelatingPriorities, RelatedPriorities, RelatedConnectionType, RelatingConnectionType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ConnectionGeometry = ConnectionGeometry;\r\n    this.RelatingElement = RelatingElement;\r\n    this.RelatedElement = RelatedElement;\r\n    this.RelatingPriorities = RelatingPriorities;\r\n    this.RelatedPriorities = RelatedPriorities;\r\n    this.RelatedConnectionType = RelatedConnectionType;\r\n    this.RelatingConnectionType = RelatingConnectionType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ConnectionGeometry = tape[ptr++];\r\n    let RelatingElement = tape[ptr++];\r\n    let RelatedElement = tape[ptr++];\r\n    let RelatingPriorities = tape[ptr++];\r\n    let RelatedPriorities = tape[ptr++];\r\n    let RelatedConnectionType = tape[ptr++];\r\n    let RelatingConnectionType = tape[ptr++];\r\n    return new IfcRelConnectsPathElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RelatingPriorities, RelatedPriorities, RelatedConnectionType, RelatingConnectionType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ConnectionGeometry);\r\n    ;\r\n    args.push(this.RelatingElement);\r\n    ;\r\n    args.push(this.RelatedElement);\r\n    ;\r\n    args.push(this.RelatingPriorities);\r\n    ;\r\n    args.push(this.RelatedPriorities);\r\n    ;\r\n    args.push(this.RelatedConnectionType);\r\n    ;\r\n    args.push(this.RelatingConnectionType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelConnectsPortToElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedElement) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingPort = RelatingPort;\r\n    this.RelatedElement = RelatedElement;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingPort = tape[ptr++];\r\n    let RelatedElement = tape[ptr++];\r\n    return new IfcRelConnectsPortToElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedElement);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingPort);\r\n    ;\r\n    args.push(this.RelatedElement);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelConnectsPorts = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedPort, RealizingElement) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingPort = RelatingPort;\r\n    this.RelatedPort = RelatedPort;\r\n    this.RealizingElement = RealizingElement;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingPort = tape[ptr++];\r\n    let RelatedPort = tape[ptr++];\r\n    let RealizingElement = tape[ptr++];\r\n    return new IfcRelConnectsPorts(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPort, RelatedPort, RealizingElement);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingPort);\r\n    ;\r\n    args.push(this.RelatedPort);\r\n    ;\r\n    args.push(this.RealizingElement);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelConnectsStructuralActivity = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedStructuralActivity) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingElement = RelatingElement;\r\n    this.RelatedStructuralActivity = RelatedStructuralActivity;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingElement = tape[ptr++];\r\n    let RelatedStructuralActivity = tape[ptr++];\r\n    return new IfcRelConnectsStructuralActivity(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedStructuralActivity);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingElement);\r\n    ;\r\n    args.push(this.RelatedStructuralActivity);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelConnectsStructuralMember = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingStructuralMember = RelatingStructuralMember;\r\n    this.RelatedStructuralConnection = RelatedStructuralConnection;\r\n    this.AppliedCondition = AppliedCondition;\r\n    this.AdditionalConditions = AdditionalConditions;\r\n    this.SupportedLength = SupportedLength;\r\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingStructuralMember = tape[ptr++];\r\n    let RelatedStructuralConnection = tape[ptr++];\r\n    let AppliedCondition = tape[ptr++];\r\n    let AdditionalConditions = tape[ptr++];\r\n    let SupportedLength = tape[ptr++];\r\n    let ConditionCoordinateSystem = tape[ptr++];\r\n    return new IfcRelConnectsStructuralMember(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingStructuralMember);\r\n    ;\r\n    args.push(this.RelatedStructuralConnection);\r\n    ;\r\n    args.push(this.AppliedCondition);\r\n    ;\r\n    args.push(this.AdditionalConditions);\r\n    ;\r\n    args.push(this.SupportedLength);\r\n    ;\r\n    args.push(this.ConditionCoordinateSystem);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelConnectsWithEccentricity = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem, ConnectionConstraint) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingStructuralMember = RelatingStructuralMember;\r\n    this.RelatedStructuralConnection = RelatedStructuralConnection;\r\n    this.AppliedCondition = AppliedCondition;\r\n    this.AdditionalConditions = AdditionalConditions;\r\n    this.SupportedLength = SupportedLength;\r\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\r\n    this.ConnectionConstraint = ConnectionConstraint;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingStructuralMember = tape[ptr++];\r\n    let RelatedStructuralConnection = tape[ptr++];\r\n    let AppliedCondition = tape[ptr++];\r\n    let AdditionalConditions = tape[ptr++];\r\n    let SupportedLength = tape[ptr++];\r\n    let ConditionCoordinateSystem = tape[ptr++];\r\n    let ConnectionConstraint = tape[ptr++];\r\n    return new IfcRelConnectsWithEccentricity(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingStructuralMember, RelatedStructuralConnection, AppliedCondition, AdditionalConditions, SupportedLength, ConditionCoordinateSystem, ConnectionConstraint);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingStructuralMember);\r\n    ;\r\n    args.push(this.RelatedStructuralConnection);\r\n    ;\r\n    args.push(this.AppliedCondition);\r\n    ;\r\n    args.push(this.AdditionalConditions);\r\n    ;\r\n    args.push(this.SupportedLength);\r\n    ;\r\n    args.push(this.ConditionCoordinateSystem);\r\n    ;\r\n    args.push(this.ConnectionConstraint);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelConnectsWithRealizingElements = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RealizingElements, ConnectionType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ConnectionGeometry = ConnectionGeometry;\r\n    this.RelatingElement = RelatingElement;\r\n    this.RelatedElement = RelatedElement;\r\n    this.RealizingElements = RealizingElements;\r\n    this.ConnectionType = ConnectionType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ConnectionGeometry = tape[ptr++];\r\n    let RelatingElement = tape[ptr++];\r\n    let RelatedElement = tape[ptr++];\r\n    let RealizingElements = tape[ptr++];\r\n    let ConnectionType = tape[ptr++];\r\n    return new IfcRelConnectsWithRealizingElements(expressID, type, GlobalId, OwnerHistory, Name, Description, ConnectionGeometry, RelatingElement, RelatedElement, RealizingElements, ConnectionType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ConnectionGeometry);\r\n    ;\r\n    args.push(this.RelatingElement);\r\n    ;\r\n    args.push(this.RelatedElement);\r\n    ;\r\n    args.push(this.RealizingElements);\r\n    ;\r\n    args.push(this.ConnectionType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelContainedInSpatialStructure = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedElements = RelatedElements;\r\n    this.RelatingStructure = RelatingStructure;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedElements = tape[ptr++];\r\n    let RelatingStructure = tape[ptr++];\r\n    return new IfcRelContainedInSpatialStructure(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedElements);\r\n    ;\r\n    args.push(this.RelatingStructure);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelCoversBldgElements = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedCoverings) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingBuildingElement = RelatingBuildingElement;\r\n    this.RelatedCoverings = RelatedCoverings;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingBuildingElement = tape[ptr++];\r\n    let RelatedCoverings = tape[ptr++];\r\n    return new IfcRelCoversBldgElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedCoverings);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingBuildingElement);\r\n    ;\r\n    args.push(this.RelatedCoverings);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelCoversSpaces = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedCoverings) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingSpace = RelatingSpace;\r\n    this.RelatedCoverings = RelatedCoverings;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingSpace = tape[ptr++];\r\n    let RelatedCoverings = tape[ptr++];\r\n    return new IfcRelCoversSpaces(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedCoverings);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingSpace);\r\n    ;\r\n    args.push(this.RelatedCoverings);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelDeclares = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingContext, RelatedDefinitions) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingContext = RelatingContext;\r\n    this.RelatedDefinitions = RelatedDefinitions;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingContext = tape[ptr++];\r\n    let RelatedDefinitions = tape[ptr++];\r\n    return new IfcRelDeclares(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingContext, RelatedDefinitions);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingContext);\r\n    ;\r\n    args.push(this.RelatedDefinitions);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelDecomposes = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    return new IfcRelDecomposes(expressID, type, GlobalId, OwnerHistory, Name, Description);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelDefines = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    return new IfcRelDefines(expressID, type, GlobalId, OwnerHistory, Name, Description);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelDefinesByObject = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingObject) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedObjects = RelatedObjects;\r\n    this.RelatingObject = RelatingObject;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    let RelatingObject = tape[ptr++];\r\n    return new IfcRelDefinesByObject(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingObject);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    args.push(this.RelatingObject);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelDefinesByProperties = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingPropertyDefinition) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedObjects = RelatedObjects;\r\n    this.RelatingPropertyDefinition = RelatingPropertyDefinition;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    let RelatingPropertyDefinition = tape[ptr++];\r\n    return new IfcRelDefinesByProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingPropertyDefinition);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    args.push(this.RelatingPropertyDefinition);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelDefinesByTemplate = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedPropertySets, RelatingTemplate) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedPropertySets = RelatedPropertySets;\r\n    this.RelatingTemplate = RelatingTemplate;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedPropertySets = tape[ptr++];\r\n    let RelatingTemplate = tape[ptr++];\r\n    return new IfcRelDefinesByTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedPropertySets, RelatingTemplate);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedPropertySets);\r\n    ;\r\n    args.push(this.RelatingTemplate);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelDefinesByType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedObjects = RelatedObjects;\r\n    this.RelatingType = RelatingType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    let RelatingType = tape[ptr++];\r\n    return new IfcRelDefinesByType(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedObjects, RelatingType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    args.push(this.RelatingType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelFillsElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingOpeningElement, RelatedBuildingElement) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingOpeningElement = RelatingOpeningElement;\r\n    this.RelatedBuildingElement = RelatedBuildingElement;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingOpeningElement = tape[ptr++];\r\n    let RelatedBuildingElement = tape[ptr++];\r\n    return new IfcRelFillsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingOpeningElement, RelatedBuildingElement);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingOpeningElement);\r\n    ;\r\n    args.push(this.RelatedBuildingElement);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelFlowControlElements = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedControlElements, RelatingFlowElement) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedControlElements = RelatedControlElements;\r\n    this.RelatingFlowElement = RelatingFlowElement;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedControlElements = tape[ptr++];\r\n    let RelatingFlowElement = tape[ptr++];\r\n    return new IfcRelFlowControlElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedControlElements, RelatingFlowElement);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedControlElements);\r\n    ;\r\n    args.push(this.RelatingFlowElement);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelInterferesElements = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedElement, InterferenceGeometry, InterferenceType, ImpliedOrder) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingElement = RelatingElement;\r\n    this.RelatedElement = RelatedElement;\r\n    this.InterferenceGeometry = InterferenceGeometry;\r\n    this.InterferenceType = InterferenceType;\r\n    this.ImpliedOrder = ImpliedOrder;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingElement = tape[ptr++];\r\n    let RelatedElement = tape[ptr++];\r\n    let InterferenceGeometry = tape[ptr++];\r\n    let InterferenceType = tape[ptr++];\r\n    let ImpliedOrder = tape[ptr++];\r\n    return new IfcRelInterferesElements(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedElement, InterferenceGeometry, InterferenceType, ImpliedOrder);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingElement);\r\n    ;\r\n    args.push(this.RelatedElement);\r\n    ;\r\n    args.push(this.InterferenceGeometry);\r\n    ;\r\n    args.push(this.InterferenceType);\r\n    ;\r\n    args.push(this.ImpliedOrder);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelNests = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingObject = RelatingObject;\r\n    this.RelatedObjects = RelatedObjects;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingObject = tape[ptr++];\r\n    let RelatedObjects = tape[ptr++];\r\n    return new IfcRelNests(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingObject, RelatedObjects);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingObject);\r\n    ;\r\n    args.push(this.RelatedObjects);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelPositions = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPositioningElement, RelatedProducts) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingPositioningElement = RelatingPositioningElement;\r\n    this.RelatedProducts = RelatedProducts;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingPositioningElement = tape[ptr++];\r\n    let RelatedProducts = tape[ptr++];\r\n    return new IfcRelPositions(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingPositioningElement, RelatedProducts);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingPositioningElement);\r\n    ;\r\n    args.push(this.RelatedProducts);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelProjectsElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedFeatureElement) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingElement = RelatingElement;\r\n    this.RelatedFeatureElement = RelatedFeatureElement;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingElement = tape[ptr++];\r\n    let RelatedFeatureElement = tape[ptr++];\r\n    return new IfcRelProjectsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingElement, RelatedFeatureElement);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingElement);\r\n    ;\r\n    args.push(this.RelatedFeatureElement);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelReferencedInSpatialStructure = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedElements = RelatedElements;\r\n    this.RelatingStructure = RelatingStructure;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedElements = tape[ptr++];\r\n    let RelatingStructure = tape[ptr++];\r\n    return new IfcRelReferencedInSpatialStructure(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatedElements, RelatingStructure);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedElements);\r\n    ;\r\n    args.push(this.RelatingStructure);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelSequence = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingProcess, RelatedProcess, TimeLag, SequenceType, UserDefinedSequenceType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingProcess = RelatingProcess;\r\n    this.RelatedProcess = RelatedProcess;\r\n    this.TimeLag = TimeLag;\r\n    this.SequenceType = SequenceType;\r\n    this.UserDefinedSequenceType = UserDefinedSequenceType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingProcess = tape[ptr++];\r\n    let RelatedProcess = tape[ptr++];\r\n    let TimeLag = tape[ptr++];\r\n    let SequenceType = tape[ptr++];\r\n    let UserDefinedSequenceType = tape[ptr++];\r\n    return new IfcRelSequence(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingProcess, RelatedProcess, TimeLag, SequenceType, UserDefinedSequenceType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingProcess);\r\n    ;\r\n    args.push(this.RelatedProcess);\r\n    ;\r\n    args.push(this.TimeLag);\r\n    ;\r\n    args.push(this.SequenceType);\r\n    ;\r\n    args.push(this.UserDefinedSequenceType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelServicesBuildings = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSystem, RelatedBuildings) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingSystem = RelatingSystem;\r\n    this.RelatedBuildings = RelatedBuildings;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingSystem = tape[ptr++];\r\n    let RelatedBuildings = tape[ptr++];\r\n    return new IfcRelServicesBuildings(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSystem, RelatedBuildings);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingSystem);\r\n    ;\r\n    args.push(this.RelatedBuildings);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelSpaceBoundary = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingSpace = RelatingSpace;\r\n    this.RelatedBuildingElement = RelatedBuildingElement;\r\n    this.ConnectionGeometry = ConnectionGeometry;\r\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\r\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingSpace = tape[ptr++];\r\n    let RelatedBuildingElement = tape[ptr++];\r\n    let ConnectionGeometry = tape[ptr++];\r\n    let PhysicalOrVirtualBoundary = tape[ptr++];\r\n    let InternalOrExternalBoundary = tape[ptr++];\r\n    return new IfcRelSpaceBoundary(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingSpace);\r\n    ;\r\n    args.push(this.RelatedBuildingElement);\r\n    ;\r\n    args.push(this.ConnectionGeometry);\r\n    ;\r\n    args.push(this.PhysicalOrVirtualBoundary);\r\n    ;\r\n    args.push(this.InternalOrExternalBoundary);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelSpaceBoundary1stLevel = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingSpace = RelatingSpace;\r\n    this.RelatedBuildingElement = RelatedBuildingElement;\r\n    this.ConnectionGeometry = ConnectionGeometry;\r\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\r\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\r\n    this.ParentBoundary = ParentBoundary;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingSpace = tape[ptr++];\r\n    let RelatedBuildingElement = tape[ptr++];\r\n    let ConnectionGeometry = tape[ptr++];\r\n    let PhysicalOrVirtualBoundary = tape[ptr++];\r\n    let InternalOrExternalBoundary = tape[ptr++];\r\n    let ParentBoundary = tape[ptr++];\r\n    return new IfcRelSpaceBoundary1stLevel(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingSpace);\r\n    ;\r\n    args.push(this.RelatedBuildingElement);\r\n    ;\r\n    args.push(this.ConnectionGeometry);\r\n    ;\r\n    args.push(this.PhysicalOrVirtualBoundary);\r\n    ;\r\n    args.push(this.InternalOrExternalBoundary);\r\n    ;\r\n    args.push(this.ParentBoundary);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelSpaceBoundary2ndLevel = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary, CorrespondingBoundary) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingSpace = RelatingSpace;\r\n    this.RelatedBuildingElement = RelatedBuildingElement;\r\n    this.ConnectionGeometry = ConnectionGeometry;\r\n    this.PhysicalOrVirtualBoundary = PhysicalOrVirtualBoundary;\r\n    this.InternalOrExternalBoundary = InternalOrExternalBoundary;\r\n    this.ParentBoundary = ParentBoundary;\r\n    this.CorrespondingBoundary = CorrespondingBoundary;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingSpace = tape[ptr++];\r\n    let RelatedBuildingElement = tape[ptr++];\r\n    let ConnectionGeometry = tape[ptr++];\r\n    let PhysicalOrVirtualBoundary = tape[ptr++];\r\n    let InternalOrExternalBoundary = tape[ptr++];\r\n    let ParentBoundary = tape[ptr++];\r\n    let CorrespondingBoundary = tape[ptr++];\r\n    return new IfcRelSpaceBoundary2ndLevel(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingSpace, RelatedBuildingElement, ConnectionGeometry, PhysicalOrVirtualBoundary, InternalOrExternalBoundary, ParentBoundary, CorrespondingBoundary);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingSpace);\r\n    ;\r\n    args.push(this.RelatedBuildingElement);\r\n    ;\r\n    args.push(this.ConnectionGeometry);\r\n    ;\r\n    args.push(this.PhysicalOrVirtualBoundary);\r\n    ;\r\n    args.push(this.InternalOrExternalBoundary);\r\n    ;\r\n    args.push(this.ParentBoundary);\r\n    ;\r\n    args.push(this.CorrespondingBoundary);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelVoidsElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedOpeningElement) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingBuildingElement = RelatingBuildingElement;\r\n    this.RelatedOpeningElement = RelatedOpeningElement;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingBuildingElement = tape[ptr++];\r\n    let RelatedOpeningElement = tape[ptr++];\r\n    return new IfcRelVoidsElement(expressID, type, GlobalId, OwnerHistory, Name, Description, RelatingBuildingElement, RelatedOpeningElement);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingBuildingElement);\r\n    ;\r\n    args.push(this.RelatedOpeningElement);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRelationship = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    return new IfcRelationship(expressID, type, GlobalId, OwnerHistory, Name, Description);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcReparametrisedCompositeCurveSegment = class {\r\n  constructor(expressID, type, Transition, SameSense, ParentCurve, ParamLength) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Transition = Transition;\r\n    this.SameSense = SameSense;\r\n    this.ParentCurve = ParentCurve;\r\n    this.ParamLength = ParamLength;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Transition = tape[ptr++];\r\n    let SameSense = tape[ptr++];\r\n    let ParentCurve = tape[ptr++];\r\n    let ParamLength = tape[ptr++];\r\n    return new IfcReparametrisedCompositeCurveSegment(expressID, type, Transition, SameSense, ParentCurve, ParamLength);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Transition);\r\n    ;\r\n    args.push(this.SameSense);\r\n    ;\r\n    args.push(this.ParentCurve);\r\n    ;\r\n    args.push(this.ParamLength);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRepresentation = class {\r\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ContextOfItems = ContextOfItems;\r\n    this.RepresentationIdentifier = RepresentationIdentifier;\r\n    this.RepresentationType = RepresentationType;\r\n    this.Items = Items;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ContextOfItems = tape[ptr++];\r\n    let RepresentationIdentifier = tape[ptr++];\r\n    let RepresentationType = tape[ptr++];\r\n    let Items = tape[ptr++];\r\n    return new IfcRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ContextOfItems);\r\n    ;\r\n    args.push(this.RepresentationIdentifier);\r\n    ;\r\n    args.push(this.RepresentationType);\r\n    ;\r\n    args.push(this.Items);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRepresentationContext = class {\r\n  constructor(expressID, type, ContextIdentifier, ContextType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ContextIdentifier = ContextIdentifier;\r\n    this.ContextType = ContextType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ContextIdentifier = tape[ptr++];\r\n    let ContextType = tape[ptr++];\r\n    return new IfcRepresentationContext(expressID, type, ContextIdentifier, ContextType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ContextIdentifier);\r\n    ;\r\n    args.push(this.ContextType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRepresentationItem = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcRepresentationItem(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcRepresentationMap = class {\r\n  constructor(expressID, type, MappingOrigin, MappedRepresentation) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.MappingOrigin = MappingOrigin;\r\n    this.MappedRepresentation = MappedRepresentation;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let MappingOrigin = tape[ptr++];\r\n    let MappedRepresentation = tape[ptr++];\r\n    return new IfcRepresentationMap(expressID, type, MappingOrigin, MappedRepresentation);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.MappingOrigin);\r\n    ;\r\n    args.push(this.MappedRepresentation);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcResource = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    return new IfcResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcResourceApprovalRelationship = class {\r\n  constructor(expressID, type, Name, Description, RelatedResourceObjects, RelatingApproval) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatedResourceObjects = RelatedResourceObjects;\r\n    this.RelatingApproval = RelatingApproval;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatedResourceObjects = tape[ptr++];\r\n    let RelatingApproval = tape[ptr++];\r\n    return new IfcResourceApprovalRelationship(expressID, type, Name, Description, RelatedResourceObjects, RelatingApproval);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatedResourceObjects);\r\n    ;\r\n    args.push(this.RelatingApproval);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcResourceConstraintRelationship = class {\r\n  constructor(expressID, type, Name, Description, RelatingConstraint, RelatedResourceObjects) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.RelatingConstraint = RelatingConstraint;\r\n    this.RelatedResourceObjects = RelatedResourceObjects;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let RelatingConstraint = tape[ptr++];\r\n    let RelatedResourceObjects = tape[ptr++];\r\n    return new IfcResourceConstraintRelationship(expressID, type, Name, Description, RelatingConstraint, RelatedResourceObjects);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.RelatingConstraint);\r\n    ;\r\n    args.push(this.RelatedResourceObjects);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcResourceLevelRelationship = class {\r\n  constructor(expressID, type, Name, Description) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    return new IfcResourceLevelRelationship(expressID, type, Name, Description);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcResourceTime = class {\r\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ScheduleWork, ScheduleUsage, ScheduleStart, ScheduleFinish, ScheduleContour, LevelingDelay, IsOverAllocated, StatusTime, ActualWork, ActualUsage, ActualStart, ActualFinish, RemainingWork, RemainingUsage, Completion) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.DataOrigin = DataOrigin;\r\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\r\n    this.ScheduleWork = ScheduleWork;\r\n    this.ScheduleUsage = ScheduleUsage;\r\n    this.ScheduleStart = ScheduleStart;\r\n    this.ScheduleFinish = ScheduleFinish;\r\n    this.ScheduleContour = ScheduleContour;\r\n    this.LevelingDelay = LevelingDelay;\r\n    this.IsOverAllocated = IsOverAllocated;\r\n    this.StatusTime = StatusTime;\r\n    this.ActualWork = ActualWork;\r\n    this.ActualUsage = ActualUsage;\r\n    this.ActualStart = ActualStart;\r\n    this.ActualFinish = ActualFinish;\r\n    this.RemainingWork = RemainingWork;\r\n    this.RemainingUsage = RemainingUsage;\r\n    this.Completion = Completion;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let DataOrigin = tape[ptr++];\r\n    let UserDefinedDataOrigin = tape[ptr++];\r\n    let ScheduleWork = tape[ptr++];\r\n    let ScheduleUsage = tape[ptr++];\r\n    let ScheduleStart = tape[ptr++];\r\n    let ScheduleFinish = tape[ptr++];\r\n    let ScheduleContour = tape[ptr++];\r\n    let LevelingDelay = tape[ptr++];\r\n    let IsOverAllocated = tape[ptr++];\r\n    let StatusTime = tape[ptr++];\r\n    let ActualWork = tape[ptr++];\r\n    let ActualUsage = tape[ptr++];\r\n    let ActualStart = tape[ptr++];\r\n    let ActualFinish = tape[ptr++];\r\n    let RemainingWork = tape[ptr++];\r\n    let RemainingUsage = tape[ptr++];\r\n    let Completion = tape[ptr++];\r\n    return new IfcResourceTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, ScheduleWork, ScheduleUsage, ScheduleStart, ScheduleFinish, ScheduleContour, LevelingDelay, IsOverAllocated, StatusTime, ActualWork, ActualUsage, ActualStart, ActualFinish, RemainingWork, RemainingUsage, Completion);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.DataOrigin);\r\n    ;\r\n    args.push(this.UserDefinedDataOrigin);\r\n    ;\r\n    args.push(this.ScheduleWork);\r\n    ;\r\n    args.push(this.ScheduleUsage);\r\n    ;\r\n    args.push(this.ScheduleStart);\r\n    ;\r\n    args.push(this.ScheduleFinish);\r\n    ;\r\n    args.push(this.ScheduleContour);\r\n    ;\r\n    args.push(this.LevelingDelay);\r\n    ;\r\n    args.push(this.IsOverAllocated);\r\n    ;\r\n    args.push(this.StatusTime);\r\n    ;\r\n    args.push(this.ActualWork);\r\n    ;\r\n    args.push(this.ActualUsage);\r\n    ;\r\n    args.push(this.ActualStart);\r\n    ;\r\n    args.push(this.ActualFinish);\r\n    ;\r\n    args.push(this.RemainingWork);\r\n    ;\r\n    args.push(this.RemainingUsage);\r\n    ;\r\n    args.push(this.Completion);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRevolvedAreaSolid = class {\r\n  constructor(expressID, type, SweptArea, Position, Axis, Angle) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SweptArea = SweptArea;\r\n    this.Position = Position;\r\n    this.Axis = Axis;\r\n    this.Angle = Angle;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SweptArea = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let Axis = tape[ptr++];\r\n    let Angle = tape[ptr++];\r\n    return new IfcRevolvedAreaSolid(expressID, type, SweptArea, Position, Axis, Angle);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SweptArea);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Axis);\r\n    ;\r\n    args.push(this.Angle);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRevolvedAreaSolidTapered = class {\r\n  constructor(expressID, type, SweptArea, Position, Axis, Angle, EndSweptArea) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SweptArea = SweptArea;\r\n    this.Position = Position;\r\n    this.Axis = Axis;\r\n    this.Angle = Angle;\r\n    this.EndSweptArea = EndSweptArea;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SweptArea = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let Axis = tape[ptr++];\r\n    let Angle = tape[ptr++];\r\n    let EndSweptArea = tape[ptr++];\r\n    return new IfcRevolvedAreaSolidTapered(expressID, type, SweptArea, Position, Axis, Angle, EndSweptArea);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SweptArea);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Axis);\r\n    ;\r\n    args.push(this.Angle);\r\n    ;\r\n    args.push(this.EndSweptArea);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRightCircularCone = class {\r\n  constructor(expressID, type, Position, Height, BottomRadius) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Position = Position;\r\n    this.Height = Height;\r\n    this.BottomRadius = BottomRadius;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Position = tape[ptr++];\r\n    let Height = tape[ptr++];\r\n    let BottomRadius = tape[ptr++];\r\n    return new IfcRightCircularCone(expressID, type, Position, Height, BottomRadius);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Height);\r\n    ;\r\n    args.push(this.BottomRadius);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRightCircularCylinder = class {\r\n  constructor(expressID, type, Position, Height, Radius) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Position = Position;\r\n    this.Height = Height;\r\n    this.Radius = Radius;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Position = tape[ptr++];\r\n    let Height = tape[ptr++];\r\n    let Radius = tape[ptr++];\r\n    return new IfcRightCircularCylinder(expressID, type, Position, Height, Radius);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Height);\r\n    ;\r\n    args.push(this.Radius);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRoof = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcRoof(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRoofType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcRoofType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRoot = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    return new IfcRoot(expressID, type, GlobalId, OwnerHistory, Name, Description);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcRoundedRectangleProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, RoundingRadius) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.Position = Position;\r\n    this.XDim = XDim;\r\n    this.YDim = YDim;\r\n    this.RoundingRadius = RoundingRadius;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let XDim = tape[ptr++];\r\n    let YDim = tape[ptr++];\r\n    let RoundingRadius = tape[ptr++];\r\n    return new IfcRoundedRectangleProfileDef(expressID, type, ProfileType, ProfileName, Position, XDim, YDim, RoundingRadius);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.XDim);\r\n    ;\r\n    args.push(this.YDim);\r\n    ;\r\n    args.push(this.RoundingRadius);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSIUnit = class {\r\n  constructor(expressID, type, Dimensions, UnitType, Prefix, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Dimensions = Dimensions;\r\n    this.UnitType = UnitType;\r\n    this.Prefix = Prefix;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Dimensions = tape[ptr++];\r\n    let UnitType = tape[ptr++];\r\n    let Prefix = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    return new IfcSIUnit(expressID, type, Dimensions, UnitType, Prefix, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Dimensions);\r\n    ;\r\n    args.push(this.UnitType);\r\n    ;\r\n    args.push(this.Prefix);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSanitaryTerminal = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSanitaryTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSanitaryTerminalType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSanitaryTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSchedulingTime = class {\r\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.DataOrigin = DataOrigin;\r\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let DataOrigin = tape[ptr++];\r\n    let UserDefinedDataOrigin = tape[ptr++];\r\n    return new IfcSchedulingTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.DataOrigin);\r\n    ;\r\n    args.push(this.UserDefinedDataOrigin);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSeamCurve = class {\r\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Curve3D = Curve3D;\r\n    this.AssociatedGeometry = AssociatedGeometry;\r\n    this.MasterRepresentation = MasterRepresentation;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Curve3D = tape[ptr++];\r\n    let AssociatedGeometry = tape[ptr++];\r\n    let MasterRepresentation = tape[ptr++];\r\n    return new IfcSeamCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Curve3D);\r\n    ;\r\n    args.push(this.AssociatedGeometry);\r\n    ;\r\n    args.push(this.MasterRepresentation);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSectionProperties = class {\r\n  constructor(expressID, type, SectionType, StartProfile, EndProfile) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SectionType = SectionType;\r\n    this.StartProfile = StartProfile;\r\n    this.EndProfile = EndProfile;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SectionType = tape[ptr++];\r\n    let StartProfile = tape[ptr++];\r\n    let EndProfile = tape[ptr++];\r\n    return new IfcSectionProperties(expressID, type, SectionType, StartProfile, EndProfile);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SectionType);\r\n    ;\r\n    args.push(this.StartProfile);\r\n    ;\r\n    args.push(this.EndProfile);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSectionReinforcementProperties = class {\r\n  constructor(expressID, type, LongitudinalStartPosition, LongitudinalEndPosition, TransversePosition, ReinforcementRole, SectionDefinition, CrossSectionReinforcementDefinitions) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.LongitudinalStartPosition = LongitudinalStartPosition;\r\n    this.LongitudinalEndPosition = LongitudinalEndPosition;\r\n    this.TransversePosition = TransversePosition;\r\n    this.ReinforcementRole = ReinforcementRole;\r\n    this.SectionDefinition = SectionDefinition;\r\n    this.CrossSectionReinforcementDefinitions = CrossSectionReinforcementDefinitions;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let LongitudinalStartPosition = tape[ptr++];\r\n    let LongitudinalEndPosition = tape[ptr++];\r\n    let TransversePosition = tape[ptr++];\r\n    let ReinforcementRole = tape[ptr++];\r\n    let SectionDefinition = tape[ptr++];\r\n    let CrossSectionReinforcementDefinitions = tape[ptr++];\r\n    return new IfcSectionReinforcementProperties(expressID, type, LongitudinalStartPosition, LongitudinalEndPosition, TransversePosition, ReinforcementRole, SectionDefinition, CrossSectionReinforcementDefinitions);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.LongitudinalStartPosition);\r\n    ;\r\n    args.push(this.LongitudinalEndPosition);\r\n    ;\r\n    args.push(this.TransversePosition);\r\n    ;\r\n    args.push(this.ReinforcementRole);\r\n    ;\r\n    args.push(this.SectionDefinition);\r\n    ;\r\n    args.push(this.CrossSectionReinforcementDefinitions);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSectionedSolid = class {\r\n  constructor(expressID, type, Directrix, CrossSections) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Directrix = Directrix;\r\n    this.CrossSections = CrossSections;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Directrix = tape[ptr++];\r\n    let CrossSections = tape[ptr++];\r\n    return new IfcSectionedSolid(expressID, type, Directrix, CrossSections);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Directrix);\r\n    ;\r\n    args.push(this.CrossSections);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSectionedSolidHorizontal = class {\r\n  constructor(expressID, type, Directrix, CrossSections, CrossSectionPositions, FixedAxisVertical) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Directrix = Directrix;\r\n    this.CrossSections = CrossSections;\r\n    this.CrossSectionPositions = CrossSectionPositions;\r\n    this.FixedAxisVertical = FixedAxisVertical;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Directrix = tape[ptr++];\r\n    let CrossSections = tape[ptr++];\r\n    let CrossSectionPositions = tape[ptr++];\r\n    let FixedAxisVertical = tape[ptr++];\r\n    return new IfcSectionedSolidHorizontal(expressID, type, Directrix, CrossSections, CrossSectionPositions, FixedAxisVertical);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Directrix);\r\n    ;\r\n    args.push(this.CrossSections);\r\n    ;\r\n    args.push(this.CrossSectionPositions);\r\n    ;\r\n    args.push(this.FixedAxisVertical);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSectionedSpine = class {\r\n  constructor(expressID, type, SpineCurve, CrossSections, CrossSectionPositions) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SpineCurve = SpineCurve;\r\n    this.CrossSections = CrossSections;\r\n    this.CrossSectionPositions = CrossSectionPositions;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SpineCurve = tape[ptr++];\r\n    let CrossSections = tape[ptr++];\r\n    let CrossSectionPositions = tape[ptr++];\r\n    return new IfcSectionedSpine(expressID, type, SpineCurve, CrossSections, CrossSectionPositions);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SpineCurve);\r\n    ;\r\n    args.push(this.CrossSections);\r\n    ;\r\n    args.push(this.CrossSectionPositions);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSensor = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSensor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSensorType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSensorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcShadingDevice = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcShadingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcShadingDeviceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcShadingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcShapeAspect = class {\r\n  constructor(expressID, type, ShapeRepresentations, Name, Description, ProductDefinitional, PartOfProductDefinitionShape) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ShapeRepresentations = ShapeRepresentations;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ProductDefinitional = ProductDefinitional;\r\n    this.PartOfProductDefinitionShape = PartOfProductDefinitionShape;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ShapeRepresentations = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ProductDefinitional = tape[ptr++];\r\n    let PartOfProductDefinitionShape = tape[ptr++];\r\n    return new IfcShapeAspect(expressID, type, ShapeRepresentations, Name, Description, ProductDefinitional, PartOfProductDefinitionShape);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ShapeRepresentations);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ProductDefinitional);\r\n    ;\r\n    args.push(this.PartOfProductDefinitionShape);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcShapeModel = class {\r\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ContextOfItems = ContextOfItems;\r\n    this.RepresentationIdentifier = RepresentationIdentifier;\r\n    this.RepresentationType = RepresentationType;\r\n    this.Items = Items;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ContextOfItems = tape[ptr++];\r\n    let RepresentationIdentifier = tape[ptr++];\r\n    let RepresentationType = tape[ptr++];\r\n    let Items = tape[ptr++];\r\n    return new IfcShapeModel(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ContextOfItems);\r\n    ;\r\n    args.push(this.RepresentationIdentifier);\r\n    ;\r\n    args.push(this.RepresentationType);\r\n    ;\r\n    args.push(this.Items);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcShapeRepresentation = class {\r\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ContextOfItems = ContextOfItems;\r\n    this.RepresentationIdentifier = RepresentationIdentifier;\r\n    this.RepresentationType = RepresentationType;\r\n    this.Items = Items;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ContextOfItems = tape[ptr++];\r\n    let RepresentationIdentifier = tape[ptr++];\r\n    let RepresentationType = tape[ptr++];\r\n    let Items = tape[ptr++];\r\n    return new IfcShapeRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ContextOfItems);\r\n    ;\r\n    args.push(this.RepresentationIdentifier);\r\n    ;\r\n    args.push(this.RepresentationType);\r\n    ;\r\n    args.push(this.Items);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcShellBasedSurfaceModel = class {\r\n  constructor(expressID, type, SbsmBoundary) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SbsmBoundary = SbsmBoundary;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SbsmBoundary = tape[ptr++];\r\n    return new IfcShellBasedSurfaceModel(expressID, type, SbsmBoundary);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SbsmBoundary);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSimpleProperty = class {\r\n  constructor(expressID, type, Name, Description) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    return new IfcSimpleProperty(expressID, type, Name, Description);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSimplePropertyTemplate = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, PrimaryMeasureType, SecondaryMeasureType, Enumerators, PrimaryUnit, SecondaryUnit, Expression, AccessState) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.TemplateType = TemplateType;\r\n    this.PrimaryMeasureType = PrimaryMeasureType;\r\n    this.SecondaryMeasureType = SecondaryMeasureType;\r\n    this.Enumerators = Enumerators;\r\n    this.PrimaryUnit = PrimaryUnit;\r\n    this.SecondaryUnit = SecondaryUnit;\r\n    this.Expression = Expression;\r\n    this.AccessState = AccessState;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let TemplateType = tape[ptr++];\r\n    let PrimaryMeasureType = tape[ptr++];\r\n    let SecondaryMeasureType = tape[ptr++];\r\n    let Enumerators = tape[ptr++];\r\n    let PrimaryUnit = tape[ptr++];\r\n    let SecondaryUnit = tape[ptr++];\r\n    let Expression = tape[ptr++];\r\n    let AccessState = tape[ptr++];\r\n    return new IfcSimplePropertyTemplate(expressID, type, GlobalId, OwnerHistory, Name, Description, TemplateType, PrimaryMeasureType, SecondaryMeasureType, Enumerators, PrimaryUnit, SecondaryUnit, Expression, AccessState);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.TemplateType);\r\n    ;\r\n    args.push(this.PrimaryMeasureType);\r\n    ;\r\n    args.push(this.SecondaryMeasureType);\r\n    ;\r\n    args.push(this.Enumerators);\r\n    ;\r\n    args.push(this.PrimaryUnit);\r\n    ;\r\n    args.push(this.SecondaryUnit);\r\n    ;\r\n    args.push(this.Expression);\r\n    ;\r\n    args.push(this.AccessState);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSite = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, RefLatitude, RefLongitude, RefElevation, LandTitleNumber, SiteAddress) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.LongName = LongName;\r\n    this.CompositionType = CompositionType;\r\n    this.RefLatitude = RefLatitude;\r\n    this.RefLongitude = RefLongitude;\r\n    this.RefElevation = RefElevation;\r\n    this.LandTitleNumber = LandTitleNumber;\r\n    this.SiteAddress = SiteAddress;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    let CompositionType = tape[ptr++];\r\n    let RefLatitude = tape[ptr++];\r\n    let RefLongitude = tape[ptr++];\r\n    let RefElevation = tape[ptr++];\r\n    let LandTitleNumber = tape[ptr++];\r\n    let SiteAddress = tape[ptr++];\r\n    return new IfcSite(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, RefLatitude, RefLongitude, RefElevation, LandTitleNumber, SiteAddress);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    args.push(this.CompositionType);\r\n    ;\r\n    args.push(this.RefLatitude);\r\n    ;\r\n    args.push(this.RefLongitude);\r\n    ;\r\n    args.push(this.RefElevation);\r\n    ;\r\n    args.push(this.LandTitleNumber);\r\n    ;\r\n    args.push(this.SiteAddress);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSlab = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSlab(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSlabElementedCase = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSlabElementedCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSlabStandardCase = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSlabStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSlabType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSlabType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSlippageConnectionCondition = class {\r\n  constructor(expressID, type, Name, SlippageX, SlippageY, SlippageZ) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.SlippageX = SlippageX;\r\n    this.SlippageY = SlippageY;\r\n    this.SlippageZ = SlippageZ;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let SlippageX = tape[ptr++];\r\n    let SlippageY = tape[ptr++];\r\n    let SlippageZ = tape[ptr++];\r\n    return new IfcSlippageConnectionCondition(expressID, type, Name, SlippageX, SlippageY, SlippageZ);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.SlippageX);\r\n    ;\r\n    args.push(this.SlippageY);\r\n    ;\r\n    args.push(this.SlippageZ);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSolarDevice = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSolarDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSolarDeviceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSolarDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSolidModel = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcSolidModel(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcSpace = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType, ElevationWithFlooring) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.LongName = LongName;\r\n    this.CompositionType = CompositionType;\r\n    this.PredefinedType = PredefinedType;\r\n    this.ElevationWithFlooring = ElevationWithFlooring;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    let CompositionType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let ElevationWithFlooring = tape[ptr++];\r\n    return new IfcSpace(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType, PredefinedType, ElevationWithFlooring);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    args.push(this.CompositionType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.ElevationWithFlooring);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSpaceHeater = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSpaceHeater(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSpaceHeaterType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSpaceHeaterType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSpaceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n    this.LongName = LongName;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    return new IfcSpaceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSpatialElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.LongName = LongName;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    return new IfcSpatialElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSpatialElementType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcSpatialElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSpatialStructureElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.LongName = LongName;\r\n    this.CompositionType = CompositionType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    let CompositionType = tape[ptr++];\r\n    return new IfcSpatialStructureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, CompositionType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    args.push(this.CompositionType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSpatialStructureElementType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    return new IfcSpatialStructureElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSpatialZone = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.LongName = LongName;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSpatialZone(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, LongName, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSpatialZoneType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n    this.LongName = LongName;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    return new IfcSpatialZoneType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, LongName);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSphere = class {\r\n  constructor(expressID, type, Position, Radius) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Position = Position;\r\n    this.Radius = Radius;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Position = tape[ptr++];\r\n    let Radius = tape[ptr++];\r\n    return new IfcSphere(expressID, type, Position, Radius);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Radius);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSphericalSurface = class {\r\n  constructor(expressID, type, Position, Radius) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Position = Position;\r\n    this.Radius = Radius;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Position = tape[ptr++];\r\n    let Radius = tape[ptr++];\r\n    return new IfcSphericalSurface(expressID, type, Position, Radius);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Radius);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStackTerminal = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcStackTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStackTerminalType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcStackTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStair = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcStair(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStairFlight = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NumberOfRisers, NumberOfTreads, RiserHeight, TreadLength, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.NumberOfRisers = NumberOfRisers;\r\n    this.NumberOfTreads = NumberOfTreads;\r\n    this.RiserHeight = RiserHeight;\r\n    this.TreadLength = TreadLength;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let NumberOfRisers = tape[ptr++];\r\n    let NumberOfTreads = tape[ptr++];\r\n    let RiserHeight = tape[ptr++];\r\n    let TreadLength = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcStairFlight(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, NumberOfRisers, NumberOfTreads, RiserHeight, TreadLength, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.NumberOfRisers);\r\n    ;\r\n    args.push(this.NumberOfTreads);\r\n    ;\r\n    args.push(this.RiserHeight);\r\n    ;\r\n    args.push(this.TreadLength);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStairFlightType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcStairFlightType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStairType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcStairType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralAction = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.AppliedLoad = AppliedLoad;\r\n    this.GlobalOrLocal = GlobalOrLocal;\r\n    this.DestabilizingLoad = DestabilizingLoad;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let AppliedLoad = tape[ptr++];\r\n    let GlobalOrLocal = tape[ptr++];\r\n    let DestabilizingLoad = tape[ptr++];\r\n    return new IfcStructuralAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.AppliedLoad);\r\n    ;\r\n    args.push(this.GlobalOrLocal);\r\n    ;\r\n    args.push(this.DestabilizingLoad);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralActivity = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.AppliedLoad = AppliedLoad;\r\n    this.GlobalOrLocal = GlobalOrLocal;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let AppliedLoad = tape[ptr++];\r\n    let GlobalOrLocal = tape[ptr++];\r\n    return new IfcStructuralActivity(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.AppliedLoad);\r\n    ;\r\n    args.push(this.GlobalOrLocal);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralAnalysisModel = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, OrientationOf2DPlane, LoadedBy, HasResults, SharedPlacement) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.PredefinedType = PredefinedType;\r\n    this.OrientationOf2DPlane = OrientationOf2DPlane;\r\n    this.LoadedBy = LoadedBy;\r\n    this.HasResults = HasResults;\r\n    this.SharedPlacement = SharedPlacement;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let OrientationOf2DPlane = tape[ptr++];\r\n    let LoadedBy = tape[ptr++];\r\n    let HasResults = tape[ptr++];\r\n    let SharedPlacement = tape[ptr++];\r\n    return new IfcStructuralAnalysisModel(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, OrientationOf2DPlane, LoadedBy, HasResults, SharedPlacement);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.OrientationOf2DPlane);\r\n    ;\r\n    args.push(this.LoadedBy);\r\n    ;\r\n    args.push(this.HasResults);\r\n    ;\r\n    args.push(this.SharedPlacement);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralConnection = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.AppliedCondition = AppliedCondition;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let AppliedCondition = tape[ptr++];\r\n    return new IfcStructuralConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.AppliedCondition);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralConnectionCondition = class {\r\n  constructor(expressID, type, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    return new IfcStructuralConnectionCondition(expressID, type, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralCurveAction = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.AppliedLoad = AppliedLoad;\r\n    this.GlobalOrLocal = GlobalOrLocal;\r\n    this.DestabilizingLoad = DestabilizingLoad;\r\n    this.ProjectedOrTrue = ProjectedOrTrue;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let AppliedLoad = tape[ptr++];\r\n    let GlobalOrLocal = tape[ptr++];\r\n    let DestabilizingLoad = tape[ptr++];\r\n    let ProjectedOrTrue = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcStructuralCurveAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.AppliedLoad);\r\n    ;\r\n    args.push(this.GlobalOrLocal);\r\n    ;\r\n    args.push(this.DestabilizingLoad);\r\n    ;\r\n    args.push(this.ProjectedOrTrue);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralCurveConnection = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, Axis) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.AppliedCondition = AppliedCondition;\r\n    this.Axis = Axis;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let AppliedCondition = tape[ptr++];\r\n    let Axis = tape[ptr++];\r\n    return new IfcStructuralCurveConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, Axis);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.AppliedCondition);\r\n    ;\r\n    args.push(this.Axis);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralCurveMember = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.PredefinedType = PredefinedType;\r\n    this.Axis = Axis;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let Axis = tape[ptr++];\r\n    return new IfcStructuralCurveMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.Axis);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralCurveMemberVarying = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.PredefinedType = PredefinedType;\r\n    this.Axis = Axis;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let Axis = tape[ptr++];\r\n    return new IfcStructuralCurveMemberVarying(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Axis);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.Axis);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralCurveReaction = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.AppliedLoad = AppliedLoad;\r\n    this.GlobalOrLocal = GlobalOrLocal;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let AppliedLoad = tape[ptr++];\r\n    let GlobalOrLocal = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcStructuralCurveReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.AppliedLoad);\r\n    ;\r\n    args.push(this.GlobalOrLocal);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralItem = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    return new IfcStructuralItem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralLinearAction = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.AppliedLoad = AppliedLoad;\r\n    this.GlobalOrLocal = GlobalOrLocal;\r\n    this.DestabilizingLoad = DestabilizingLoad;\r\n    this.ProjectedOrTrue = ProjectedOrTrue;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let AppliedLoad = tape[ptr++];\r\n    let GlobalOrLocal = tape[ptr++];\r\n    let DestabilizingLoad = tape[ptr++];\r\n    let ProjectedOrTrue = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcStructuralLinearAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.AppliedLoad);\r\n    ;\r\n    args.push(this.GlobalOrLocal);\r\n    ;\r\n    args.push(this.DestabilizingLoad);\r\n    ;\r\n    args.push(this.ProjectedOrTrue);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralLoad = class {\r\n  constructor(expressID, type, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    return new IfcStructuralLoad(expressID, type, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralLoadCase = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose, SelfWeightCoefficients) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.PredefinedType = PredefinedType;\r\n    this.ActionType = ActionType;\r\n    this.ActionSource = ActionSource;\r\n    this.Coefficient = Coefficient;\r\n    this.Purpose = Purpose;\r\n    this.SelfWeightCoefficients = SelfWeightCoefficients;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let ActionType = tape[ptr++];\r\n    let ActionSource = tape[ptr++];\r\n    let Coefficient = tape[ptr++];\r\n    let Purpose = tape[ptr++];\r\n    let SelfWeightCoefficients = tape[ptr++];\r\n    return new IfcStructuralLoadCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose, SelfWeightCoefficients);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.ActionType);\r\n    ;\r\n    args.push(this.ActionSource);\r\n    ;\r\n    args.push(this.Coefficient);\r\n    ;\r\n    args.push(this.Purpose);\r\n    ;\r\n    args.push(this.SelfWeightCoefficients);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralLoadConfiguration = class {\r\n  constructor(expressID, type, Name, Values, Locations) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Values = Values;\r\n    this.Locations = Locations;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Values = tape[ptr++];\r\n    let Locations = tape[ptr++];\r\n    return new IfcStructuralLoadConfiguration(expressID, type, Name, Values, Locations);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Values);\r\n    ;\r\n    args.push(this.Locations);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralLoadGroup = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.PredefinedType = PredefinedType;\r\n    this.ActionType = ActionType;\r\n    this.ActionSource = ActionSource;\r\n    this.Coefficient = Coefficient;\r\n    this.Purpose = Purpose;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let ActionType = tape[ptr++];\r\n    let ActionSource = tape[ptr++];\r\n    let Coefficient = tape[ptr++];\r\n    let Purpose = tape[ptr++];\r\n    return new IfcStructuralLoadGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, PredefinedType, ActionType, ActionSource, Coefficient, Purpose);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.ActionType);\r\n    ;\r\n    args.push(this.ActionSource);\r\n    ;\r\n    args.push(this.Coefficient);\r\n    ;\r\n    args.push(this.Purpose);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralLoadLinearForce = class {\r\n  constructor(expressID, type, Name, LinearForceX, LinearForceY, LinearForceZ, LinearMomentX, LinearMomentY, LinearMomentZ) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.LinearForceX = LinearForceX;\r\n    this.LinearForceY = LinearForceY;\r\n    this.LinearForceZ = LinearForceZ;\r\n    this.LinearMomentX = LinearMomentX;\r\n    this.LinearMomentY = LinearMomentY;\r\n    this.LinearMomentZ = LinearMomentZ;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let LinearForceX = tape[ptr++];\r\n    let LinearForceY = tape[ptr++];\r\n    let LinearForceZ = tape[ptr++];\r\n    let LinearMomentX = tape[ptr++];\r\n    let LinearMomentY = tape[ptr++];\r\n    let LinearMomentZ = tape[ptr++];\r\n    return new IfcStructuralLoadLinearForce(expressID, type, Name, LinearForceX, LinearForceY, LinearForceZ, LinearMomentX, LinearMomentY, LinearMomentZ);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.LinearForceX);\r\n    ;\r\n    args.push(this.LinearForceY);\r\n    ;\r\n    args.push(this.LinearForceZ);\r\n    ;\r\n    args.push(this.LinearMomentX);\r\n    ;\r\n    args.push(this.LinearMomentY);\r\n    ;\r\n    args.push(this.LinearMomentZ);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralLoadOrResult = class {\r\n  constructor(expressID, type, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    return new IfcStructuralLoadOrResult(expressID, type, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralLoadPlanarForce = class {\r\n  constructor(expressID, type, Name, PlanarForceX, PlanarForceY, PlanarForceZ) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.PlanarForceX = PlanarForceX;\r\n    this.PlanarForceY = PlanarForceY;\r\n    this.PlanarForceZ = PlanarForceZ;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let PlanarForceX = tape[ptr++];\r\n    let PlanarForceY = tape[ptr++];\r\n    let PlanarForceZ = tape[ptr++];\r\n    return new IfcStructuralLoadPlanarForce(expressID, type, Name, PlanarForceX, PlanarForceY, PlanarForceZ);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.PlanarForceX);\r\n    ;\r\n    args.push(this.PlanarForceY);\r\n    ;\r\n    args.push(this.PlanarForceZ);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralLoadSingleDisplacement = class {\r\n  constructor(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.DisplacementX = DisplacementX;\r\n    this.DisplacementY = DisplacementY;\r\n    this.DisplacementZ = DisplacementZ;\r\n    this.RotationalDisplacementRX = RotationalDisplacementRX;\r\n    this.RotationalDisplacementRY = RotationalDisplacementRY;\r\n    this.RotationalDisplacementRZ = RotationalDisplacementRZ;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let DisplacementX = tape[ptr++];\r\n    let DisplacementY = tape[ptr++];\r\n    let DisplacementZ = tape[ptr++];\r\n    let RotationalDisplacementRX = tape[ptr++];\r\n    let RotationalDisplacementRY = tape[ptr++];\r\n    let RotationalDisplacementRZ = tape[ptr++];\r\n    return new IfcStructuralLoadSingleDisplacement(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.DisplacementX);\r\n    ;\r\n    args.push(this.DisplacementY);\r\n    ;\r\n    args.push(this.DisplacementZ);\r\n    ;\r\n    args.push(this.RotationalDisplacementRX);\r\n    ;\r\n    args.push(this.RotationalDisplacementRY);\r\n    ;\r\n    args.push(this.RotationalDisplacementRZ);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralLoadSingleDisplacementDistortion = class {\r\n  constructor(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ, Distortion) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.DisplacementX = DisplacementX;\r\n    this.DisplacementY = DisplacementY;\r\n    this.DisplacementZ = DisplacementZ;\r\n    this.RotationalDisplacementRX = RotationalDisplacementRX;\r\n    this.RotationalDisplacementRY = RotationalDisplacementRY;\r\n    this.RotationalDisplacementRZ = RotationalDisplacementRZ;\r\n    this.Distortion = Distortion;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let DisplacementX = tape[ptr++];\r\n    let DisplacementY = tape[ptr++];\r\n    let DisplacementZ = tape[ptr++];\r\n    let RotationalDisplacementRX = tape[ptr++];\r\n    let RotationalDisplacementRY = tape[ptr++];\r\n    let RotationalDisplacementRZ = tape[ptr++];\r\n    let Distortion = tape[ptr++];\r\n    return new IfcStructuralLoadSingleDisplacementDistortion(expressID, type, Name, DisplacementX, DisplacementY, DisplacementZ, RotationalDisplacementRX, RotationalDisplacementRY, RotationalDisplacementRZ, Distortion);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.DisplacementX);\r\n    ;\r\n    args.push(this.DisplacementY);\r\n    ;\r\n    args.push(this.DisplacementZ);\r\n    ;\r\n    args.push(this.RotationalDisplacementRX);\r\n    ;\r\n    args.push(this.RotationalDisplacementRY);\r\n    ;\r\n    args.push(this.RotationalDisplacementRZ);\r\n    ;\r\n    args.push(this.Distortion);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralLoadSingleForce = class {\r\n  constructor(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.ForceX = ForceX;\r\n    this.ForceY = ForceY;\r\n    this.ForceZ = ForceZ;\r\n    this.MomentX = MomentX;\r\n    this.MomentY = MomentY;\r\n    this.MomentZ = MomentZ;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let ForceX = tape[ptr++];\r\n    let ForceY = tape[ptr++];\r\n    let ForceZ = tape[ptr++];\r\n    let MomentX = tape[ptr++];\r\n    let MomentY = tape[ptr++];\r\n    let MomentZ = tape[ptr++];\r\n    return new IfcStructuralLoadSingleForce(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.ForceX);\r\n    ;\r\n    args.push(this.ForceY);\r\n    ;\r\n    args.push(this.ForceZ);\r\n    ;\r\n    args.push(this.MomentX);\r\n    ;\r\n    args.push(this.MomentY);\r\n    ;\r\n    args.push(this.MomentZ);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralLoadSingleForceWarping = class {\r\n  constructor(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ, WarpingMoment) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.ForceX = ForceX;\r\n    this.ForceY = ForceY;\r\n    this.ForceZ = ForceZ;\r\n    this.MomentX = MomentX;\r\n    this.MomentY = MomentY;\r\n    this.MomentZ = MomentZ;\r\n    this.WarpingMoment = WarpingMoment;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let ForceX = tape[ptr++];\r\n    let ForceY = tape[ptr++];\r\n    let ForceZ = tape[ptr++];\r\n    let MomentX = tape[ptr++];\r\n    let MomentY = tape[ptr++];\r\n    let MomentZ = tape[ptr++];\r\n    let WarpingMoment = tape[ptr++];\r\n    return new IfcStructuralLoadSingleForceWarping(expressID, type, Name, ForceX, ForceY, ForceZ, MomentX, MomentY, MomentZ, WarpingMoment);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.ForceX);\r\n    ;\r\n    args.push(this.ForceY);\r\n    ;\r\n    args.push(this.ForceZ);\r\n    ;\r\n    args.push(this.MomentX);\r\n    ;\r\n    args.push(this.MomentY);\r\n    ;\r\n    args.push(this.MomentZ);\r\n    ;\r\n    args.push(this.WarpingMoment);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralLoadStatic = class {\r\n  constructor(expressID, type, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    return new IfcStructuralLoadStatic(expressID, type, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralLoadTemperature = class {\r\n  constructor(expressID, type, Name, DeltaTConstant, DeltaTY, DeltaTZ) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.DeltaTConstant = DeltaTConstant;\r\n    this.DeltaTY = DeltaTY;\r\n    this.DeltaTZ = DeltaTZ;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let DeltaTConstant = tape[ptr++];\r\n    let DeltaTY = tape[ptr++];\r\n    let DeltaTZ = tape[ptr++];\r\n    return new IfcStructuralLoadTemperature(expressID, type, Name, DeltaTConstant, DeltaTY, DeltaTZ);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.DeltaTConstant);\r\n    ;\r\n    args.push(this.DeltaTY);\r\n    ;\r\n    args.push(this.DeltaTZ);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralMember = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    return new IfcStructuralMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralPlanarAction = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.AppliedLoad = AppliedLoad;\r\n    this.GlobalOrLocal = GlobalOrLocal;\r\n    this.DestabilizingLoad = DestabilizingLoad;\r\n    this.ProjectedOrTrue = ProjectedOrTrue;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let AppliedLoad = tape[ptr++];\r\n    let GlobalOrLocal = tape[ptr++];\r\n    let DestabilizingLoad = tape[ptr++];\r\n    let ProjectedOrTrue = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcStructuralPlanarAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.AppliedLoad);\r\n    ;\r\n    args.push(this.GlobalOrLocal);\r\n    ;\r\n    args.push(this.DestabilizingLoad);\r\n    ;\r\n    args.push(this.ProjectedOrTrue);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralPointAction = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.AppliedLoad = AppliedLoad;\r\n    this.GlobalOrLocal = GlobalOrLocal;\r\n    this.DestabilizingLoad = DestabilizingLoad;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let AppliedLoad = tape[ptr++];\r\n    let GlobalOrLocal = tape[ptr++];\r\n    let DestabilizingLoad = tape[ptr++];\r\n    return new IfcStructuralPointAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.AppliedLoad);\r\n    ;\r\n    args.push(this.GlobalOrLocal);\r\n    ;\r\n    args.push(this.DestabilizingLoad);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralPointConnection = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, ConditionCoordinateSystem) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.AppliedCondition = AppliedCondition;\r\n    this.ConditionCoordinateSystem = ConditionCoordinateSystem;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let AppliedCondition = tape[ptr++];\r\n    let ConditionCoordinateSystem = tape[ptr++];\r\n    return new IfcStructuralPointConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition, ConditionCoordinateSystem);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.AppliedCondition);\r\n    ;\r\n    args.push(this.ConditionCoordinateSystem);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralPointReaction = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.AppliedLoad = AppliedLoad;\r\n    this.GlobalOrLocal = GlobalOrLocal;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let AppliedLoad = tape[ptr++];\r\n    let GlobalOrLocal = tape[ptr++];\r\n    return new IfcStructuralPointReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.AppliedLoad);\r\n    ;\r\n    args.push(this.GlobalOrLocal);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralReaction = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.AppliedLoad = AppliedLoad;\r\n    this.GlobalOrLocal = GlobalOrLocal;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let AppliedLoad = tape[ptr++];\r\n    let GlobalOrLocal = tape[ptr++];\r\n    return new IfcStructuralReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.AppliedLoad);\r\n    ;\r\n    args.push(this.GlobalOrLocal);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralResultGroup = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheoryType, ResultForLoadGroup, IsLinear) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.TheoryType = TheoryType;\r\n    this.ResultForLoadGroup = ResultForLoadGroup;\r\n    this.IsLinear = IsLinear;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let TheoryType = tape[ptr++];\r\n    let ResultForLoadGroup = tape[ptr++];\r\n    let IsLinear = tape[ptr++];\r\n    return new IfcStructuralResultGroup(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, TheoryType, ResultForLoadGroup, IsLinear);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.TheoryType);\r\n    ;\r\n    args.push(this.ResultForLoadGroup);\r\n    ;\r\n    args.push(this.IsLinear);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralSurfaceAction = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.AppliedLoad = AppliedLoad;\r\n    this.GlobalOrLocal = GlobalOrLocal;\r\n    this.DestabilizingLoad = DestabilizingLoad;\r\n    this.ProjectedOrTrue = ProjectedOrTrue;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let AppliedLoad = tape[ptr++];\r\n    let GlobalOrLocal = tape[ptr++];\r\n    let DestabilizingLoad = tape[ptr++];\r\n    let ProjectedOrTrue = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcStructuralSurfaceAction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, DestabilizingLoad, ProjectedOrTrue, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.AppliedLoad);\r\n    ;\r\n    args.push(this.GlobalOrLocal);\r\n    ;\r\n    args.push(this.DestabilizingLoad);\r\n    ;\r\n    args.push(this.ProjectedOrTrue);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralSurfaceConnection = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.AppliedCondition = AppliedCondition;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let AppliedCondition = tape[ptr++];\r\n    return new IfcStructuralSurfaceConnection(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedCondition);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.AppliedCondition);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralSurfaceMember = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.PredefinedType = PredefinedType;\r\n    this.Thickness = Thickness;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let Thickness = tape[ptr++];\r\n    return new IfcStructuralSurfaceMember(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.Thickness);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralSurfaceMemberVarying = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.PredefinedType = PredefinedType;\r\n    this.Thickness = Thickness;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let Thickness = tape[ptr++];\r\n    return new IfcStructuralSurfaceMemberVarying(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, PredefinedType, Thickness);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.Thickness);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStructuralSurfaceReaction = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.AppliedLoad = AppliedLoad;\r\n    this.GlobalOrLocal = GlobalOrLocal;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let AppliedLoad = tape[ptr++];\r\n    let GlobalOrLocal = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcStructuralSurfaceReaction(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, AppliedLoad, GlobalOrLocal, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.AppliedLoad);\r\n    ;\r\n    args.push(this.GlobalOrLocal);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStyleModel = class {\r\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ContextOfItems = ContextOfItems;\r\n    this.RepresentationIdentifier = RepresentationIdentifier;\r\n    this.RepresentationType = RepresentationType;\r\n    this.Items = Items;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ContextOfItems = tape[ptr++];\r\n    let RepresentationIdentifier = tape[ptr++];\r\n    let RepresentationType = tape[ptr++];\r\n    let Items = tape[ptr++];\r\n    return new IfcStyleModel(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ContextOfItems);\r\n    ;\r\n    args.push(this.RepresentationIdentifier);\r\n    ;\r\n    args.push(this.RepresentationType);\r\n    ;\r\n    args.push(this.Items);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStyledItem = class {\r\n  constructor(expressID, type, Item, Styles, Name) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Item = Item;\r\n    this.Styles = Styles;\r\n    this.Name = Name;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Item = tape[ptr++];\r\n    let Styles = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    return new IfcStyledItem(expressID, type, Item, Styles, Name);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Item);\r\n    ;\r\n    args.push(this.Styles);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcStyledRepresentation = class {\r\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ContextOfItems = ContextOfItems;\r\n    this.RepresentationIdentifier = RepresentationIdentifier;\r\n    this.RepresentationType = RepresentationType;\r\n    this.Items = Items;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ContextOfItems = tape[ptr++];\r\n    let RepresentationIdentifier = tape[ptr++];\r\n    let RepresentationType = tape[ptr++];\r\n    let Items = tape[ptr++];\r\n    return new IfcStyledRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ContextOfItems);\r\n    ;\r\n    args.push(this.RepresentationIdentifier);\r\n    ;\r\n    args.push(this.RepresentationType);\r\n    ;\r\n    args.push(this.Items);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSubContractResource = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.Usage = Usage;\r\n    this.BaseCosts = BaseCosts;\r\n    this.BaseQuantity = BaseQuantity;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let Usage = tape[ptr++];\r\n    let BaseCosts = tape[ptr++];\r\n    let BaseQuantity = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSubContractResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Usage, BaseCosts, BaseQuantity, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.Usage);\r\n    ;\r\n    args.push(this.BaseCosts);\r\n    ;\r\n    args.push(this.BaseQuantity);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSubContractResourceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.ResourceType = ResourceType;\r\n    this.BaseCosts = BaseCosts;\r\n    this.BaseQuantity = BaseQuantity;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let ResourceType = tape[ptr++];\r\n    let BaseCosts = tape[ptr++];\r\n    let BaseQuantity = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSubContractResourceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType, BaseCosts, BaseQuantity, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.ResourceType);\r\n    ;\r\n    args.push(this.BaseCosts);\r\n    ;\r\n    args.push(this.BaseQuantity);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSubedge = class {\r\n  constructor(expressID, type, EdgeStart, EdgeEnd, ParentEdge) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.EdgeStart = EdgeStart;\r\n    this.EdgeEnd = EdgeEnd;\r\n    this.ParentEdge = ParentEdge;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let EdgeStart = tape[ptr++];\r\n    let EdgeEnd = tape[ptr++];\r\n    let ParentEdge = tape[ptr++];\r\n    return new IfcSubedge(expressID, type, EdgeStart, EdgeEnd, ParentEdge);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.EdgeStart);\r\n    ;\r\n    args.push(this.EdgeEnd);\r\n    ;\r\n    args.push(this.ParentEdge);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSurface = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcSurface(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcSurfaceCurve = class {\r\n  constructor(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Curve3D = Curve3D;\r\n    this.AssociatedGeometry = AssociatedGeometry;\r\n    this.MasterRepresentation = MasterRepresentation;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Curve3D = tape[ptr++];\r\n    let AssociatedGeometry = tape[ptr++];\r\n    let MasterRepresentation = tape[ptr++];\r\n    return new IfcSurfaceCurve(expressID, type, Curve3D, AssociatedGeometry, MasterRepresentation);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Curve3D);\r\n    ;\r\n    args.push(this.AssociatedGeometry);\r\n    ;\r\n    args.push(this.MasterRepresentation);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSurfaceCurveSweptAreaSolid = class {\r\n  constructor(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, ReferenceSurface) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SweptArea = SweptArea;\r\n    this.Position = Position;\r\n    this.Directrix = Directrix;\r\n    this.StartParam = StartParam;\r\n    this.EndParam = EndParam;\r\n    this.ReferenceSurface = ReferenceSurface;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SweptArea = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let Directrix = tape[ptr++];\r\n    let StartParam = tape[ptr++];\r\n    let EndParam = tape[ptr++];\r\n    let ReferenceSurface = tape[ptr++];\r\n    return new IfcSurfaceCurveSweptAreaSolid(expressID, type, SweptArea, Position, Directrix, StartParam, EndParam, ReferenceSurface);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SweptArea);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Directrix);\r\n    ;\r\n    args.push(this.StartParam);\r\n    ;\r\n    args.push(this.EndParam);\r\n    ;\r\n    args.push(this.ReferenceSurface);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSurfaceFeature = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSurfaceFeature(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSurfaceOfLinearExtrusion = class {\r\n  constructor(expressID, type, SweptCurve, Position, ExtrudedDirection, Depth) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SweptCurve = SweptCurve;\r\n    this.Position = Position;\r\n    this.ExtrudedDirection = ExtrudedDirection;\r\n    this.Depth = Depth;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SweptCurve = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let ExtrudedDirection = tape[ptr++];\r\n    let Depth = tape[ptr++];\r\n    return new IfcSurfaceOfLinearExtrusion(expressID, type, SweptCurve, Position, ExtrudedDirection, Depth);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SweptCurve);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.ExtrudedDirection);\r\n    ;\r\n    args.push(this.Depth);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSurfaceOfRevolution = class {\r\n  constructor(expressID, type, SweptCurve, Position, AxisPosition) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SweptCurve = SweptCurve;\r\n    this.Position = Position;\r\n    this.AxisPosition = AxisPosition;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SweptCurve = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let AxisPosition = tape[ptr++];\r\n    return new IfcSurfaceOfRevolution(expressID, type, SweptCurve, Position, AxisPosition);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SweptCurve);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.AxisPosition);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSurfaceReinforcementArea = class {\r\n  constructor(expressID, type, Name, SurfaceReinforcement1, SurfaceReinforcement2, ShearReinforcement) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.SurfaceReinforcement1 = SurfaceReinforcement1;\r\n    this.SurfaceReinforcement2 = SurfaceReinforcement2;\r\n    this.ShearReinforcement = ShearReinforcement;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let SurfaceReinforcement1 = tape[ptr++];\r\n    let SurfaceReinforcement2 = tape[ptr++];\r\n    let ShearReinforcement = tape[ptr++];\r\n    return new IfcSurfaceReinforcementArea(expressID, type, Name, SurfaceReinforcement1, SurfaceReinforcement2, ShearReinforcement);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.SurfaceReinforcement1);\r\n    ;\r\n    args.push(this.SurfaceReinforcement2);\r\n    ;\r\n    args.push(this.ShearReinforcement);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSurfaceStyle = class {\r\n  constructor(expressID, type, Name, Side, Styles) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Side = Side;\r\n    this.Styles = Styles;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Side = tape[ptr++];\r\n    let Styles = tape[ptr++];\r\n    return new IfcSurfaceStyle(expressID, type, Name, Side, Styles);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Side);\r\n    ;\r\n    args.push(this.Styles);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSurfaceStyleLighting = class {\r\n  constructor(expressID, type, DiffuseTransmissionColour, DiffuseReflectionColour, TransmissionColour, ReflectanceColour) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.DiffuseTransmissionColour = DiffuseTransmissionColour;\r\n    this.DiffuseReflectionColour = DiffuseReflectionColour;\r\n    this.TransmissionColour = TransmissionColour;\r\n    this.ReflectanceColour = ReflectanceColour;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let DiffuseTransmissionColour = tape[ptr++];\r\n    let DiffuseReflectionColour = tape[ptr++];\r\n    let TransmissionColour = tape[ptr++];\r\n    let ReflectanceColour = tape[ptr++];\r\n    return new IfcSurfaceStyleLighting(expressID, type, DiffuseTransmissionColour, DiffuseReflectionColour, TransmissionColour, ReflectanceColour);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.DiffuseTransmissionColour);\r\n    ;\r\n    args.push(this.DiffuseReflectionColour);\r\n    ;\r\n    args.push(this.TransmissionColour);\r\n    ;\r\n    args.push(this.ReflectanceColour);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSurfaceStyleRefraction = class {\r\n  constructor(expressID, type, RefractionIndex, DispersionFactor) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.RefractionIndex = RefractionIndex;\r\n    this.DispersionFactor = DispersionFactor;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let RefractionIndex = tape[ptr++];\r\n    let DispersionFactor = tape[ptr++];\r\n    return new IfcSurfaceStyleRefraction(expressID, type, RefractionIndex, DispersionFactor);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.RefractionIndex);\r\n    ;\r\n    args.push(this.DispersionFactor);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSurfaceStyleRendering = class {\r\n  constructor(expressID, type, SurfaceColour, Transparency, DiffuseColour, TransmissionColour, DiffuseTransmissionColour, ReflectionColour, SpecularColour, SpecularHighlight, ReflectanceMethod) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SurfaceColour = SurfaceColour;\r\n    this.Transparency = Transparency;\r\n    this.DiffuseColour = DiffuseColour;\r\n    this.TransmissionColour = TransmissionColour;\r\n    this.DiffuseTransmissionColour = DiffuseTransmissionColour;\r\n    this.ReflectionColour = ReflectionColour;\r\n    this.SpecularColour = SpecularColour;\r\n    this.SpecularHighlight = SpecularHighlight;\r\n    this.ReflectanceMethod = ReflectanceMethod;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SurfaceColour = tape[ptr++];\r\n    let Transparency = tape[ptr++];\r\n    let DiffuseColour = tape[ptr++];\r\n    let TransmissionColour = tape[ptr++];\r\n    let DiffuseTransmissionColour = tape[ptr++];\r\n    let ReflectionColour = tape[ptr++];\r\n    let SpecularColour = tape[ptr++];\r\n    let SpecularHighlight = tape[ptr++];\r\n    let ReflectanceMethod = tape[ptr++];\r\n    return new IfcSurfaceStyleRendering(expressID, type, SurfaceColour, Transparency, DiffuseColour, TransmissionColour, DiffuseTransmissionColour, ReflectionColour, SpecularColour, SpecularHighlight, ReflectanceMethod);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SurfaceColour);\r\n    ;\r\n    args.push(this.Transparency);\r\n    ;\r\n    args.push(this.DiffuseColour);\r\n    ;\r\n    args.push(this.TransmissionColour);\r\n    ;\r\n    args.push(this.DiffuseTransmissionColour);\r\n    ;\r\n    args.push(this.ReflectionColour);\r\n    ;\r\n    args.push(this.SpecularColour);\r\n    ;\r\n    args.push(this.SpecularHighlight);\r\n    ;\r\n    args.push(this.ReflectanceMethod);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSurfaceStyleShading = class {\r\n  constructor(expressID, type, SurfaceColour, Transparency) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SurfaceColour = SurfaceColour;\r\n    this.Transparency = Transparency;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SurfaceColour = tape[ptr++];\r\n    let Transparency = tape[ptr++];\r\n    return new IfcSurfaceStyleShading(expressID, type, SurfaceColour, Transparency);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SurfaceColour);\r\n    ;\r\n    args.push(this.Transparency);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSurfaceStyleWithTextures = class {\r\n  constructor(expressID, type, Textures) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Textures = Textures;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Textures = tape[ptr++];\r\n    return new IfcSurfaceStyleWithTextures(expressID, type, Textures);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Textures);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSurfaceTexture = class {\r\n  constructor(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.RepeatS = RepeatS;\r\n    this.RepeatT = RepeatT;\r\n    this.Mode = Mode;\r\n    this.TextureTransform = TextureTransform;\r\n    this.Parameter = Parameter;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let RepeatS = tape[ptr++];\r\n    let RepeatT = tape[ptr++];\r\n    let Mode = tape[ptr++];\r\n    let TextureTransform = tape[ptr++];\r\n    let Parameter = tape[ptr++];\r\n    return new IfcSurfaceTexture(expressID, type, RepeatS, RepeatT, Mode, TextureTransform, Parameter);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.RepeatS);\r\n    ;\r\n    args.push(this.RepeatT);\r\n    ;\r\n    args.push(this.Mode);\r\n    ;\r\n    args.push(this.TextureTransform);\r\n    ;\r\n    args.push(this.Parameter);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSweptAreaSolid = class {\r\n  constructor(expressID, type, SweptArea, Position) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SweptArea = SweptArea;\r\n    this.Position = Position;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SweptArea = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    return new IfcSweptAreaSolid(expressID, type, SweptArea, Position);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SweptArea);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSweptDiskSolid = class {\r\n  constructor(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Directrix = Directrix;\r\n    this.Radius = Radius;\r\n    this.InnerRadius = InnerRadius;\r\n    this.StartParam = StartParam;\r\n    this.EndParam = EndParam;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Directrix = tape[ptr++];\r\n    let Radius = tape[ptr++];\r\n    let InnerRadius = tape[ptr++];\r\n    let StartParam = tape[ptr++];\r\n    let EndParam = tape[ptr++];\r\n    return new IfcSweptDiskSolid(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Directrix);\r\n    ;\r\n    args.push(this.Radius);\r\n    ;\r\n    args.push(this.InnerRadius);\r\n    ;\r\n    args.push(this.StartParam);\r\n    ;\r\n    args.push(this.EndParam);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSweptDiskSolidPolygonal = class {\r\n  constructor(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam, FilletRadius) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Directrix = Directrix;\r\n    this.Radius = Radius;\r\n    this.InnerRadius = InnerRadius;\r\n    this.StartParam = StartParam;\r\n    this.EndParam = EndParam;\r\n    this.FilletRadius = FilletRadius;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Directrix = tape[ptr++];\r\n    let Radius = tape[ptr++];\r\n    let InnerRadius = tape[ptr++];\r\n    let StartParam = tape[ptr++];\r\n    let EndParam = tape[ptr++];\r\n    let FilletRadius = tape[ptr++];\r\n    return new IfcSweptDiskSolidPolygonal(expressID, type, Directrix, Radius, InnerRadius, StartParam, EndParam, FilletRadius);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Directrix);\r\n    ;\r\n    args.push(this.Radius);\r\n    ;\r\n    args.push(this.InnerRadius);\r\n    ;\r\n    args.push(this.StartParam);\r\n    ;\r\n    args.push(this.EndParam);\r\n    ;\r\n    args.push(this.FilletRadius);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSweptSurface = class {\r\n  constructor(expressID, type, SweptCurve, Position) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.SweptCurve = SweptCurve;\r\n    this.Position = Position;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let SweptCurve = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    return new IfcSweptSurface(expressID, type, SweptCurve, Position);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.SweptCurve);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSwitchingDevice = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSwitchingDevice(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSwitchingDeviceType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSwitchingDeviceType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSystem = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    return new IfcSystem(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSystemFurnitureElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSystemFurnitureElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcSystemFurnitureElementType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcSystemFurnitureElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTShapeProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, WebEdgeRadius, WebSlope, FlangeSlope) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.Position = Position;\r\n    this.Depth = Depth;\r\n    this.FlangeWidth = FlangeWidth;\r\n    this.WebThickness = WebThickness;\r\n    this.FlangeThickness = FlangeThickness;\r\n    this.FilletRadius = FilletRadius;\r\n    this.FlangeEdgeRadius = FlangeEdgeRadius;\r\n    this.WebEdgeRadius = WebEdgeRadius;\r\n    this.WebSlope = WebSlope;\r\n    this.FlangeSlope = FlangeSlope;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let Depth = tape[ptr++];\r\n    let FlangeWidth = tape[ptr++];\r\n    let WebThickness = tape[ptr++];\r\n    let FlangeThickness = tape[ptr++];\r\n    let FilletRadius = tape[ptr++];\r\n    let FlangeEdgeRadius = tape[ptr++];\r\n    let WebEdgeRadius = tape[ptr++];\r\n    let WebSlope = tape[ptr++];\r\n    let FlangeSlope = tape[ptr++];\r\n    return new IfcTShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, FlangeEdgeRadius, WebEdgeRadius, WebSlope, FlangeSlope);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Depth);\r\n    ;\r\n    args.push(this.FlangeWidth);\r\n    ;\r\n    args.push(this.WebThickness);\r\n    ;\r\n    args.push(this.FlangeThickness);\r\n    ;\r\n    args.push(this.FilletRadius);\r\n    ;\r\n    args.push(this.FlangeEdgeRadius);\r\n    ;\r\n    args.push(this.WebEdgeRadius);\r\n    ;\r\n    args.push(this.WebSlope);\r\n    ;\r\n    args.push(this.FlangeSlope);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTable = class {\r\n  constructor(expressID, type, Name, Rows, Columns) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Rows = Rows;\r\n    this.Columns = Columns;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Rows = tape[ptr++];\r\n    let Columns = tape[ptr++];\r\n    return new IfcTable(expressID, type, Name, Rows, Columns);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Rows);\r\n    ;\r\n    args.push(this.Columns);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTableColumn = class {\r\n  constructor(expressID, type, Identifier, Name, Description, Unit, ReferencePath) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Identifier = Identifier;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.Unit = Unit;\r\n    this.ReferencePath = ReferencePath;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Identifier = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let Unit = tape[ptr++];\r\n    let ReferencePath = tape[ptr++];\r\n    return new IfcTableColumn(expressID, type, Identifier, Name, Description, Unit, ReferencePath);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Identifier);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.Unit);\r\n    ;\r\n    args.push(this.ReferencePath);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTableRow = class {\r\n  constructor(expressID, type, RowCells, IsHeading) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.RowCells = RowCells;\r\n    this.IsHeading = IsHeading;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let RowCells = tape[ptr++];\r\n    let IsHeading = tape[ptr++];\r\n    return new IfcTableRow(expressID, type, RowCells, IsHeading);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.RowCells);\r\n    ;\r\n    args.push(this.IsHeading);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTank = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcTank(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTankType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcTankType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTask = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Status, WorkMethod, IsMilestone, Priority, TaskTime, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.Status = Status;\r\n    this.WorkMethod = WorkMethod;\r\n    this.IsMilestone = IsMilestone;\r\n    this.Priority = Priority;\r\n    this.TaskTime = TaskTime;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let Status = tape[ptr++];\r\n    let WorkMethod = tape[ptr++];\r\n    let IsMilestone = tape[ptr++];\r\n    let Priority = tape[ptr++];\r\n    let TaskTime = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcTask(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, LongDescription, Status, WorkMethod, IsMilestone, Priority, TaskTime, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.Status);\r\n    ;\r\n    args.push(this.WorkMethod);\r\n    ;\r\n    args.push(this.IsMilestone);\r\n    ;\r\n    args.push(this.Priority);\r\n    ;\r\n    args.push(this.TaskTime);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTaskTime = class {\r\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.DataOrigin = DataOrigin;\r\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\r\n    this.DurationType = DurationType;\r\n    this.ScheduleDuration = ScheduleDuration;\r\n    this.ScheduleStart = ScheduleStart;\r\n    this.ScheduleFinish = ScheduleFinish;\r\n    this.EarlyStart = EarlyStart;\r\n    this.EarlyFinish = EarlyFinish;\r\n    this.LateStart = LateStart;\r\n    this.LateFinish = LateFinish;\r\n    this.FreeFloat = FreeFloat;\r\n    this.TotalFloat = TotalFloat;\r\n    this.IsCritical = IsCritical;\r\n    this.StatusTime = StatusTime;\r\n    this.ActualDuration = ActualDuration;\r\n    this.ActualStart = ActualStart;\r\n    this.ActualFinish = ActualFinish;\r\n    this.RemainingTime = RemainingTime;\r\n    this.Completion = Completion;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let DataOrigin = tape[ptr++];\r\n    let UserDefinedDataOrigin = tape[ptr++];\r\n    let DurationType = tape[ptr++];\r\n    let ScheduleDuration = tape[ptr++];\r\n    let ScheduleStart = tape[ptr++];\r\n    let ScheduleFinish = tape[ptr++];\r\n    let EarlyStart = tape[ptr++];\r\n    let EarlyFinish = tape[ptr++];\r\n    let LateStart = tape[ptr++];\r\n    let LateFinish = tape[ptr++];\r\n    let FreeFloat = tape[ptr++];\r\n    let TotalFloat = tape[ptr++];\r\n    let IsCritical = tape[ptr++];\r\n    let StatusTime = tape[ptr++];\r\n    let ActualDuration = tape[ptr++];\r\n    let ActualStart = tape[ptr++];\r\n    let ActualFinish = tape[ptr++];\r\n    let RemainingTime = tape[ptr++];\r\n    let Completion = tape[ptr++];\r\n    return new IfcTaskTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.DataOrigin);\r\n    ;\r\n    args.push(this.UserDefinedDataOrigin);\r\n    ;\r\n    args.push(this.DurationType);\r\n    ;\r\n    args.push(this.ScheduleDuration);\r\n    ;\r\n    args.push(this.ScheduleStart);\r\n    ;\r\n    args.push(this.ScheduleFinish);\r\n    ;\r\n    args.push(this.EarlyStart);\r\n    ;\r\n    args.push(this.EarlyFinish);\r\n    ;\r\n    args.push(this.LateStart);\r\n    ;\r\n    args.push(this.LateFinish);\r\n    ;\r\n    args.push(this.FreeFloat);\r\n    ;\r\n    args.push(this.TotalFloat);\r\n    ;\r\n    args.push(this.IsCritical);\r\n    ;\r\n    args.push(this.StatusTime);\r\n    ;\r\n    args.push(this.ActualDuration);\r\n    ;\r\n    args.push(this.ActualStart);\r\n    ;\r\n    args.push(this.ActualFinish);\r\n    ;\r\n    args.push(this.RemainingTime);\r\n    ;\r\n    args.push(this.Completion);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTaskTimeRecurring = class {\r\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion, Recurrence) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.DataOrigin = DataOrigin;\r\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\r\n    this.DurationType = DurationType;\r\n    this.ScheduleDuration = ScheduleDuration;\r\n    this.ScheduleStart = ScheduleStart;\r\n    this.ScheduleFinish = ScheduleFinish;\r\n    this.EarlyStart = EarlyStart;\r\n    this.EarlyFinish = EarlyFinish;\r\n    this.LateStart = LateStart;\r\n    this.LateFinish = LateFinish;\r\n    this.FreeFloat = FreeFloat;\r\n    this.TotalFloat = TotalFloat;\r\n    this.IsCritical = IsCritical;\r\n    this.StatusTime = StatusTime;\r\n    this.ActualDuration = ActualDuration;\r\n    this.ActualStart = ActualStart;\r\n    this.ActualFinish = ActualFinish;\r\n    this.RemainingTime = RemainingTime;\r\n    this.Completion = Completion;\r\n    this.Recurrence = Recurrence;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let DataOrigin = tape[ptr++];\r\n    let UserDefinedDataOrigin = tape[ptr++];\r\n    let DurationType = tape[ptr++];\r\n    let ScheduleDuration = tape[ptr++];\r\n    let ScheduleStart = tape[ptr++];\r\n    let ScheduleFinish = tape[ptr++];\r\n    let EarlyStart = tape[ptr++];\r\n    let EarlyFinish = tape[ptr++];\r\n    let LateStart = tape[ptr++];\r\n    let LateFinish = tape[ptr++];\r\n    let FreeFloat = tape[ptr++];\r\n    let TotalFloat = tape[ptr++];\r\n    let IsCritical = tape[ptr++];\r\n    let StatusTime = tape[ptr++];\r\n    let ActualDuration = tape[ptr++];\r\n    let ActualStart = tape[ptr++];\r\n    let ActualFinish = tape[ptr++];\r\n    let RemainingTime = tape[ptr++];\r\n    let Completion = tape[ptr++];\r\n    let Recurrence = tape[ptr++];\r\n    return new IfcTaskTimeRecurring(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, DurationType, ScheduleDuration, ScheduleStart, ScheduleFinish, EarlyStart, EarlyFinish, LateStart, LateFinish, FreeFloat, TotalFloat, IsCritical, StatusTime, ActualDuration, ActualStart, ActualFinish, RemainingTime, Completion, Recurrence);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.DataOrigin);\r\n    ;\r\n    args.push(this.UserDefinedDataOrigin);\r\n    ;\r\n    args.push(this.DurationType);\r\n    ;\r\n    args.push(this.ScheduleDuration);\r\n    ;\r\n    args.push(this.ScheduleStart);\r\n    ;\r\n    args.push(this.ScheduleFinish);\r\n    ;\r\n    args.push(this.EarlyStart);\r\n    ;\r\n    args.push(this.EarlyFinish);\r\n    ;\r\n    args.push(this.LateStart);\r\n    ;\r\n    args.push(this.LateFinish);\r\n    ;\r\n    args.push(this.FreeFloat);\r\n    ;\r\n    args.push(this.TotalFloat);\r\n    ;\r\n    args.push(this.IsCritical);\r\n    ;\r\n    args.push(this.StatusTime);\r\n    ;\r\n    args.push(this.ActualDuration);\r\n    ;\r\n    args.push(this.ActualStart);\r\n    ;\r\n    args.push(this.ActualFinish);\r\n    ;\r\n    args.push(this.RemainingTime);\r\n    ;\r\n    args.push(this.Completion);\r\n    ;\r\n    args.push(this.Recurrence);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTaskType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, WorkMethod) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.ProcessType = ProcessType;\r\n    this.PredefinedType = PredefinedType;\r\n    this.WorkMethod = WorkMethod;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let ProcessType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let WorkMethod = tape[ptr++];\r\n    return new IfcTaskType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType, PredefinedType, WorkMethod);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.ProcessType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.WorkMethod);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTelecomAddress = class {\r\n  constructor(expressID, type, Purpose, Description, UserDefinedPurpose, TelephoneNumbers, FacsimileNumbers, PagerNumber, ElectronicMailAddresses, WWWHomePageURL, MessagingIDs) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Purpose = Purpose;\r\n    this.Description = Description;\r\n    this.UserDefinedPurpose = UserDefinedPurpose;\r\n    this.TelephoneNumbers = TelephoneNumbers;\r\n    this.FacsimileNumbers = FacsimileNumbers;\r\n    this.PagerNumber = PagerNumber;\r\n    this.ElectronicMailAddresses = ElectronicMailAddresses;\r\n    this.WWWHomePageURL = WWWHomePageURL;\r\n    this.MessagingIDs = MessagingIDs;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Purpose = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let UserDefinedPurpose = tape[ptr++];\r\n    let TelephoneNumbers = tape[ptr++];\r\n    let FacsimileNumbers = tape[ptr++];\r\n    let PagerNumber = tape[ptr++];\r\n    let ElectronicMailAddresses = tape[ptr++];\r\n    let WWWHomePageURL = tape[ptr++];\r\n    let MessagingIDs = tape[ptr++];\r\n    return new IfcTelecomAddress(expressID, type, Purpose, Description, UserDefinedPurpose, TelephoneNumbers, FacsimileNumbers, PagerNumber, ElectronicMailAddresses, WWWHomePageURL, MessagingIDs);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Purpose);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.UserDefinedPurpose);\r\n    ;\r\n    args.push(this.TelephoneNumbers);\r\n    ;\r\n    args.push(this.FacsimileNumbers);\r\n    ;\r\n    args.push(this.PagerNumber);\r\n    ;\r\n    args.push(this.ElectronicMailAddresses);\r\n    ;\r\n    args.push(this.WWWHomePageURL);\r\n    ;\r\n    args.push(this.MessagingIDs);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTendon = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType, NominalDiameter, CrossSectionArea, TensionForce, PreStress, FrictionCoefficient, AnchorageSlip, MinCurvatureRadius) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.SteelGrade = SteelGrade;\r\n    this.PredefinedType = PredefinedType;\r\n    this.NominalDiameter = NominalDiameter;\r\n    this.CrossSectionArea = CrossSectionArea;\r\n    this.TensionForce = TensionForce;\r\n    this.PreStress = PreStress;\r\n    this.FrictionCoefficient = FrictionCoefficient;\r\n    this.AnchorageSlip = AnchorageSlip;\r\n    this.MinCurvatureRadius = MinCurvatureRadius;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let SteelGrade = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let NominalDiameter = tape[ptr++];\r\n    let CrossSectionArea = tape[ptr++];\r\n    let TensionForce = tape[ptr++];\r\n    let PreStress = tape[ptr++];\r\n    let FrictionCoefficient = tape[ptr++];\r\n    let AnchorageSlip = tape[ptr++];\r\n    let MinCurvatureRadius = tape[ptr++];\r\n    return new IfcTendon(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType, NominalDiameter, CrossSectionArea, TensionForce, PreStress, FrictionCoefficient, AnchorageSlip, MinCurvatureRadius);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.SteelGrade);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.NominalDiameter);\r\n    ;\r\n    args.push(this.CrossSectionArea);\r\n    ;\r\n    args.push(this.TensionForce);\r\n    ;\r\n    args.push(this.PreStress);\r\n    ;\r\n    args.push(this.FrictionCoefficient);\r\n    ;\r\n    args.push(this.AnchorageSlip);\r\n    ;\r\n    args.push(this.MinCurvatureRadius);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTendonAnchor = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.SteelGrade = SteelGrade;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let SteelGrade = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcTendonAnchor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.SteelGrade);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTendonAnchorType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcTendonAnchorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTendonConduit = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.SteelGrade = SteelGrade;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let SteelGrade = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcTendonConduit(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, SteelGrade, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.SteelGrade);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTendonConduitType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcTendonConduitType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTendonType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, SheathDiameter) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n    this.NominalDiameter = NominalDiameter;\r\n    this.CrossSectionArea = CrossSectionArea;\r\n    this.SheathDiameter = SheathDiameter;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let NominalDiameter = tape[ptr++];\r\n    let CrossSectionArea = tape[ptr++];\r\n    let SheathDiameter = tape[ptr++];\r\n    return new IfcTendonType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, NominalDiameter, CrossSectionArea, SheathDiameter);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.NominalDiameter);\r\n    ;\r\n    args.push(this.CrossSectionArea);\r\n    ;\r\n    args.push(this.SheathDiameter);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTessellatedFaceSet = class {\r\n  constructor(expressID, type, Coordinates) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Coordinates = Coordinates;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Coordinates = tape[ptr++];\r\n    return new IfcTessellatedFaceSet(expressID, type, Coordinates);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Coordinates);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTessellatedItem = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcTessellatedItem(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcTextLiteral = class {\r\n  constructor(expressID, type, Literal, Placement, Path) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Literal = Literal;\r\n    this.Placement = Placement;\r\n    this.Path = Path;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Literal = tape[ptr++];\r\n    let Placement = tape[ptr++];\r\n    let Path = tape[ptr++];\r\n    return new IfcTextLiteral(expressID, type, Literal, Placement, Path);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Literal);\r\n    ;\r\n    args.push(this.Placement);\r\n    ;\r\n    args.push(this.Path);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTextLiteralWithExtent = class {\r\n  constructor(expressID, type, Literal, Placement, Path, Extent, BoxAlignment) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Literal = Literal;\r\n    this.Placement = Placement;\r\n    this.Path = Path;\r\n    this.Extent = Extent;\r\n    this.BoxAlignment = BoxAlignment;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Literal = tape[ptr++];\r\n    let Placement = tape[ptr++];\r\n    let Path = tape[ptr++];\r\n    let Extent = tape[ptr++];\r\n    let BoxAlignment = tape[ptr++];\r\n    return new IfcTextLiteralWithExtent(expressID, type, Literal, Placement, Path, Extent, BoxAlignment);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Literal);\r\n    ;\r\n    args.push(this.Placement);\r\n    ;\r\n    args.push(this.Path);\r\n    ;\r\n    args.push(this.Extent);\r\n    ;\r\n    args.push(this.BoxAlignment);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTextStyle = class {\r\n  constructor(expressID, type, Name, TextCharacterAppearance, TextStyle, TextFontStyle, ModelOrDraughting) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.TextCharacterAppearance = TextCharacterAppearance;\r\n    this.TextStyle = TextStyle;\r\n    this.TextFontStyle = TextFontStyle;\r\n    this.ModelOrDraughting = ModelOrDraughting;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let TextCharacterAppearance = tape[ptr++];\r\n    let TextStyle = tape[ptr++];\r\n    let TextFontStyle = tape[ptr++];\r\n    let ModelOrDraughting = tape[ptr++];\r\n    return new IfcTextStyle(expressID, type, Name, TextCharacterAppearance, TextStyle, TextFontStyle, ModelOrDraughting);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.TextCharacterAppearance);\r\n    ;\r\n    args.push(this.TextStyle);\r\n    ;\r\n    args.push(this.TextFontStyle);\r\n    ;\r\n    args.push(this.ModelOrDraughting);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTextStyleFontModel = class {\r\n  constructor(expressID, type, Name, FontFamily, FontStyle, FontVariant, FontWeight, FontSize) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.FontFamily = FontFamily;\r\n    this.FontStyle = FontStyle;\r\n    this.FontVariant = FontVariant;\r\n    this.FontWeight = FontWeight;\r\n    this.FontSize = FontSize;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let FontFamily = tape[ptr++];\r\n    let FontStyle = tape[ptr++];\r\n    let FontVariant = tape[ptr++];\r\n    let FontWeight = tape[ptr++];\r\n    let FontSize = tape[ptr++];\r\n    return new IfcTextStyleFontModel(expressID, type, Name, FontFamily, FontStyle, FontVariant, FontWeight, FontSize);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.FontFamily);\r\n    ;\r\n    args.push(this.FontStyle);\r\n    ;\r\n    args.push(this.FontVariant);\r\n    ;\r\n    args.push(this.FontWeight);\r\n    ;\r\n    args.push(this.FontSize);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTextStyleForDefinedFont = class {\r\n  constructor(expressID, type, Colour, BackgroundColour) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Colour = Colour;\r\n    this.BackgroundColour = BackgroundColour;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Colour = tape[ptr++];\r\n    let BackgroundColour = tape[ptr++];\r\n    return new IfcTextStyleForDefinedFont(expressID, type, Colour, BackgroundColour);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Colour);\r\n    ;\r\n    args.push(this.BackgroundColour);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTextStyleTextModel = class {\r\n  constructor(expressID, type, TextIndent, TextAlign, TextDecoration, LetterSpacing, WordSpacing, TextTransform, LineHeight) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.TextIndent = TextIndent;\r\n    this.TextAlign = TextAlign;\r\n    this.TextDecoration = TextDecoration;\r\n    this.LetterSpacing = LetterSpacing;\r\n    this.WordSpacing = WordSpacing;\r\n    this.TextTransform = TextTransform;\r\n    this.LineHeight = LineHeight;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let TextIndent = tape[ptr++];\r\n    let TextAlign = tape[ptr++];\r\n    let TextDecoration = tape[ptr++];\r\n    let LetterSpacing = tape[ptr++];\r\n    let WordSpacing = tape[ptr++];\r\n    let TextTransform = tape[ptr++];\r\n    let LineHeight = tape[ptr++];\r\n    return new IfcTextStyleTextModel(expressID, type, TextIndent, TextAlign, TextDecoration, LetterSpacing, WordSpacing, TextTransform, LineHeight);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.TextIndent);\r\n    ;\r\n    args.push(this.TextAlign);\r\n    ;\r\n    args.push(this.TextDecoration);\r\n    ;\r\n    args.push(this.LetterSpacing);\r\n    ;\r\n    args.push(this.WordSpacing);\r\n    ;\r\n    args.push(this.TextTransform);\r\n    ;\r\n    args.push(this.LineHeight);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTextureCoordinate = class {\r\n  constructor(expressID, type, Maps) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Maps = Maps;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Maps = tape[ptr++];\r\n    return new IfcTextureCoordinate(expressID, type, Maps);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Maps);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTextureCoordinateGenerator = class {\r\n  constructor(expressID, type, Maps, Mode, Parameter) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Maps = Maps;\r\n    this.Mode = Mode;\r\n    this.Parameter = Parameter;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Maps = tape[ptr++];\r\n    let Mode = tape[ptr++];\r\n    let Parameter = tape[ptr++];\r\n    return new IfcTextureCoordinateGenerator(expressID, type, Maps, Mode, Parameter);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Maps);\r\n    ;\r\n    args.push(this.Mode);\r\n    ;\r\n    args.push(this.Parameter);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTextureMap = class {\r\n  constructor(expressID, type, Maps, Vertices, MappedTo) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Maps = Maps;\r\n    this.Vertices = Vertices;\r\n    this.MappedTo = MappedTo;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Maps = tape[ptr++];\r\n    let Vertices = tape[ptr++];\r\n    let MappedTo = tape[ptr++];\r\n    return new IfcTextureMap(expressID, type, Maps, Vertices, MappedTo);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Maps);\r\n    ;\r\n    args.push(this.Vertices);\r\n    ;\r\n    args.push(this.MappedTo);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTextureVertex = class {\r\n  constructor(expressID, type, Coordinates) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Coordinates = Coordinates;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Coordinates = tape[ptr++];\r\n    return new IfcTextureVertex(expressID, type, Coordinates);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Coordinates);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTextureVertexList = class {\r\n  constructor(expressID, type, TexCoordsList) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.TexCoordsList = TexCoordsList;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let TexCoordsList = tape[ptr++];\r\n    return new IfcTextureVertexList(expressID, type, TexCoordsList);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.TexCoordsList);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTimePeriod = class {\r\n  constructor(expressID, type, StartTime, EndTime) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.StartTime = StartTime;\r\n    this.EndTime = EndTime;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let StartTime = tape[ptr++];\r\n    let EndTime = tape[ptr++];\r\n    return new IfcTimePeriod(expressID, type, StartTime, EndTime);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.StartTime);\r\n    ;\r\n    args.push(this.EndTime);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTimeSeries = class {\r\n  constructor(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.StartTime = StartTime;\r\n    this.EndTime = EndTime;\r\n    this.TimeSeriesDataType = TimeSeriesDataType;\r\n    this.DataOrigin = DataOrigin;\r\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\r\n    this.Unit = Unit;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let StartTime = tape[ptr++];\r\n    let EndTime = tape[ptr++];\r\n    let TimeSeriesDataType = tape[ptr++];\r\n    let DataOrigin = tape[ptr++];\r\n    let UserDefinedDataOrigin = tape[ptr++];\r\n    let Unit = tape[ptr++];\r\n    return new IfcTimeSeries(expressID, type, Name, Description, StartTime, EndTime, TimeSeriesDataType, DataOrigin, UserDefinedDataOrigin, Unit);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.StartTime);\r\n    ;\r\n    args.push(this.EndTime);\r\n    ;\r\n    args.push(this.TimeSeriesDataType);\r\n    ;\r\n    args.push(this.DataOrigin);\r\n    ;\r\n    args.push(this.UserDefinedDataOrigin);\r\n    ;\r\n    args.push(this.Unit);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTimeSeriesValue = class {\r\n  constructor(expressID, type, ListValues) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ListValues = ListValues;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ListValues = tape[ptr++];\r\n    return new IfcTimeSeriesValue(expressID, type, ListValues);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ListValues);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTopologicalRepresentationItem = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcTopologicalRepresentationItem(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcTopologyRepresentation = class {\r\n  constructor(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ContextOfItems = ContextOfItems;\r\n    this.RepresentationIdentifier = RepresentationIdentifier;\r\n    this.RepresentationType = RepresentationType;\r\n    this.Items = Items;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ContextOfItems = tape[ptr++];\r\n    let RepresentationIdentifier = tape[ptr++];\r\n    let RepresentationType = tape[ptr++];\r\n    let Items = tape[ptr++];\r\n    return new IfcTopologyRepresentation(expressID, type, ContextOfItems, RepresentationIdentifier, RepresentationType, Items);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ContextOfItems);\r\n    ;\r\n    args.push(this.RepresentationIdentifier);\r\n    ;\r\n    args.push(this.RepresentationType);\r\n    ;\r\n    args.push(this.Items);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcToroidalSurface = class {\r\n  constructor(expressID, type, Position, MajorRadius, MinorRadius) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Position = Position;\r\n    this.MajorRadius = MajorRadius;\r\n    this.MinorRadius = MinorRadius;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Position = tape[ptr++];\r\n    let MajorRadius = tape[ptr++];\r\n    let MinorRadius = tape[ptr++];\r\n    return new IfcToroidalSurface(expressID, type, Position, MajorRadius, MinorRadius);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.MajorRadius);\r\n    ;\r\n    args.push(this.MinorRadius);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTransformer = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcTransformer(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTransformerType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcTransformerType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTransitionCurveSegment2D = class {\r\n  constructor(expressID, type, StartPoint, StartDirection, SegmentLength, StartRadius, EndRadius, IsStartRadiusCCW, IsEndRadiusCCW, TransitionCurveType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.StartPoint = StartPoint;\r\n    this.StartDirection = StartDirection;\r\n    this.SegmentLength = SegmentLength;\r\n    this.StartRadius = StartRadius;\r\n    this.EndRadius = EndRadius;\r\n    this.IsStartRadiusCCW = IsStartRadiusCCW;\r\n    this.IsEndRadiusCCW = IsEndRadiusCCW;\r\n    this.TransitionCurveType = TransitionCurveType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let StartPoint = tape[ptr++];\r\n    let StartDirection = tape[ptr++];\r\n    let SegmentLength = tape[ptr++];\r\n    let StartRadius = tape[ptr++];\r\n    let EndRadius = tape[ptr++];\r\n    let IsStartRadiusCCW = tape[ptr++];\r\n    let IsEndRadiusCCW = tape[ptr++];\r\n    let TransitionCurveType = tape[ptr++];\r\n    return new IfcTransitionCurveSegment2D(expressID, type, StartPoint, StartDirection, SegmentLength, StartRadius, EndRadius, IsStartRadiusCCW, IsEndRadiusCCW, TransitionCurveType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.StartPoint);\r\n    ;\r\n    args.push(this.StartDirection);\r\n    ;\r\n    args.push(this.SegmentLength);\r\n    ;\r\n    args.push(this.StartRadius);\r\n    ;\r\n    args.push(this.EndRadius);\r\n    ;\r\n    args.push(this.IsStartRadiusCCW);\r\n    ;\r\n    args.push(this.IsEndRadiusCCW);\r\n    ;\r\n    args.push(this.TransitionCurveType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTransportElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcTransportElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTransportElementType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcTransportElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTrapeziumProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, Position, BottomXDim, TopXDim, YDim, TopXOffset) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.Position = Position;\r\n    this.BottomXDim = BottomXDim;\r\n    this.TopXDim = TopXDim;\r\n    this.YDim = YDim;\r\n    this.TopXOffset = TopXOffset;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let BottomXDim = tape[ptr++];\r\n    let TopXDim = tape[ptr++];\r\n    let YDim = tape[ptr++];\r\n    let TopXOffset = tape[ptr++];\r\n    return new IfcTrapeziumProfileDef(expressID, type, ProfileType, ProfileName, Position, BottomXDim, TopXDim, YDim, TopXOffset);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.BottomXDim);\r\n    ;\r\n    args.push(this.TopXDim);\r\n    ;\r\n    args.push(this.YDim);\r\n    ;\r\n    args.push(this.TopXOffset);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTriangulatedFaceSet = class {\r\n  constructor(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Coordinates = Coordinates;\r\n    this.Normals = Normals;\r\n    this.Closed = Closed;\r\n    this.CoordIndex = CoordIndex;\r\n    this.PnIndex = PnIndex;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Coordinates = tape[ptr++];\r\n    let Normals = tape[ptr++];\r\n    let Closed = tape[ptr++];\r\n    let CoordIndex = tape[ptr++];\r\n    let PnIndex = tape[ptr++];\r\n    return new IfcTriangulatedFaceSet(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Coordinates);\r\n    ;\r\n    args.push(this.Normals);\r\n    ;\r\n    args.push(this.Closed);\r\n    ;\r\n    args.push(this.CoordIndex);\r\n    ;\r\n    args.push(this.PnIndex);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTriangulatedIrregularNetwork = class {\r\n  constructor(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex, Flags) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Coordinates = Coordinates;\r\n    this.Normals = Normals;\r\n    this.Closed = Closed;\r\n    this.CoordIndex = CoordIndex;\r\n    this.PnIndex = PnIndex;\r\n    this.Flags = Flags;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Coordinates = tape[ptr++];\r\n    let Normals = tape[ptr++];\r\n    let Closed = tape[ptr++];\r\n    let CoordIndex = tape[ptr++];\r\n    let PnIndex = tape[ptr++];\r\n    let Flags = tape[ptr++];\r\n    return new IfcTriangulatedIrregularNetwork(expressID, type, Coordinates, Normals, Closed, CoordIndex, PnIndex, Flags);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Coordinates);\r\n    ;\r\n    args.push(this.Normals);\r\n    ;\r\n    args.push(this.Closed);\r\n    ;\r\n    args.push(this.CoordIndex);\r\n    ;\r\n    args.push(this.PnIndex);\r\n    ;\r\n    args.push(this.Flags);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTrimmedCurve = class {\r\n  constructor(expressID, type, BasisCurve, Trim1, Trim2, SenseAgreement, MasterRepresentation) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.BasisCurve = BasisCurve;\r\n    this.Trim1 = Trim1;\r\n    this.Trim2 = Trim2;\r\n    this.SenseAgreement = SenseAgreement;\r\n    this.MasterRepresentation = MasterRepresentation;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let BasisCurve = tape[ptr++];\r\n    let Trim1 = tape[ptr++];\r\n    let Trim2 = tape[ptr++];\r\n    let SenseAgreement = tape[ptr++];\r\n    let MasterRepresentation = tape[ptr++];\r\n    return new IfcTrimmedCurve(expressID, type, BasisCurve, Trim1, Trim2, SenseAgreement, MasterRepresentation);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.BasisCurve);\r\n    ;\r\n    args.push(this.Trim1);\r\n    ;\r\n    args.push(this.Trim2);\r\n    ;\r\n    args.push(this.SenseAgreement);\r\n    ;\r\n    args.push(this.MasterRepresentation);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTubeBundle = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcTubeBundle(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTubeBundleType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcTubeBundleType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTypeObject = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    return new IfcTypeObject(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTypeProcess = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.ProcessType = ProcessType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let ProcessType = tape[ptr++];\r\n    return new IfcTypeProcess(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ProcessType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.ProcessType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTypeProduct = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcTypeProduct(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcTypeResource = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.Identification = Identification;\r\n    this.LongDescription = LongDescription;\r\n    this.ResourceType = ResourceType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let LongDescription = tape[ptr++];\r\n    let ResourceType = tape[ptr++];\r\n    return new IfcTypeResource(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, Identification, LongDescription, ResourceType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.LongDescription);\r\n    ;\r\n    args.push(this.ResourceType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcUShapeProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius, FlangeSlope) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.Position = Position;\r\n    this.Depth = Depth;\r\n    this.FlangeWidth = FlangeWidth;\r\n    this.WebThickness = WebThickness;\r\n    this.FlangeThickness = FlangeThickness;\r\n    this.FilletRadius = FilletRadius;\r\n    this.EdgeRadius = EdgeRadius;\r\n    this.FlangeSlope = FlangeSlope;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let Depth = tape[ptr++];\r\n    let FlangeWidth = tape[ptr++];\r\n    let WebThickness = tape[ptr++];\r\n    let FlangeThickness = tape[ptr++];\r\n    let FilletRadius = tape[ptr++];\r\n    let EdgeRadius = tape[ptr++];\r\n    let FlangeSlope = tape[ptr++];\r\n    return new IfcUShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius, FlangeSlope);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Depth);\r\n    ;\r\n    args.push(this.FlangeWidth);\r\n    ;\r\n    args.push(this.WebThickness);\r\n    ;\r\n    args.push(this.FlangeThickness);\r\n    ;\r\n    args.push(this.FilletRadius);\r\n    ;\r\n    args.push(this.EdgeRadius);\r\n    ;\r\n    args.push(this.FlangeSlope);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcUnitAssignment = class {\r\n  constructor(expressID, type, Units) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Units = Units;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Units = tape[ptr++];\r\n    return new IfcUnitAssignment(expressID, type, Units);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Units);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcUnitaryControlElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcUnitaryControlElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcUnitaryControlElementType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcUnitaryControlElementType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcUnitaryEquipment = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcUnitaryEquipment(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcUnitaryEquipmentType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcUnitaryEquipmentType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcValve = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcValve(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcValveType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcValveType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcVector = class {\r\n  constructor(expressID, type, Orientation, Magnitude) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Orientation = Orientation;\r\n    this.Magnitude = Magnitude;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Orientation = tape[ptr++];\r\n    let Magnitude = tape[ptr++];\r\n    return new IfcVector(expressID, type, Orientation, Magnitude);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Orientation);\r\n    ;\r\n    args.push(this.Magnitude);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcVertex = class {\r\n  constructor(expressID, type) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    return new IfcVertex(expressID, type);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    return args;\r\n  }\r\n};\r\nvar IfcVertexLoop = class {\r\n  constructor(expressID, type, LoopVertex) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.LoopVertex = LoopVertex;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let LoopVertex = tape[ptr++];\r\n    return new IfcVertexLoop(expressID, type, LoopVertex);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.LoopVertex);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcVertexPoint = class {\r\n  constructor(expressID, type, VertexGeometry) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.VertexGeometry = VertexGeometry;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let VertexGeometry = tape[ptr++];\r\n    return new IfcVertexPoint(expressID, type, VertexGeometry);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.VertexGeometry);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcVibrationDamper = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcVibrationDamper(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcVibrationDamperType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcVibrationDamperType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcVibrationIsolator = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcVibrationIsolator(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcVibrationIsolatorType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcVibrationIsolatorType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcVirtualElement = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    return new IfcVirtualElement(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcVirtualGridIntersection = class {\r\n  constructor(expressID, type, IntersectingAxes, OffsetDistances) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.IntersectingAxes = IntersectingAxes;\r\n    this.OffsetDistances = OffsetDistances;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let IntersectingAxes = tape[ptr++];\r\n    let OffsetDistances = tape[ptr++];\r\n    return new IfcVirtualGridIntersection(expressID, type, IntersectingAxes, OffsetDistances);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.IntersectingAxes);\r\n    ;\r\n    args.push(this.OffsetDistances);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcVoidingFeature = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcVoidingFeature(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcWall = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcWall(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcWallElementedCase = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcWallElementedCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcWallStandardCase = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcWallStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcWallType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcWallType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcWasteTerminal = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcWasteTerminal(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcWasteTerminalType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcWasteTerminalType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcWindow = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.OverallHeight = OverallHeight;\r\n    this.OverallWidth = OverallWidth;\r\n    this.PredefinedType = PredefinedType;\r\n    this.PartitioningType = PartitioningType;\r\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let OverallHeight = tape[ptr++];\r\n    let OverallWidth = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let PartitioningType = tape[ptr++];\r\n    let UserDefinedPartitioningType = tape[ptr++];\r\n    return new IfcWindow(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.OverallHeight);\r\n    ;\r\n    args.push(this.OverallWidth);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.PartitioningType);\r\n    ;\r\n    args.push(this.UserDefinedPartitioningType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcWindowLiningProperties = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, TransomThickness, MullionThickness, FirstTransomOffset, SecondTransomOffset, FirstMullionOffset, SecondMullionOffset, ShapeAspectStyle, LiningOffset, LiningToPanelOffsetX, LiningToPanelOffsetY) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.LiningDepth = LiningDepth;\r\n    this.LiningThickness = LiningThickness;\r\n    this.TransomThickness = TransomThickness;\r\n    this.MullionThickness = MullionThickness;\r\n    this.FirstTransomOffset = FirstTransomOffset;\r\n    this.SecondTransomOffset = SecondTransomOffset;\r\n    this.FirstMullionOffset = FirstMullionOffset;\r\n    this.SecondMullionOffset = SecondMullionOffset;\r\n    this.ShapeAspectStyle = ShapeAspectStyle;\r\n    this.LiningOffset = LiningOffset;\r\n    this.LiningToPanelOffsetX = LiningToPanelOffsetX;\r\n    this.LiningToPanelOffsetY = LiningToPanelOffsetY;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let LiningDepth = tape[ptr++];\r\n    let LiningThickness = tape[ptr++];\r\n    let TransomThickness = tape[ptr++];\r\n    let MullionThickness = tape[ptr++];\r\n    let FirstTransomOffset = tape[ptr++];\r\n    let SecondTransomOffset = tape[ptr++];\r\n    let FirstMullionOffset = tape[ptr++];\r\n    let SecondMullionOffset = tape[ptr++];\r\n    let ShapeAspectStyle = tape[ptr++];\r\n    let LiningOffset = tape[ptr++];\r\n    let LiningToPanelOffsetX = tape[ptr++];\r\n    let LiningToPanelOffsetY = tape[ptr++];\r\n    return new IfcWindowLiningProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, LiningDepth, LiningThickness, TransomThickness, MullionThickness, FirstTransomOffset, SecondTransomOffset, FirstMullionOffset, SecondMullionOffset, ShapeAspectStyle, LiningOffset, LiningToPanelOffsetX, LiningToPanelOffsetY);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.LiningDepth);\r\n    ;\r\n    args.push(this.LiningThickness);\r\n    ;\r\n    args.push(this.TransomThickness);\r\n    ;\r\n    args.push(this.MullionThickness);\r\n    ;\r\n    args.push(this.FirstTransomOffset);\r\n    ;\r\n    args.push(this.SecondTransomOffset);\r\n    ;\r\n    args.push(this.FirstMullionOffset);\r\n    ;\r\n    args.push(this.SecondMullionOffset);\r\n    ;\r\n    args.push(this.ShapeAspectStyle);\r\n    ;\r\n    args.push(this.LiningOffset);\r\n    ;\r\n    args.push(this.LiningToPanelOffsetX);\r\n    ;\r\n    args.push(this.LiningToPanelOffsetY);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcWindowPanelProperties = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.OperationType = OperationType;\r\n    this.PanelPosition = PanelPosition;\r\n    this.FrameDepth = FrameDepth;\r\n    this.FrameThickness = FrameThickness;\r\n    this.ShapeAspectStyle = ShapeAspectStyle;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let OperationType = tape[ptr++];\r\n    let PanelPosition = tape[ptr++];\r\n    let FrameDepth = tape[ptr++];\r\n    let FrameThickness = tape[ptr++];\r\n    let ShapeAspectStyle = tape[ptr++];\r\n    return new IfcWindowPanelProperties(expressID, type, GlobalId, OwnerHistory, Name, Description, OperationType, PanelPosition, FrameDepth, FrameThickness, ShapeAspectStyle);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.OperationType);\r\n    ;\r\n    args.push(this.PanelPosition);\r\n    ;\r\n    args.push(this.FrameDepth);\r\n    ;\r\n    args.push(this.FrameThickness);\r\n    ;\r\n    args.push(this.ShapeAspectStyle);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcWindowStandardCase = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.ObjectPlacement = ObjectPlacement;\r\n    this.Representation = Representation;\r\n    this.Tag = Tag;\r\n    this.OverallHeight = OverallHeight;\r\n    this.OverallWidth = OverallWidth;\r\n    this.PredefinedType = PredefinedType;\r\n    this.PartitioningType = PartitioningType;\r\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let ObjectPlacement = tape[ptr++];\r\n    let Representation = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let OverallHeight = tape[ptr++];\r\n    let OverallWidth = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let PartitioningType = tape[ptr++];\r\n    let UserDefinedPartitioningType = tape[ptr++];\r\n    return new IfcWindowStandardCase(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, ObjectPlacement, Representation, Tag, OverallHeight, OverallWidth, PredefinedType, PartitioningType, UserDefinedPartitioningType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.ObjectPlacement);\r\n    ;\r\n    args.push(this.Representation);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.OverallHeight);\r\n    ;\r\n    args.push(this.OverallWidth);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.PartitioningType);\r\n    ;\r\n    args.push(this.UserDefinedPartitioningType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcWindowStyle = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ConstructionType, OperationType, ParameterTakesPrecedence, Sizeable) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ConstructionType = ConstructionType;\r\n    this.OperationType = OperationType;\r\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\r\n    this.Sizeable = Sizeable;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ConstructionType = tape[ptr++];\r\n    let OperationType = tape[ptr++];\r\n    let ParameterTakesPrecedence = tape[ptr++];\r\n    let Sizeable = tape[ptr++];\r\n    return new IfcWindowStyle(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ConstructionType, OperationType, ParameterTakesPrecedence, Sizeable);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ConstructionType);\r\n    ;\r\n    args.push(this.OperationType);\r\n    ;\r\n    args.push(this.ParameterTakesPrecedence);\r\n    ;\r\n    args.push(this.Sizeable);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcWindowType = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, PartitioningType, ParameterTakesPrecedence, UserDefinedPartitioningType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ApplicableOccurrence = ApplicableOccurrence;\r\n    this.HasPropertySets = HasPropertySets;\r\n    this.RepresentationMaps = RepresentationMaps;\r\n    this.Tag = Tag;\r\n    this.ElementType = ElementType;\r\n    this.PredefinedType = PredefinedType;\r\n    this.PartitioningType = PartitioningType;\r\n    this.ParameterTakesPrecedence = ParameterTakesPrecedence;\r\n    this.UserDefinedPartitioningType = UserDefinedPartitioningType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ApplicableOccurrence = tape[ptr++];\r\n    let HasPropertySets = tape[ptr++];\r\n    let RepresentationMaps = tape[ptr++];\r\n    let Tag = tape[ptr++];\r\n    let ElementType = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    let PartitioningType = tape[ptr++];\r\n    let ParameterTakesPrecedence = tape[ptr++];\r\n    let UserDefinedPartitioningType = tape[ptr++];\r\n    return new IfcWindowType(expressID, type, GlobalId, OwnerHistory, Name, Description, ApplicableOccurrence, HasPropertySets, RepresentationMaps, Tag, ElementType, PredefinedType, PartitioningType, ParameterTakesPrecedence, UserDefinedPartitioningType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ApplicableOccurrence);\r\n    ;\r\n    args.push(this.HasPropertySets);\r\n    ;\r\n    args.push(this.RepresentationMaps);\r\n    ;\r\n    args.push(this.Tag);\r\n    ;\r\n    args.push(this.ElementType);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    args.push(this.PartitioningType);\r\n    ;\r\n    args.push(this.ParameterTakesPrecedence);\r\n    ;\r\n    args.push(this.UserDefinedPartitioningType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcWorkCalendar = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, WorkingTimes, ExceptionTimes, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.WorkingTimes = WorkingTimes;\r\n    this.ExceptionTimes = ExceptionTimes;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let WorkingTimes = tape[ptr++];\r\n    let ExceptionTimes = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcWorkCalendar(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, WorkingTimes, ExceptionTimes, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.WorkingTimes);\r\n    ;\r\n    args.push(this.ExceptionTimes);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcWorkControl = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.CreationDate = CreationDate;\r\n    this.Creators = Creators;\r\n    this.Purpose = Purpose;\r\n    this.Duration = Duration;\r\n    this.TotalFloat = TotalFloat;\r\n    this.StartTime = StartTime;\r\n    this.FinishTime = FinishTime;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let CreationDate = tape[ptr++];\r\n    let Creators = tape[ptr++];\r\n    let Purpose = tape[ptr++];\r\n    let Duration = tape[ptr++];\r\n    let TotalFloat = tape[ptr++];\r\n    let StartTime = tape[ptr++];\r\n    let FinishTime = tape[ptr++];\r\n    return new IfcWorkControl(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.CreationDate);\r\n    ;\r\n    args.push(this.Creators);\r\n    ;\r\n    args.push(this.Purpose);\r\n    ;\r\n    args.push(this.Duration);\r\n    ;\r\n    args.push(this.TotalFloat);\r\n    ;\r\n    args.push(this.StartTime);\r\n    ;\r\n    args.push(this.FinishTime);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcWorkPlan = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.CreationDate = CreationDate;\r\n    this.Creators = Creators;\r\n    this.Purpose = Purpose;\r\n    this.Duration = Duration;\r\n    this.TotalFloat = TotalFloat;\r\n    this.StartTime = StartTime;\r\n    this.FinishTime = FinishTime;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let CreationDate = tape[ptr++];\r\n    let Creators = tape[ptr++];\r\n    let Purpose = tape[ptr++];\r\n    let Duration = tape[ptr++];\r\n    let TotalFloat = tape[ptr++];\r\n    let StartTime = tape[ptr++];\r\n    let FinishTime = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcWorkPlan(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.CreationDate);\r\n    ;\r\n    args.push(this.Creators);\r\n    ;\r\n    args.push(this.Purpose);\r\n    ;\r\n    args.push(this.Duration);\r\n    ;\r\n    args.push(this.TotalFloat);\r\n    ;\r\n    args.push(this.StartTime);\r\n    ;\r\n    args.push(this.FinishTime);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcWorkSchedule = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.Identification = Identification;\r\n    this.CreationDate = CreationDate;\r\n    this.Creators = Creators;\r\n    this.Purpose = Purpose;\r\n    this.Duration = Duration;\r\n    this.TotalFloat = TotalFloat;\r\n    this.StartTime = StartTime;\r\n    this.FinishTime = FinishTime;\r\n    this.PredefinedType = PredefinedType;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let Identification = tape[ptr++];\r\n    let CreationDate = tape[ptr++];\r\n    let Creators = tape[ptr++];\r\n    let Purpose = tape[ptr++];\r\n    let Duration = tape[ptr++];\r\n    let TotalFloat = tape[ptr++];\r\n    let StartTime = tape[ptr++];\r\n    let FinishTime = tape[ptr++];\r\n    let PredefinedType = tape[ptr++];\r\n    return new IfcWorkSchedule(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, Identification, CreationDate, Creators, Purpose, Duration, TotalFloat, StartTime, FinishTime, PredefinedType);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.Identification);\r\n    ;\r\n    args.push(this.CreationDate);\r\n    ;\r\n    args.push(this.Creators);\r\n    ;\r\n    args.push(this.Purpose);\r\n    ;\r\n    args.push(this.Duration);\r\n    ;\r\n    args.push(this.TotalFloat);\r\n    ;\r\n    args.push(this.StartTime);\r\n    ;\r\n    args.push(this.FinishTime);\r\n    ;\r\n    args.push(this.PredefinedType);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcWorkTime = class {\r\n  constructor(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, RecurrencePattern, Start, Finish) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.Name = Name;\r\n    this.DataOrigin = DataOrigin;\r\n    this.UserDefinedDataOrigin = UserDefinedDataOrigin;\r\n    this.RecurrencePattern = RecurrencePattern;\r\n    this.Start = Start;\r\n    this.Finish = Finish;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let Name = tape[ptr++];\r\n    let DataOrigin = tape[ptr++];\r\n    let UserDefinedDataOrigin = tape[ptr++];\r\n    let RecurrencePattern = tape[ptr++];\r\n    let Start = tape[ptr++];\r\n    let Finish = tape[ptr++];\r\n    return new IfcWorkTime(expressID, type, Name, DataOrigin, UserDefinedDataOrigin, RecurrencePattern, Start, Finish);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.DataOrigin);\r\n    ;\r\n    args.push(this.UserDefinedDataOrigin);\r\n    ;\r\n    args.push(this.RecurrencePattern);\r\n    ;\r\n    args.push(this.Start);\r\n    ;\r\n    args.push(this.Finish);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcZShapeProfileDef = class {\r\n  constructor(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.ProfileType = ProfileType;\r\n    this.ProfileName = ProfileName;\r\n    this.Position = Position;\r\n    this.Depth = Depth;\r\n    this.FlangeWidth = FlangeWidth;\r\n    this.WebThickness = WebThickness;\r\n    this.FlangeThickness = FlangeThickness;\r\n    this.FilletRadius = FilletRadius;\r\n    this.EdgeRadius = EdgeRadius;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let ProfileType = tape[ptr++];\r\n    let ProfileName = tape[ptr++];\r\n    let Position = tape[ptr++];\r\n    let Depth = tape[ptr++];\r\n    let FlangeWidth = tape[ptr++];\r\n    let WebThickness = tape[ptr++];\r\n    let FlangeThickness = tape[ptr++];\r\n    let FilletRadius = tape[ptr++];\r\n    let EdgeRadius = tape[ptr++];\r\n    return new IfcZShapeProfileDef(expressID, type, ProfileType, ProfileName, Position, Depth, FlangeWidth, WebThickness, FlangeThickness, FilletRadius, EdgeRadius);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.ProfileType);\r\n    ;\r\n    args.push(this.ProfileName);\r\n    ;\r\n    args.push(this.Position);\r\n    ;\r\n    args.push(this.Depth);\r\n    ;\r\n    args.push(this.FlangeWidth);\r\n    ;\r\n    args.push(this.WebThickness);\r\n    ;\r\n    args.push(this.FlangeThickness);\r\n    ;\r\n    args.push(this.FilletRadius);\r\n    ;\r\n    args.push(this.EdgeRadius);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\nvar IfcZone = class {\r\n  constructor(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName) {\r\n    this.expressID = expressID;\r\n    this.type = type;\r\n    this.GlobalId = GlobalId;\r\n    this.OwnerHistory = OwnerHistory;\r\n    this.Name = Name;\r\n    this.Description = Description;\r\n    this.ObjectType = ObjectType;\r\n    this.LongName = LongName;\r\n  }\r\n  static FromTape(expressID, type, tape) {\r\n    let ptr = 0;\r\n    let GlobalId = tape[ptr++];\r\n    let OwnerHistory = tape[ptr++];\r\n    let Name = tape[ptr++];\r\n    let Description = tape[ptr++];\r\n    let ObjectType = tape[ptr++];\r\n    let LongName = tape[ptr++];\r\n    return new IfcZone(expressID, type, GlobalId, OwnerHistory, Name, Description, ObjectType, LongName);\r\n  }\r\n  ToTape() {\r\n    let args = [];\r\n    args.push(this.GlobalId);\r\n    ;\r\n    args.push(this.OwnerHistory);\r\n    ;\r\n    args.push(this.Name);\r\n    ;\r\n    args.push(this.Description);\r\n    ;\r\n    args.push(this.ObjectType);\r\n    ;\r\n    args.push(this.LongName);\r\n    ;\r\n    return args;\r\n  }\r\n};\r\n\r\n// dist/web-ifc-api.ts\r\nvar WebIFCWasm = require_web_ifc();\r\nvar UNKNOWN = 0;\r\nvar STRING = 1;\r\nvar LABEL = 2;\r\nvar ENUM = 3;\r\nvar REAL = 4;\r\nvar REF = 5;\r\nvar EMPTY = 6;\r\nvar SET_BEGIN = 7;\r\nvar SET_END = 8;\r\nvar LINE_END = 9;\r\nfunction ms() {\r\n  return new Date().getTime();\r\n}\r\nvar IfcAPI = class {\r\n  constructor() {\r\n    this.wasmModule = void 0;\r\n    this.fs = void 0;\r\n  }\r\n  Init() {\r\n    return __async(this, null, function* () {\r\n      if (WebIFCWasm) {\r\n        this.wasmModule = yield WebIFCWasm({ noInitialRun: true });\r\n        this.fs = this.wasmModule.FS;\r\n      } else {\r\n        console.error(`Could not find wasm module at './web-ifc' from web-ifc-api.ts`);\r\n      }\r\n    });\r\n  }\r\n  OpenModel(data, settings) {\r\n    this.wasmModule[\"FS_createDataFile\"](\"/\", \"filename\", data, true, true, true);\r\n    let s = __spreadValues({\r\n      COORDINATE_TO_ORIGIN: false,\r\n      USE_FAST_BOOLS: false,\r\n      CIRCLE_SEGMENTS_LOW: 5,\r\n      CIRCLE_SEGMENTS_MEDIUM: 8,\r\n      CIRCLE_SEGMENTS_HIGH: 12\r\n    }, settings);\r\n    let result = this.wasmModule.OpenModel(s);\r\n    this.wasmModule[\"FS_unlink\"](\"/filename\");\r\n    return result;\r\n  }\r\n  CreateModel(settings) {\r\n    let s = __spreadValues({\r\n      COORDINATE_TO_ORIGIN: false,\r\n      USE_FAST_BOOLS: false,\r\n      CIRCLE_SEGMENTS_LOW: 5,\r\n      CIRCLE_SEGMENTS_MEDIUM: 8,\r\n      CIRCLE_SEGMENTS_HIGH: 12\r\n    }, settings);\r\n    let result = this.wasmModule.CreateModel(s);\r\n    return result;\r\n  }\r\n  ExportFileAsIFC(modelID) {\r\n    this.wasmModule.ExportFileAsIFC(modelID);\r\n    let result = this.fs.readFile(\"/export.ifc\");\r\n    this.wasmModule[\"FS_unlink\"](\"/export.ifc\");\r\n    return result;\r\n  }\r\n  GetGeometry(modelID, geometryExpressID) {\r\n    return this.wasmModule.GetGeometry(modelID, geometryExpressID);\r\n  }\r\n  GetLine(modelID, expressID, flatten = false) {\r\n    let rawLineData = this.GetRawLineData(modelID, expressID);\r\n    let lineData = FromRawLineData[rawLineData.type](rawLineData);\r\n    if (flatten) {\r\n      this.FlattenLine(modelID, lineData);\r\n    }\r\n    return lineData;\r\n  }\r\n  WriteLine(modelID, lineObject) {\r\n    Object.keys(lineObject).forEach((propertyName) => {\r\n      let property = lineObject[propertyName];\r\n      if (property && property.expressID !== void 0) {\r\n        this.WriteLine(modelID, property);\r\n        lineObject[propertyName] = {\r\n          type: 5,\r\n          value: property.expressID\r\n        };\r\n      } else if (Array.isArray(property) && property.length > 0) {\r\n        for (let i = 0; i < property.length; i++) {\r\n          if (property[i].expressID !== void 0) {\r\n            this.WriteLine(modelID, property[i]);\r\n            lineObject[propertyName][i] = {\r\n              type: 5,\r\n              value: property[i].expressID\r\n            };\r\n          }\r\n        }\r\n      }\r\n    });\r\n    let rawLineData = {\r\n      ID: lineObject.expressID,\r\n      type: lineObject.type,\r\n      arguments: lineObject.ToTape()\r\n    };\r\n    this.WriteRawLineData(modelID, rawLineData);\r\n  }\r\n  FlattenLine(modelID, line) {\r\n    Object.keys(line).forEach((propertyName) => {\r\n      let property = line[propertyName];\r\n      if (property && property.type === 5) {\r\n        line[propertyName] = this.GetLine(modelID, property.value, true);\r\n      } else if (Array.isArray(property) && property.length > 0 && property[0].type === 5) {\r\n        for (let i = 0; i < property.length; i++) {\r\n          line[propertyName][i] = this.GetLine(modelID, property[i].value, true);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  GetRawLineData(modelID, expressID) {\r\n    return this.wasmModule.GetLine(modelID, expressID);\r\n  }\r\n  WriteRawLineData(modelID, data) {\r\n    return this.wasmModule.WriteLine(modelID, data.ID, data.type, data.arguments);\r\n  }\r\n  GetLineIDsWithType(modelID, type) {\r\n    return this.wasmModule.GetLineIDsWithType(modelID, type);\r\n  }\r\n  GetAllLines(modelID) {\r\n    return this.wasmModule.GetAllLines(modelID);\r\n  }\r\n  SetGeometryTransformation(modelID, transformationMatrix) {\r\n    if (transformationMatrix.length != 16) {\r\n      console.log(`Bad transformation matrix size: ${transformationMatrix.length}`);\r\n      return;\r\n    }\r\n    this.wasmModule.SetGeometryTransformation(modelID, transformationMatrix);\r\n  }\r\n  GetVertexArray(ptr, size) {\r\n    return this.getSubArray(this.wasmModule.HEAPF32, ptr, size);\r\n  }\r\n  GetIndexArray(ptr, size) {\r\n    return this.getSubArray(this.wasmModule.HEAPU32, ptr, size);\r\n  }\r\n  getSubArray(heap, startPtr, sizeBytes) {\r\n    return heap.subarray(startPtr / 4, startPtr / 4 + sizeBytes).slice(0);\r\n  }\r\n  CloseModel(modelID) {\r\n    this.wasmModule.CloseModel(modelID);\r\n  }\r\n  StreamAllMeshes(modelID, meshCallback) {\r\n    this.wasmModule.StreamAllMeshes(modelID, meshCallback);\r\n  }\r\n  IsModelOpen(modelID) {\r\n    return this.wasmModule.IsModelOpen(modelID);\r\n  }\r\n  LoadAllGeometry(modelID) {\r\n    return this.wasmModule.LoadAllGeometry(modelID);\r\n  }\r\n  GetFlatMesh(modelID, expressID) {\r\n    return this.wasmModule.GetFlatMesh(modelID, expressID);\r\n  }\r\n  SetWasmPath(path) {\r\n    WasmPath = path;\r\n  }\r\n};\r\nexport {\r\n  EMPTY,\r\n  ENUM,\r\n  FromRawLineData,\r\n  Handle,\r\n  IFCACTIONREQUEST,\r\n  IFCACTOR,\r\n  IFCACTORROLE,\r\n  IFCACTUATOR,\r\n  IFCACTUATORTYPE,\r\n  IFCADDRESS,\r\n  IFCADVANCEDBREP,\r\n  IFCADVANCEDBREPWITHVOIDS,\r\n  IFCADVANCEDFACE,\r\n  IFCAIRTERMINAL,\r\n  IFCAIRTERMINALBOX,\r\n  IFCAIRTERMINALBOXTYPE,\r\n  IFCAIRTERMINALTYPE,\r\n  IFCAIRTOAIRHEATRECOVERY,\r\n  IFCAIRTOAIRHEATRECOVERYTYPE,\r\n  IFCALARM,\r\n  IFCALARMTYPE,\r\n  IFCALIGNMENT,\r\n  IFCALIGNMENT2DHORIZONTAL,\r\n  IFCALIGNMENT2DHORIZONTALSEGMENT,\r\n  IFCALIGNMENT2DSEGMENT,\r\n  IFCALIGNMENT2DVERSEGCIRCULARARC,\r\n  IFCALIGNMENT2DVERSEGLINE,\r\n  IFCALIGNMENT2DVERSEGPARABOLICARC,\r\n  IFCALIGNMENT2DVERTICAL,\r\n  IFCALIGNMENT2DVERTICALSEGMENT,\r\n  IFCALIGNMENTCURVE,\r\n  IFCANNOTATION,\r\n  IFCANNOTATIONFILLAREA,\r\n  IFCAPPLICATION,\r\n  IFCAPPLIEDVALUE,\r\n  IFCAPPROVAL,\r\n  IFCAPPROVALRELATIONSHIP,\r\n  IFCARBITRARYCLOSEDPROFILEDEF,\r\n  IFCARBITRARYOPENPROFILEDEF,\r\n  IFCARBITRARYPROFILEDEFWITHVOIDS,\r\n  IFCASSET,\r\n  IFCASYMMETRICISHAPEPROFILEDEF,\r\n  IFCAUDIOVISUALAPPLIANCE,\r\n  IFCAUDIOVISUALAPPLIANCETYPE,\r\n  IFCAXIS1PLACEMENT,\r\n  IFCAXIS2PLACEMENT2D,\r\n  IFCAXIS2PLACEMENT3D,\r\n  IFCBEAM,\r\n  IFCBEAMSTANDARDCASE,\r\n  IFCBEAMTYPE,\r\n  IFCBEARING,\r\n  IFCBEARINGTYPE,\r\n  IFCBLOBTEXTURE,\r\n  IFCBLOCK,\r\n  IFCBOILER,\r\n  IFCBOILERTYPE,\r\n  IFCBOOLEANCLIPPINGRESULT,\r\n  IFCBOOLEANRESULT,\r\n  IFCBOUNDARYCONDITION,\r\n  IFCBOUNDARYCURVE,\r\n  IFCBOUNDARYEDGECONDITION,\r\n  IFCBOUNDARYFACECONDITION,\r\n  IFCBOUNDARYNODECONDITION,\r\n  IFCBOUNDARYNODECONDITIONWARPING,\r\n  IFCBOUNDEDCURVE,\r\n  IFCBOUNDEDSURFACE,\r\n  IFCBOUNDINGBOX,\r\n  IFCBOXEDHALFSPACE,\r\n  IFCBRIDGE,\r\n  IFCBRIDGEPART,\r\n  IFCBSPLINECURVE,\r\n  IFCBSPLINECURVEWITHKNOTS,\r\n  IFCBSPLINESURFACE,\r\n  IFCBSPLINESURFACEWITHKNOTS,\r\n  IFCBUILDING,\r\n  IFCBUILDINGELEMENT,\r\n  IFCBUILDINGELEMENTPART,\r\n  IFCBUILDINGELEMENTPARTTYPE,\r\n  IFCBUILDINGELEMENTPROXY,\r\n  IFCBUILDINGELEMENTPROXYTYPE,\r\n  IFCBUILDINGELEMENTTYPE,\r\n  IFCBUILDINGSTOREY,\r\n  IFCBUILDINGSYSTEM,\r\n  IFCBURNER,\r\n  IFCBURNERTYPE,\r\n  IFCCABLECARRIERFITTING,\r\n  IFCCABLECARRIERFITTINGTYPE,\r\n  IFCCABLECARRIERSEGMENT,\r\n  IFCCABLECARRIERSEGMENTTYPE,\r\n  IFCCABLEFITTING,\r\n  IFCCABLEFITTINGTYPE,\r\n  IFCCABLESEGMENT,\r\n  IFCCABLESEGMENTTYPE,\r\n  IFCCAISSONFOUNDATION,\r\n  IFCCAISSONFOUNDATIONTYPE,\r\n  IFCCARTESIANPOINT,\r\n  IFCCARTESIANPOINTLIST,\r\n  IFCCARTESIANPOINTLIST2D,\r\n  IFCCARTESIANPOINTLIST3D,\r\n  IFCCARTESIANTRANSFORMATIONOPERATOR,\r\n  IFCCARTESIANTRANSFORMATIONOPERATOR2D,\r\n  IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM,\r\n  IFCCARTESIANTRANSFORMATIONOPERATOR3D,\r\n  IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM,\r\n  IFCCENTERLINEPROFILEDEF,\r\n  IFCCHILLER,\r\n  IFCCHILLERTYPE,\r\n  IFCCHIMNEY,\r\n  IFCCHIMNEYTYPE,\r\n  IFCCIRCLE,\r\n  IFCCIRCLEHOLLOWPROFILEDEF,\r\n  IFCCIRCLEPROFILEDEF,\r\n  IFCCIRCULARARCSEGMENT2D,\r\n  IFCCIVILELEMENT,\r\n  IFCCIVILELEMENTTYPE,\r\n  IFCCLASSIFICATION,\r\n  IFCCLASSIFICATIONREFERENCE,\r\n  IFCCLOSEDSHELL,\r\n  IFCCOIL,\r\n  IFCCOILTYPE,\r\n  IFCCOLOURRGB,\r\n  IFCCOLOURRGBLIST,\r\n  IFCCOLOURSPECIFICATION,\r\n  IFCCOLUMN,\r\n  IFCCOLUMNSTANDARDCASE,\r\n  IFCCOLUMNTYPE,\r\n  IFCCOMMUNICATIONSAPPLIANCE,\r\n  IFCCOMMUNICATIONSAPPLIANCETYPE,\r\n  IFCCOMPLEXPROPERTY,\r\n  IFCCOMPLEXPROPERTYTEMPLATE,\r\n  IFCCOMPOSITECURVE,\r\n  IFCCOMPOSITECURVEONSURFACE,\r\n  IFCCOMPOSITECURVESEGMENT,\r\n  IFCCOMPOSITEPROFILEDEF,\r\n  IFCCOMPRESSOR,\r\n  IFCCOMPRESSORTYPE,\r\n  IFCCONDENSER,\r\n  IFCCONDENSERTYPE,\r\n  IFCCONIC,\r\n  IFCCONNECTEDFACESET,\r\n  IFCCONNECTIONCURVEGEOMETRY,\r\n  IFCCONNECTIONGEOMETRY,\r\n  IFCCONNECTIONPOINTECCENTRICITY,\r\n  IFCCONNECTIONPOINTGEOMETRY,\r\n  IFCCONNECTIONSURFACEGEOMETRY,\r\n  IFCCONNECTIONVOLUMEGEOMETRY,\r\n  IFCCONSTRAINT,\r\n  IFCCONSTRUCTIONEQUIPMENTRESOURCE,\r\n  IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE,\r\n  IFCCONSTRUCTIONMATERIALRESOURCE,\r\n  IFCCONSTRUCTIONMATERIALRESOURCETYPE,\r\n  IFCCONSTRUCTIONPRODUCTRESOURCE,\r\n  IFCCONSTRUCTIONPRODUCTRESOURCETYPE,\r\n  IFCCONSTRUCTIONRESOURCE,\r\n  IFCCONSTRUCTIONRESOURCETYPE,\r\n  IFCCONTEXT,\r\n  IFCCONTEXTDEPENDENTUNIT,\r\n  IFCCONTROL,\r\n  IFCCONTROLLER,\r\n  IFCCONTROLLERTYPE,\r\n  IFCCONVERSIONBASEDUNIT,\r\n  IFCCONVERSIONBASEDUNITWITHOFFSET,\r\n  IFCCOOLEDBEAM,\r\n  IFCCOOLEDBEAMTYPE,\r\n  IFCCOOLINGTOWER,\r\n  IFCCOOLINGTOWERTYPE,\r\n  IFCCOORDINATEOPERATION,\r\n  IFCCOORDINATEREFERENCESYSTEM,\r\n  IFCCOSTITEM,\r\n  IFCCOSTSCHEDULE,\r\n  IFCCOSTVALUE,\r\n  IFCCOVERING,\r\n  IFCCOVERINGTYPE,\r\n  IFCCREWRESOURCE,\r\n  IFCCREWRESOURCETYPE,\r\n  IFCCSGPRIMITIVE3D,\r\n  IFCCSGSOLID,\r\n  IFCCSHAPEPROFILEDEF,\r\n  IFCCURRENCYRELATIONSHIP,\r\n  IFCCURTAINWALL,\r\n  IFCCURTAINWALLTYPE,\r\n  IFCCURVE,\r\n  IFCCURVEBOUNDEDPLANE,\r\n  IFCCURVEBOUNDEDSURFACE,\r\n  IFCCURVESEGMENT2D,\r\n  IFCCURVESTYLE,\r\n  IFCCURVESTYLEFONT,\r\n  IFCCURVESTYLEFONTANDSCALING,\r\n  IFCCURVESTYLEFONTPATTERN,\r\n  IFCCYLINDRICALSURFACE,\r\n  IFCDAMPER,\r\n  IFCDAMPERTYPE,\r\n  IFCDEEPFOUNDATION,\r\n  IFCDEEPFOUNDATIONTYPE,\r\n  IFCDERIVEDPROFILEDEF,\r\n  IFCDERIVEDUNIT,\r\n  IFCDERIVEDUNITELEMENT,\r\n  IFCDIMENSIONALEXPONENTS,\r\n  IFCDIRECTION,\r\n  IFCDISCRETEACCESSORY,\r\n  IFCDISCRETEACCESSORYTYPE,\r\n  IFCDISTANCEEXPRESSION,\r\n  IFCDISTRIBUTIONCHAMBERELEMENT,\r\n  IFCDISTRIBUTIONCHAMBERELEMENTTYPE,\r\n  IFCDISTRIBUTIONCIRCUIT,\r\n  IFCDISTRIBUTIONCONTROLELEMENT,\r\n  IFCDISTRIBUTIONCONTROLELEMENTTYPE,\r\n  IFCDISTRIBUTIONELEMENT,\r\n  IFCDISTRIBUTIONELEMENTTYPE,\r\n  IFCDISTRIBUTIONFLOWELEMENT,\r\n  IFCDISTRIBUTIONFLOWELEMENTTYPE,\r\n  IFCDISTRIBUTIONPORT,\r\n  IFCDISTRIBUTIONSYSTEM,\r\n  IFCDOCUMENTINFORMATION,\r\n  IFCDOCUMENTINFORMATIONRELATIONSHIP,\r\n  IFCDOCUMENTREFERENCE,\r\n  IFCDOOR,\r\n  IFCDOORLININGPROPERTIES,\r\n  IFCDOORPANELPROPERTIES,\r\n  IFCDOORSTANDARDCASE,\r\n  IFCDOORSTYLE,\r\n  IFCDOORTYPE,\r\n  IFCDRAUGHTINGPREDEFINEDCOLOUR,\r\n  IFCDRAUGHTINGPREDEFINEDCURVEFONT,\r\n  IFCDUCTFITTING,\r\n  IFCDUCTFITTINGTYPE,\r\n  IFCDUCTSEGMENT,\r\n  IFCDUCTSEGMENTTYPE,\r\n  IFCDUCTSILENCER,\r\n  IFCDUCTSILENCERTYPE,\r\n  IFCEDGE,\r\n  IFCEDGECURVE,\r\n  IFCEDGELOOP,\r\n  IFCELECTRICAPPLIANCE,\r\n  IFCELECTRICAPPLIANCETYPE,\r\n  IFCELECTRICDISTRIBUTIONBOARD,\r\n  IFCELECTRICDISTRIBUTIONBOARDTYPE,\r\n  IFCELECTRICFLOWSTORAGEDEVICE,\r\n  IFCELECTRICFLOWSTORAGEDEVICETYPE,\r\n  IFCELECTRICGENERATOR,\r\n  IFCELECTRICGENERATORTYPE,\r\n  IFCELECTRICMOTOR,\r\n  IFCELECTRICMOTORTYPE,\r\n  IFCELECTRICTIMECONTROL,\r\n  IFCELECTRICTIMECONTROLTYPE,\r\n  IFCELEMENT,\r\n  IFCELEMENTARYSURFACE,\r\n  IFCELEMENTASSEMBLY,\r\n  IFCELEMENTASSEMBLYTYPE,\r\n  IFCELEMENTCOMPONENT,\r\n  IFCELEMENTCOMPONENTTYPE,\r\n  IFCELEMENTQUANTITY,\r\n  IFCELEMENTTYPE,\r\n  IFCELLIPSE,\r\n  IFCELLIPSEPROFILEDEF,\r\n  IFCENERGYCONVERSIONDEVICE,\r\n  IFCENERGYCONVERSIONDEVICETYPE,\r\n  IFCENGINE,\r\n  IFCENGINETYPE,\r\n  IFCEVAPORATIVECOOLER,\r\n  IFCEVAPORATIVECOOLERTYPE,\r\n  IFCEVAPORATOR,\r\n  IFCEVAPORATORTYPE,\r\n  IFCEVENT,\r\n  IFCEVENTTIME,\r\n  IFCEVENTTYPE,\r\n  IFCEXTENDEDPROPERTIES,\r\n  IFCEXTERNALINFORMATION,\r\n  IFCEXTERNALLYDEFINEDHATCHSTYLE,\r\n  IFCEXTERNALLYDEFINEDSURFACESTYLE,\r\n  IFCEXTERNALLYDEFINEDTEXTFONT,\r\n  IFCEXTERNALREFERENCE,\r\n  IFCEXTERNALREFERENCERELATIONSHIP,\r\n  IFCEXTERNALSPATIALELEMENT,\r\n  IFCEXTERNALSPATIALSTRUCTUREELEMENT,\r\n  IFCEXTRUDEDAREASOLID,\r\n  IFCEXTRUDEDAREASOLIDTAPERED,\r\n  IFCFACE,\r\n  IFCFACEBASEDSURFACEMODEL,\r\n  IFCFACEBOUND,\r\n  IFCFACEOUTERBOUND,\r\n  IFCFACESURFACE,\r\n  IFCFACETEDBREP,\r\n  IFCFACETEDBREPWITHVOIDS,\r\n  IFCFACILITY,\r\n  IFCFACILITYPART,\r\n  IFCFAILURECONNECTIONCONDITION,\r\n  IFCFAN,\r\n  IFCFANTYPE,\r\n  IFCFASTENER,\r\n  IFCFASTENERTYPE,\r\n  IFCFEATUREELEMENT,\r\n  IFCFEATUREELEMENTADDITION,\r\n  IFCFEATUREELEMENTSUBTRACTION,\r\n  IFCFILLAREASTYLE,\r\n  IFCFILLAREASTYLEHATCHING,\r\n  IFCFILLAREASTYLETILES,\r\n  IFCFILTER,\r\n  IFCFILTERTYPE,\r\n  IFCFIRESUPPRESSIONTERMINAL,\r\n  IFCFIRESUPPRESSIONTERMINALTYPE,\r\n  IFCFIXEDREFERENCESWEPTAREASOLID,\r\n  IFCFLOWCONTROLLER,\r\n  IFCFLOWCONTROLLERTYPE,\r\n  IFCFLOWFITTING,\r\n  IFCFLOWFITTINGTYPE,\r\n  IFCFLOWINSTRUMENT,\r\n  IFCFLOWINSTRUMENTTYPE,\r\n  IFCFLOWMETER,\r\n  IFCFLOWMETERTYPE,\r\n  IFCFLOWMOVINGDEVICE,\r\n  IFCFLOWMOVINGDEVICETYPE,\r\n  IFCFLOWSEGMENT,\r\n  IFCFLOWSEGMENTTYPE,\r\n  IFCFLOWSTORAGEDEVICE,\r\n  IFCFLOWSTORAGEDEVICETYPE,\r\n  IFCFLOWTERMINAL,\r\n  IFCFLOWTERMINALTYPE,\r\n  IFCFLOWTREATMENTDEVICE,\r\n  IFCFLOWTREATMENTDEVICETYPE,\r\n  IFCFOOTING,\r\n  IFCFOOTINGTYPE,\r\n  IFCFURNISHINGELEMENT,\r\n  IFCFURNISHINGELEMENTTYPE,\r\n  IFCFURNITURE,\r\n  IFCFURNITURETYPE,\r\n  IFCGEOGRAPHICELEMENT,\r\n  IFCGEOGRAPHICELEMENTTYPE,\r\n  IFCGEOMETRICCURVESET,\r\n  IFCGEOMETRICREPRESENTATIONCONTEXT,\r\n  IFCGEOMETRICREPRESENTATIONITEM,\r\n  IFCGEOMETRICREPRESENTATIONSUBCONTEXT,\r\n  IFCGEOMETRICSET,\r\n  IFCGRID,\r\n  IFCGRIDAXIS,\r\n  IFCGRIDPLACEMENT,\r\n  IFCGROUP,\r\n  IFCHALFSPACESOLID,\r\n  IFCHEATEXCHANGER,\r\n  IFCHEATEXCHANGERTYPE,\r\n  IFCHUMIDIFIER,\r\n  IFCHUMIDIFIERTYPE,\r\n  IFCIMAGETEXTURE,\r\n  IFCINDEXEDCOLOURMAP,\r\n  IFCINDEXEDPOLYCURVE,\r\n  IFCINDEXEDPOLYGONALFACE,\r\n  IFCINDEXEDPOLYGONALFACEWITHVOIDS,\r\n  IFCINDEXEDTEXTUREMAP,\r\n  IFCINDEXEDTRIANGLETEXTUREMAP,\r\n  IFCINTERCEPTOR,\r\n  IFCINTERCEPTORTYPE,\r\n  IFCINTERSECTIONCURVE,\r\n  IFCINVENTORY,\r\n  IFCIRREGULARTIMESERIES,\r\n  IFCIRREGULARTIMESERIESVALUE,\r\n  IFCISHAPEPROFILEDEF,\r\n  IFCJUNCTIONBOX,\r\n  IFCJUNCTIONBOXTYPE,\r\n  IFCLABORRESOURCE,\r\n  IFCLABORRESOURCETYPE,\r\n  IFCLAGTIME,\r\n  IFCLAMP,\r\n  IFCLAMPTYPE,\r\n  IFCLIBRARYINFORMATION,\r\n  IFCLIBRARYREFERENCE,\r\n  IFCLIGHTDISTRIBUTIONDATA,\r\n  IFCLIGHTFIXTURE,\r\n  IFCLIGHTFIXTURETYPE,\r\n  IFCLIGHTINTENSITYDISTRIBUTION,\r\n  IFCLIGHTSOURCE,\r\n  IFCLIGHTSOURCEAMBIENT,\r\n  IFCLIGHTSOURCEDIRECTIONAL,\r\n  IFCLIGHTSOURCEGONIOMETRIC,\r\n  IFCLIGHTSOURCEPOSITIONAL,\r\n  IFCLIGHTSOURCESPOT,\r\n  IFCLINE,\r\n  IFCLINEARPLACEMENT,\r\n  IFCLINEARPOSITIONINGELEMENT,\r\n  IFCLINESEGMENT2D,\r\n  IFCLOCALPLACEMENT,\r\n  IFCLOOP,\r\n  IFCLSHAPEPROFILEDEF,\r\n  IFCMANIFOLDSOLIDBREP,\r\n  IFCMAPCONVERSION,\r\n  IFCMAPPEDITEM,\r\n  IFCMATERIAL,\r\n  IFCMATERIALCLASSIFICATIONRELATIONSHIP,\r\n  IFCMATERIALCONSTITUENT,\r\n  IFCMATERIALCONSTITUENTSET,\r\n  IFCMATERIALDEFINITION,\r\n  IFCMATERIALDEFINITIONREPRESENTATION,\r\n  IFCMATERIALLAYER,\r\n  IFCMATERIALLAYERSET,\r\n  IFCMATERIALLAYERSETUSAGE,\r\n  IFCMATERIALLAYERWITHOFFSETS,\r\n  IFCMATERIALLIST,\r\n  IFCMATERIALPROFILE,\r\n  IFCMATERIALPROFILESET,\r\n  IFCMATERIALPROFILESETUSAGE,\r\n  IFCMATERIALPROFILESETUSAGETAPERING,\r\n  IFCMATERIALPROFILEWITHOFFSETS,\r\n  IFCMATERIALPROPERTIES,\r\n  IFCMATERIALRELATIONSHIP,\r\n  IFCMATERIALUSAGEDEFINITION,\r\n  IFCMEASUREWITHUNIT,\r\n  IFCMECHANICALFASTENER,\r\n  IFCMECHANICALFASTENERTYPE,\r\n  IFCMEDICALDEVICE,\r\n  IFCMEDICALDEVICETYPE,\r\n  IFCMEMBER,\r\n  IFCMEMBERSTANDARDCASE,\r\n  IFCMEMBERTYPE,\r\n  IFCMETRIC,\r\n  IFCMIRROREDPROFILEDEF,\r\n  IFCMONETARYUNIT,\r\n  IFCMOTORCONNECTION,\r\n  IFCMOTORCONNECTIONTYPE,\r\n  IFCNAMEDUNIT,\r\n  IFCOBJECT,\r\n  IFCOBJECTDEFINITION,\r\n  IFCOBJECTIVE,\r\n  IFCOBJECTPLACEMENT,\r\n  IFCOCCUPANT,\r\n  IFCOFFSETCURVE,\r\n  IFCOFFSETCURVE2D,\r\n  IFCOFFSETCURVE3D,\r\n  IFCOFFSETCURVEBYDISTANCES,\r\n  IFCOPENINGELEMENT,\r\n  IFCOPENINGSTANDARDCASE,\r\n  IFCOPENSHELL,\r\n  IFCORGANIZATION,\r\n  IFCORGANIZATIONRELATIONSHIP,\r\n  IFCORIENTATIONEXPRESSION,\r\n  IFCORIENTEDEDGE,\r\n  IFCOUTERBOUNDARYCURVE,\r\n  IFCOUTLET,\r\n  IFCOUTLETTYPE,\r\n  IFCOWNERHISTORY,\r\n  IFCPARAMETERIZEDPROFILEDEF,\r\n  IFCPATH,\r\n  IFCPCURVE,\r\n  IFCPERFORMANCEHISTORY,\r\n  IFCPERMEABLECOVERINGPROPERTIES,\r\n  IFCPERMIT,\r\n  IFCPERSON,\r\n  IFCPERSONANDORGANIZATION,\r\n  IFCPHYSICALCOMPLEXQUANTITY,\r\n  IFCPHYSICALQUANTITY,\r\n  IFCPHYSICALSIMPLEQUANTITY,\r\n  IFCPILE,\r\n  IFCPILETYPE,\r\n  IFCPIPEFITTING,\r\n  IFCPIPEFITTINGTYPE,\r\n  IFCPIPESEGMENT,\r\n  IFCPIPESEGMENTTYPE,\r\n  IFCPIXELTEXTURE,\r\n  IFCPLACEMENT,\r\n  IFCPLANARBOX,\r\n  IFCPLANAREXTENT,\r\n  IFCPLANE,\r\n  IFCPLATE,\r\n  IFCPLATESTANDARDCASE,\r\n  IFCPLATETYPE,\r\n  IFCPOINT,\r\n  IFCPOINTONCURVE,\r\n  IFCPOINTONSURFACE,\r\n  IFCPOLYGONALBOUNDEDHALFSPACE,\r\n  IFCPOLYGONALFACESET,\r\n  IFCPOLYLINE,\r\n  IFCPOLYLOOP,\r\n  IFCPORT,\r\n  IFCPOSITIONINGELEMENT,\r\n  IFCPOSTALADDRESS,\r\n  IFCPREDEFINEDCOLOUR,\r\n  IFCPREDEFINEDCURVEFONT,\r\n  IFCPREDEFINEDITEM,\r\n  IFCPREDEFINEDPROPERTIES,\r\n  IFCPREDEFINEDPROPERTYSET,\r\n  IFCPREDEFINEDTEXTFONT,\r\n  IFCPRESENTATIONITEM,\r\n  IFCPRESENTATIONLAYERASSIGNMENT,\r\n  IFCPRESENTATIONLAYERWITHSTYLE,\r\n  IFCPRESENTATIONSTYLE,\r\n  IFCPRESENTATIONSTYLEASSIGNMENT,\r\n  IFCPROCEDURE,\r\n  IFCPROCEDURETYPE,\r\n  IFCPROCESS,\r\n  IFCPRODUCT,\r\n  IFCPRODUCTDEFINITIONSHAPE,\r\n  IFCPRODUCTREPRESENTATION,\r\n  IFCPROFILEDEF,\r\n  IFCPROFILEPROPERTIES,\r\n  IFCPROJECT,\r\n  IFCPROJECTEDCRS,\r\n  IFCPROJECTIONELEMENT,\r\n  IFCPROJECTLIBRARY,\r\n  IFCPROJECTORDER,\r\n  IFCPROPERTY,\r\n  IFCPROPERTYABSTRACTION,\r\n  IFCPROPERTYBOUNDEDVALUE,\r\n  IFCPROPERTYDEFINITION,\r\n  IFCPROPERTYDEPENDENCYRELATIONSHIP,\r\n  IFCPROPERTYENUMERATEDVALUE,\r\n  IFCPROPERTYENUMERATION,\r\n  IFCPROPERTYLISTVALUE,\r\n  IFCPROPERTYREFERENCEVALUE,\r\n  IFCPROPERTYSET,\r\n  IFCPROPERTYSETDEFINITION,\r\n  IFCPROPERTYSETTEMPLATE,\r\n  IFCPROPERTYSINGLEVALUE,\r\n  IFCPROPERTYTABLEVALUE,\r\n  IFCPROPERTYTEMPLATE,\r\n  IFCPROPERTYTEMPLATEDEFINITION,\r\n  IFCPROTECTIVEDEVICE,\r\n  IFCPROTECTIVEDEVICETRIPPINGUNIT,\r\n  IFCPROTECTIVEDEVICETRIPPINGUNITTYPE,\r\n  IFCPROTECTIVEDEVICETYPE,\r\n  IFCPROXY,\r\n  IFCPUMP,\r\n  IFCPUMPTYPE,\r\n  IFCQUANTITYAREA,\r\n  IFCQUANTITYCOUNT,\r\n  IFCQUANTITYLENGTH,\r\n  IFCQUANTITYSET,\r\n  IFCQUANTITYTIME,\r\n  IFCQUANTITYVOLUME,\r\n  IFCQUANTITYWEIGHT,\r\n  IFCRAILING,\r\n  IFCRAILINGTYPE,\r\n  IFCRAMP,\r\n  IFCRAMPFLIGHT,\r\n  IFCRAMPFLIGHTTYPE,\r\n  IFCRAMPTYPE,\r\n  IFCRATIONALBSPLINECURVEWITHKNOTS,\r\n  IFCRATIONALBSPLINESURFACEWITHKNOTS,\r\n  IFCRECTANGLEHOLLOWPROFILEDEF,\r\n  IFCRECTANGLEPROFILEDEF,\r\n  IFCRECTANGULARPYRAMID,\r\n  IFCRECTANGULARTRIMMEDSURFACE,\r\n  IFCRECURRENCEPATTERN,\r\n  IFCREFERENCE,\r\n  IFCREFERENT,\r\n  IFCREGULARTIMESERIES,\r\n  IFCREINFORCEMENTBARPROPERTIES,\r\n  IFCREINFORCEMENTDEFINITIONPROPERTIES,\r\n  IFCREINFORCINGBAR,\r\n  IFCREINFORCINGBARTYPE,\r\n  IFCREINFORCINGELEMENT,\r\n  IFCREINFORCINGELEMENTTYPE,\r\n  IFCREINFORCINGMESH,\r\n  IFCREINFORCINGMESHTYPE,\r\n  IFCRELAGGREGATES,\r\n  IFCRELASSIGNS,\r\n  IFCRELASSIGNSTOACTOR,\r\n  IFCRELASSIGNSTOCONTROL,\r\n  IFCRELASSIGNSTOGROUP,\r\n  IFCRELASSIGNSTOGROUPBYFACTOR,\r\n  IFCRELASSIGNSTOPROCESS,\r\n  IFCRELASSIGNSTOPRODUCT,\r\n  IFCRELASSIGNSTORESOURCE,\r\n  IFCRELASSOCIATES,\r\n  IFCRELASSOCIATESAPPROVAL,\r\n  IFCRELASSOCIATESCLASSIFICATION,\r\n  IFCRELASSOCIATESCONSTRAINT,\r\n  IFCRELASSOCIATESDOCUMENT,\r\n  IFCRELASSOCIATESLIBRARY,\r\n  IFCRELASSOCIATESMATERIAL,\r\n  IFCRELATIONSHIP,\r\n  IFCRELCONNECTS,\r\n  IFCRELCONNECTSELEMENTS,\r\n  IFCRELCONNECTSPATHELEMENTS,\r\n  IFCRELCONNECTSPORTS,\r\n  IFCRELCONNECTSPORTTOELEMENT,\r\n  IFCRELCONNECTSSTRUCTURALACTIVITY,\r\n  IFCRELCONNECTSSTRUCTURALMEMBER,\r\n  IFCRELCONNECTSWITHECCENTRICITY,\r\n  IFCRELCONNECTSWITHREALIZINGELEMENTS,\r\n  IFCRELCONTAINEDINSPATIALSTRUCTURE,\r\n  IFCRELCOVERSBLDGELEMENTS,\r\n  IFCRELCOVERSSPACES,\r\n  IFCRELDECLARES,\r\n  IFCRELDECOMPOSES,\r\n  IFCRELDEFINES,\r\n  IFCRELDEFINESBYOBJECT,\r\n  IFCRELDEFINESBYPROPERTIES,\r\n  IFCRELDEFINESBYTEMPLATE,\r\n  IFCRELDEFINESBYTYPE,\r\n  IFCRELFILLSELEMENT,\r\n  IFCRELFLOWCONTROLELEMENTS,\r\n  IFCRELINTERFERESELEMENTS,\r\n  IFCRELNESTS,\r\n  IFCRELPOSITIONS,\r\n  IFCRELPROJECTSELEMENT,\r\n  IFCRELREFERENCEDINSPATIALSTRUCTURE,\r\n  IFCRELSEQUENCE,\r\n  IFCRELSERVICESBUILDINGS,\r\n  IFCRELSPACEBOUNDARY,\r\n  IFCRELSPACEBOUNDARY1STLEVEL,\r\n  IFCRELSPACEBOUNDARY2NDLEVEL,\r\n  IFCRELVOIDSELEMENT,\r\n  IFCREPARAMETRISEDCOMPOSITECURVESEGMENT,\r\n  IFCREPRESENTATION,\r\n  IFCREPRESENTATIONCONTEXT,\r\n  IFCREPRESENTATIONITEM,\r\n  IFCREPRESENTATIONMAP,\r\n  IFCRESOURCE,\r\n  IFCRESOURCEAPPROVALRELATIONSHIP,\r\n  IFCRESOURCECONSTRAINTRELATIONSHIP,\r\n  IFCRESOURCELEVELRELATIONSHIP,\r\n  IFCRESOURCETIME,\r\n  IFCREVOLVEDAREASOLID,\r\n  IFCREVOLVEDAREASOLIDTAPERED,\r\n  IFCRIGHTCIRCULARCONE,\r\n  IFCRIGHTCIRCULARCYLINDER,\r\n  IFCROOF,\r\n  IFCROOFTYPE,\r\n  IFCROOT,\r\n  IFCROUNDEDRECTANGLEPROFILEDEF,\r\n  IFCSANITARYTERMINAL,\r\n  IFCSANITARYTERMINALTYPE,\r\n  IFCSCHEDULINGTIME,\r\n  IFCSEAMCURVE,\r\n  IFCSECTIONEDSOLID,\r\n  IFCSECTIONEDSOLIDHORIZONTAL,\r\n  IFCSECTIONEDSPINE,\r\n  IFCSECTIONPROPERTIES,\r\n  IFCSECTIONREINFORCEMENTPROPERTIES,\r\n  IFCSENSOR,\r\n  IFCSENSORTYPE,\r\n  IFCSHADINGDEVICE,\r\n  IFCSHADINGDEVICETYPE,\r\n  IFCSHAPEASPECT,\r\n  IFCSHAPEMODEL,\r\n  IFCSHAPEREPRESENTATION,\r\n  IFCSHELLBASEDSURFACEMODEL,\r\n  IFCSIMPLEPROPERTY,\r\n  IFCSIMPLEPROPERTYTEMPLATE,\r\n  IFCSITE,\r\n  IFCSIUNIT,\r\n  IFCSLAB,\r\n  IFCSLABELEMENTEDCASE,\r\n  IFCSLABSTANDARDCASE,\r\n  IFCSLABTYPE,\r\n  IFCSLIPPAGECONNECTIONCONDITION,\r\n  IFCSOLARDEVICE,\r\n  IFCSOLARDEVICETYPE,\r\n  IFCSOLIDMODEL,\r\n  IFCSPACE,\r\n  IFCSPACEHEATER,\r\n  IFCSPACEHEATERTYPE,\r\n  IFCSPACETYPE,\r\n  IFCSPATIALELEMENT,\r\n  IFCSPATIALELEMENTTYPE,\r\n  IFCSPATIALSTRUCTUREELEMENT,\r\n  IFCSPATIALSTRUCTUREELEMENTTYPE,\r\n  IFCSPATIALZONE,\r\n  IFCSPATIALZONETYPE,\r\n  IFCSPHERE,\r\n  IFCSPHERICALSURFACE,\r\n  IFCSTACKTERMINAL,\r\n  IFCSTACKTERMINALTYPE,\r\n  IFCSTAIR,\r\n  IFCSTAIRFLIGHT,\r\n  IFCSTAIRFLIGHTTYPE,\r\n  IFCSTAIRTYPE,\r\n  IFCSTRUCTURALACTION,\r\n  IFCSTRUCTURALACTIVITY,\r\n  IFCSTRUCTURALANALYSISMODEL,\r\n  IFCSTRUCTURALCONNECTION,\r\n  IFCSTRUCTURALCONNECTIONCONDITION,\r\n  IFCSTRUCTURALCURVEACTION,\r\n  IFCSTRUCTURALCURVECONNECTION,\r\n  IFCSTRUCTURALCURVEMEMBER,\r\n  IFCSTRUCTURALCURVEMEMBERVARYING,\r\n  IFCSTRUCTURALCURVEREACTION,\r\n  IFCSTRUCTURALITEM,\r\n  IFCSTRUCTURALLINEARACTION,\r\n  IFCSTRUCTURALLOAD,\r\n  IFCSTRUCTURALLOADCASE,\r\n  IFCSTRUCTURALLOADCONFIGURATION,\r\n  IFCSTRUCTURALLOADGROUP,\r\n  IFCSTRUCTURALLOADLINEARFORCE,\r\n  IFCSTRUCTURALLOADORRESULT,\r\n  IFCSTRUCTURALLOADPLANARFORCE,\r\n  IFCSTRUCTURALLOADSINGLEDISPLACEMENT,\r\n  IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION,\r\n  IFCSTRUCTURALLOADSINGLEFORCE,\r\n  IFCSTRUCTURALLOADSINGLEFORCEWARPING,\r\n  IFCSTRUCTURALLOADSTATIC,\r\n  IFCSTRUCTURALLOADTEMPERATURE,\r\n  IFCSTRUCTURALMEMBER,\r\n  IFCSTRUCTURALPLANARACTION,\r\n  IFCSTRUCTURALPOINTACTION,\r\n  IFCSTRUCTURALPOINTCONNECTION,\r\n  IFCSTRUCTURALPOINTREACTION,\r\n  IFCSTRUCTURALREACTION,\r\n  IFCSTRUCTURALRESULTGROUP,\r\n  IFCSTRUCTURALSURFACEACTION,\r\n  IFCSTRUCTURALSURFACECONNECTION,\r\n  IFCSTRUCTURALSURFACEMEMBER,\r\n  IFCSTRUCTURALSURFACEMEMBERVARYING,\r\n  IFCSTRUCTURALSURFACEREACTION,\r\n  IFCSTYLEDITEM,\r\n  IFCSTYLEDREPRESENTATION,\r\n  IFCSTYLEMODEL,\r\n  IFCSUBCONTRACTRESOURCE,\r\n  IFCSUBCONTRACTRESOURCETYPE,\r\n  IFCSUBEDGE,\r\n  IFCSURFACE,\r\n  IFCSURFACECURVE,\r\n  IFCSURFACECURVESWEPTAREASOLID,\r\n  IFCSURFACEFEATURE,\r\n  IFCSURFACEOFLINEAREXTRUSION,\r\n  IFCSURFACEOFREVOLUTION,\r\n  IFCSURFACEREINFORCEMENTAREA,\r\n  IFCSURFACESTYLE,\r\n  IFCSURFACESTYLELIGHTING,\r\n  IFCSURFACESTYLEREFRACTION,\r\n  IFCSURFACESTYLERENDERING,\r\n  IFCSURFACESTYLESHADING,\r\n  IFCSURFACESTYLEWITHTEXTURES,\r\n  IFCSURFACETEXTURE,\r\n  IFCSWEPTAREASOLID,\r\n  IFCSWEPTDISKSOLID,\r\n  IFCSWEPTDISKSOLIDPOLYGONAL,\r\n  IFCSWEPTSURFACE,\r\n  IFCSWITCHINGDEVICE,\r\n  IFCSWITCHINGDEVICETYPE,\r\n  IFCSYSTEM,\r\n  IFCSYSTEMFURNITUREELEMENT,\r\n  IFCSYSTEMFURNITUREELEMENTTYPE,\r\n  IFCTABLE,\r\n  IFCTABLECOLUMN,\r\n  IFCTABLEROW,\r\n  IFCTANK,\r\n  IFCTANKTYPE,\r\n  IFCTASK,\r\n  IFCTASKTIME,\r\n  IFCTASKTIMERECURRING,\r\n  IFCTASKTYPE,\r\n  IFCTELECOMADDRESS,\r\n  IFCTENDON,\r\n  IFCTENDONANCHOR,\r\n  IFCTENDONANCHORTYPE,\r\n  IFCTENDONCONDUIT,\r\n  IFCTENDONCONDUITTYPE,\r\n  IFCTENDONTYPE,\r\n  IFCTESSELLATEDFACESET,\r\n  IFCTESSELLATEDITEM,\r\n  IFCTEXTLITERAL,\r\n  IFCTEXTLITERALWITHEXTENT,\r\n  IFCTEXTSTYLE,\r\n  IFCTEXTSTYLEFONTMODEL,\r\n  IFCTEXTSTYLEFORDEFINEDFONT,\r\n  IFCTEXTSTYLETEXTMODEL,\r\n  IFCTEXTURECOORDINATE,\r\n  IFCTEXTURECOORDINATEGENERATOR,\r\n  IFCTEXTUREMAP,\r\n  IFCTEXTUREVERTEX,\r\n  IFCTEXTUREVERTEXLIST,\r\n  IFCTIMEPERIOD,\r\n  IFCTIMESERIES,\r\n  IFCTIMESERIESVALUE,\r\n  IFCTOPOLOGICALREPRESENTATIONITEM,\r\n  IFCTOPOLOGYREPRESENTATION,\r\n  IFCTOROIDALSURFACE,\r\n  IFCTRANSFORMER,\r\n  IFCTRANSFORMERTYPE,\r\n  IFCTRANSITIONCURVESEGMENT2D,\r\n  IFCTRANSPORTELEMENT,\r\n  IFCTRANSPORTELEMENTTYPE,\r\n  IFCTRAPEZIUMPROFILEDEF,\r\n  IFCTRIANGULATEDFACESET,\r\n  IFCTRIANGULATEDIRREGULARNETWORK,\r\n  IFCTRIMMEDCURVE,\r\n  IFCTSHAPEPROFILEDEF,\r\n  IFCTUBEBUNDLE,\r\n  IFCTUBEBUNDLETYPE,\r\n  IFCTYPEOBJECT,\r\n  IFCTYPEPROCESS,\r\n  IFCTYPEPRODUCT,\r\n  IFCTYPERESOURCE,\r\n  IFCUNITARYCONTROLELEMENT,\r\n  IFCUNITARYCONTROLELEMENTTYPE,\r\n  IFCUNITARYEQUIPMENT,\r\n  IFCUNITARYEQUIPMENTTYPE,\r\n  IFCUNITASSIGNMENT,\r\n  IFCUSHAPEPROFILEDEF,\r\n  IFCVALVE,\r\n  IFCVALVETYPE,\r\n  IFCVECTOR,\r\n  IFCVERTEX,\r\n  IFCVERTEXLOOP,\r\n  IFCVERTEXPOINT,\r\n  IFCVIBRATIONDAMPER,\r\n  IFCVIBRATIONDAMPERTYPE,\r\n  IFCVIBRATIONISOLATOR,\r\n  IFCVIBRATIONISOLATORTYPE,\r\n  IFCVIRTUALELEMENT,\r\n  IFCVIRTUALGRIDINTERSECTION,\r\n  IFCVOIDINGFEATURE,\r\n  IFCWALL,\r\n  IFCWALLELEMENTEDCASE,\r\n  IFCWALLSTANDARDCASE,\r\n  IFCWALLTYPE,\r\n  IFCWASTETERMINAL,\r\n  IFCWASTETERMINALTYPE,\r\n  IFCWINDOW,\r\n  IFCWINDOWLININGPROPERTIES,\r\n  IFCWINDOWPANELPROPERTIES,\r\n  IFCWINDOWSTANDARDCASE,\r\n  IFCWINDOWSTYLE,\r\n  IFCWINDOWTYPE,\r\n  IFCWORKCALENDAR,\r\n  IFCWORKCONTROL,\r\n  IFCWORKPLAN,\r\n  IFCWORKSCHEDULE,\r\n  IFCWORKTIME,\r\n  IFCZONE,\r\n  IFCZSHAPEPROFILEDEF,\r\n  IfcAPI,\r\n  IfcAbsorbedDoseMeasure,\r\n  IfcAccelerationMeasure,\r\n  IfcActionRequest,\r\n  IfcActionRequestTypeEnum,\r\n  IfcActionSourceTypeEnum,\r\n  IfcActionTypeEnum,\r\n  IfcActor,\r\n  IfcActorRole,\r\n  IfcActuator,\r\n  IfcActuatorType,\r\n  IfcActuatorTypeEnum,\r\n  IfcAddress,\r\n  IfcAddressTypeEnum,\r\n  IfcAdvancedBrep,\r\n  IfcAdvancedBrepWithVoids,\r\n  IfcAdvancedFace,\r\n  IfcAirTerminal,\r\n  IfcAirTerminalBox,\r\n  IfcAirTerminalBoxType,\r\n  IfcAirTerminalBoxTypeEnum,\r\n  IfcAirTerminalType,\r\n  IfcAirTerminalTypeEnum,\r\n  IfcAirToAirHeatRecovery,\r\n  IfcAirToAirHeatRecoveryType,\r\n  IfcAirToAirHeatRecoveryTypeEnum,\r\n  IfcAlarm,\r\n  IfcAlarmType,\r\n  IfcAlarmTypeEnum,\r\n  IfcAlignment,\r\n  IfcAlignment2DHorizontal,\r\n  IfcAlignment2DHorizontalSegment,\r\n  IfcAlignment2DSegment,\r\n  IfcAlignment2DVerSegCircularArc,\r\n  IfcAlignment2DVerSegLine,\r\n  IfcAlignment2DVerSegParabolicArc,\r\n  IfcAlignment2DVertical,\r\n  IfcAlignment2DVerticalSegment,\r\n  IfcAlignmentCurve,\r\n  IfcAlignmentTypeEnum,\r\n  IfcAmountOfSubstanceMeasure,\r\n  IfcAnalysisModelTypeEnum,\r\n  IfcAnalysisTheoryTypeEnum,\r\n  IfcAngularVelocityMeasure,\r\n  IfcAnnotation,\r\n  IfcAnnotationFillArea,\r\n  IfcApplication,\r\n  IfcAppliedValue,\r\n  IfcApproval,\r\n  IfcApprovalRelationship,\r\n  IfcArbitraryClosedProfileDef,\r\n  IfcArbitraryOpenProfileDef,\r\n  IfcArbitraryProfileDefWithVoids,\r\n  IfcAreaDensityMeasure,\r\n  IfcAreaMeasure,\r\n  IfcArithmeticOperatorEnum,\r\n  IfcAssemblyPlaceEnum,\r\n  IfcAsset,\r\n  IfcAsymmetricIShapeProfileDef,\r\n  IfcAudioVisualAppliance,\r\n  IfcAudioVisualApplianceType,\r\n  IfcAudioVisualApplianceTypeEnum,\r\n  IfcAxis1Placement,\r\n  IfcAxis2Placement2D,\r\n  IfcAxis2Placement3D,\r\n  IfcBSplineCurve,\r\n  IfcBSplineCurveForm,\r\n  IfcBSplineCurveWithKnots,\r\n  IfcBSplineSurface,\r\n  IfcBSplineSurfaceForm,\r\n  IfcBSplineSurfaceWithKnots,\r\n  IfcBeam,\r\n  IfcBeamStandardCase,\r\n  IfcBeamType,\r\n  IfcBeamTypeEnum,\r\n  IfcBearing,\r\n  IfcBearingType,\r\n  IfcBearingTypeDisplacementEnum,\r\n  IfcBearingTypeEnum,\r\n  IfcBenchmarkEnum,\r\n  IfcBinary,\r\n  IfcBlobTexture,\r\n  IfcBlock,\r\n  IfcBoiler,\r\n  IfcBoilerType,\r\n  IfcBoilerTypeEnum,\r\n  IfcBoolean,\r\n  IfcBooleanClippingResult,\r\n  IfcBooleanOperator,\r\n  IfcBooleanResult,\r\n  IfcBoundaryCondition,\r\n  IfcBoundaryCurve,\r\n  IfcBoundaryEdgeCondition,\r\n  IfcBoundaryFaceCondition,\r\n  IfcBoundaryNodeCondition,\r\n  IfcBoundaryNodeConditionWarping,\r\n  IfcBoundedCurve,\r\n  IfcBoundedSurface,\r\n  IfcBoundingBox,\r\n  IfcBoxAlignment,\r\n  IfcBoxedHalfSpace,\r\n  IfcBridge,\r\n  IfcBridgePart,\r\n  IfcBridgePartTypeEnum,\r\n  IfcBridgeTypeEnum,\r\n  IfcBuilding,\r\n  IfcBuildingElement,\r\n  IfcBuildingElementPart,\r\n  IfcBuildingElementPartType,\r\n  IfcBuildingElementPartTypeEnum,\r\n  IfcBuildingElementProxy,\r\n  IfcBuildingElementProxyType,\r\n  IfcBuildingElementProxyTypeEnum,\r\n  IfcBuildingElementType,\r\n  IfcBuildingStorey,\r\n  IfcBuildingSystem,\r\n  IfcBuildingSystemTypeEnum,\r\n  IfcBurner,\r\n  IfcBurnerType,\r\n  IfcBurnerTypeEnum,\r\n  IfcCShapeProfileDef,\r\n  IfcCableCarrierFitting,\r\n  IfcCableCarrierFittingType,\r\n  IfcCableCarrierFittingTypeEnum,\r\n  IfcCableCarrierSegment,\r\n  IfcCableCarrierSegmentType,\r\n  IfcCableCarrierSegmentTypeEnum,\r\n  IfcCableFitting,\r\n  IfcCableFittingType,\r\n  IfcCableFittingTypeEnum,\r\n  IfcCableSegment,\r\n  IfcCableSegmentType,\r\n  IfcCableSegmentTypeEnum,\r\n  IfcCaissonFoundation,\r\n  IfcCaissonFoundationType,\r\n  IfcCaissonFoundationTypeEnum,\r\n  IfcCardinalPointReference,\r\n  IfcCartesianPoint,\r\n  IfcCartesianPointList,\r\n  IfcCartesianPointList2D,\r\n  IfcCartesianPointList3D,\r\n  IfcCartesianTransformationOperator,\r\n  IfcCartesianTransformationOperator2D,\r\n  IfcCartesianTransformationOperator2DnonUniform,\r\n  IfcCartesianTransformationOperator3D,\r\n  IfcCartesianTransformationOperator3DnonUniform,\r\n  IfcCenterLineProfileDef,\r\n  IfcChangeActionEnum,\r\n  IfcChiller,\r\n  IfcChillerType,\r\n  IfcChillerTypeEnum,\r\n  IfcChimney,\r\n  IfcChimneyType,\r\n  IfcChimneyTypeEnum,\r\n  IfcCircle,\r\n  IfcCircleHollowProfileDef,\r\n  IfcCircleProfileDef,\r\n  IfcCircularArcSegment2D,\r\n  IfcCivilElement,\r\n  IfcCivilElementType,\r\n  IfcClassification,\r\n  IfcClassificationReference,\r\n  IfcClosedShell,\r\n  IfcCoil,\r\n  IfcCoilType,\r\n  IfcCoilTypeEnum,\r\n  IfcColourRgb,\r\n  IfcColourRgbList,\r\n  IfcColourSpecification,\r\n  IfcColumn,\r\n  IfcColumnStandardCase,\r\n  IfcColumnType,\r\n  IfcColumnTypeEnum,\r\n  IfcCommunicationsAppliance,\r\n  IfcCommunicationsApplianceType,\r\n  IfcCommunicationsApplianceTypeEnum,\r\n  IfcComplexProperty,\r\n  IfcComplexPropertyTemplate,\r\n  IfcComplexPropertyTemplateTypeEnum,\r\n  IfcCompositeCurve,\r\n  IfcCompositeCurveOnSurface,\r\n  IfcCompositeCurveSegment,\r\n  IfcCompositeProfileDef,\r\n  IfcCompressor,\r\n  IfcCompressorType,\r\n  IfcCompressorTypeEnum,\r\n  IfcCondenser,\r\n  IfcCondenserType,\r\n  IfcCondenserTypeEnum,\r\n  IfcConic,\r\n  IfcConnectedFaceSet,\r\n  IfcConnectionCurveGeometry,\r\n  IfcConnectionGeometry,\r\n  IfcConnectionPointEccentricity,\r\n  IfcConnectionPointGeometry,\r\n  IfcConnectionSurfaceGeometry,\r\n  IfcConnectionTypeEnum,\r\n  IfcConnectionVolumeGeometry,\r\n  IfcConstraint,\r\n  IfcConstraintEnum,\r\n  IfcConstructionEquipmentResource,\r\n  IfcConstructionEquipmentResourceType,\r\n  IfcConstructionEquipmentResourceTypeEnum,\r\n  IfcConstructionMaterialResource,\r\n  IfcConstructionMaterialResourceType,\r\n  IfcConstructionMaterialResourceTypeEnum,\r\n  IfcConstructionProductResource,\r\n  IfcConstructionProductResourceType,\r\n  IfcConstructionProductResourceTypeEnum,\r\n  IfcConstructionResource,\r\n  IfcConstructionResourceType,\r\n  IfcContext,\r\n  IfcContextDependentMeasure,\r\n  IfcContextDependentUnit,\r\n  IfcControl,\r\n  IfcController,\r\n  IfcControllerType,\r\n  IfcControllerTypeEnum,\r\n  IfcConversionBasedUnit,\r\n  IfcConversionBasedUnitWithOffset,\r\n  IfcCooledBeam,\r\n  IfcCooledBeamType,\r\n  IfcCooledBeamTypeEnum,\r\n  IfcCoolingTower,\r\n  IfcCoolingTowerType,\r\n  IfcCoolingTowerTypeEnum,\r\n  IfcCoordinateOperation,\r\n  IfcCoordinateReferenceSystem,\r\n  IfcCostItem,\r\n  IfcCostItemTypeEnum,\r\n  IfcCostSchedule,\r\n  IfcCostScheduleTypeEnum,\r\n  IfcCostValue,\r\n  IfcCountMeasure,\r\n  IfcCovering,\r\n  IfcCoveringType,\r\n  IfcCoveringTypeEnum,\r\n  IfcCrewResource,\r\n  IfcCrewResourceType,\r\n  IfcCrewResourceTypeEnum,\r\n  IfcCsgPrimitive3D,\r\n  IfcCsgSolid,\r\n  IfcCurrencyRelationship,\r\n  IfcCurtainWall,\r\n  IfcCurtainWallType,\r\n  IfcCurtainWallTypeEnum,\r\n  IfcCurvatureMeasure,\r\n  IfcCurve,\r\n  IfcCurveBoundedPlane,\r\n  IfcCurveBoundedSurface,\r\n  IfcCurveInterpolationEnum,\r\n  IfcCurveSegment2D,\r\n  IfcCurveStyle,\r\n  IfcCurveStyleFont,\r\n  IfcCurveStyleFontAndScaling,\r\n  IfcCurveStyleFontPattern,\r\n  IfcCylindricalSurface,\r\n  IfcDamper,\r\n  IfcDamperType,\r\n  IfcDamperTypeEnum,\r\n  IfcDataOriginEnum,\r\n  IfcDate,\r\n  IfcDateTime,\r\n  IfcDayInMonthNumber,\r\n  IfcDayInWeekNumber,\r\n  IfcDeepFoundation,\r\n  IfcDeepFoundationType,\r\n  IfcDerivedProfileDef,\r\n  IfcDerivedUnit,\r\n  IfcDerivedUnitElement,\r\n  IfcDerivedUnitEnum,\r\n  IfcDescriptiveMeasure,\r\n  IfcDimensionCount,\r\n  IfcDimensionalExponents,\r\n  IfcDirection,\r\n  IfcDirectionSenseEnum,\r\n  IfcDiscreteAccessory,\r\n  IfcDiscreteAccessoryType,\r\n  IfcDiscreteAccessoryTypeEnum,\r\n  IfcDistanceExpression,\r\n  IfcDistributionChamberElement,\r\n  IfcDistributionChamberElementType,\r\n  IfcDistributionChamberElementTypeEnum,\r\n  IfcDistributionCircuit,\r\n  IfcDistributionControlElement,\r\n  IfcDistributionControlElementType,\r\n  IfcDistributionElement,\r\n  IfcDistributionElementType,\r\n  IfcDistributionFlowElement,\r\n  IfcDistributionFlowElementType,\r\n  IfcDistributionPort,\r\n  IfcDistributionPortTypeEnum,\r\n  IfcDistributionSystem,\r\n  IfcDistributionSystemEnum,\r\n  IfcDocumentConfidentialityEnum,\r\n  IfcDocumentInformation,\r\n  IfcDocumentInformationRelationship,\r\n  IfcDocumentReference,\r\n  IfcDocumentStatusEnum,\r\n  IfcDoor,\r\n  IfcDoorLiningProperties,\r\n  IfcDoorPanelOperationEnum,\r\n  IfcDoorPanelPositionEnum,\r\n  IfcDoorPanelProperties,\r\n  IfcDoorStandardCase,\r\n  IfcDoorStyle,\r\n  IfcDoorStyleConstructionEnum,\r\n  IfcDoorStyleOperationEnum,\r\n  IfcDoorType,\r\n  IfcDoorTypeEnum,\r\n  IfcDoorTypeOperationEnum,\r\n  IfcDoseEquivalentMeasure,\r\n  IfcDraughtingPreDefinedColour,\r\n  IfcDraughtingPreDefinedCurveFont,\r\n  IfcDuctFitting,\r\n  IfcDuctFittingType,\r\n  IfcDuctFittingTypeEnum,\r\n  IfcDuctSegment,\r\n  IfcDuctSegmentType,\r\n  IfcDuctSegmentTypeEnum,\r\n  IfcDuctSilencer,\r\n  IfcDuctSilencerType,\r\n  IfcDuctSilencerTypeEnum,\r\n  IfcDuration,\r\n  IfcDynamicViscosityMeasure,\r\n  IfcEdge,\r\n  IfcEdgeCurve,\r\n  IfcEdgeLoop,\r\n  IfcElectricAppliance,\r\n  IfcElectricApplianceType,\r\n  IfcElectricApplianceTypeEnum,\r\n  IfcElectricCapacitanceMeasure,\r\n  IfcElectricChargeMeasure,\r\n  IfcElectricConductanceMeasure,\r\n  IfcElectricCurrentMeasure,\r\n  IfcElectricDistributionBoard,\r\n  IfcElectricDistributionBoardType,\r\n  IfcElectricDistributionBoardTypeEnum,\r\n  IfcElectricFlowStorageDevice,\r\n  IfcElectricFlowStorageDeviceType,\r\n  IfcElectricFlowStorageDeviceTypeEnum,\r\n  IfcElectricGenerator,\r\n  IfcElectricGeneratorType,\r\n  IfcElectricGeneratorTypeEnum,\r\n  IfcElectricMotor,\r\n  IfcElectricMotorType,\r\n  IfcElectricMotorTypeEnum,\r\n  IfcElectricResistanceMeasure,\r\n  IfcElectricTimeControl,\r\n  IfcElectricTimeControlType,\r\n  IfcElectricTimeControlTypeEnum,\r\n  IfcElectricVoltageMeasure,\r\n  IfcElement,\r\n  IfcElementAssembly,\r\n  IfcElementAssemblyType,\r\n  IfcElementAssemblyTypeEnum,\r\n  IfcElementComponent,\r\n  IfcElementComponentType,\r\n  IfcElementCompositionEnum,\r\n  IfcElementQuantity,\r\n  IfcElementType,\r\n  IfcElementarySurface,\r\n  IfcElements,\r\n  IfcEllipse,\r\n  IfcEllipseProfileDef,\r\n  IfcEnergyConversionDevice,\r\n  IfcEnergyConversionDeviceType,\r\n  IfcEnergyMeasure,\r\n  IfcEngine,\r\n  IfcEngineType,\r\n  IfcEngineTypeEnum,\r\n  IfcEvaporativeCooler,\r\n  IfcEvaporativeCoolerType,\r\n  IfcEvaporativeCoolerTypeEnum,\r\n  IfcEvaporator,\r\n  IfcEvaporatorType,\r\n  IfcEvaporatorTypeEnum,\r\n  IfcEvent,\r\n  IfcEventTime,\r\n  IfcEventTriggerTypeEnum,\r\n  IfcEventType,\r\n  IfcEventTypeEnum,\r\n  IfcExtendedProperties,\r\n  IfcExternalInformation,\r\n  IfcExternalReference,\r\n  IfcExternalReferenceRelationship,\r\n  IfcExternalSpatialElement,\r\n  IfcExternalSpatialElementTypeEnum,\r\n  IfcExternalSpatialStructureElement,\r\n  IfcExternallyDefinedHatchStyle,\r\n  IfcExternallyDefinedSurfaceStyle,\r\n  IfcExternallyDefinedTextFont,\r\n  IfcExtrudedAreaSolid,\r\n  IfcExtrudedAreaSolidTapered,\r\n  IfcFace,\r\n  IfcFaceBasedSurfaceModel,\r\n  IfcFaceBound,\r\n  IfcFaceOuterBound,\r\n  IfcFaceSurface,\r\n  IfcFacetedBrep,\r\n  IfcFacetedBrepWithVoids,\r\n  IfcFacility,\r\n  IfcFacilityPart,\r\n  IfcFailureConnectionCondition,\r\n  IfcFan,\r\n  IfcFanType,\r\n  IfcFanTypeEnum,\r\n  IfcFastener,\r\n  IfcFastenerType,\r\n  IfcFastenerTypeEnum,\r\n  IfcFeatureElement,\r\n  IfcFeatureElementAddition,\r\n  IfcFeatureElementSubtraction,\r\n  IfcFillAreaStyle,\r\n  IfcFillAreaStyleHatching,\r\n  IfcFillAreaStyleTiles,\r\n  IfcFilter,\r\n  IfcFilterType,\r\n  IfcFilterTypeEnum,\r\n  IfcFireSuppressionTerminal,\r\n  IfcFireSuppressionTerminalType,\r\n  IfcFireSuppressionTerminalTypeEnum,\r\n  IfcFixedReferenceSweptAreaSolid,\r\n  IfcFlowController,\r\n  IfcFlowControllerType,\r\n  IfcFlowDirectionEnum,\r\n  IfcFlowFitting,\r\n  IfcFlowFittingType,\r\n  IfcFlowInstrument,\r\n  IfcFlowInstrumentType,\r\n  IfcFlowInstrumentTypeEnum,\r\n  IfcFlowMeter,\r\n  IfcFlowMeterType,\r\n  IfcFlowMeterTypeEnum,\r\n  IfcFlowMovingDevice,\r\n  IfcFlowMovingDeviceType,\r\n  IfcFlowSegment,\r\n  IfcFlowSegmentType,\r\n  IfcFlowStorageDevice,\r\n  IfcFlowStorageDeviceType,\r\n  IfcFlowTerminal,\r\n  IfcFlowTerminalType,\r\n  IfcFlowTreatmentDevice,\r\n  IfcFlowTreatmentDeviceType,\r\n  IfcFontStyle,\r\n  IfcFontVariant,\r\n  IfcFontWeight,\r\n  IfcFooting,\r\n  IfcFootingType,\r\n  IfcFootingTypeEnum,\r\n  IfcForceMeasure,\r\n  IfcFrequencyMeasure,\r\n  IfcFurnishingElement,\r\n  IfcFurnishingElementType,\r\n  IfcFurniture,\r\n  IfcFurnitureType,\r\n  IfcFurnitureTypeEnum,\r\n  IfcGeographicElement,\r\n  IfcGeographicElementType,\r\n  IfcGeographicElementTypeEnum,\r\n  IfcGeometricCurveSet,\r\n  IfcGeometricProjectionEnum,\r\n  IfcGeometricRepresentationContext,\r\n  IfcGeometricRepresentationItem,\r\n  IfcGeometricRepresentationSubContext,\r\n  IfcGeometricSet,\r\n  IfcGlobalOrLocalEnum,\r\n  IfcGloballyUniqueId,\r\n  IfcGrid,\r\n  IfcGridAxis,\r\n  IfcGridPlacement,\r\n  IfcGridTypeEnum,\r\n  IfcGroup,\r\n  IfcHalfSpaceSolid,\r\n  IfcHeatExchanger,\r\n  IfcHeatExchangerType,\r\n  IfcHeatExchangerTypeEnum,\r\n  IfcHeatFluxDensityMeasure,\r\n  IfcHeatingValueMeasure,\r\n  IfcHumidifier,\r\n  IfcHumidifierType,\r\n  IfcHumidifierTypeEnum,\r\n  IfcIShapeProfileDef,\r\n  IfcIdentifier,\r\n  IfcIlluminanceMeasure,\r\n  IfcImageTexture,\r\n  IfcIndexedColourMap,\r\n  IfcIndexedPolyCurve,\r\n  IfcIndexedPolygonalFace,\r\n  IfcIndexedPolygonalFaceWithVoids,\r\n  IfcIndexedTextureMap,\r\n  IfcIndexedTriangleTextureMap,\r\n  IfcInductanceMeasure,\r\n  IfcInteger,\r\n  IfcIntegerCountRateMeasure,\r\n  IfcInterceptor,\r\n  IfcInterceptorType,\r\n  IfcInterceptorTypeEnum,\r\n  IfcInternalOrExternalEnum,\r\n  IfcIntersectionCurve,\r\n  IfcInventory,\r\n  IfcInventoryTypeEnum,\r\n  IfcIonConcentrationMeasure,\r\n  IfcIrregularTimeSeries,\r\n  IfcIrregularTimeSeriesValue,\r\n  IfcIsothermalMoistureCapacityMeasure,\r\n  IfcJunctionBox,\r\n  IfcJunctionBoxType,\r\n  IfcJunctionBoxTypeEnum,\r\n  IfcKinematicViscosityMeasure,\r\n  IfcKnotType,\r\n  IfcLShapeProfileDef,\r\n  IfcLabel,\r\n  IfcLaborResource,\r\n  IfcLaborResourceType,\r\n  IfcLaborResourceTypeEnum,\r\n  IfcLagTime,\r\n  IfcLamp,\r\n  IfcLampType,\r\n  IfcLampTypeEnum,\r\n  IfcLanguageId,\r\n  IfcLayerSetDirectionEnum,\r\n  IfcLengthMeasure,\r\n  IfcLibraryInformation,\r\n  IfcLibraryReference,\r\n  IfcLightDistributionCurveEnum,\r\n  IfcLightDistributionData,\r\n  IfcLightEmissionSourceEnum,\r\n  IfcLightFixture,\r\n  IfcLightFixtureType,\r\n  IfcLightFixtureTypeEnum,\r\n  IfcLightIntensityDistribution,\r\n  IfcLightSource,\r\n  IfcLightSourceAmbient,\r\n  IfcLightSourceDirectional,\r\n  IfcLightSourceGoniometric,\r\n  IfcLightSourcePositional,\r\n  IfcLightSourceSpot,\r\n  IfcLine,\r\n  IfcLineSegment2D,\r\n  IfcLinearForceMeasure,\r\n  IfcLinearMomentMeasure,\r\n  IfcLinearPlacement,\r\n  IfcLinearPositioningElement,\r\n  IfcLinearStiffnessMeasure,\r\n  IfcLinearVelocityMeasure,\r\n  IfcLoadGroupTypeEnum,\r\n  IfcLocalPlacement,\r\n  IfcLogical,\r\n  IfcLogicalOperatorEnum,\r\n  IfcLoop,\r\n  IfcLuminousFluxMeasure,\r\n  IfcLuminousIntensityDistributionMeasure,\r\n  IfcLuminousIntensityMeasure,\r\n  IfcMagneticFluxDensityMeasure,\r\n  IfcMagneticFluxMeasure,\r\n  IfcManifoldSolidBrep,\r\n  IfcMapConversion,\r\n  IfcMappedItem,\r\n  IfcMassDensityMeasure,\r\n  IfcMassFlowRateMeasure,\r\n  IfcMassMeasure,\r\n  IfcMassPerLengthMeasure,\r\n  IfcMaterial,\r\n  IfcMaterialClassificationRelationship,\r\n  IfcMaterialConstituent,\r\n  IfcMaterialConstituentSet,\r\n  IfcMaterialDefinition,\r\n  IfcMaterialDefinitionRepresentation,\r\n  IfcMaterialLayer,\r\n  IfcMaterialLayerSet,\r\n  IfcMaterialLayerSetUsage,\r\n  IfcMaterialLayerWithOffsets,\r\n  IfcMaterialList,\r\n  IfcMaterialProfile,\r\n  IfcMaterialProfileSet,\r\n  IfcMaterialProfileSetUsage,\r\n  IfcMaterialProfileSetUsageTapering,\r\n  IfcMaterialProfileWithOffsets,\r\n  IfcMaterialProperties,\r\n  IfcMaterialRelationship,\r\n  IfcMaterialUsageDefinition,\r\n  IfcMeasureWithUnit,\r\n  IfcMechanicalFastener,\r\n  IfcMechanicalFastenerType,\r\n  IfcMechanicalFastenerTypeEnum,\r\n  IfcMedicalDevice,\r\n  IfcMedicalDeviceType,\r\n  IfcMedicalDeviceTypeEnum,\r\n  IfcMember,\r\n  IfcMemberStandardCase,\r\n  IfcMemberType,\r\n  IfcMemberTypeEnum,\r\n  IfcMetric,\r\n  IfcMirroredProfileDef,\r\n  IfcModulusOfElasticityMeasure,\r\n  IfcModulusOfLinearSubgradeReactionMeasure,\r\n  IfcModulusOfRotationalSubgradeReactionMeasure,\r\n  IfcModulusOfSubgradeReactionMeasure,\r\n  IfcMoistureDiffusivityMeasure,\r\n  IfcMolecularWeightMeasure,\r\n  IfcMomentOfInertiaMeasure,\r\n  IfcMonetaryMeasure,\r\n  IfcMonetaryUnit,\r\n  IfcMonthInYearNumber,\r\n  IfcMotorConnection,\r\n  IfcMotorConnectionType,\r\n  IfcMotorConnectionTypeEnum,\r\n  IfcNamedUnit,\r\n  IfcNonNegativeLengthMeasure,\r\n  IfcNormalisedRatioMeasure,\r\n  IfcNullStyle,\r\n  IfcNumericMeasure,\r\n  IfcObject,\r\n  IfcObjectDefinition,\r\n  IfcObjectPlacement,\r\n  IfcObjectTypeEnum,\r\n  IfcObjective,\r\n  IfcObjectiveEnum,\r\n  IfcOccupant,\r\n  IfcOccupantTypeEnum,\r\n  IfcOffsetCurve,\r\n  IfcOffsetCurve2D,\r\n  IfcOffsetCurve3D,\r\n  IfcOffsetCurveByDistances,\r\n  IfcOpenShell,\r\n  IfcOpeningElement,\r\n  IfcOpeningElementTypeEnum,\r\n  IfcOpeningStandardCase,\r\n  IfcOrganization,\r\n  IfcOrganizationRelationship,\r\n  IfcOrientationExpression,\r\n  IfcOrientedEdge,\r\n  IfcOuterBoundaryCurve,\r\n  IfcOutlet,\r\n  IfcOutletType,\r\n  IfcOutletTypeEnum,\r\n  IfcOwnerHistory,\r\n  IfcPHMeasure,\r\n  IfcParameterValue,\r\n  IfcParameterizedProfileDef,\r\n  IfcPath,\r\n  IfcPcurve,\r\n  IfcPerformanceHistory,\r\n  IfcPerformanceHistoryTypeEnum,\r\n  IfcPermeableCoveringOperationEnum,\r\n  IfcPermeableCoveringProperties,\r\n  IfcPermit,\r\n  IfcPermitTypeEnum,\r\n  IfcPerson,\r\n  IfcPersonAndOrganization,\r\n  IfcPhysicalComplexQuantity,\r\n  IfcPhysicalOrVirtualEnum,\r\n  IfcPhysicalQuantity,\r\n  IfcPhysicalSimpleQuantity,\r\n  IfcPile,\r\n  IfcPileConstructionEnum,\r\n  IfcPileType,\r\n  IfcPileTypeEnum,\r\n  IfcPipeFitting,\r\n  IfcPipeFittingType,\r\n  IfcPipeFittingTypeEnum,\r\n  IfcPipeSegment,\r\n  IfcPipeSegmentType,\r\n  IfcPipeSegmentTypeEnum,\r\n  IfcPixelTexture,\r\n  IfcPlacement,\r\n  IfcPlanarBox,\r\n  IfcPlanarExtent,\r\n  IfcPlanarForceMeasure,\r\n  IfcPlane,\r\n  IfcPlaneAngleMeasure,\r\n  IfcPlate,\r\n  IfcPlateStandardCase,\r\n  IfcPlateType,\r\n  IfcPlateTypeEnum,\r\n  IfcPoint,\r\n  IfcPointOnCurve,\r\n  IfcPointOnSurface,\r\n  IfcPolyLoop,\r\n  IfcPolygonalBoundedHalfSpace,\r\n  IfcPolygonalFaceSet,\r\n  IfcPolyline,\r\n  IfcPort,\r\n  IfcPositioningElement,\r\n  IfcPositiveInteger,\r\n  IfcPositiveLengthMeasure,\r\n  IfcPositivePlaneAngleMeasure,\r\n  IfcPositiveRatioMeasure,\r\n  IfcPostalAddress,\r\n  IfcPowerMeasure,\r\n  IfcPreDefinedColour,\r\n  IfcPreDefinedCurveFont,\r\n  IfcPreDefinedItem,\r\n  IfcPreDefinedProperties,\r\n  IfcPreDefinedPropertySet,\r\n  IfcPreDefinedTextFont,\r\n  IfcPreferredSurfaceCurveRepresentation,\r\n  IfcPresentableText,\r\n  IfcPresentationItem,\r\n  IfcPresentationLayerAssignment,\r\n  IfcPresentationLayerWithStyle,\r\n  IfcPresentationStyle,\r\n  IfcPresentationStyleAssignment,\r\n  IfcPressureMeasure,\r\n  IfcProcedure,\r\n  IfcProcedureType,\r\n  IfcProcedureTypeEnum,\r\n  IfcProcess,\r\n  IfcProduct,\r\n  IfcProductDefinitionShape,\r\n  IfcProductRepresentation,\r\n  IfcProfileDef,\r\n  IfcProfileProperties,\r\n  IfcProfileTypeEnum,\r\n  IfcProject,\r\n  IfcProjectLibrary,\r\n  IfcProjectOrder,\r\n  IfcProjectOrderTypeEnum,\r\n  IfcProjectedCRS,\r\n  IfcProjectedOrTrueLengthEnum,\r\n  IfcProjectionElement,\r\n  IfcProjectionElementTypeEnum,\r\n  IfcProperty,\r\n  IfcPropertyAbstraction,\r\n  IfcPropertyBoundedValue,\r\n  IfcPropertyDefinition,\r\n  IfcPropertyDependencyRelationship,\r\n  IfcPropertyEnumeratedValue,\r\n  IfcPropertyEnumeration,\r\n  IfcPropertyListValue,\r\n  IfcPropertyReferenceValue,\r\n  IfcPropertySet,\r\n  IfcPropertySetDefinition,\r\n  IfcPropertySetTemplate,\r\n  IfcPropertySetTemplateTypeEnum,\r\n  IfcPropertySingleValue,\r\n  IfcPropertyTableValue,\r\n  IfcPropertyTemplate,\r\n  IfcPropertyTemplateDefinition,\r\n  IfcProtectiveDevice,\r\n  IfcProtectiveDeviceTrippingUnit,\r\n  IfcProtectiveDeviceTrippingUnitType,\r\n  IfcProtectiveDeviceTrippingUnitTypeEnum,\r\n  IfcProtectiveDeviceType,\r\n  IfcProtectiveDeviceTypeEnum,\r\n  IfcProxy,\r\n  IfcPump,\r\n  IfcPumpType,\r\n  IfcPumpTypeEnum,\r\n  IfcQuantityArea,\r\n  IfcQuantityCount,\r\n  IfcQuantityLength,\r\n  IfcQuantitySet,\r\n  IfcQuantityTime,\r\n  IfcQuantityVolume,\r\n  IfcQuantityWeight,\r\n  IfcRadioActivityMeasure,\r\n  IfcRailing,\r\n  IfcRailingType,\r\n  IfcRailingTypeEnum,\r\n  IfcRamp,\r\n  IfcRampFlight,\r\n  IfcRampFlightType,\r\n  IfcRampFlightTypeEnum,\r\n  IfcRampType,\r\n  IfcRampTypeEnum,\r\n  IfcRatioMeasure,\r\n  IfcRationalBSplineCurveWithKnots,\r\n  IfcRationalBSplineSurfaceWithKnots,\r\n  IfcReal,\r\n  IfcRectangleHollowProfileDef,\r\n  IfcRectangleProfileDef,\r\n  IfcRectangularPyramid,\r\n  IfcRectangularTrimmedSurface,\r\n  IfcRecurrencePattern,\r\n  IfcRecurrenceTypeEnum,\r\n  IfcReference,\r\n  IfcReferent,\r\n  IfcReferentTypeEnum,\r\n  IfcReflectanceMethodEnum,\r\n  IfcRegularTimeSeries,\r\n  IfcReinforcementBarProperties,\r\n  IfcReinforcementDefinitionProperties,\r\n  IfcReinforcingBar,\r\n  IfcReinforcingBarRoleEnum,\r\n  IfcReinforcingBarSurfaceEnum,\r\n  IfcReinforcingBarType,\r\n  IfcReinforcingBarTypeEnum,\r\n  IfcReinforcingElement,\r\n  IfcReinforcingElementType,\r\n  IfcReinforcingMesh,\r\n  IfcReinforcingMeshType,\r\n  IfcReinforcingMeshTypeEnum,\r\n  IfcRelAggregates,\r\n  IfcRelAssigns,\r\n  IfcRelAssignsToActor,\r\n  IfcRelAssignsToControl,\r\n  IfcRelAssignsToGroup,\r\n  IfcRelAssignsToGroupByFactor,\r\n  IfcRelAssignsToProcess,\r\n  IfcRelAssignsToProduct,\r\n  IfcRelAssignsToResource,\r\n  IfcRelAssociates,\r\n  IfcRelAssociatesApproval,\r\n  IfcRelAssociatesClassification,\r\n  IfcRelAssociatesConstraint,\r\n  IfcRelAssociatesDocument,\r\n  IfcRelAssociatesLibrary,\r\n  IfcRelAssociatesMaterial,\r\n  IfcRelConnects,\r\n  IfcRelConnectsElements,\r\n  IfcRelConnectsPathElements,\r\n  IfcRelConnectsPortToElement,\r\n  IfcRelConnectsPorts,\r\n  IfcRelConnectsStructuralActivity,\r\n  IfcRelConnectsStructuralMember,\r\n  IfcRelConnectsWithEccentricity,\r\n  IfcRelConnectsWithRealizingElements,\r\n  IfcRelContainedInSpatialStructure,\r\n  IfcRelCoversBldgElements,\r\n  IfcRelCoversSpaces,\r\n  IfcRelDeclares,\r\n  IfcRelDecomposes,\r\n  IfcRelDefines,\r\n  IfcRelDefinesByObject,\r\n  IfcRelDefinesByProperties,\r\n  IfcRelDefinesByTemplate,\r\n  IfcRelDefinesByType,\r\n  IfcRelFillsElement,\r\n  IfcRelFlowControlElements,\r\n  IfcRelInterferesElements,\r\n  IfcRelNests,\r\n  IfcRelPositions,\r\n  IfcRelProjectsElement,\r\n  IfcRelReferencedInSpatialStructure,\r\n  IfcRelSequence,\r\n  IfcRelServicesBuildings,\r\n  IfcRelSpaceBoundary,\r\n  IfcRelSpaceBoundary1stLevel,\r\n  IfcRelSpaceBoundary2ndLevel,\r\n  IfcRelVoidsElement,\r\n  IfcRelationship,\r\n  IfcReparametrisedCompositeCurveSegment,\r\n  IfcRepresentation,\r\n  IfcRepresentationContext,\r\n  IfcRepresentationItem,\r\n  IfcRepresentationMap,\r\n  IfcResource,\r\n  IfcResourceApprovalRelationship,\r\n  IfcResourceConstraintRelationship,\r\n  IfcResourceLevelRelationship,\r\n  IfcResourceTime,\r\n  IfcRevolvedAreaSolid,\r\n  IfcRevolvedAreaSolidTapered,\r\n  IfcRightCircularCone,\r\n  IfcRightCircularCylinder,\r\n  IfcRoleEnum,\r\n  IfcRoof,\r\n  IfcRoofType,\r\n  IfcRoofTypeEnum,\r\n  IfcRoot,\r\n  IfcRotationalFrequencyMeasure,\r\n  IfcRotationalMassMeasure,\r\n  IfcRotationalStiffnessMeasure,\r\n  IfcRoundedRectangleProfileDef,\r\n  IfcSIPrefix,\r\n  IfcSIUnit,\r\n  IfcSIUnitName,\r\n  IfcSanitaryTerminal,\r\n  IfcSanitaryTerminalType,\r\n  IfcSanitaryTerminalTypeEnum,\r\n  IfcSchedulingTime,\r\n  IfcSeamCurve,\r\n  IfcSectionModulusMeasure,\r\n  IfcSectionProperties,\r\n  IfcSectionReinforcementProperties,\r\n  IfcSectionTypeEnum,\r\n  IfcSectionalAreaIntegralMeasure,\r\n  IfcSectionedSolid,\r\n  IfcSectionedSolidHorizontal,\r\n  IfcSectionedSpine,\r\n  IfcSensor,\r\n  IfcSensorType,\r\n  IfcSensorTypeEnum,\r\n  IfcSequenceEnum,\r\n  IfcShadingDevice,\r\n  IfcShadingDeviceType,\r\n  IfcShadingDeviceTypeEnum,\r\n  IfcShapeAspect,\r\n  IfcShapeModel,\r\n  IfcShapeRepresentation,\r\n  IfcShearModulusMeasure,\r\n  IfcShellBasedSurfaceModel,\r\n  IfcSimpleProperty,\r\n  IfcSimplePropertyTemplate,\r\n  IfcSimplePropertyTemplateTypeEnum,\r\n  IfcSite,\r\n  IfcSlab,\r\n  IfcSlabElementedCase,\r\n  IfcSlabStandardCase,\r\n  IfcSlabType,\r\n  IfcSlabTypeEnum,\r\n  IfcSlippageConnectionCondition,\r\n  IfcSolarDevice,\r\n  IfcSolarDeviceType,\r\n  IfcSolarDeviceTypeEnum,\r\n  IfcSolidAngleMeasure,\r\n  IfcSolidModel,\r\n  IfcSoundPowerLevelMeasure,\r\n  IfcSoundPowerMeasure,\r\n  IfcSoundPressureLevelMeasure,\r\n  IfcSoundPressureMeasure,\r\n  IfcSpace,\r\n  IfcSpaceHeater,\r\n  IfcSpaceHeaterType,\r\n  IfcSpaceHeaterTypeEnum,\r\n  IfcSpaceType,\r\n  IfcSpaceTypeEnum,\r\n  IfcSpatialElement,\r\n  IfcSpatialElementType,\r\n  IfcSpatialStructureElement,\r\n  IfcSpatialStructureElementType,\r\n  IfcSpatialZone,\r\n  IfcSpatialZoneType,\r\n  IfcSpatialZoneTypeEnum,\r\n  IfcSpecificHeatCapacityMeasure,\r\n  IfcSpecularExponent,\r\n  IfcSpecularRoughness,\r\n  IfcSphere,\r\n  IfcSphericalSurface,\r\n  IfcStackTerminal,\r\n  IfcStackTerminalType,\r\n  IfcStackTerminalTypeEnum,\r\n  IfcStair,\r\n  IfcStairFlight,\r\n  IfcStairFlightType,\r\n  IfcStairFlightTypeEnum,\r\n  IfcStairType,\r\n  IfcStairTypeEnum,\r\n  IfcStateEnum,\r\n  IfcStructuralAction,\r\n  IfcStructuralActivity,\r\n  IfcStructuralAnalysisModel,\r\n  IfcStructuralConnection,\r\n  IfcStructuralConnectionCondition,\r\n  IfcStructuralCurveAction,\r\n  IfcStructuralCurveActivityTypeEnum,\r\n  IfcStructuralCurveConnection,\r\n  IfcStructuralCurveMember,\r\n  IfcStructuralCurveMemberTypeEnum,\r\n  IfcStructuralCurveMemberVarying,\r\n  IfcStructuralCurveReaction,\r\n  IfcStructuralItem,\r\n  IfcStructuralLinearAction,\r\n  IfcStructuralLoad,\r\n  IfcStructuralLoadCase,\r\n  IfcStructuralLoadConfiguration,\r\n  IfcStructuralLoadGroup,\r\n  IfcStructuralLoadLinearForce,\r\n  IfcStructuralLoadOrResult,\r\n  IfcStructuralLoadPlanarForce,\r\n  IfcStructuralLoadSingleDisplacement,\r\n  IfcStructuralLoadSingleDisplacementDistortion,\r\n  IfcStructuralLoadSingleForce,\r\n  IfcStructuralLoadSingleForceWarping,\r\n  IfcStructuralLoadStatic,\r\n  IfcStructuralLoadTemperature,\r\n  IfcStructuralMember,\r\n  IfcStructuralPlanarAction,\r\n  IfcStructuralPointAction,\r\n  IfcStructuralPointConnection,\r\n  IfcStructuralPointReaction,\r\n  IfcStructuralReaction,\r\n  IfcStructuralResultGroup,\r\n  IfcStructuralSurfaceAction,\r\n  IfcStructuralSurfaceActivityTypeEnum,\r\n  IfcStructuralSurfaceConnection,\r\n  IfcStructuralSurfaceMember,\r\n  IfcStructuralSurfaceMemberTypeEnum,\r\n  IfcStructuralSurfaceMemberVarying,\r\n  IfcStructuralSurfaceReaction,\r\n  IfcStyleModel,\r\n  IfcStyledItem,\r\n  IfcStyledRepresentation,\r\n  IfcSubContractResource,\r\n  IfcSubContractResourceType,\r\n  IfcSubContractResourceTypeEnum,\r\n  IfcSubedge,\r\n  IfcSurface,\r\n  IfcSurfaceCurve,\r\n  IfcSurfaceCurveSweptAreaSolid,\r\n  IfcSurfaceFeature,\r\n  IfcSurfaceFeatureTypeEnum,\r\n  IfcSurfaceOfLinearExtrusion,\r\n  IfcSurfaceOfRevolution,\r\n  IfcSurfaceReinforcementArea,\r\n  IfcSurfaceSide,\r\n  IfcSurfaceStyle,\r\n  IfcSurfaceStyleLighting,\r\n  IfcSurfaceStyleRefraction,\r\n  IfcSurfaceStyleRendering,\r\n  IfcSurfaceStyleShading,\r\n  IfcSurfaceStyleWithTextures,\r\n  IfcSurfaceTexture,\r\n  IfcSweptAreaSolid,\r\n  IfcSweptDiskSolid,\r\n  IfcSweptDiskSolidPolygonal,\r\n  IfcSweptSurface,\r\n  IfcSwitchingDevice,\r\n  IfcSwitchingDeviceType,\r\n  IfcSwitchingDeviceTypeEnum,\r\n  IfcSystem,\r\n  IfcSystemFurnitureElement,\r\n  IfcSystemFurnitureElementType,\r\n  IfcSystemFurnitureElementTypeEnum,\r\n  IfcTShapeProfileDef,\r\n  IfcTable,\r\n  IfcTableColumn,\r\n  IfcTableRow,\r\n  IfcTank,\r\n  IfcTankType,\r\n  IfcTankTypeEnum,\r\n  IfcTask,\r\n  IfcTaskDurationEnum,\r\n  IfcTaskTime,\r\n  IfcTaskTimeRecurring,\r\n  IfcTaskType,\r\n  IfcTaskTypeEnum,\r\n  IfcTelecomAddress,\r\n  IfcTemperatureGradientMeasure,\r\n  IfcTemperatureRateOfChangeMeasure,\r\n  IfcTendon,\r\n  IfcTendonAnchor,\r\n  IfcTendonAnchorType,\r\n  IfcTendonAnchorTypeEnum,\r\n  IfcTendonConduit,\r\n  IfcTendonConduitType,\r\n  IfcTendonConduitTypeEnum,\r\n  IfcTendonType,\r\n  IfcTendonTypeEnum,\r\n  IfcTessellatedFaceSet,\r\n  IfcTessellatedItem,\r\n  IfcText,\r\n  IfcTextAlignment,\r\n  IfcTextDecoration,\r\n  IfcTextFontName,\r\n  IfcTextLiteral,\r\n  IfcTextLiteralWithExtent,\r\n  IfcTextPath,\r\n  IfcTextStyle,\r\n  IfcTextStyleFontModel,\r\n  IfcTextStyleForDefinedFont,\r\n  IfcTextStyleTextModel,\r\n  IfcTextTransformation,\r\n  IfcTextureCoordinate,\r\n  IfcTextureCoordinateGenerator,\r\n  IfcTextureMap,\r\n  IfcTextureVertex,\r\n  IfcTextureVertexList,\r\n  IfcThermalAdmittanceMeasure,\r\n  IfcThermalConductivityMeasure,\r\n  IfcThermalExpansionCoefficientMeasure,\r\n  IfcThermalResistanceMeasure,\r\n  IfcThermalTransmittanceMeasure,\r\n  IfcThermodynamicTemperatureMeasure,\r\n  IfcTime,\r\n  IfcTimeMeasure,\r\n  IfcTimePeriod,\r\n  IfcTimeSeries,\r\n  IfcTimeSeriesDataTypeEnum,\r\n  IfcTimeSeriesValue,\r\n  IfcTimeStamp,\r\n  IfcTopologicalRepresentationItem,\r\n  IfcTopologyRepresentation,\r\n  IfcToroidalSurface,\r\n  IfcTorqueMeasure,\r\n  IfcTransformer,\r\n  IfcTransformerType,\r\n  IfcTransformerTypeEnum,\r\n  IfcTransitionCode,\r\n  IfcTransitionCurveSegment2D,\r\n  IfcTransitionCurveType,\r\n  IfcTransportElement,\r\n  IfcTransportElementType,\r\n  IfcTransportElementTypeEnum,\r\n  IfcTrapeziumProfileDef,\r\n  IfcTriangulatedFaceSet,\r\n  IfcTriangulatedIrregularNetwork,\r\n  IfcTrimmedCurve,\r\n  IfcTrimmingPreference,\r\n  IfcTubeBundle,\r\n  IfcTubeBundleType,\r\n  IfcTubeBundleTypeEnum,\r\n  IfcTypeObject,\r\n  IfcTypeProcess,\r\n  IfcTypeProduct,\r\n  IfcTypeResource,\r\n  IfcURIReference,\r\n  IfcUShapeProfileDef,\r\n  IfcUnitAssignment,\r\n  IfcUnitEnum,\r\n  IfcUnitaryControlElement,\r\n  IfcUnitaryControlElementType,\r\n  IfcUnitaryControlElementTypeEnum,\r\n  IfcUnitaryEquipment,\r\n  IfcUnitaryEquipmentType,\r\n  IfcUnitaryEquipmentTypeEnum,\r\n  IfcValve,\r\n  IfcValveType,\r\n  IfcValveTypeEnum,\r\n  IfcVaporPermeabilityMeasure,\r\n  IfcVector,\r\n  IfcVertex,\r\n  IfcVertexLoop,\r\n  IfcVertexPoint,\r\n  IfcVibrationDamper,\r\n  IfcVibrationDamperType,\r\n  IfcVibrationDamperTypeEnum,\r\n  IfcVibrationIsolator,\r\n  IfcVibrationIsolatorType,\r\n  IfcVibrationIsolatorTypeEnum,\r\n  IfcVirtualElement,\r\n  IfcVirtualGridIntersection,\r\n  IfcVoidingFeature,\r\n  IfcVoidingFeatureTypeEnum,\r\n  IfcVolumeMeasure,\r\n  IfcVolumetricFlowRateMeasure,\r\n  IfcWall,\r\n  IfcWallElementedCase,\r\n  IfcWallStandardCase,\r\n  IfcWallType,\r\n  IfcWallTypeEnum,\r\n  IfcWarpingConstantMeasure,\r\n  IfcWarpingMomentMeasure,\r\n  IfcWasteTerminal,\r\n  IfcWasteTerminalType,\r\n  IfcWasteTerminalTypeEnum,\r\n  IfcWindow,\r\n  IfcWindowLiningProperties,\r\n  IfcWindowPanelOperationEnum,\r\n  IfcWindowPanelPositionEnum,\r\n  IfcWindowPanelProperties,\r\n  IfcWindowStandardCase,\r\n  IfcWindowStyle,\r\n  IfcWindowStyleConstructionEnum,\r\n  IfcWindowStyleOperationEnum,\r\n  IfcWindowType,\r\n  IfcWindowTypeEnum,\r\n  IfcWindowTypePartitioningEnum,\r\n  IfcWorkCalendar,\r\n  IfcWorkCalendarTypeEnum,\r\n  IfcWorkControl,\r\n  IfcWorkPlan,\r\n  IfcWorkPlanTypeEnum,\r\n  IfcWorkSchedule,\r\n  IfcWorkScheduleTypeEnum,\r\n  IfcWorkTime,\r\n  IfcZShapeProfileDef,\r\n  IfcZone,\r\n  LABEL,\r\n  LINE_END,\r\n  REAL,\r\n  REF,\r\n  SET_BEGIN,\r\n  SET_END,\r\n  STRING,\r\n  UNKNOWN,\r\n  Value,\r\n  ms\r\n};\r\n\r\n\r\n var WasmPath = \"\";\r\n\r\n","import {\r\n\tIFCRELAGGREGATES,\r\n\tIFCRELCONTAINEDINSPATIALSTRUCTURE,\r\n\tIFCRELDEFINESBYPROPERTIES,\r\n\tIFCRELASSOCIATESMATERIAL,\r\n\tIFCRELDEFINESBYTYPE,\r\n\tIFCPROJECT,\r\n\tIfcAPI\r\n} from './ifc/web-ifc-api.js';\r\nimport {\r\n\tBufferAttribute,\r\n\tMesh,\r\n\tMatrix4,\r\n\tBufferGeometry,\r\n\tColor,\r\n\tMeshLambertMaterial,\r\n\tDoubleSide,\r\n\tLoader,\r\n\tFileLoader\r\n} from '../../../build/three';\r\n\r\nimport { mergeBufferGeometries } from '../utils/BufferGeometryUtils.js';\r\n\r\nconst IdAttrName = 'expressID';\r\nconst merge = ( geoms, createGroups = false ) => {\r\n\r\n\treturn mergeBufferGeometries( geoms, createGroups );\r\n\r\n};\r\n\r\nconst newFloatAttr = ( data, size ) => {\r\n\r\n\treturn new BufferAttribute( new Float32Array( data ), size );\r\n\r\n};\r\n\r\nconst newIntAttr = ( data, size ) => {\r\n\r\n\treturn new BufferAttribute( new Uint32Array( data ), size );\r\n\r\n};\r\n\r\nconst DEFAULT = 'default';\r\nconst PropsNames = {\r\n\taggregates: {\r\n\t\tname: IFCRELAGGREGATES,\r\n\t\trelating: 'RelatingObject',\r\n\t\trelated: 'RelatedObjects',\r\n\t\tkey: 'children'\r\n\t},\r\n\tspatial: {\r\n\t\tname: IFCRELCONTAINEDINSPATIALSTRUCTURE,\r\n\t\trelating: 'RelatingStructure',\r\n\t\trelated: 'RelatedElements',\r\n\t\tkey: 'children'\r\n\t},\r\n\tpsets: {\r\n\t\tname: IFCRELDEFINESBYPROPERTIES,\r\n\t\trelating: 'RelatingPropertyDefinition',\r\n\t\trelated: 'RelatedObjects',\r\n\t\tkey: 'hasPsets'\r\n\t},\r\n\tmaterials: {\r\n\t\tname: IFCRELASSOCIATESMATERIAL,\r\n\t\trelating: 'RelatingMaterial',\r\n\t\trelated: 'RelatedObjects',\r\n\t\tkey: 'hasMaterial'\r\n\t},\r\n\ttype: {\r\n\t\tname: IFCRELDEFINESBYTYPE,\r\n\t\trelating: 'RelatingType',\r\n\t\trelated: 'RelatedObjects',\r\n\t\tkey: 'hasType'\r\n\t}\r\n};\r\n\r\nclass IFCParser {\r\n\r\n\tconstructor( state, BVH ) {\r\n\r\n\t\tthis.state = state;\r\n\t\tthis.BVH = BVH;\r\n\t\tthis.loadedModels = 0;\r\n\t\tthis.currentWebIfcID = - 1;\r\n\t\tthis.currentModelID = - 1;\r\n\r\n\t}\r\n\r\n\tasync parse( buffer ) {\r\n\r\n\t\tif ( this.state.api.wasmModule === undefined )\r\n\t\t\tawait this.state.api.Init();\r\n\t\tthis.newIfcModel( buffer );\r\n\t\tthis.loadedModels ++;\r\n\t\treturn this.loadAllGeometry();\r\n\r\n\t}\r\n\r\n\tnewIfcModel( buffer ) {\r\n\r\n\t\tconst data = new Uint8Array( buffer );\r\n\t\tthis.currentWebIfcID = this.state.api.OpenModel( data, this.state.webIfcSettings );\r\n\t\tthis.currentModelID = this.state.useJSON ? this.loadedModels : this.currentWebIfcID;\r\n\t\tthis.state.models[ this.currentModelID ] = {\r\n\t\t\tmodelID: this.currentModelID,\r\n\t\t\tmesh: {},\r\n\t\t\titems: {},\r\n\t\t\ttypes: {},\r\n\t\t\tjsonData: {}\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tloadAllGeometry() {\r\n\r\n\t\tthis.saveAllPlacedGeometriesByMaterial();\r\n\t\treturn this.generateAllGeometriesByMaterial();\r\n\r\n\t}\r\n\r\n\tgenerateAllGeometriesByMaterial() {\r\n\r\n\t\tconst { geometry, materials } = this.getGeometryAndMaterials();\r\n\t\tthis.BVH.applyThreeMeshBVH( geometry );\r\n\t\tconst mesh = new Mesh( geometry, materials );\r\n\t\tmesh.modelID = this.currentModelID;\r\n\t\tthis.state.models[ this.currentModelID ].mesh = mesh;\r\n\t\treturn mesh;\r\n\r\n\t}\r\n\r\n\tgetGeometryAndMaterials() {\r\n\r\n\t\tconst items = this.state.models[ this.currentModelID ].items;\r\n\t\tconst mergedByMaterial = [];\r\n\t\tconst materials = [];\r\n\t\tfor ( const materialID in items ) {\r\n\r\n\t\t\tmaterials.push( items[ materialID ].material );\r\n\t\t\tconst geometries = Object.values( items[ materialID ].geometries );\r\n\t\t\tmergedByMaterial.push( merge( geometries ) );\r\n\r\n\t\t}\r\n\r\n\t\tconst geometry = merge( mergedByMaterial, true );\r\n\t\treturn {\r\n\t\t\tgeometry,\r\n\t\t\tmaterials\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tsaveAllPlacedGeometriesByMaterial() {\r\n\r\n\t\tconst flatMeshes = this.state.api.LoadAllGeometry( this.currentWebIfcID );\r\n\t\tfor ( let i = 0; i < flatMeshes.size(); i ++ ) {\r\n\r\n\t\t\tconst flatMesh = flatMeshes.get( i );\r\n\t\t\tconst placedGeom = flatMesh.geometries;\r\n\t\t\tfor ( let j = 0; j < placedGeom.size(); j ++ ) {\r\n\r\n\t\t\t\tthis.savePlacedGeometry( placedGeom.get( j ), flatMesh.expressID );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsavePlacedGeometry( placedGeometry, id ) {\r\n\r\n\t\tconst geometry = this.getBufferGeometry( placedGeometry );\r\n\t\tgeometry.computeVertexNormals();\r\n\t\tconst matrix = this.getMeshMatrix( placedGeometry.flatTransformation );\r\n\t\tgeometry.applyMatrix4( matrix );\r\n\t\tthis.saveGeometryByMaterial( geometry, placedGeometry, id );\r\n\r\n\t}\r\n\r\n\tgetBufferGeometry( placed ) {\r\n\r\n\t\tconst geometry = this.state.api.GetGeometry( this.currentWebIfcID, placed.geometryExpressID );\r\n\t\tconst vertexData = this.getVertices( geometry );\r\n\t\tconst indices = this.getIndices( geometry );\r\n\t\tconst { vertices, normals } = this.extractVertexData( vertexData );\r\n\t\treturn this.ifcGeomToBufferGeom( vertices, normals, indices );\r\n\r\n\t}\r\n\r\n\tgetVertices( geometry ) {\r\n\r\n\t\tconst vData = geometry.GetVertexData();\r\n\t\tconst vDataSize = geometry.GetVertexDataSize();\r\n\t\treturn this.state.api.GetVertexArray( vData, vDataSize );\r\n\r\n\t}\r\n\r\n\tgetIndices( geometry ) {\r\n\r\n\t\tconst iData = geometry.GetIndexData();\r\n\t\tconst iDataSize = geometry.GetIndexDataSize();\r\n\t\treturn this.state.api.GetIndexArray( iData, iDataSize );\r\n\r\n\t}\r\n\r\n\tgetMeshMatrix( matrix ) {\r\n\r\n\t\tconst mat = new Matrix4();\r\n\t\tmat.fromArray( matrix );\r\n\t\treturn mat;\r\n\r\n\t}\r\n\r\n\tifcGeomToBufferGeom( vertices, normals, indexData ) {\r\n\r\n\t\tconst geometry = new BufferGeometry();\r\n\t\tgeometry.setAttribute( 'position', newFloatAttr( vertices, 3 ) );\r\n\t\tgeometry.setAttribute( 'normal', newFloatAttr( normals, 3 ) );\r\n\t\tgeometry.setIndex( new BufferAttribute( indexData, 1 ) );\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\textractVertexData( vertexData ) {\r\n\r\n\t\tconst vertices = [];\r\n\t\tconst normals = [];\r\n\t\tlet isNormalData = false;\r\n\t\tfor ( let i = 0; i < vertexData.length; i ++ ) {\r\n\r\n\t\t\tisNormalData ? normals.push( vertexData[ i ] ) : vertices.push( vertexData[ i ] );\r\n\t\t\tif ( ( i + 1 ) % 3 == 0 )\r\n\t\t\t\tisNormalData = ! isNormalData;\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tvertices,\r\n\t\t\tnormals\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tsaveGeometryByMaterial( geom, placedGeom, id ) {\r\n\r\n\t\tconst color = placedGeom.color;\r\n\t\tconst colorID = `${color.x}${color.y}${color.z}${color.w}`;\r\n\t\tthis.storeGeometryAttribute( id, geom );\r\n\t\tthis.createMaterial( colorID, color );\r\n\t\tconst item = this.state.models[ this.currentModelID ].items[ colorID ];\r\n\t\tconst currentGeom = item.geometries[ id ];\r\n\t\tif ( ! currentGeom )\r\n\t\t\treturn ( item.geometries[ id ] = geom );\r\n\t\tconst merged = merge( [ currentGeom, geom ] );\r\n\t\titem.geometries[ id ] = merged;\r\n\r\n\t}\r\n\r\n\tstoreGeometryAttribute( id, geometry ) {\r\n\r\n\t\tconst size = geometry.attributes.position.count;\r\n\t\tconst idAttribute = new Array( size ).fill( id );\r\n\t\tgeometry.setAttribute( IdAttrName, newIntAttr( idAttribute, 1 ) );\r\n\r\n\t}\r\n\r\n\tcreateMaterial( colorID, color ) {\r\n\r\n\t\tconst items = this.state.models[ this.currentModelID ].items;\r\n\t\tif ( items[ colorID ] )\r\n\t\t\treturn;\r\n\t\tconst col = new Color( color.x, color.y, color.z );\r\n\t\tconst newMaterial = new MeshLambertMaterial( {\r\n\t\t\tcolor: col,\r\n\t\t\tside: DoubleSide\r\n\t\t} );\r\n\t\tnewMaterial.transparent = color.w !== 1;\r\n\t\tif ( newMaterial.transparent )\r\n\t\t\tnewMaterial.opacity = color.w;\r\n\t\titems[ colorID ] = {\r\n\t\t\tmaterial: newMaterial,\r\n\t\t\tgeometries: {}\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass SubsetManager {\r\n\r\n\tconstructor( state, BVH ) {\r\n\r\n\t\tthis.selected = {};\r\n\t\tthis.state = state;\r\n\t\tthis.BVH = BVH;\r\n\r\n\t}\r\n\r\n\tgetSubset( modelID, material ) {\r\n\r\n\t\tconst currentMat = this.matIDNoConfig( modelID, material );\r\n\t\tif ( ! this.selected[ currentMat ] )\r\n\t\t\treturn null;\r\n\t\treturn this.selected[ currentMat ].mesh;\r\n\r\n\t}\r\n\r\n\tremoveSubset( modelID, parent, material ) {\r\n\r\n\t\tconst currentMat = this.matIDNoConfig( modelID, material );\r\n\t\tif ( ! this.selected[ currentMat ] )\r\n\t\t\treturn;\r\n\t\tif ( parent )\r\n\t\t\tparent.remove( this.selected[ currentMat ].mesh );\r\n\t\tdelete this.selected[ currentMat ];\r\n\r\n\t}\r\n\r\n\tcreateSubset( config ) {\r\n\r\n\t\tif ( ! this.isConfigValid( config ) )\r\n\t\t\treturn;\r\n\t\tif ( this.isPreviousSelection( config ) )\r\n\t\t\treturn;\r\n\t\tif ( this.isEasySelection( config ) )\r\n\t\t\treturn this.addToPreviousSelection( config );\r\n\t\tthis.updatePreviousSelection( config.scene, config );\r\n\t\treturn this.createSelectionInScene( config );\r\n\r\n\t}\r\n\r\n\tcreateSelectionInScene( config ) {\r\n\r\n\t\tconst filtered = this.filter( config );\r\n\t\tconst { geomsByMaterial, materials } = this.getGeomAndMat( filtered );\r\n\t\tconst isDefMaterial = this.isDefaultMat( config );\r\n\t\tconst geometry = this.getMergedGeometry( geomsByMaterial, isDefMaterial );\r\n\t\tconst mats = isDefMaterial ? materials : config.material;\r\n\t\tthis.BVH.applyThreeMeshBVH( geometry );\r\n\t\tconst mesh = new Mesh( geometry, mats );\r\n\t\tthis.selected[ this.matID( config ) ].mesh = mesh;\r\n\t\tmesh.modelID = config.modelID;\r\n\t\tconfig.scene.add( mesh );\r\n\t\treturn mesh;\r\n\r\n\t}\r\n\r\n\tgetMergedGeometry( geomsByMaterial, hasDefaultMaterial ) {\r\n\r\n\t\treturn geomsByMaterial.length > 0\r\n\t\t\t? merge( geomsByMaterial, hasDefaultMaterial )\r\n\t\t\t: new BufferGeometry();\r\n\r\n\t}\r\n\r\n\tisConfigValid( config ) {\r\n\r\n\t\treturn ( this.isValid( config.scene ) &&\r\n\t\t\tthis.isValid( config.modelID ) &&\r\n\t\t\tthis.isValid( config.ids ) &&\r\n\t\t\tthis.isValid( config.removePrevious ) );\r\n\r\n\t}\r\n\r\n\tisValid( item ) {\r\n\r\n\t\treturn item !== undefined && item !== null;\r\n\r\n\t}\r\n\r\n\tgetGeomAndMat( filtered ) {\r\n\r\n\t\tconst geomsByMaterial = [];\r\n\t\tconst materials = [];\r\n\t\tfor ( const matID in filtered ) {\r\n\r\n\t\t\tconst geoms = Object.values( filtered[ matID ].geometries );\r\n\t\t\tif ( ! geoms.length )\r\n\t\t\t\tcontinue;\r\n\t\t\tmaterials.push( filtered[ matID ].material );\r\n\t\t\tif ( geoms.length > 1 )\r\n\t\t\t\tgeomsByMaterial.push( merge( geoms ) );\r\n\t\t\telse\r\n\t\t\t\tgeomsByMaterial.push( ...geoms );\r\n\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tgeomsByMaterial,\r\n\t\t\tmaterials\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tupdatePreviousSelection( parent, config ) {\r\n\r\n\t\tconst previous = this.selected[ this.matID( config ) ];\r\n\t\tif ( ! previous )\r\n\t\t\treturn this.newSelectionGroup( config );\r\n\t\tparent.remove( previous.mesh );\r\n\t\tconfig.removePrevious\r\n\t\t\t? ( previous.ids = new Set( config.ids ) )\r\n\t\t\t: config.ids.forEach( ( id ) => previous.ids.add( id ) );\r\n\r\n\t}\r\n\r\n\tnewSelectionGroup( config ) {\r\n\r\n\t\tthis.selected[ this.matID( config ) ] = {\r\n\t\t\tids: new Set( config.ids ),\r\n\t\t\tmesh: {}\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tisPreviousSelection( config ) {\r\n\r\n\t\tif ( ! this.selected[ this.matID( config ) ] )\r\n\t\t\treturn false;\r\n\t\tif ( this.containsIds( config ) )\r\n\t\t\treturn true;\r\n\t\tconst previousIds = this.selected[ this.matID( config ) ].ids;\r\n\t\treturn JSON.stringify( config.ids ) === JSON.stringify( previousIds );\r\n\r\n\t}\r\n\r\n\tcontainsIds( config ) {\r\n\r\n\t\tconst newIds = config.ids;\r\n\t\tconst previous = Array.from( this.selected[ this.matID( config ) ].ids );\r\n\t\treturn newIds.every( ( i => v => ( i = previous.indexOf( v, i ) + 1 ) )( 0 ) );\r\n\r\n\t}\r\n\r\n\taddToPreviousSelection( config ) {\r\n\r\n\t\tconst previous = this.selected[ this.matID( config ) ];\r\n\t\tconst filtered = this.filter( config );\r\n\t\tconst geometries = Object.values( filtered ).map( ( i ) => Object.values( i.geometries ) ).flat();\r\n\t\tconst previousGeom = previous.mesh.geometry;\r\n\t\tprevious.mesh.geometry = merge( [ previousGeom, ...geometries ] );\r\n\t\tconfig.ids.forEach( ( id ) => previous.ids.add( id ) );\r\n\r\n\t}\r\n\r\n\tfilter( config ) {\r\n\r\n\t\tconst ids = this.selected[ this.matID( config ) ].ids;\r\n\t\tconst items = this.state.models[ config.modelID ].items;\r\n\t\tconst filtered = {};\r\n\t\tfor ( const matID in items ) {\r\n\r\n\t\t\tfiltered[ matID ] = {\r\n\t\t\t\tmaterial: items[ matID ].material,\r\n\t\t\t\tgeometries: this.filterGeometries( ids, items[ matID ].geometries )\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\treturn filtered;\r\n\r\n\t}\r\n\r\n\tfilterGeometries( selectedIDs, geometries ) {\r\n\r\n\t\tconst ids = Array.from( selectedIDs );\r\n\t\treturn Object.keys( geometries )\r\n\t\t\t.filter( ( key ) => ids.includes( parseInt( key, 10 ) ) )\r\n\t\t\t.reduce( ( obj, key ) => {\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t...obj,\r\n\t\t\t\t\t[ key ]: geometries[ key ]\r\n\t\t\t\t};\r\n\r\n\t\t\t}, {} );\r\n\r\n\t}\r\n\r\n\tisEasySelection( config ) {\r\n\r\n\t\tconst matID = this.matID( config );\r\n\t\tif ( ! config.removePrevious && ! this.isDefaultMat( config ) && this.selected[ matID ] )\r\n\t\t\treturn true;\r\n\r\n\t}\r\n\r\n\tisDefaultMat( config ) {\r\n\r\n\t\treturn this.matIDNoConfig( config.modelID ) === this.matID( config );\r\n\r\n\t}\r\n\r\n\tmatID( config ) {\r\n\r\n\t\tlet name;\r\n\t\tif ( ! config.material )\r\n\t\t\tname = DEFAULT;\r\n\t\telse\r\n\t\t\tname = config.material.uuid || DEFAULT;\r\n\t\treturn name.concat( ' - ' ).concat( config.modelID.toString() );\r\n\r\n\t}\r\n\r\n\tmatIDNoConfig( modelID, material ) {\r\n\r\n\t\tlet name = DEFAULT;\r\n\t\tif ( material )\r\n\t\t\tname = material.uuid;\r\n\t\treturn name.concat( ' - ' ).concat( modelID.toString() );\r\n\r\n\t}\r\n\r\n}\r\n\r\nconst IfcElements = {\r\n\t103090709: 'IFCPROJECT',\r\n\t4097777520: 'IFCSITE',\r\n\t4031249490: 'IFCBUILDING',\r\n\t3124254112: 'IFCBUILDINGSTOREY',\r\n\t3856911033: 'IFCSPACE',\r\n\t1674181508: 'IFCANNOTATION',\r\n\t25142252: 'IFCCONTROLLER',\r\n\t32344328: 'IFCBOILER',\r\n\t76236018: 'IFCLAMP',\r\n\t90941305: 'IFCPUMP',\r\n\t177149247: 'IFCAIRTERMINALBOX',\r\n\t182646315: 'IFCFLOWINSTRUMENT',\r\n\t263784265: 'IFCFURNISHINGELEMENT',\r\n\t264262732: 'IFCELECTRICGENERATOR',\r\n\t277319702: 'IFCAUDIOVISUALAPPLIANCE',\r\n\t310824031: 'IFCPIPEFITTING',\r\n\t331165859: 'IFCSTAIR',\r\n\t342316401: 'IFCDUCTFITTING',\r\n\t377706215: 'IFCMECHANICALFASTENER',\r\n\t395920057: 'IFCDOOR',\r\n\t402227799: 'IFCELECTRICMOTOR',\r\n\t413509423: 'IFCSYSTEMFURNITUREELEMENT',\r\n\t484807127: 'IFCEVAPORATOR',\r\n\t486154966: 'IFCWINDOWSTANDARDCASE',\r\n\t629592764: 'IFCLIGHTFIXTURE',\r\n\t630975310: 'IFCUNITARYCONTROLELEMENT',\r\n\t635142910: 'IFCCABLECARRIERFITTING',\r\n\t639361253: 'IFCCOIL',\r\n\t647756555: 'IFCFASTENER',\r\n\t707683696: 'IFCFLOWSTORAGEDEVICE',\r\n\t738039164: 'IFCPROTECTIVEDEVICE',\r\n\t753842376: 'IFCBEAM',\r\n\t812556717: 'IFCTANK',\r\n\t819412036: 'IFCFILTER',\r\n\t843113511: 'IFCCOLUMN',\r\n\t862014818: 'IFCELECTRICDISTRIBUTIONBOARD',\r\n\t900683007: 'IFCFOOTING',\r\n\t905975707: 'IFCCOLUMNSTANDARDCASE',\r\n\t926996030: 'IFCVOIDINGFEATURE',\r\n\t979691226: 'IFCREINFORCINGBAR',\r\n\t987401354: 'IFCFLOWSEGMENT',\r\n\t1003880860: 'IFCELECTRICTIMECONTROL',\r\n\t1051757585: 'IFCCABLEFITTING',\r\n\t1052013943: 'IFCDISTRIBUTIONCHAMBERELEMENT',\r\n\t1062813311: 'IFCDISTRIBUTIONCONTROLELEMENT',\r\n\t1073191201: 'IFCMEMBER',\r\n\t1095909175: 'IFCBUILDINGELEMENTPROXY',\r\n\t1156407060: 'IFCPLATESTANDARDCASE',\r\n\t1162798199: 'IFCSWITCHINGDEVICE',\r\n\t1329646415: 'IFCSHADINGDEVICE',\r\n\t1335981549: 'IFCDISCRETEACCESSORY',\r\n\t1360408905: 'IFCDUCTSILENCER',\r\n\t1404847402: 'IFCSTACKTERMINAL',\r\n\t1426591983: 'IFCFIRESUPPRESSIONTERMINAL',\r\n\t1437502449: 'IFCMEDICALDEVICE',\r\n\t1509553395: 'IFCFURNITURE',\r\n\t1529196076: 'IFCSLAB',\r\n\t1620046519: 'IFCTRANSPORTELEMENT',\r\n\t1634111441: 'IFCAIRTERMINAL',\r\n\t1658829314: 'IFCENERGYCONVERSIONDEVICE',\r\n\t1677625105: 'IFCCIVILELEMENT',\r\n\t1687234759: 'IFCPILE',\r\n\t1904799276: 'IFCELECTRICAPPLIANCE',\r\n\t1911478936: 'IFCMEMBERSTANDARDCASE',\r\n\t1945004755: 'IFCDISTRIBUTIONELEMENT',\r\n\t1973544240: 'IFCCOVERING',\r\n\t1999602285: 'IFCSPACEHEATER',\r\n\t2016517767: 'IFCROOF',\r\n\t2056796094: 'IFCAIRTOAIRHEATRECOVERY',\r\n\t2058353004: 'IFCFLOWCONTROLLER',\r\n\t2068733104: 'IFCHUMIDIFIER',\r\n\t2176052936: 'IFCJUNCTIONBOX',\r\n\t2188021234: 'IFCFLOWMETER',\r\n\t2223149337: 'IFCFLOWTERMINAL',\r\n\t2262370178: 'IFCRAILING',\r\n\t2272882330: 'IFCCONDENSER',\r\n\t2295281155: 'IFCPROTECTIVEDEVICETRIPPINGUNIT',\r\n\t2320036040: 'IFCREINFORCINGMESH',\r\n\t2347447852: 'IFCTENDONANCHOR',\r\n\t2391383451: 'IFCVIBRATIONISOLATOR',\r\n\t2391406946: 'IFCWALL',\r\n\t2474470126: 'IFCMOTORCONNECTION',\r\n\t2769231204: 'IFCVIRTUALELEMENT',\r\n\t2814081492: 'IFCENGINE',\r\n\t2906023776: 'IFCBEAMSTANDARDCASE',\r\n\t2938176219: 'IFCBURNER',\r\n\t2979338954: 'IFCBUILDINGELEMENTPART',\r\n\t3024970846: 'IFCRAMP',\r\n\t3026737570: 'IFCTUBEBUNDLE',\r\n\t3027962421: 'IFCSLABSTANDARDCASE',\r\n\t3040386961: 'IFCDISTRIBUTIONFLOWELEMENT',\r\n\t3053780830: 'IFCSANITARYTERMINAL',\r\n\t3079942009: 'IFCOPENINGSTANDARDCASE',\r\n\t3087945054: 'IFCALARM',\r\n\t3101698114: 'IFCSURFACEFEATURE',\r\n\t3127900445: 'IFCSLABELEMENTEDCASE',\r\n\t3132237377: 'IFCFLOWMOVINGDEVICE',\r\n\t3171933400: 'IFCPLATE',\r\n\t3221913625: 'IFCCOMMUNICATIONSAPPLIANCE',\r\n\t3242481149: 'IFCDOORSTANDARDCASE',\r\n\t3283111854: 'IFCRAMPFLIGHT',\r\n\t3296154744: 'IFCCHIMNEY',\r\n\t3304561284: 'IFCWINDOW',\r\n\t3310460725: 'IFCELECTRICFLOWSTORAGEDEVICE',\r\n\t3319311131: 'IFCHEATEXCHANGER',\r\n\t3415622556: 'IFCFAN',\r\n\t3420628829: 'IFCSOLARDEVICE',\r\n\t3493046030: 'IFCGEOGRAPHICELEMENT',\r\n\t3495092785: 'IFCCURTAINWALL',\r\n\t3508470533: 'IFCFLOWTREATMENTDEVICE',\r\n\t3512223829: 'IFCWALLSTANDARDCASE',\r\n\t3518393246: 'IFCDUCTSEGMENT',\r\n\t3571504051: 'IFCCOMPRESSOR',\r\n\t3588315303: 'IFCOPENINGELEMENT',\r\n\t3612865200: 'IFCPIPESEGMENT',\r\n\t3640358203: 'IFCCOOLINGTOWER',\r\n\t3651124850: 'IFCPROJECTIONELEMENT',\r\n\t3694346114: 'IFCOUTLET',\r\n\t3747195512: 'IFCEVAPORATIVECOOLER',\r\n\t3758799889: 'IFCCABLECARRIERSEGMENT',\r\n\t3824725483: 'IFCTENDON',\r\n\t3825984169: 'IFCTRANSFORMER',\r\n\t3902619387: 'IFCCHILLER',\r\n\t4074379575: 'IFCDAMPER',\r\n\t4086658281: 'IFCSENSOR',\r\n\t4123344466: 'IFCELEMENTASSEMBLY',\r\n\t4136498852: 'IFCCOOLEDBEAM',\r\n\t4156078855: 'IFCWALLELEMENTEDCASE',\r\n\t4175244083: 'IFCINTERCEPTOR',\r\n\t4207607924: 'IFCVALVE',\r\n\t4217484030: 'IFCCABLESEGMENT',\r\n\t4237592921: 'IFCWASTETERMINAL',\r\n\t4252922144: 'IFCSTAIRFLIGHT',\r\n\t4278956645: 'IFCFLOWFITTING',\r\n\t4288193352: 'IFCACTUATOR',\r\n\t4292641817: 'IFCUNITARYEQUIPMENT',\r\n\t3009204131: 'IFCGRID'\r\n};\r\n\r\nconst IfcTypesMap = {\r\n\t3821786052: 'IFCACTIONREQUEST',\r\n\t2296667514: 'IFCACTOR',\r\n\t3630933823: 'IFCACTORROLE',\r\n\t4288193352: 'IFCACTUATOR',\r\n\t2874132201: 'IFCACTUATORTYPE',\r\n\t618182010: 'IFCADDRESS',\r\n\t1635779807: 'IFCADVANCEDBREP',\r\n\t2603310189: 'IFCADVANCEDBREPWITHVOIDS',\r\n\t3406155212: 'IFCADVANCEDFACE',\r\n\t1634111441: 'IFCAIRTERMINAL',\r\n\t177149247: 'IFCAIRTERMINALBOX',\r\n\t1411407467: 'IFCAIRTERMINALBOXTYPE',\r\n\t3352864051: 'IFCAIRTERMINALTYPE',\r\n\t2056796094: 'IFCAIRTOAIRHEATRECOVERY',\r\n\t1871374353: 'IFCAIRTOAIRHEATRECOVERYTYPE',\r\n\t3087945054: 'IFCALARM',\r\n\t3001207471: 'IFCALARMTYPE',\r\n\t325726236: 'IFCALIGNMENT',\r\n\t749761778: 'IFCALIGNMENT2DHORIZONTAL',\r\n\t3199563722: 'IFCALIGNMENT2DHORIZONTALSEGMENT',\r\n\t2483840362: 'IFCALIGNMENT2DSEGMENT',\r\n\t3379348081: 'IFCALIGNMENT2DVERSEGCIRCULARARC',\r\n\t3239324667: 'IFCALIGNMENT2DVERSEGLINE',\r\n\t4263986512: 'IFCALIGNMENT2DVERSEGPARABOLICARC',\r\n\t53199957: 'IFCALIGNMENT2DVERTICAL',\r\n\t2029264950: 'IFCALIGNMENT2DVERTICALSEGMENT',\r\n\t3512275521: 'IFCALIGNMENTCURVE',\r\n\t1674181508: 'IFCANNOTATION',\r\n\t669184980: 'IFCANNOTATIONFILLAREA',\r\n\t639542469: 'IFCAPPLICATION',\r\n\t411424972: 'IFCAPPLIEDVALUE',\r\n\t130549933: 'IFCAPPROVAL',\r\n\t3869604511: 'IFCAPPROVALRELATIONSHIP',\r\n\t3798115385: 'IFCARBITRARYCLOSEDPROFILEDEF',\r\n\t1310608509: 'IFCARBITRARYOPENPROFILEDEF',\r\n\t2705031697: 'IFCARBITRARYPROFILEDEFWITHVOIDS',\r\n\t3460190687: 'IFCASSET',\r\n\t3207858831: 'IFCASYMMETRICISHAPEPROFILEDEF',\r\n\t277319702: 'IFCAUDIOVISUALAPPLIANCE',\r\n\t1532957894: 'IFCAUDIOVISUALAPPLIANCETYPE',\r\n\t4261334040: 'IFCAXIS1PLACEMENT',\r\n\t3125803723: 'IFCAXIS2PLACEMENT2D',\r\n\t2740243338: 'IFCAXIS2PLACEMENT3D',\r\n\t1967976161: 'IFCBSPLINECURVE',\r\n\t2461110595: 'IFCBSPLINECURVEWITHKNOTS',\r\n\t2887950389: 'IFCBSPLINESURFACE',\r\n\t167062518: 'IFCBSPLINESURFACEWITHKNOTS',\r\n\t753842376: 'IFCBEAM',\r\n\t2906023776: 'IFCBEAMSTANDARDCASE',\r\n\t819618141: 'IFCBEAMTYPE',\r\n\t4196446775: 'IFCBEARING',\r\n\t3649138523: 'IFCBEARINGTYPE',\r\n\t616511568: 'IFCBLOBTEXTURE',\r\n\t1334484129: 'IFCBLOCK',\r\n\t32344328: 'IFCBOILER',\r\n\t231477066: 'IFCBOILERTYPE',\r\n\t3649129432: 'IFCBOOLEANCLIPPINGRESULT',\r\n\t2736907675: 'IFCBOOLEANRESULT',\r\n\t4037036970: 'IFCBOUNDARYCONDITION',\r\n\t1136057603: 'IFCBOUNDARYCURVE',\r\n\t1560379544: 'IFCBOUNDARYEDGECONDITION',\r\n\t3367102660: 'IFCBOUNDARYFACECONDITION',\r\n\t1387855156: 'IFCBOUNDARYNODECONDITION',\r\n\t2069777674: 'IFCBOUNDARYNODECONDITIONWARPING',\r\n\t1260505505: 'IFCBOUNDEDCURVE',\r\n\t4182860854: 'IFCBOUNDEDSURFACE',\r\n\t2581212453: 'IFCBOUNDINGBOX',\r\n\t2713105998: 'IFCBOXEDHALFSPACE',\r\n\t644574406: 'IFCBRIDGE',\r\n\t963979645: 'IFCBRIDGEPART',\r\n\t4031249490: 'IFCBUILDING',\r\n\t3299480353: 'IFCBUILDINGELEMENT',\r\n\t2979338954: 'IFCBUILDINGELEMENTPART',\r\n\t39481116: 'IFCBUILDINGELEMENTPARTTYPE',\r\n\t1095909175: 'IFCBUILDINGELEMENTPROXY',\r\n\t1909888760: 'IFCBUILDINGELEMENTPROXYTYPE',\r\n\t1950629157: 'IFCBUILDINGELEMENTTYPE',\r\n\t3124254112: 'IFCBUILDINGSTOREY',\r\n\t1177604601: 'IFCBUILDINGSYSTEM',\r\n\t2938176219: 'IFCBURNER',\r\n\t2188180465: 'IFCBURNERTYPE',\r\n\t2898889636: 'IFCCSHAPEPROFILEDEF',\r\n\t635142910: 'IFCCABLECARRIERFITTING',\r\n\t395041908: 'IFCCABLECARRIERFITTINGTYPE',\r\n\t3758799889: 'IFCCABLECARRIERSEGMENT',\r\n\t3293546465: 'IFCCABLECARRIERSEGMENTTYPE',\r\n\t1051757585: 'IFCCABLEFITTING',\r\n\t2674252688: 'IFCCABLEFITTINGTYPE',\r\n\t4217484030: 'IFCCABLESEGMENT',\r\n\t1285652485: 'IFCCABLESEGMENTTYPE',\r\n\t3999819293: 'IFCCAISSONFOUNDATION',\r\n\t3203706013: 'IFCCAISSONFOUNDATIONTYPE',\r\n\t1123145078: 'IFCCARTESIANPOINT',\r\n\t574549367: 'IFCCARTESIANPOINTLIST',\r\n\t1675464909: 'IFCCARTESIANPOINTLIST2D',\r\n\t2059837836: 'IFCCARTESIANPOINTLIST3D',\r\n\t59481748: 'IFCCARTESIANTRANSFORMATIONOPERATOR',\r\n\t3749851601: 'IFCCARTESIANTRANSFORMATIONOPERATOR2D',\r\n\t3486308946: 'IFCCARTESIANTRANSFORMATIONOPERATOR2DNONUNIFORM',\r\n\t3331915920: 'IFCCARTESIANTRANSFORMATIONOPERATOR3D',\r\n\t1416205885: 'IFCCARTESIANTRANSFORMATIONOPERATOR3DNONUNIFORM',\r\n\t3150382593: 'IFCCENTERLINEPROFILEDEF',\r\n\t3902619387: 'IFCCHILLER',\r\n\t2951183804: 'IFCCHILLERTYPE',\r\n\t3296154744: 'IFCCHIMNEY',\r\n\t2197970202: 'IFCCHIMNEYTYPE',\r\n\t2611217952: 'IFCCIRCLE',\r\n\t2937912522: 'IFCCIRCLEHOLLOWPROFILEDEF',\r\n\t1383045692: 'IFCCIRCLEPROFILEDEF',\r\n\t1062206242: 'IFCCIRCULARARCSEGMENT2D',\r\n\t1677625105: 'IFCCIVILELEMENT',\r\n\t3893394355: 'IFCCIVILELEMENTTYPE',\r\n\t747523909: 'IFCCLASSIFICATION',\r\n\t647927063: 'IFCCLASSIFICATIONREFERENCE',\r\n\t2205249479: 'IFCCLOSEDSHELL',\r\n\t639361253: 'IFCCOIL',\r\n\t2301859152: 'IFCCOILTYPE',\r\n\t776857604: 'IFCCOLOURRGB',\r\n\t3285139300: 'IFCCOLOURRGBLIST',\r\n\t3264961684: 'IFCCOLOURSPECIFICATION',\r\n\t843113511: 'IFCCOLUMN',\r\n\t905975707: 'IFCCOLUMNSTANDARDCASE',\r\n\t300633059: 'IFCCOLUMNTYPE',\r\n\t3221913625: 'IFCCOMMUNICATIONSAPPLIANCE',\r\n\t400855858: 'IFCCOMMUNICATIONSAPPLIANCETYPE',\r\n\t2542286263: 'IFCCOMPLEXPROPERTY',\r\n\t3875453745: 'IFCCOMPLEXPROPERTYTEMPLATE',\r\n\t3732776249: 'IFCCOMPOSITECURVE',\r\n\t15328376: 'IFCCOMPOSITECURVEONSURFACE',\r\n\t2485617015: 'IFCCOMPOSITECURVESEGMENT',\r\n\t1485152156: 'IFCCOMPOSITEPROFILEDEF',\r\n\t3571504051: 'IFCCOMPRESSOR',\r\n\t3850581409: 'IFCCOMPRESSORTYPE',\r\n\t2272882330: 'IFCCONDENSER',\r\n\t2816379211: 'IFCCONDENSERTYPE',\r\n\t2510884976: 'IFCCONIC',\r\n\t370225590: 'IFCCONNECTEDFACESET',\r\n\t1981873012: 'IFCCONNECTIONCURVEGEOMETRY',\r\n\t2859738748: 'IFCCONNECTIONGEOMETRY',\r\n\t45288368: 'IFCCONNECTIONPOINTECCENTRICITY',\r\n\t2614616156: 'IFCCONNECTIONPOINTGEOMETRY',\r\n\t2732653382: 'IFCCONNECTIONSURFACEGEOMETRY',\r\n\t775493141: 'IFCCONNECTIONVOLUMEGEOMETRY',\r\n\t1959218052: 'IFCCONSTRAINT',\r\n\t3898045240: 'IFCCONSTRUCTIONEQUIPMENTRESOURCE',\r\n\t2185764099: 'IFCCONSTRUCTIONEQUIPMENTRESOURCETYPE',\r\n\t1060000209: 'IFCCONSTRUCTIONMATERIALRESOURCE',\r\n\t4105962743: 'IFCCONSTRUCTIONMATERIALRESOURCETYPE',\r\n\t488727124: 'IFCCONSTRUCTIONPRODUCTRESOURCE',\r\n\t1525564444: 'IFCCONSTRUCTIONPRODUCTRESOURCETYPE',\r\n\t2559216714: 'IFCCONSTRUCTIONRESOURCE',\r\n\t2574617495: 'IFCCONSTRUCTIONRESOURCETYPE',\r\n\t3419103109: 'IFCCONTEXT',\r\n\t3050246964: 'IFCCONTEXTDEPENDENTUNIT',\r\n\t3293443760: 'IFCCONTROL',\r\n\t25142252: 'IFCCONTROLLER',\r\n\t578613899: 'IFCCONTROLLERTYPE',\r\n\t2889183280: 'IFCCONVERSIONBASEDUNIT',\r\n\t2713554722: 'IFCCONVERSIONBASEDUNITWITHOFFSET',\r\n\t4136498852: 'IFCCOOLEDBEAM',\r\n\t335055490: 'IFCCOOLEDBEAMTYPE',\r\n\t3640358203: 'IFCCOOLINGTOWER',\r\n\t2954562838: 'IFCCOOLINGTOWERTYPE',\r\n\t1785450214: 'IFCCOORDINATEOPERATION',\r\n\t1466758467: 'IFCCOORDINATEREFERENCESYSTEM',\r\n\t3895139033: 'IFCCOSTITEM',\r\n\t1419761937: 'IFCCOSTSCHEDULE',\r\n\t602808272: 'IFCCOSTVALUE',\r\n\t1973544240: 'IFCCOVERING',\r\n\t1916426348: 'IFCCOVERINGTYPE',\r\n\t3295246426: 'IFCCREWRESOURCE',\r\n\t1815067380: 'IFCCREWRESOURCETYPE',\r\n\t2506170314: 'IFCCSGPRIMITIVE3D',\r\n\t2147822146: 'IFCCSGSOLID',\r\n\t539742890: 'IFCCURRENCYRELATIONSHIP',\r\n\t3495092785: 'IFCCURTAINWALL',\r\n\t1457835157: 'IFCCURTAINWALLTYPE',\r\n\t2601014836: 'IFCCURVE',\r\n\t2827736869: 'IFCCURVEBOUNDEDPLANE',\r\n\t2629017746: 'IFCCURVEBOUNDEDSURFACE',\r\n\t1186437898: 'IFCCURVESEGMENT2D',\r\n\t3800577675: 'IFCCURVESTYLE',\r\n\t1105321065: 'IFCCURVESTYLEFONT',\r\n\t2367409068: 'IFCCURVESTYLEFONTANDSCALING',\r\n\t3510044353: 'IFCCURVESTYLEFONTPATTERN',\r\n\t1213902940: 'IFCCYLINDRICALSURFACE',\r\n\t4074379575: 'IFCDAMPER',\r\n\t3961806047: 'IFCDAMPERTYPE',\r\n\t3426335179: 'IFCDEEPFOUNDATION',\r\n\t1306400036: 'IFCDEEPFOUNDATIONTYPE',\r\n\t3632507154: 'IFCDERIVEDPROFILEDEF',\r\n\t1765591967: 'IFCDERIVEDUNIT',\r\n\t1045800335: 'IFCDERIVEDUNITELEMENT',\r\n\t2949456006: 'IFCDIMENSIONALEXPONENTS',\r\n\t32440307: 'IFCDIRECTION',\r\n\t1335981549: 'IFCDISCRETEACCESSORY',\r\n\t2635815018: 'IFCDISCRETEACCESSORYTYPE',\r\n\t1945343521: 'IFCDISTANCEEXPRESSION',\r\n\t1052013943: 'IFCDISTRIBUTIONCHAMBERELEMENT',\r\n\t1599208980: 'IFCDISTRIBUTIONCHAMBERELEMENTTYPE',\r\n\t562808652: 'IFCDISTRIBUTIONCIRCUIT',\r\n\t1062813311: 'IFCDISTRIBUTIONCONTROLELEMENT',\r\n\t2063403501: 'IFCDISTRIBUTIONCONTROLELEMENTTYPE',\r\n\t1945004755: 'IFCDISTRIBUTIONELEMENT',\r\n\t3256556792: 'IFCDISTRIBUTIONELEMENTTYPE',\r\n\t3040386961: 'IFCDISTRIBUTIONFLOWELEMENT',\r\n\t3849074793: 'IFCDISTRIBUTIONFLOWELEMENTTYPE',\r\n\t3041715199: 'IFCDISTRIBUTIONPORT',\r\n\t3205830791: 'IFCDISTRIBUTIONSYSTEM',\r\n\t1154170062: 'IFCDOCUMENTINFORMATION',\r\n\t770865208: 'IFCDOCUMENTINFORMATIONRELATIONSHIP',\r\n\t3732053477: 'IFCDOCUMENTREFERENCE',\r\n\t395920057: 'IFCDOOR',\r\n\t2963535650: 'IFCDOORLININGPROPERTIES',\r\n\t1714330368: 'IFCDOORPANELPROPERTIES',\r\n\t3242481149: 'IFCDOORSTANDARDCASE',\r\n\t526551008: 'IFCDOORSTYLE',\r\n\t2323601079: 'IFCDOORTYPE',\r\n\t445594917: 'IFCDRAUGHTINGPREDEFINEDCOLOUR',\r\n\t4006246654: 'IFCDRAUGHTINGPREDEFINEDCURVEFONT',\r\n\t342316401: 'IFCDUCTFITTING',\r\n\t869906466: 'IFCDUCTFITTINGTYPE',\r\n\t3518393246: 'IFCDUCTSEGMENT',\r\n\t3760055223: 'IFCDUCTSEGMENTTYPE',\r\n\t1360408905: 'IFCDUCTSILENCER',\r\n\t2030761528: 'IFCDUCTSILENCERTYPE',\r\n\t3900360178: 'IFCEDGE',\r\n\t476780140: 'IFCEDGECURVE',\r\n\t1472233963: 'IFCEDGELOOP',\r\n\t1904799276: 'IFCELECTRICAPPLIANCE',\r\n\t663422040: 'IFCELECTRICAPPLIANCETYPE',\r\n\t862014818: 'IFCELECTRICDISTRIBUTIONBOARD',\r\n\t2417008758: 'IFCELECTRICDISTRIBUTIONBOARDTYPE',\r\n\t3310460725: 'IFCELECTRICFLOWSTORAGEDEVICE',\r\n\t3277789161: 'IFCELECTRICFLOWSTORAGEDEVICETYPE',\r\n\t264262732: 'IFCELECTRICGENERATOR',\r\n\t1534661035: 'IFCELECTRICGENERATORTYPE',\r\n\t402227799: 'IFCELECTRICMOTOR',\r\n\t1217240411: 'IFCELECTRICMOTORTYPE',\r\n\t1003880860: 'IFCELECTRICTIMECONTROL',\r\n\t712377611: 'IFCELECTRICTIMECONTROLTYPE',\r\n\t1758889154: 'IFCELEMENT',\r\n\t4123344466: 'IFCELEMENTASSEMBLY',\r\n\t2397081782: 'IFCELEMENTASSEMBLYTYPE',\r\n\t1623761950: 'IFCELEMENTCOMPONENT',\r\n\t2590856083: 'IFCELEMENTCOMPONENTTYPE',\r\n\t1883228015: 'IFCELEMENTQUANTITY',\r\n\t339256511: 'IFCELEMENTTYPE',\r\n\t2777663545: 'IFCELEMENTARYSURFACE',\r\n\t1704287377: 'IFCELLIPSE',\r\n\t2835456948: 'IFCELLIPSEPROFILEDEF',\r\n\t1658829314: 'IFCENERGYCONVERSIONDEVICE',\r\n\t2107101300: 'IFCENERGYCONVERSIONDEVICETYPE',\r\n\t2814081492: 'IFCENGINE',\r\n\t132023988: 'IFCENGINETYPE',\r\n\t3747195512: 'IFCEVAPORATIVECOOLER',\r\n\t3174744832: 'IFCEVAPORATIVECOOLERTYPE',\r\n\t484807127: 'IFCEVAPORATOR',\r\n\t3390157468: 'IFCEVAPORATORTYPE',\r\n\t4148101412: 'IFCEVENT',\r\n\t211053100: 'IFCEVENTTIME',\r\n\t4024345920: 'IFCEVENTTYPE',\r\n\t297599258: 'IFCEXTENDEDPROPERTIES',\r\n\t4294318154: 'IFCEXTERNALINFORMATION',\r\n\t3200245327: 'IFCEXTERNALREFERENCE',\r\n\t1437805879: 'IFCEXTERNALREFERENCERELATIONSHIP',\r\n\t1209101575: 'IFCEXTERNALSPATIALELEMENT',\r\n\t2853485674: 'IFCEXTERNALSPATIALSTRUCTUREELEMENT',\r\n\t2242383968: 'IFCEXTERNALLYDEFINEDHATCHSTYLE',\r\n\t1040185647: 'IFCEXTERNALLYDEFINEDSURFACESTYLE',\r\n\t3548104201: 'IFCEXTERNALLYDEFINEDTEXTFONT',\r\n\t477187591: 'IFCEXTRUDEDAREASOLID',\r\n\t2804161546: 'IFCEXTRUDEDAREASOLIDTAPERED',\r\n\t2556980723: 'IFCFACE',\r\n\t2047409740: 'IFCFACEBASEDSURFACEMODEL',\r\n\t1809719519: 'IFCFACEBOUND',\r\n\t803316827: 'IFCFACEOUTERBOUND',\r\n\t3008276851: 'IFCFACESURFACE',\r\n\t807026263: 'IFCFACETEDBREP',\r\n\t3737207727: 'IFCFACETEDBREPWITHVOIDS',\r\n\t24185140: 'IFCFACILITY',\r\n\t1310830890: 'IFCFACILITYPART',\r\n\t4219587988: 'IFCFAILURECONNECTIONCONDITION',\r\n\t3415622556: 'IFCFAN',\r\n\t346874300: 'IFCFANTYPE',\r\n\t647756555: 'IFCFASTENER',\r\n\t2489546625: 'IFCFASTENERTYPE',\r\n\t2827207264: 'IFCFEATUREELEMENT',\r\n\t2143335405: 'IFCFEATUREELEMENTADDITION',\r\n\t1287392070: 'IFCFEATUREELEMENTSUBTRACTION',\r\n\t738692330: 'IFCFILLAREASTYLE',\r\n\t374418227: 'IFCFILLAREASTYLEHATCHING',\r\n\t315944413: 'IFCFILLAREASTYLETILES',\r\n\t819412036: 'IFCFILTER',\r\n\t1810631287: 'IFCFILTERTYPE',\r\n\t1426591983: 'IFCFIRESUPPRESSIONTERMINAL',\r\n\t4222183408: 'IFCFIRESUPPRESSIONTERMINALTYPE',\r\n\t2652556860: 'IFCFIXEDREFERENCESWEPTAREASOLID',\r\n\t2058353004: 'IFCFLOWCONTROLLER',\r\n\t3907093117: 'IFCFLOWCONTROLLERTYPE',\r\n\t4278956645: 'IFCFLOWFITTING',\r\n\t3198132628: 'IFCFLOWFITTINGTYPE',\r\n\t182646315: 'IFCFLOWINSTRUMENT',\r\n\t4037862832: 'IFCFLOWINSTRUMENTTYPE',\r\n\t2188021234: 'IFCFLOWMETER',\r\n\t3815607619: 'IFCFLOWMETERTYPE',\r\n\t3132237377: 'IFCFLOWMOVINGDEVICE',\r\n\t1482959167: 'IFCFLOWMOVINGDEVICETYPE',\r\n\t987401354: 'IFCFLOWSEGMENT',\r\n\t1834744321: 'IFCFLOWSEGMENTTYPE',\r\n\t707683696: 'IFCFLOWSTORAGEDEVICE',\r\n\t1339347760: 'IFCFLOWSTORAGEDEVICETYPE',\r\n\t2223149337: 'IFCFLOWTERMINAL',\r\n\t2297155007: 'IFCFLOWTERMINALTYPE',\r\n\t3508470533: 'IFCFLOWTREATMENTDEVICE',\r\n\t3009222698: 'IFCFLOWTREATMENTDEVICETYPE',\r\n\t900683007: 'IFCFOOTING',\r\n\t1893162501: 'IFCFOOTINGTYPE',\r\n\t263784265: 'IFCFURNISHINGELEMENT',\r\n\t4238390223: 'IFCFURNISHINGELEMENTTYPE',\r\n\t1509553395: 'IFCFURNITURE',\r\n\t1268542332: 'IFCFURNITURETYPE',\r\n\t3493046030: 'IFCGEOGRAPHICELEMENT',\r\n\t4095422895: 'IFCGEOGRAPHICELEMENTTYPE',\r\n\t987898635: 'IFCGEOMETRICCURVESET',\r\n\t3448662350: 'IFCGEOMETRICREPRESENTATIONCONTEXT',\r\n\t2453401579: 'IFCGEOMETRICREPRESENTATIONITEM',\r\n\t4142052618: 'IFCGEOMETRICREPRESENTATIONSUBCONTEXT',\r\n\t3590301190: 'IFCGEOMETRICSET',\r\n\t3009204131: 'IFCGRID',\r\n\t852622518: 'IFCGRIDAXIS',\r\n\t178086475: 'IFCGRIDPLACEMENT',\r\n\t2706460486: 'IFCGROUP',\r\n\t812098782: 'IFCHALFSPACESOLID',\r\n\t3319311131: 'IFCHEATEXCHANGER',\r\n\t1251058090: 'IFCHEATEXCHANGERTYPE',\r\n\t2068733104: 'IFCHUMIDIFIER',\r\n\t1806887404: 'IFCHUMIDIFIERTYPE',\r\n\t1484403080: 'IFCISHAPEPROFILEDEF',\r\n\t3905492369: 'IFCIMAGETEXTURE',\r\n\t3570813810: 'IFCINDEXEDCOLOURMAP',\r\n\t2571569899: 'IFCINDEXEDPOLYCURVE',\r\n\t178912537: 'IFCINDEXEDPOLYGONALFACE',\r\n\t2294589976: 'IFCINDEXEDPOLYGONALFACEWITHVOIDS',\r\n\t1437953363: 'IFCINDEXEDTEXTUREMAP',\r\n\t2133299955: 'IFCINDEXEDTRIANGLETEXTUREMAP',\r\n\t4175244083: 'IFCINTERCEPTOR',\r\n\t3946677679: 'IFCINTERCEPTORTYPE',\r\n\t3113134337: 'IFCINTERSECTIONCURVE',\r\n\t2391368822: 'IFCINVENTORY',\r\n\t3741457305: 'IFCIRREGULARTIMESERIES',\r\n\t3020489413: 'IFCIRREGULARTIMESERIESVALUE',\r\n\t2176052936: 'IFCJUNCTIONBOX',\r\n\t4288270099: 'IFCJUNCTIONBOXTYPE',\r\n\t572779678: 'IFCLSHAPEPROFILEDEF',\r\n\t3827777499: 'IFCLABORRESOURCE',\r\n\t428585644: 'IFCLABORRESOURCETYPE',\r\n\t1585845231: 'IFCLAGTIME',\r\n\t76236018: 'IFCLAMP',\r\n\t1051575348: 'IFCLAMPTYPE',\r\n\t2655187982: 'IFCLIBRARYINFORMATION',\r\n\t3452421091: 'IFCLIBRARYREFERENCE',\r\n\t4162380809: 'IFCLIGHTDISTRIBUTIONDATA',\r\n\t629592764: 'IFCLIGHTFIXTURE',\r\n\t1161773419: 'IFCLIGHTFIXTURETYPE',\r\n\t1566485204: 'IFCLIGHTINTENSITYDISTRIBUTION',\r\n\t1402838566: 'IFCLIGHTSOURCE',\r\n\t125510826: 'IFCLIGHTSOURCEAMBIENT',\r\n\t2604431987: 'IFCLIGHTSOURCEDIRECTIONAL',\r\n\t4266656042: 'IFCLIGHTSOURCEGONIOMETRIC',\r\n\t1520743889: 'IFCLIGHTSOURCEPOSITIONAL',\r\n\t3422422726: 'IFCLIGHTSOURCESPOT',\r\n\t1281925730: 'IFCLINE',\r\n\t3092502836: 'IFCLINESEGMENT2D',\r\n\t388784114: 'IFCLINEARPLACEMENT',\r\n\t1154579445: 'IFCLINEARPOSITIONINGELEMENT',\r\n\t2624227202: 'IFCLOCALPLACEMENT',\r\n\t1008929658: 'IFCLOOP',\r\n\t1425443689: 'IFCMANIFOLDSOLIDBREP',\r\n\t3057273783: 'IFCMAPCONVERSION',\r\n\t2347385850: 'IFCMAPPEDITEM',\r\n\t1838606355: 'IFCMATERIAL',\r\n\t1847130766: 'IFCMATERIALCLASSIFICATIONRELATIONSHIP',\r\n\t3708119000: 'IFCMATERIALCONSTITUENT',\r\n\t2852063980: 'IFCMATERIALCONSTITUENTSET',\r\n\t760658860: 'IFCMATERIALDEFINITION',\r\n\t2022407955: 'IFCMATERIALDEFINITIONREPRESENTATION',\r\n\t248100487: 'IFCMATERIALLAYER',\r\n\t3303938423: 'IFCMATERIALLAYERSET',\r\n\t1303795690: 'IFCMATERIALLAYERSETUSAGE',\r\n\t1847252529: 'IFCMATERIALLAYERWITHOFFSETS',\r\n\t2199411900: 'IFCMATERIALLIST',\r\n\t2235152071: 'IFCMATERIALPROFILE',\r\n\t164193824: 'IFCMATERIALPROFILESET',\r\n\t3079605661: 'IFCMATERIALPROFILESETUSAGE',\r\n\t3404854881: 'IFCMATERIALPROFILESETUSAGETAPERING',\r\n\t552965576: 'IFCMATERIALPROFILEWITHOFFSETS',\r\n\t3265635763: 'IFCMATERIALPROPERTIES',\r\n\t853536259: 'IFCMATERIALRELATIONSHIP',\r\n\t1507914824: 'IFCMATERIALUSAGEDEFINITION',\r\n\t2597039031: 'IFCMEASUREWITHUNIT',\r\n\t377706215: 'IFCMECHANICALFASTENER',\r\n\t2108223431: 'IFCMECHANICALFASTENERTYPE',\r\n\t1437502449: 'IFCMEDICALDEVICE',\r\n\t1114901282: 'IFCMEDICALDEVICETYPE',\r\n\t1073191201: 'IFCMEMBER',\r\n\t1911478936: 'IFCMEMBERSTANDARDCASE',\r\n\t3181161470: 'IFCMEMBERTYPE',\r\n\t3368373690: 'IFCMETRIC',\r\n\t2998442950: 'IFCMIRROREDPROFILEDEF',\r\n\t2706619895: 'IFCMONETARYUNIT',\r\n\t2474470126: 'IFCMOTORCONNECTION',\r\n\t977012517: 'IFCMOTORCONNECTIONTYPE',\r\n\t1918398963: 'IFCNAMEDUNIT',\r\n\t3888040117: 'IFCOBJECT',\r\n\t219451334: 'IFCOBJECTDEFINITION',\r\n\t3701648758: 'IFCOBJECTPLACEMENT',\r\n\t2251480897: 'IFCOBJECTIVE',\r\n\t4143007308: 'IFCOCCUPANT',\r\n\t590820931: 'IFCOFFSETCURVE',\r\n\t3388369263: 'IFCOFFSETCURVE2D',\r\n\t3505215534: 'IFCOFFSETCURVE3D',\r\n\t2485787929: 'IFCOFFSETCURVEBYDISTANCES',\r\n\t2665983363: 'IFCOPENSHELL',\r\n\t3588315303: 'IFCOPENINGELEMENT',\r\n\t3079942009: 'IFCOPENINGSTANDARDCASE',\r\n\t4251960020: 'IFCORGANIZATION',\r\n\t1411181986: 'IFCORGANIZATIONRELATIONSHIP',\r\n\t643959842: 'IFCORIENTATIONEXPRESSION',\r\n\t1029017970: 'IFCORIENTEDEDGE',\r\n\t144952367: 'IFCOUTERBOUNDARYCURVE',\r\n\t3694346114: 'IFCOUTLET',\r\n\t2837617999: 'IFCOUTLETTYPE',\r\n\t1207048766: 'IFCOWNERHISTORY',\r\n\t2529465313: 'IFCPARAMETERIZEDPROFILEDEF',\r\n\t2519244187: 'IFCPATH',\r\n\t1682466193: 'IFCPCURVE',\r\n\t2382730787: 'IFCPERFORMANCEHISTORY',\r\n\t3566463478: 'IFCPERMEABLECOVERINGPROPERTIES',\r\n\t3327091369: 'IFCPERMIT',\r\n\t2077209135: 'IFCPERSON',\r\n\t101040310: 'IFCPERSONANDORGANIZATION',\r\n\t3021840470: 'IFCPHYSICALCOMPLEXQUANTITY',\r\n\t2483315170: 'IFCPHYSICALQUANTITY',\r\n\t2226359599: 'IFCPHYSICALSIMPLEQUANTITY',\r\n\t1687234759: 'IFCPILE',\r\n\t1158309216: 'IFCPILETYPE',\r\n\t310824031: 'IFCPIPEFITTING',\r\n\t804291784: 'IFCPIPEFITTINGTYPE',\r\n\t3612865200: 'IFCPIPESEGMENT',\r\n\t4231323485: 'IFCPIPESEGMENTTYPE',\r\n\t597895409: 'IFCPIXELTEXTURE',\r\n\t2004835150: 'IFCPLACEMENT',\r\n\t603570806: 'IFCPLANARBOX',\r\n\t1663979128: 'IFCPLANAREXTENT',\r\n\t220341763: 'IFCPLANE',\r\n\t3171933400: 'IFCPLATE',\r\n\t1156407060: 'IFCPLATESTANDARDCASE',\r\n\t4017108033: 'IFCPLATETYPE',\r\n\t2067069095: 'IFCPOINT',\r\n\t4022376103: 'IFCPOINTONCURVE',\r\n\t1423911732: 'IFCPOINTONSURFACE',\r\n\t2924175390: 'IFCPOLYLOOP',\r\n\t2775532180: 'IFCPOLYGONALBOUNDEDHALFSPACE',\r\n\t2839578677: 'IFCPOLYGONALFACESET',\r\n\t3724593414: 'IFCPOLYLINE',\r\n\t3740093272: 'IFCPORT',\r\n\t1946335990: 'IFCPOSITIONINGELEMENT',\r\n\t3355820592: 'IFCPOSTALADDRESS',\r\n\t759155922: 'IFCPREDEFINEDCOLOUR',\r\n\t2559016684: 'IFCPREDEFINEDCURVEFONT',\r\n\t3727388367: 'IFCPREDEFINEDITEM',\r\n\t3778827333: 'IFCPREDEFINEDPROPERTIES',\r\n\t3967405729: 'IFCPREDEFINEDPROPERTYSET',\r\n\t1775413392: 'IFCPREDEFINEDTEXTFONT',\r\n\t677532197: 'IFCPRESENTATIONITEM',\r\n\t2022622350: 'IFCPRESENTATIONLAYERASSIGNMENT',\r\n\t1304840413: 'IFCPRESENTATIONLAYERWITHSTYLE',\r\n\t3119450353: 'IFCPRESENTATIONSTYLE',\r\n\t2417041796: 'IFCPRESENTATIONSTYLEASSIGNMENT',\r\n\t2744685151: 'IFCPROCEDURE',\r\n\t569719735: 'IFCPROCEDURETYPE',\r\n\t2945172077: 'IFCPROCESS',\r\n\t4208778838: 'IFCPRODUCT',\r\n\t673634403: 'IFCPRODUCTDEFINITIONSHAPE',\r\n\t2095639259: 'IFCPRODUCTREPRESENTATION',\r\n\t3958567839: 'IFCPROFILEDEF',\r\n\t2802850158: 'IFCPROFILEPROPERTIES',\r\n\t103090709: 'IFCPROJECT',\r\n\t653396225: 'IFCPROJECTLIBRARY',\r\n\t2904328755: 'IFCPROJECTORDER',\r\n\t3843373140: 'IFCPROJECTEDCRS',\r\n\t3651124850: 'IFCPROJECTIONELEMENT',\r\n\t2598011224: 'IFCPROPERTY',\r\n\t986844984: 'IFCPROPERTYABSTRACTION',\r\n\t871118103: 'IFCPROPERTYBOUNDEDVALUE',\r\n\t1680319473: 'IFCPROPERTYDEFINITION',\r\n\t148025276: 'IFCPROPERTYDEPENDENCYRELATIONSHIP',\r\n\t4166981789: 'IFCPROPERTYENUMERATEDVALUE',\r\n\t3710013099: 'IFCPROPERTYENUMERATION',\r\n\t2752243245: 'IFCPROPERTYLISTVALUE',\r\n\t941946838: 'IFCPROPERTYREFERENCEVALUE',\r\n\t1451395588: 'IFCPROPERTYSET',\r\n\t3357820518: 'IFCPROPERTYSETDEFINITION',\r\n\t492091185: 'IFCPROPERTYSETTEMPLATE',\r\n\t3650150729: 'IFCPROPERTYSINGLEVALUE',\r\n\t110355661: 'IFCPROPERTYTABLEVALUE',\r\n\t3521284610: 'IFCPROPERTYTEMPLATE',\r\n\t1482703590: 'IFCPROPERTYTEMPLATEDEFINITION',\r\n\t738039164: 'IFCPROTECTIVEDEVICE',\r\n\t2295281155: 'IFCPROTECTIVEDEVICETRIPPINGUNIT',\r\n\t655969474: 'IFCPROTECTIVEDEVICETRIPPINGUNITTYPE',\r\n\t1842657554: 'IFCPROTECTIVEDEVICETYPE',\r\n\t3219374653: 'IFCPROXY',\r\n\t90941305: 'IFCPUMP',\r\n\t2250791053: 'IFCPUMPTYPE',\r\n\t2044713172: 'IFCQUANTITYAREA',\r\n\t2093928680: 'IFCQUANTITYCOUNT',\r\n\t931644368: 'IFCQUANTITYLENGTH',\r\n\t2090586900: 'IFCQUANTITYSET',\r\n\t3252649465: 'IFCQUANTITYTIME',\r\n\t2405470396: 'IFCQUANTITYVOLUME',\r\n\t825690147: 'IFCQUANTITYWEIGHT',\r\n\t2262370178: 'IFCRAILING',\r\n\t2893384427: 'IFCRAILINGTYPE',\r\n\t3024970846: 'IFCRAMP',\r\n\t3283111854: 'IFCRAMPFLIGHT',\r\n\t2324767716: 'IFCRAMPFLIGHTTYPE',\r\n\t1469900589: 'IFCRAMPTYPE',\r\n\t1232101972: 'IFCRATIONALBSPLINECURVEWITHKNOTS',\r\n\t683857671: 'IFCRATIONALBSPLINESURFACEWITHKNOTS',\r\n\t2770003689: 'IFCRECTANGLEHOLLOWPROFILEDEF',\r\n\t3615266464: 'IFCRECTANGLEPROFILEDEF',\r\n\t2798486643: 'IFCRECTANGULARPYRAMID',\r\n\t3454111270: 'IFCRECTANGULARTRIMMEDSURFACE',\r\n\t3915482550: 'IFCRECURRENCEPATTERN',\r\n\t2433181523: 'IFCREFERENCE',\r\n\t4021432810: 'IFCREFERENT',\r\n\t3413951693: 'IFCREGULARTIMESERIES',\r\n\t1580146022: 'IFCREINFORCEMENTBARPROPERTIES',\r\n\t3765753017: 'IFCREINFORCEMENTDEFINITIONPROPERTIES',\r\n\t979691226: 'IFCREINFORCINGBAR',\r\n\t2572171363: 'IFCREINFORCINGBARTYPE',\r\n\t3027567501: 'IFCREINFORCINGELEMENT',\r\n\t964333572: 'IFCREINFORCINGELEMENTTYPE',\r\n\t2320036040: 'IFCREINFORCINGMESH',\r\n\t2310774935: 'IFCREINFORCINGMESHTYPE',\r\n\t160246688: 'IFCRELAGGREGATES',\r\n\t3939117080: 'IFCRELASSIGNS',\r\n\t1683148259: 'IFCRELASSIGNSTOACTOR',\r\n\t2495723537: 'IFCRELASSIGNSTOCONTROL',\r\n\t1307041759: 'IFCRELASSIGNSTOGROUP',\r\n\t1027710054: 'IFCRELASSIGNSTOGROUPBYFACTOR',\r\n\t4278684876: 'IFCRELASSIGNSTOPROCESS',\r\n\t2857406711: 'IFCRELASSIGNSTOPRODUCT',\r\n\t205026976: 'IFCRELASSIGNSTORESOURCE',\r\n\t1865459582: 'IFCRELASSOCIATES',\r\n\t4095574036: 'IFCRELASSOCIATESAPPROVAL',\r\n\t919958153: 'IFCRELASSOCIATESCLASSIFICATION',\r\n\t2728634034: 'IFCRELASSOCIATESCONSTRAINT',\r\n\t982818633: 'IFCRELASSOCIATESDOCUMENT',\r\n\t3840914261: 'IFCRELASSOCIATESLIBRARY',\r\n\t2655215786: 'IFCRELASSOCIATESMATERIAL',\r\n\t826625072: 'IFCRELCONNECTS',\r\n\t1204542856: 'IFCRELCONNECTSELEMENTS',\r\n\t3945020480: 'IFCRELCONNECTSPATHELEMENTS',\r\n\t4201705270: 'IFCRELCONNECTSPORTTOELEMENT',\r\n\t3190031847: 'IFCRELCONNECTSPORTS',\r\n\t2127690289: 'IFCRELCONNECTSSTRUCTURALACTIVITY',\r\n\t1638771189: 'IFCRELCONNECTSSTRUCTURALMEMBER',\r\n\t504942748: 'IFCRELCONNECTSWITHECCENTRICITY',\r\n\t3678494232: 'IFCRELCONNECTSWITHREALIZINGELEMENTS',\r\n\t3242617779: 'IFCRELCONTAINEDINSPATIALSTRUCTURE',\r\n\t886880790: 'IFCRELCOVERSBLDGELEMENTS',\r\n\t2802773753: 'IFCRELCOVERSSPACES',\r\n\t2565941209: 'IFCRELDECLARES',\r\n\t2551354335: 'IFCRELDECOMPOSES',\r\n\t693640335: 'IFCRELDEFINES',\r\n\t1462361463: 'IFCRELDEFINESBYOBJECT',\r\n\t4186316022: 'IFCRELDEFINESBYPROPERTIES',\r\n\t307848117: 'IFCRELDEFINESBYTEMPLATE',\r\n\t781010003: 'IFCRELDEFINESBYTYPE',\r\n\t3940055652: 'IFCRELFILLSELEMENT',\r\n\t279856033: 'IFCRELFLOWCONTROLELEMENTS',\r\n\t427948657: 'IFCRELINTERFERESELEMENTS',\r\n\t3268803585: 'IFCRELNESTS',\r\n\t1441486842: 'IFCRELPOSITIONS',\r\n\t750771296: 'IFCRELPROJECTSELEMENT',\r\n\t1245217292: 'IFCRELREFERENCEDINSPATIALSTRUCTURE',\r\n\t4122056220: 'IFCRELSEQUENCE',\r\n\t366585022: 'IFCRELSERVICESBUILDINGS',\r\n\t3451746338: 'IFCRELSPACEBOUNDARY',\r\n\t3523091289: 'IFCRELSPACEBOUNDARY1STLEVEL',\r\n\t1521410863: 'IFCRELSPACEBOUNDARY2NDLEVEL',\r\n\t1401173127: 'IFCRELVOIDSELEMENT',\r\n\t478536968: 'IFCRELATIONSHIP',\r\n\t816062949: 'IFCREPARAMETRISEDCOMPOSITECURVESEGMENT',\r\n\t1076942058: 'IFCREPRESENTATION',\r\n\t3377609919: 'IFCREPRESENTATIONCONTEXT',\r\n\t3008791417: 'IFCREPRESENTATIONITEM',\r\n\t1660063152: 'IFCREPRESENTATIONMAP',\r\n\t2914609552: 'IFCRESOURCE',\r\n\t2943643501: 'IFCRESOURCEAPPROVALRELATIONSHIP',\r\n\t1608871552: 'IFCRESOURCECONSTRAINTRELATIONSHIP',\r\n\t2439245199: 'IFCRESOURCELEVELRELATIONSHIP',\r\n\t1042787934: 'IFCRESOURCETIME',\r\n\t1856042241: 'IFCREVOLVEDAREASOLID',\r\n\t3243963512: 'IFCREVOLVEDAREASOLIDTAPERED',\r\n\t4158566097: 'IFCRIGHTCIRCULARCONE',\r\n\t3626867408: 'IFCRIGHTCIRCULARCYLINDER',\r\n\t2016517767: 'IFCROOF',\r\n\t2781568857: 'IFCROOFTYPE',\r\n\t2341007311: 'IFCROOT',\r\n\t2778083089: 'IFCROUNDEDRECTANGLEPROFILEDEF',\r\n\t448429030: 'IFCSIUNIT',\r\n\t3053780830: 'IFCSANITARYTERMINAL',\r\n\t1768891740: 'IFCSANITARYTERMINALTYPE',\r\n\t1054537805: 'IFCSCHEDULINGTIME',\r\n\t2157484638: 'IFCSEAMCURVE',\r\n\t2042790032: 'IFCSECTIONPROPERTIES',\r\n\t4165799628: 'IFCSECTIONREINFORCEMENTPROPERTIES',\r\n\t1862484736: 'IFCSECTIONEDSOLID',\r\n\t1290935644: 'IFCSECTIONEDSOLIDHORIZONTAL',\r\n\t1509187699: 'IFCSECTIONEDSPINE',\r\n\t4086658281: 'IFCSENSOR',\r\n\t1783015770: 'IFCSENSORTYPE',\r\n\t1329646415: 'IFCSHADINGDEVICE',\r\n\t4074543187: 'IFCSHADINGDEVICETYPE',\r\n\t867548509: 'IFCSHAPEASPECT',\r\n\t3982875396: 'IFCSHAPEMODEL',\r\n\t4240577450: 'IFCSHAPEREPRESENTATION',\r\n\t4124623270: 'IFCSHELLBASEDSURFACEMODEL',\r\n\t3692461612: 'IFCSIMPLEPROPERTY',\r\n\t3663146110: 'IFCSIMPLEPROPERTYTEMPLATE',\r\n\t4097777520: 'IFCSITE',\r\n\t1529196076: 'IFCSLAB',\r\n\t3127900445: 'IFCSLABELEMENTEDCASE',\r\n\t3027962421: 'IFCSLABSTANDARDCASE',\r\n\t2533589738: 'IFCSLABTYPE',\r\n\t2609359061: 'IFCSLIPPAGECONNECTIONCONDITION',\r\n\t3420628829: 'IFCSOLARDEVICE',\r\n\t1072016465: 'IFCSOLARDEVICETYPE',\r\n\t723233188: 'IFCSOLIDMODEL',\r\n\t3856911033: 'IFCSPACE',\r\n\t1999602285: 'IFCSPACEHEATER',\r\n\t1305183839: 'IFCSPACEHEATERTYPE',\r\n\t3812236995: 'IFCSPACETYPE',\r\n\t1412071761: 'IFCSPATIALELEMENT',\r\n\t710998568: 'IFCSPATIALELEMENTTYPE',\r\n\t2706606064: 'IFCSPATIALSTRUCTUREELEMENT',\r\n\t3893378262: 'IFCSPATIALSTRUCTUREELEMENTTYPE',\r\n\t463610769: 'IFCSPATIALZONE',\r\n\t2481509218: 'IFCSPATIALZONETYPE',\r\n\t451544542: 'IFCSPHERE',\r\n\t4015995234: 'IFCSPHERICALSURFACE',\r\n\t1404847402: 'IFCSTACKTERMINAL',\r\n\t3112655638: 'IFCSTACKTERMINALTYPE',\r\n\t331165859: 'IFCSTAIR',\r\n\t4252922144: 'IFCSTAIRFLIGHT',\r\n\t1039846685: 'IFCSTAIRFLIGHTTYPE',\r\n\t338393293: 'IFCSTAIRTYPE',\r\n\t682877961: 'IFCSTRUCTURALACTION',\r\n\t3544373492: 'IFCSTRUCTURALACTIVITY',\r\n\t2515109513: 'IFCSTRUCTURALANALYSISMODEL',\r\n\t1179482911: 'IFCSTRUCTURALCONNECTION',\r\n\t2273995522: 'IFCSTRUCTURALCONNECTIONCONDITION',\r\n\t1004757350: 'IFCSTRUCTURALCURVEACTION',\r\n\t4243806635: 'IFCSTRUCTURALCURVECONNECTION',\r\n\t214636428: 'IFCSTRUCTURALCURVEMEMBER',\r\n\t2445595289: 'IFCSTRUCTURALCURVEMEMBERVARYING',\r\n\t2757150158: 'IFCSTRUCTURALCURVEREACTION',\r\n\t3136571912: 'IFCSTRUCTURALITEM',\r\n\t1807405624: 'IFCSTRUCTURALLINEARACTION',\r\n\t2162789131: 'IFCSTRUCTURALLOAD',\r\n\t385403989: 'IFCSTRUCTURALLOADCASE',\r\n\t3478079324: 'IFCSTRUCTURALLOADCONFIGURATION',\r\n\t1252848954: 'IFCSTRUCTURALLOADGROUP',\r\n\t1595516126: 'IFCSTRUCTURALLOADLINEARFORCE',\r\n\t609421318: 'IFCSTRUCTURALLOADORRESULT',\r\n\t2668620305: 'IFCSTRUCTURALLOADPLANARFORCE',\r\n\t2473145415: 'IFCSTRUCTURALLOADSINGLEDISPLACEMENT',\r\n\t1973038258: 'IFCSTRUCTURALLOADSINGLEDISPLACEMENTDISTORTION',\r\n\t1597423693: 'IFCSTRUCTURALLOADSINGLEFORCE',\r\n\t1190533807: 'IFCSTRUCTURALLOADSINGLEFORCEWARPING',\r\n\t2525727697: 'IFCSTRUCTURALLOADSTATIC',\r\n\t3408363356: 'IFCSTRUCTURALLOADTEMPERATURE',\r\n\t530289379: 'IFCSTRUCTURALMEMBER',\r\n\t1621171031: 'IFCSTRUCTURALPLANARACTION',\r\n\t2082059205: 'IFCSTRUCTURALPOINTACTION',\r\n\t734778138: 'IFCSTRUCTURALPOINTCONNECTION',\r\n\t1235345126: 'IFCSTRUCTURALPOINTREACTION',\r\n\t3689010777: 'IFCSTRUCTURALREACTION',\r\n\t2986769608: 'IFCSTRUCTURALRESULTGROUP',\r\n\t3657597509: 'IFCSTRUCTURALSURFACEACTION',\r\n\t1975003073: 'IFCSTRUCTURALSURFACECONNECTION',\r\n\t3979015343: 'IFCSTRUCTURALSURFACEMEMBER',\r\n\t2218152070: 'IFCSTRUCTURALSURFACEMEMBERVARYING',\r\n\t603775116: 'IFCSTRUCTURALSURFACEREACTION',\r\n\t2830218821: 'IFCSTYLEMODEL',\r\n\t3958052878: 'IFCSTYLEDITEM',\r\n\t3049322572: 'IFCSTYLEDREPRESENTATION',\r\n\t148013059: 'IFCSUBCONTRACTRESOURCE',\r\n\t4095615324: 'IFCSUBCONTRACTRESOURCETYPE',\r\n\t2233826070: 'IFCSUBEDGE',\r\n\t2513912981: 'IFCSURFACE',\r\n\t699246055: 'IFCSURFACECURVE',\r\n\t2028607225: 'IFCSURFACECURVESWEPTAREASOLID',\r\n\t3101698114: 'IFCSURFACEFEATURE',\r\n\t2809605785: 'IFCSURFACEOFLINEAREXTRUSION',\r\n\t4124788165: 'IFCSURFACEOFREVOLUTION',\r\n\t2934153892: 'IFCSURFACEREINFORCEMENTAREA',\r\n\t1300840506: 'IFCSURFACESTYLE',\r\n\t3303107099: 'IFCSURFACESTYLELIGHTING',\r\n\t1607154358: 'IFCSURFACESTYLEREFRACTION',\r\n\t1878645084: 'IFCSURFACESTYLERENDERING',\r\n\t846575682: 'IFCSURFACESTYLESHADING',\r\n\t1351298697: 'IFCSURFACESTYLEWITHTEXTURES',\r\n\t626085974: 'IFCSURFACETEXTURE',\r\n\t2247615214: 'IFCSWEPTAREASOLID',\r\n\t1260650574: 'IFCSWEPTDISKSOLID',\r\n\t1096409881: 'IFCSWEPTDISKSOLIDPOLYGONAL',\r\n\t230924584: 'IFCSWEPTSURFACE',\r\n\t1162798199: 'IFCSWITCHINGDEVICE',\r\n\t2315554128: 'IFCSWITCHINGDEVICETYPE',\r\n\t2254336722: 'IFCSYSTEM',\r\n\t413509423: 'IFCSYSTEMFURNITUREELEMENT',\r\n\t1580310250: 'IFCSYSTEMFURNITUREELEMENTTYPE',\r\n\t3071757647: 'IFCTSHAPEPROFILEDEF',\r\n\t985171141: 'IFCTABLE',\r\n\t2043862942: 'IFCTABLECOLUMN',\r\n\t531007025: 'IFCTABLEROW',\r\n\t812556717: 'IFCTANK',\r\n\t5716631: 'IFCTANKTYPE',\r\n\t3473067441: 'IFCTASK',\r\n\t1549132990: 'IFCTASKTIME',\r\n\t2771591690: 'IFCTASKTIMERECURRING',\r\n\t3206491090: 'IFCTASKTYPE',\r\n\t912023232: 'IFCTELECOMADDRESS',\r\n\t3824725483: 'IFCTENDON',\r\n\t2347447852: 'IFCTENDONANCHOR',\r\n\t3081323446: 'IFCTENDONANCHORTYPE',\r\n\t3663046924: 'IFCTENDONCONDUIT',\r\n\t2281632017: 'IFCTENDONCONDUITTYPE',\r\n\t2415094496: 'IFCTENDONTYPE',\r\n\t2387106220: 'IFCTESSELLATEDFACESET',\r\n\t901063453: 'IFCTESSELLATEDITEM',\r\n\t4282788508: 'IFCTEXTLITERAL',\r\n\t3124975700: 'IFCTEXTLITERALWITHEXTENT',\r\n\t1447204868: 'IFCTEXTSTYLE',\r\n\t1983826977: 'IFCTEXTSTYLEFONTMODEL',\r\n\t2636378356: 'IFCTEXTSTYLEFORDEFINEDFONT',\r\n\t1640371178: 'IFCTEXTSTYLETEXTMODEL',\r\n\t280115917: 'IFCTEXTURECOORDINATE',\r\n\t1742049831: 'IFCTEXTURECOORDINATEGENERATOR',\r\n\t2552916305: 'IFCTEXTUREMAP',\r\n\t1210645708: 'IFCTEXTUREVERTEX',\r\n\t3611470254: 'IFCTEXTUREVERTEXLIST',\r\n\t1199560280: 'IFCTIMEPERIOD',\r\n\t3101149627: 'IFCTIMESERIES',\r\n\t581633288: 'IFCTIMESERIESVALUE',\r\n\t1377556343: 'IFCTOPOLOGICALREPRESENTATIONITEM',\r\n\t1735638870: 'IFCTOPOLOGYREPRESENTATION',\r\n\t1935646853: 'IFCTOROIDALSURFACE',\r\n\t3825984169: 'IFCTRANSFORMER',\r\n\t1692211062: 'IFCTRANSFORMERTYPE',\r\n\t2595432518: 'IFCTRANSITIONCURVESEGMENT2D',\r\n\t1620046519: 'IFCTRANSPORTELEMENT',\r\n\t2097647324: 'IFCTRANSPORTELEMENTTYPE',\r\n\t2715220739: 'IFCTRAPEZIUMPROFILEDEF',\r\n\t2916149573: 'IFCTRIANGULATEDFACESET',\r\n\t1229763772: 'IFCTRIANGULATEDIRREGULARNETWORK',\r\n\t3593883385: 'IFCTRIMMEDCURVE',\r\n\t3026737570: 'IFCTUBEBUNDLE',\r\n\t1600972822: 'IFCTUBEBUNDLETYPE',\r\n\t1628702193: 'IFCTYPEOBJECT',\r\n\t3736923433: 'IFCTYPEPROCESS',\r\n\t2347495698: 'IFCTYPEPRODUCT',\r\n\t3698973494: 'IFCTYPERESOURCE',\r\n\t427810014: 'IFCUSHAPEPROFILEDEF',\r\n\t180925521: 'IFCUNITASSIGNMENT',\r\n\t630975310: 'IFCUNITARYCONTROLELEMENT',\r\n\t3179687236: 'IFCUNITARYCONTROLELEMENTTYPE',\r\n\t4292641817: 'IFCUNITARYEQUIPMENT',\r\n\t1911125066: 'IFCUNITARYEQUIPMENTTYPE',\r\n\t4207607924: 'IFCVALVE',\r\n\t728799441: 'IFCVALVETYPE',\r\n\t1417489154: 'IFCVECTOR',\r\n\t2799835756: 'IFCVERTEX',\r\n\t2759199220: 'IFCVERTEXLOOP',\r\n\t1907098498: 'IFCVERTEXPOINT',\r\n\t1530820697: 'IFCVIBRATIONDAMPER',\r\n\t3956297820: 'IFCVIBRATIONDAMPERTYPE',\r\n\t2391383451: 'IFCVIBRATIONISOLATOR',\r\n\t3313531582: 'IFCVIBRATIONISOLATORTYPE',\r\n\t2769231204: 'IFCVIRTUALELEMENT',\r\n\t891718957: 'IFCVIRTUALGRIDINTERSECTION',\r\n\t926996030: 'IFCVOIDINGFEATURE',\r\n\t2391406946: 'IFCWALL',\r\n\t4156078855: 'IFCWALLELEMENTEDCASE',\r\n\t3512223829: 'IFCWALLSTANDARDCASE',\r\n\t1898987631: 'IFCWALLTYPE',\r\n\t4237592921: 'IFCWASTETERMINAL',\r\n\t1133259667: 'IFCWASTETERMINALTYPE',\r\n\t3304561284: 'IFCWINDOW',\r\n\t336235671: 'IFCWINDOWLININGPROPERTIES',\r\n\t512836454: 'IFCWINDOWPANELPROPERTIES',\r\n\t486154966: 'IFCWINDOWSTANDARDCASE',\r\n\t1299126871: 'IFCWINDOWSTYLE',\r\n\t4009809668: 'IFCWINDOWTYPE',\r\n\t4088093105: 'IFCWORKCALENDAR',\r\n\t1028945134: 'IFCWORKCONTROL',\r\n\t4218914973: 'IFCWORKPLAN',\r\n\t3342526732: 'IFCWORKSCHEDULE',\r\n\t1236880293: 'IFCWORKTIME',\r\n\t2543172580: 'IFCZSHAPEPROFILEDEF',\r\n\t1033361043: 'IFCZONE',\r\n};\r\n\r\nclass PropertyManager {\r\n\r\n\tconstructor( state ) {\r\n\r\n\t\tthis.state = state;\r\n\r\n\t}\r\n\r\n\tgetExpressId( geometry, faceIndex ) {\r\n\r\n\t\tif ( ! geometry.index )\r\n\t\t\treturn;\r\n\t\tconst geoIndex = geometry.index.array;\r\n\t\treturn geometry.attributes[ IdAttrName ].getX( geoIndex[ 3 * faceIndex ] );\r\n\r\n\t}\r\n\r\n\tgetItemProperties( modelID, id, recursive = false ) {\r\n\r\n\t\treturn this.state.useJSON ?\r\n\t\t\t{\r\n\t\t\t\t...this.state.models[ modelID ].jsonData[ id ]\r\n\t\t\t} :\r\n\t\t\tthis.state.api.GetLine( modelID, id, recursive );\r\n\r\n\t}\r\n\r\n\tgetAllItemsOfType( modelID, type, verbose ) {\r\n\r\n\t\treturn this.state.useJSON ?\r\n\t\t\tthis.getAllItemsOfTypeJSON( modelID, type, verbose ) :\r\n\t\t\tthis.getAllItemsOfTypeWebIfcAPI( modelID, type, verbose );\r\n\r\n\t}\r\n\r\n\tgetPropertySets( modelID, elementID, recursive = false ) {\r\n\r\n\t\treturn this.state.useJSON ?\r\n\t\t\tthis.getPropertyJSON( modelID, elementID, recursive, PropsNames.psets ) :\r\n\t\t\tthis.getPropertyWebIfcAPI( modelID, elementID, recursive, PropsNames.psets );\r\n\r\n\t}\r\n\r\n\tgetTypeProperties( modelID, elementID, recursive = false ) {\r\n\r\n\t\treturn this.state.useJSON ?\r\n\t\t\tthis.getPropertyJSON( modelID, elementID, recursive, PropsNames.type ) :\r\n\t\t\tthis.getPropertyWebIfcAPI( modelID, elementID, recursive, PropsNames.type );\r\n\r\n\t}\r\n\r\n\tgetMaterialsProperties( modelID, elementID, recursive = false ) {\r\n\r\n\t\treturn this.state.useJSON ?\r\n\t\t\tthis.getPropertyJSON( modelID, elementID, recursive, PropsNames.materials ) :\r\n\t\t\tthis.getPropertyWebIfcAPI( modelID, elementID, recursive, PropsNames.materials );\r\n\r\n\t}\r\n\r\n\tgetSpatialStructure( modelID ) {\r\n\r\n\t\treturn this.state.useJSON ?\r\n\t\t\tthis.getSpatialStructureJSON( modelID ) :\r\n\t\t\tthis.getSpatialStructureWebIfcAPI( modelID );\r\n\r\n\t}\r\n\r\n\tgetSpatialStructureJSON( modelID ) {\r\n\r\n\t\tconst chunks = this.getSpatialTreeChunks( modelID );\r\n\t\tconst projectID = this.getAllItemsOfTypeJSON( modelID, IFCPROJECT, false )[ 0 ];\r\n\t\tconst project = this.newIfcProject( projectID );\r\n\t\tthis.getSpatialNode( modelID, project, chunks );\r\n\t\treturn {\r\n\t\t\t...project\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tgetSpatialStructureWebIfcAPI( modelID ) {\r\n\r\n\t\tconst chunks = this.getSpatialTreeChunks( modelID );\r\n\t\tconst projectID = this.state.api.GetLineIDsWithType( modelID, IFCPROJECT ).get( 0 );\r\n\t\tconst project = this.newIfcProject( projectID );\r\n\t\tthis.getSpatialNode( modelID, project, chunks );\r\n\t\treturn project;\r\n\r\n\t}\r\n\r\n\tgetAllItemsOfTypeJSON( modelID, type, verbose ) {\r\n\r\n\t\tconst data = this.state.models[ modelID ].jsonData;\r\n\t\tconst typeName = IfcTypesMap[ type ];\r\n\t\tif ( ! typeName ) {\r\n\r\n\t\t\tthrow new Error( `Type not found: ${type}` );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.filterJSONItemsByType( data, typeName, verbose );\r\n\r\n\t}\r\n\r\n\tfilterJSONItemsByType( data, typeName, verbose ) {\r\n\r\n\t\tconst result = [];\r\n\t\tObject.keys( data ).forEach( key => {\r\n\r\n\t\t\tconst numKey = parseInt( key );\r\n\t\t\tif ( data[ numKey ].type.toUpperCase() === typeName ) {\r\n\r\n\t\t\t\tresult.push( verbose ? {\r\n\t\t\t\t\t...data[ numKey ]\r\n\t\t\t\t} : numKey );\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tgetItemsByIDJSON( modelID, ids ) {\r\n\r\n\t\tconst data = this.state.models[ modelID ].jsonData;\r\n\t\tconst result = [];\r\n\t\tids.forEach( id => result.push( {\r\n\t\t\t...data[ id ]\r\n\t\t} ) );\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tgetPropertyJSON( modelID, elementID, recursive = false, propName ) {\r\n\r\n\t\tconst resultIDs = this.getAllRelatedItemsOfTypeJSON( modelID, elementID, propName );\r\n\t\tconst result = this.getItemsByIDJSON( modelID, resultIDs );\r\n\t\tif ( recursive ) {\r\n\r\n\t\t\tresult.forEach( result => this.getJSONReferencesRecursively( modelID, result ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tgetJSONReferencesRecursively( modelID, jsonObject ) {\r\n\r\n\t\tif ( jsonObject == undefined )\r\n\t\t\treturn;\r\n\t\tconst keys = Object.keys( jsonObject );\r\n\t\tfor ( let i = 0; i < keys.length; i ++ ) {\r\n\r\n\t\t\tconst key = keys[ i ];\r\n\t\t\tthis.getJSONItem( modelID, jsonObject, key );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetJSONItem( modelID, jsonObject, key ) {\r\n\r\n\t\tif ( Array.isArray( jsonObject[ key ] ) ) {\r\n\r\n\t\t\treturn this.getMultipleJSONItems( modelID, jsonObject, key );\r\n\r\n\t\t}\r\n\r\n\t\tif ( jsonObject[ key ] && jsonObject[ key ].type === 5 ) {\r\n\r\n\t\t\tjsonObject[ key ] = this.getItemsByIDJSON( modelID, [ jsonObject[ key ].value ] )[ 0 ];\r\n\t\t\tthis.getJSONReferencesRecursively( modelID, jsonObject[ key ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetMultipleJSONItems( modelID, jsonObject, key ) {\r\n\r\n\t\tjsonObject[ key ] = jsonObject[ key ].map( ( item ) => {\r\n\r\n\t\t\tif ( item.type === 5 ) {\r\n\r\n\t\t\t\titem = this.getItemsByIDJSON( modelID, [ item.value ] )[ 0 ];\r\n\t\t\t\tthis.getJSONReferencesRecursively( modelID, item );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn item;\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tgetPropertyWebIfcAPI( modelID, elementID, recursive = false, propName ) {\r\n\r\n\t\tconst propSetIds = this.getAllRelatedItemsOfTypeWebIfcAPI( modelID, elementID, propName );\r\n\t\treturn propSetIds.map( ( id ) => this.state.api.GetLine( modelID, id, recursive ) );\r\n\r\n\t}\r\n\r\n\tgetAllItemsOfTypeWebIfcAPI( modelID, type, verbose ) {\r\n\r\n\t\tconst items = [];\r\n\t\tconst lines = this.state.api.GetLineIDsWithType( modelID, type );\r\n\t\tfor ( let i = 0; i < lines.size(); i ++ )\r\n\t\t\titems.push( lines.get( i ) );\r\n\t\tif ( verbose )\r\n\t\t\treturn items.map( ( id ) => this.state.api.GetLine( modelID, id ) );\r\n\t\treturn items;\r\n\r\n\t}\r\n\r\n\tnewIfcProject( id ) {\r\n\r\n\t\treturn {\r\n\t\t\texpressID: id,\r\n\t\t\ttype: 'IFCPROJECT',\r\n\t\t\tchildren: []\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tgetSpatialTreeChunks( modelID ) {\r\n\r\n\t\tconst treeChunks = {};\r\n\t\tconst json = this.state.useJSON;\r\n\t\tif ( json ) {\r\n\r\n\t\t\tthis.getChunksJSON( modelID, treeChunks, PropsNames.aggregates );\r\n\t\t\tthis.getChunksJSON( modelID, treeChunks, PropsNames.spatial );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.getChunksWebIfcAPI( modelID, treeChunks, PropsNames.aggregates );\r\n\t\t\tthis.getChunksWebIfcAPI( modelID, treeChunks, PropsNames.spatial );\r\n\r\n\t\t}\r\n\r\n\t\treturn treeChunks;\r\n\r\n\t}\r\n\r\n\tgetChunksJSON( modelID, chunks, propNames ) {\r\n\r\n\t\tconst relation = this.getAllItemsOfTypeJSON( modelID, propNames.name, true );\r\n\t\trelation.forEach( rel => {\r\n\r\n\t\t\tthis.saveChunk( chunks, propNames, rel );\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tgetChunksWebIfcAPI( modelID, chunks, propNames ) {\r\n\r\n\t\tconst relation = this.state.api.GetLineIDsWithType( modelID, propNames.name );\r\n\t\tfor ( let i = 0; i < relation.size(); i ++ ) {\r\n\r\n\t\t\tconst rel = this.state.api.GetLine( modelID, relation.get( i ), false );\r\n\t\t\tthis.saveChunk( chunks, propNames, rel );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tsaveChunk( chunks, propNames, rel ) {\r\n\r\n\t\tconst relating = rel[ propNames.relating ].value;\r\n\t\tconst related = rel[ propNames.related ].map( ( r ) => r.value );\r\n\t\tif ( chunks[ relating ] == undefined ) {\r\n\r\n\t\t\tchunks[ relating ] = related;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tchunks[ relating ] = chunks[ relating ].concat( related );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetSpatialNode( modelID, node, treeChunks ) {\r\n\r\n\t\tthis.getChildren( modelID, node, treeChunks, PropsNames.aggregates );\r\n\t\tthis.getChildren( modelID, node, treeChunks, PropsNames.spatial );\r\n\r\n\t}\r\n\r\n\tgetChildren( modelID, node, treeChunks, propNames ) {\r\n\r\n\t\tconst children = treeChunks[ node.expressID ];\r\n\t\tif ( children == undefined )\r\n\t\t\treturn;\r\n\t\tconst prop = propNames.key;\r\n\t\tnode[ prop ] = children.map( ( child ) => {\r\n\r\n\t\t\tconst node = this.newNode( modelID, child );\r\n\t\t\tthis.getSpatialNode( modelID, node, treeChunks );\r\n\t\t\treturn node;\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n\tnewNode( modelID, id ) {\r\n\r\n\t\tconst typeName = this.getNodeType( modelID, id );\r\n\t\treturn {\r\n\t\t\texpressID: id,\r\n\t\t\ttype: typeName,\r\n\t\t\tchildren: []\r\n\t\t};\r\n\r\n\t}\r\n\r\n\tgetNodeType( modelID, id ) {\r\n\r\n\t\tif ( this.state.useJSON )\r\n\t\t\treturn this.state.models[ modelID ].jsonData[ id ].type;\r\n\t\tconst typeID = this.state.models[ modelID ].types[ id ];\r\n\t\treturn IfcElements[ typeID ];\r\n\r\n\t}\r\n\r\n\tgetAllRelatedItemsOfTypeJSON( modelID, id, propNames ) {\r\n\r\n\t\tconst lines = this.getAllItemsOfTypeJSON( modelID, propNames.name, true );\r\n\t\tconst IDs = [];\r\n\t\tlines.forEach( line => {\r\n\r\n\t\t\tconst isRelated = this.isRelated( id, line, propNames );\r\n\t\t\tif ( isRelated )\r\n\t\t\t\tthis.getRelated( line, propNames, IDs );\r\n\r\n\t\t} );\r\n\t\treturn IDs;\r\n\r\n\t}\r\n\r\n\tgetAllRelatedItemsOfTypeWebIfcAPI( modelID, id, propNames ) {\r\n\r\n\t\tconst lines = this.state.api.GetLineIDsWithType( modelID, propNames.name );\r\n\t\tconst IDs = [];\r\n\t\tfor ( let i = 0; i < lines.size(); i ++ ) {\r\n\r\n\t\t\tconst rel = this.state.api.GetLine( modelID, lines.get( i ) );\r\n\t\t\tconst isRelated = this.isRelated( id, rel, propNames );\r\n\t\t\tif ( isRelated )\r\n\t\t\t\tthis.getRelated( rel, propNames, IDs );\r\n\r\n\t\t}\r\n\r\n\t\treturn IDs;\r\n\r\n\t}\r\n\r\n\tgetRelated( rel, propNames, IDs ) {\r\n\r\n\t\tconst element = rel[ propNames.relating ];\r\n\t\tif ( ! Array.isArray( element ) )\r\n\t\t\tIDs.push( element.value );\r\n\t\telse\r\n\t\t\telement.forEach( ( ele ) => IDs.push( ele.value ) );\r\n\r\n\t}\r\n\r\n\tisRelated( id, rel, propNames ) {\r\n\r\n\t\tconst relatedItems = rel[ propNames.related ];\r\n\t\tif ( Array.isArray( relatedItems ) ) {\r\n\r\n\t\t\tconst values = relatedItems.map( ( item ) => item.value );\r\n\t\t\treturn values.includes( id );\r\n\r\n\t\t}\r\n\r\n\t\treturn relatedItems.value === id;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass TypeManager {\r\n\r\n\tconstructor( state ) {\r\n\r\n\t\tthis.state = state;\r\n\r\n\t}\r\n\r\n\tgetAllTypes() {\r\n\r\n\t\tfor ( const modelID in this.state.models ) {\r\n\r\n\t\t\tconst types = this.state.models[ modelID ].types;\r\n\t\t\tif ( Object.keys( types ).length == 0 )\r\n\t\t\t\tthis.getAllTypesOfModel( parseInt( modelID ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgetAllTypesOfModel( modelID ) {\r\n\r\n\t\tconst elements = Object.keys( IfcElements ).map( ( e ) => parseInt( e ) );\r\n\t\tconst types = this.state.models[ modelID ].types;\r\n\t\telements.forEach( ( type ) => {\r\n\r\n\t\t\tconst lines = this.state.api.GetLineIDsWithType( modelID, type );\r\n\t\t\tfor ( let i = 0; i < lines.size(); i ++ )\r\n\t\t\t\ttypes[ lines.get( i ) ] = type;\r\n\r\n\t\t} );\r\n\r\n\t}\r\n\r\n}\r\n\r\nlet modelIdCounter = 0;\r\nconst nullIfcManagerErrorMessage = 'IfcManager is null!';\r\n\r\nclass IFCModel extends Mesh {\r\n\r\n\tconstructor() {\r\n\r\n\t\tsuper( ...arguments );\r\n\t\tthis.modelID = modelIdCounter ++;\r\n\t\tthis.ifcManager = null;\r\n\t\tthis.mesh = this;\r\n\r\n\t}\r\n\r\n\tsetIFCManager( manager ) {\r\n\r\n\t\tthis.ifcManager = manager;\r\n\r\n\t}\r\n\r\n\tsetWasmPath( path ) {\r\n\r\n\t\tif ( this.ifcManager === null )\r\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\r\n\t\tthis.ifcManager.setWasmPath( path );\r\n\r\n\t}\r\n\r\n\tclose( scene ) {\r\n\r\n\t\tif ( this.ifcManager === null )\r\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\r\n\t\tthis.ifcManager.close( this.modelID, scene );\r\n\r\n\t}\r\n\r\n\tgetExpressId( geometry, faceIndex ) {\r\n\r\n\t\tif ( this.ifcManager === null )\r\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\r\n\t\treturn this.ifcManager.getExpressId( geometry, faceIndex );\r\n\r\n\t}\r\n\r\n\tgetAllItemsOfType( type, verbose ) {\r\n\r\n\t\tif ( this.ifcManager === null )\r\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\r\n\t\treturn this.ifcManager.getAllItemsOfType( this.modelID, type, verbose );\r\n\r\n\t}\r\n\r\n\tgetItemProperties( id, recursive = false ) {\r\n\r\n\t\tif ( this.ifcManager === null )\r\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\r\n\t\treturn this.ifcManager.getItemProperties( this.modelID, id, recursive );\r\n\r\n\t}\r\n\r\n\tgetPropertySets( id, recursive = false ) {\r\n\r\n\t\tif ( this.ifcManager === null )\r\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\r\n\t\treturn this.ifcManager.getPropertySets( this.modelID, id, recursive );\r\n\r\n\t}\r\n\r\n\tgetTypeProperties( id, recursive = false ) {\r\n\r\n\t\tif ( this.ifcManager === null )\r\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\r\n\t\treturn this.ifcManager.getTypeProperties( this.modelID, id, recursive );\r\n\r\n\t}\r\n\r\n\tgetIfcType( id ) {\r\n\r\n\t\tif ( this.ifcManager === null )\r\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\r\n\t\treturn this.ifcManager.getIfcType( this.modelID, id );\r\n\r\n\t}\r\n\r\n\tgetSpatialStructure() {\r\n\r\n\t\tif ( this.ifcManager === null )\r\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\r\n\t\treturn this.ifcManager.getSpatialStructure( this.modelID );\r\n\r\n\t}\r\n\r\n\tgetSubset( material ) {\r\n\r\n\t\tif ( this.ifcManager === null )\r\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\r\n\t\treturn this.ifcManager.getSubset( this.modelID, material );\r\n\r\n\t}\r\n\r\n\tremoveSubset( parent, material ) {\r\n\r\n\t\tif ( this.ifcManager === null )\r\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\r\n\t\tthis.ifcManager.removeSubset( this.modelID, parent, material );\r\n\r\n\t}\r\n\r\n\tcreateSubset( config ) {\r\n\r\n\t\tif ( this.ifcManager === null )\r\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\r\n\t\tconst modelConfig = {\r\n\t\t\t...config,\r\n\t\t\tmodelID: this.modelID\r\n\t\t};\r\n\t\treturn this.ifcManager.createSubset( modelConfig );\r\n\r\n\t}\r\n\r\n\thideItems( ids ) {\r\n\r\n\t\tif ( this.ifcManager === null )\r\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\r\n\t\tthis.ifcManager.hideItems( this.modelID, ids );\r\n\r\n\t}\r\n\r\n\thideAllItems() {\r\n\r\n\t\tif ( this.ifcManager === null )\r\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\r\n\t\tthis.ifcManager.hideAllItems( this.modelID );\r\n\r\n\t}\r\n\r\n\tshowItems( ids ) {\r\n\r\n\t\tif ( this.ifcManager === null )\r\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\r\n\t\tthis.ifcManager.showItems( this.modelID, ids );\r\n\r\n\t}\r\n\r\n\tshowAllItems() {\r\n\r\n\t\tif ( this.ifcManager === null )\r\n\t\t\tthrow new Error( nullIfcManagerErrorMessage );\r\n\t\tthis.ifcManager.showAllItems( this.modelID );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass BvhManager {\r\n\r\n\tinitializeMeshBVH( computeBoundsTree, disposeBoundsTree, acceleratedRaycast ) {\r\n\r\n\t\tthis.computeBoundsTree = computeBoundsTree;\r\n\t\tthis.disposeBoundsTree = disposeBoundsTree;\r\n\t\tthis.acceleratedRaycast = acceleratedRaycast;\r\n\t\tthis.setupThreeMeshBVH();\r\n\r\n\t}\r\n\r\n\tapplyThreeMeshBVH( geometry ) {\r\n\r\n\t\tif ( this.computeBoundsTree )\r\n\t\t\tgeometry.computeBoundsTree();\r\n\r\n\t}\r\n\r\n\tsetupThreeMeshBVH() {\r\n\r\n\t\tif ( ! this.computeBoundsTree || ! this.disposeBoundsTree || ! this.acceleratedRaycast )\r\n\t\t\treturn;\r\n\t\tBufferGeometry.prototype.computeBoundsTree = this.computeBoundsTree;\r\n\t\tBufferGeometry.prototype.disposeBoundsTree = this.disposeBoundsTree;\r\n\t\tMesh.prototype.raycast = this.acceleratedRaycast;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass ItemsHider {\r\n\r\n\tconstructor( state ) {\r\n\r\n\t\tthis.modelCoordinates = {};\r\n\t\tthis.expressIDCoordinatesMap = {};\r\n\t\tthis.state = state;\r\n\r\n\t}\r\n\r\n\r\n\r\n\tprocessCoordinates( modelID ) {\r\n\r\n\t\tconst attributes = this.getAttributes( modelID );\r\n\t\tconst ids = Array.from( attributes.expressID.array );\r\n\t\tthis.expressIDCoordinatesMap[ modelID ] = {};\r\n\t\tfor ( let i = 0; i < ids.length; i ++ ) {\r\n\r\n\t\t\tif ( ! this.expressIDCoordinatesMap[ modelID ][ ids[ i ] ] ) {\r\n\r\n\t\t\t\tthis.expressIDCoordinatesMap[ modelID ][ ids[ i ] ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst current = this.expressIDCoordinatesMap[ modelID ];\r\n\t\t\tcurrent[ ids[ i ] ].push( 3 * i );\r\n\r\n\t\t}\r\n\r\n\t\tthis.initializeCoordinates( modelID );\r\n\r\n\t}\r\n\r\n\thideItems( modelID, ids ) {\r\n\r\n\t\tthis.editCoordinates( modelID, ids, true );\r\n\r\n\t}\r\n\r\n\tshowItems( modelID, ids ) {\r\n\r\n\t\tthis.editCoordinates( modelID, ids, false );\r\n\r\n\t}\r\n\r\n\teditCoordinates( modelID, ids, hide ) {\r\n\r\n\t\tconst current = this.expressIDCoordinatesMap[ modelID ];\r\n\t\tconst indices = [];\r\n\t\tids.forEach( ( id ) => {\r\n\r\n\t\t\tif ( current[ id ] )\r\n\t\t\t\tindices.push( ...current[ id ] );\r\n\r\n\t\t} );\r\n\t\tconst coords = this.getCoordinates( modelID );\r\n\t\tconst initial = this.modelCoordinates[ modelID ];\r\n\t\tif ( hide )\r\n\t\t\tindices.forEach( i => coords.set( [ 0, 0, 0 ], i ) );\r\n\t\telse\r\n\t\t\tindices.forEach( i => coords.set( [ initial[ i ], initial[ i + 1 ], initial[ i + 2 ] ], i ) );\r\n\t\tthis.getAttributes( modelID ).position.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tshowAllItems( modelID ) {\r\n\r\n\t\tif ( this.modelCoordinates[ modelID ] ) {\r\n\r\n\t\t\tthis.resetCoordinates( modelID );\r\n\t\t\tthis.getAttributes( modelID ).position.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\thideAllItems( modelID ) {\r\n\r\n\t\tthis.getCoordinates( modelID ).fill( 0 );\r\n\t\tthis.getAttributes( modelID ).position.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tinitializeCoordinates( modelID ) {\r\n\r\n\t\tconst coordinates = this.getCoordinates( modelID );\r\n\t\tif ( ! this.modelCoordinates[ modelID ] ) {\r\n\r\n\t\t\tthis.modelCoordinates[ modelID ] = new Float32Array( coordinates );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tresetCoordinates( modelID ) {\r\n\r\n\t\tconst initial = this.modelCoordinates[ modelID ];\r\n\t\tthis.getCoordinates( modelID ).set( initial );\r\n\r\n\t}\r\n\r\n\tgetCoordinates( modelID ) {\r\n\r\n\t\treturn this.getAttributes( modelID ).position.array;\r\n\r\n\t}\r\n\r\n\tgetAttributes( modelID ) {\r\n\r\n\t\treturn this.state.models[ modelID ].mesh.geometry.attributes;\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass IFCManager {\r\n\r\n\tconstructor() {\r\n\r\n\t\tthis.state = {\r\n\t\t\tmodels: [],\r\n\t\t\tapi: new IfcAPI(),\r\n\t\t\tuseJSON: false\r\n\t\t};\r\n\t\tthis.BVH = new BvhManager();\r\n\t\tthis.parser = new IFCParser( this.state, this.BVH );\r\n\t\tthis.subsets = new SubsetManager( this.state, this.BVH );\r\n\t\tthis.properties = new PropertyManager( this.state );\r\n\t\tthis.types = new TypeManager( this.state );\r\n\t\tthis.hider = new ItemsHider( this.state );\r\n\r\n\t}\r\n\r\n\tasync parse( buffer ) {\r\n\r\n\t\tconst mesh = await this.parser.parse( buffer );\r\n\t\tthis.state.useJSON ? this.disposeMemory() : this.types.getAllTypes();\r\n\t\tthis.hider.processCoordinates( mesh.modelID );\r\n\t\tconst model = new IFCModel( mesh.geometry, mesh.material );\r\n\t\tmodel.setIFCManager( this );\r\n\t\treturn model;\r\n\r\n\t}\r\n\r\n\tsetWasmPath( path ) {\r\n\r\n\t\tthis.state.api.SetWasmPath( path );\r\n\r\n\t}\r\n\r\n\tapplyWebIfcConfig( settings ) {\r\n\r\n\t\tthis.state.webIfcSettings = settings;\r\n\r\n\t}\r\n\r\n\tuseJSONData( useJSON = true ) {\r\n\r\n\t\tthis.state.useJSON = useJSON;\r\n\t\tthis.disposeMemory();\r\n\r\n\t}\r\n\r\n\taddModelJSONData( modelID, data ) {\r\n\r\n\t\tconst model = this.state.models[ modelID ];\r\n\t\tif ( model ) {\r\n\r\n\t\t\tmodel.jsonData = data;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tdisposeMemory() {\r\n\r\n\t\tthis.state.api = null;\r\n\t\tthis.state.api = new IfcAPI();\r\n\r\n\t}\r\n\r\n\tsetupThreeMeshBVH( computeBoundsTree, disposeBoundsTree, acceleratedRaycast ) {\r\n\r\n\t\tthis.BVH.initializeMeshBVH( computeBoundsTree, disposeBoundsTree, acceleratedRaycast );\r\n\r\n\t}\r\n\r\n\tclose( modelID, scene ) {\r\n\r\n\t\tthis.state.api.CloseModel( modelID );\r\n\t\tif ( scene ) {\r\n\r\n\t\t\tscene.remove( this.state.models[ modelID ].mesh );\r\n\r\n\t\t}\r\n\r\n\t\tdelete this.state.models[ modelID ];\r\n\r\n\t}\r\n\r\n\tgetExpressId( geometry, faceIndex ) {\r\n\r\n\t\treturn this.properties.getExpressId( geometry, faceIndex );\r\n\r\n\t}\r\n\r\n\tgetAllItemsOfType( modelID, type, verbose ) {\r\n\r\n\t\treturn this.properties.getAllItemsOfType( modelID, type, verbose );\r\n\r\n\t}\r\n\r\n\tgetItemProperties( modelID, id, recursive = false ) {\r\n\r\n\t\treturn this.properties.getItemProperties( modelID, id, recursive );\r\n\r\n\t}\r\n\r\n\tgetPropertySets( modelID, id, recursive = false ) {\r\n\r\n\t\treturn this.properties.getPropertySets( modelID, id, recursive );\r\n\r\n\t}\r\n\r\n\tgetTypeProperties( modelID, id, recursive = false ) {\r\n\r\n\t\treturn this.properties.getTypeProperties( modelID, id, recursive );\r\n\r\n\t}\r\n\r\n\tgetMaterialsProperties( modelID, id, recursive = false ) {\r\n\r\n\t\treturn this.properties.getMaterialsProperties( modelID, id, recursive );\r\n\r\n\t}\r\n\r\n\tgetIfcType( modelID, id ) {\r\n\r\n\t\tconst typeID = this.state.models[ modelID ].types[ id ];\r\n\t\treturn IfcElements[ typeID ];\r\n\r\n\t}\r\n\r\n\tgetSpatialStructure( modelID ) {\r\n\r\n\t\treturn this.properties.getSpatialStructure( modelID );\r\n\r\n\t}\r\n\r\n\tgetSubset( modelID, material ) {\r\n\r\n\t\treturn this.subsets.getSubset( modelID, material );\r\n\r\n\t}\r\n\r\n\tremoveSubset( modelID, parent, material ) {\r\n\r\n\t\tthis.subsets.removeSubset( modelID, parent, material );\r\n\r\n\t}\r\n\r\n\tcreateSubset( config ) {\r\n\r\n\t\treturn this.subsets.createSubset( config );\r\n\r\n\t}\r\n\r\n\thideItems( modelID, ids ) {\r\n\r\n\t\tthis.hider.hideItems( modelID, ids );\r\n\r\n\t}\r\n\r\n\thideAllItems( modelID ) {\r\n\r\n\t\tthis.hider.hideAllItems( modelID );\r\n\r\n\t}\r\n\r\n\tshowItems( modelID, ids ) {\r\n\r\n\t\tthis.hider.showItems( modelID, ids );\r\n\r\n\t}\r\n\r\n\tshowAllItems( modelID ) {\r\n\r\n\t\tthis.hider.showAllItems( modelID );\r\n\r\n\t}\r\n\r\n}\r\n\r\nclass IFCLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\t\tthis.ifcManager = new IFCManager();\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\t\tconst loader = new FileLoader( scope.manager );\r\n\t\tloader.setPath( scope.path );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\tloader.setRequestHeader( scope.requestHeader );\r\n\t\tloader.setWithCredentials( scope.withCredentials );\r\n\t\tloader.load( url, async function ( buffer ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tif ( typeof buffer == 'string' ) {\r\n\r\n\t\t\t\t\tthrow new Error( 'IFC files must be given as a buffer!' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tonLoad( await scope.parse( buffer ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tparse( buffer ) {\r\n\r\n\t\treturn this.ifcManager.parse( buffer );\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { IFCLoader };\r\n//# sourceMappingURL=IFCLoader.js.map\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 8707;\nmodule.exports = webpackEmptyContext;"],"names":["__defProp","Object","defineProperty","__getOwnPropSymbols","getOwnPropertySymbols","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","_step","_iterator","_createForOfIteratorHelper","s","n","done","err","e","f","__require","x","require","__commonJS","cb","mod","keys","exports","require_crypto","require_web_ifc","module","WebIFCWasm2","_scriptDir","document","currentScript","src","WebIFCWasm3","readyPromiseResolve","readyPromiseReject","Module","Promise","resolve","reject","moduleOverrides","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","arguments_","thisProgram","quit_","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","window","importScripts","process","versions","node","read_","readBinary","nodeFS","nodePath","scriptDirectory","dirname","__dirname","filename","binary","ret","buffer","Uint8Array","assert","length","replace","slice","ex","ExitStatus","abort","read","data","readbuffer","scriptArgs","arguments","quit","print","console","log","warn","error","printErr","self","location","href","indexOf","lastIndexOf","url","xhr","XMLHttpRequest","open","send","responseText","responseType","response","onload","onerror","out","bind","STACK_ALIGN","wasmBinary","noExitRuntime","wasmMemory","WebAssembly","ABORT","condition","text","UTF8Decoder","TextDecoder","UTF8ArrayToString","heap","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","str","u0","u1","u2","String","fromCharCode","ch","UTF8ToString","ptr","HEAPU8","stringToUTF8Array","outIdx","maxBytesToWrite","startIdx","i","u","charCodeAt","stringToUTF8","outPtr","lengthBytesUTF8","len","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","UTF16Decoder","UTF16ToString","maxIdx","codeUnit","stringToUTF16","startPtr","numCharsToWrite","lengthBytesUTF16","UTF32ToString","utf32","stringToUTF32","lengthBytesUTF32","updateGlobalBufferAndViews","buf","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","wasmTable","INITIAL_MEMORY","Memory","byteLength","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","clearInterval","callback","what","RuntimeError","hasPrefix","prefix","startsWith","dataURIPrefix","isDataURI","fileURIPrefix","isFileURI","path","tempDouble","tempI64","wasmBinaryFile","WasmPath","getBinary","err2","callRuntimeCallbacks","callbacks","shift","func","arg","get","dynCall","sig","args","apply","concat","dynCallLegacy","setErrNo","___errno_location","PATH","splitPath","exec","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","normalize","isAbsolute","charAt","trailingSlash","split","filter","p","join","result","root","dir","basename","lastSlash","extname","paths","Array","join2","l","r","PATH_FS","resolvedPath","resolvedAbsolute","FS","cwd","TypeError","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","push","TTY","ttys","init","shutdown","register","dev","ops","input","output","registerDevice","stream_ops","stream","tty","rdev","ErrnoError","seekable","close","flush","buffer2","offset","pos","get_char","bytesRead","timestamp","Date","now","write","put_char","default_tty_ops","Buffer","alloc","readSync","stdin","fd","toString","prompt","readline","intArrayFromString","val","default_tty1_ops","mmapAlloc","size","alignedSize","factor","ceil","alignMemory","_malloc","MEMFS","ops_table","mount","createNode","parent","name2","mode","isBlkdev","isFIFO","getattr","node_ops","setattr","lookup","mknod","rename","unlink","rmdir","readdir","symlink","llseek","file","allocate","mmap","msync","link","readlink","chrdev","chrdev_stream_ops","isDir","contents","isFile","usedBytes","isLink","isChrdev","getFileDataAsRegularArray","getFileDataAsTypedArray","expandFileStorage","newCapacity","prevCapacity","max","oldContents","set","resizeFileStorage","newSize","attr","ino","nlink","uid","gid","atime","mtime","ctime","blksize","blocks","genericErrors","old_node","new_dir","new_name","new_node","lookupNode","name","entries","key2","newname","oldpath","position","canOwn","whence","address","prot","flags","allocated","byteOffset","mmapFlags","mounts","devices","streams","nextInode","nameTable","currentPath","initialized","ignorePermissions","trackingDelegate","tracking","openFlags","READ","WRITE","filesystems","syncFSRequests","lookupPath","opts","defaults","follow_mount","recurse_count","current","current_path","islast","isMountpoint","mounted","follow","count","getPath","isRoot","mountpoint","hashName","parentid","hash","hashAddNode","name_next","hashRemoveNode","errCode","mayLookup","nodeName","FSNode","destroyNode","isSocket","flagModes","modeStringToFlags","Error","flagsToPermissionString","flag","perms","nodePermissions","mayCreate","mayDelete","isdir","errno","mayOpen","MAX_OPEN_FDS","nextfd","fd_start","fd_end","getStream","createStream","FSStream","object","this","isRead","isWrite","isAppend","newStream","closeStream","device","getDevice","major","minor","makedev","ma","mi","getMounts","check","m","pop","syncfs","populate","completed","doCallback","errored","forEach","type","pseudo","mountRoot","unmount","next","create","mkdir","mkdirTree","dirs","d","mkdev","newpath","old_path","new_path","old_dir","old_dirname","new_dirname","old_name","message","stat","dontFollow","lstat","chmod","lchmod","fchmod","chown","lchown","fchown","truncate","ftruncate","utime","created","ungotten","readFiles","trackingFlags","isClosed","getdents","seeking","bytesWritten","munmap","ioctl","cmd","readFile","encoding","writeFile","actualNumBytes","ArrayBuffer","isView","chdir","createDefaultDirectories","createDefaultDevices","random_device","crypto","randomBuffer","getRandomValues","crypto_module","getRandomDevice","createDevice","createSpecialDirectories","createStandardStreams","ensureErrnoError","setErrno","errno2","constructor","code","stack","staticInit","fflush","getMode","canRead","canWrite","findObject","dontResolveLastLink","analyzePath","exists","parentExists","parentPath","parentObject","createPath","reverse","part","createFile","properties","createDataFile","forceLoadFile","isDevice","isFolder","createLazyFile","LazyUint8Array","lengthKnown","chunks","chunkOffset","chunkSize","chunkNum","getter","setDataGetter","cacheLength","header","datalength","Number","getResponseHeader","hasByteServing","usesGzip","lazyArray2","xhr2","setRequestHeader","overrideMimeType","doXHR","_length","_chunkSize","lazyArray","defineProperties","fn","createPreloadedFile","dontCreateFile","preFinish","Browser","fullname","processData","byteArray","finish","byteArray2","handled","plugin","asyncLoad","indexedDB","mozIndexedDB","webkitIndexedDB","msIndexedDB","DB_NAME","pathname","DB_VERSION","DB_STORE_NAME","saveFilesToDB","openRequest","onupgradeneeded","createObjectStore","onsuccess","transaction","files","objectStore","ok","fail","total","putRequest","put","loadFilesFromDB","db","getRequest","SYSCALLS","mappings","DEFAULT_POLLMASK","umask","calculateAt","dirfd","dirstream","doStat","abs","floor","getTime","doMsync","addr","doMkdir","doMknod","doReadlink","bufsize","endChar","doAccess","amode","doDup","suggestFD","suggest","doReadv","iov","iovcnt","curr","doWritev","varargs","getStr","getStreamFromFD","get64","low","high","tupleRegistrations","runDestructors","destructors","del","simpleReadValueFromPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","createNamedFunction","body","Function","extendError","baseErrorType","errorName","errorClass","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters2","myTypeConverters","registerType","typeConverters","unregisteredTypes","registered","dt","structRegistrations","getShiftFromSize","embind_charCodes","readLatin1String","c","BindingError","throwBindingError","rawType","registeredInstance","options","ignoreDuplicateRegistrations","ClassHandle_isAliasOf","other","ClassHandle","leftClass","$$","ptrType","registeredClass","left","rightClass","right","baseClass","upcast","throwInstanceAlreadyDeleted","finalizationGroup","detachFinalizer","handle","releaseClassHandle","smartPtr","smartPtrType","rawDestructor","runDestructor","attachFinalizer","FinalizationGroup","handle2","iter","unregister","ClassHandle_clone","preservePointerOnDelete","o","clone","getPrototypeOf","deleteScheduled","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","argCount","exposePublicSymbol","numArguments","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","rawConstructor","isConst","sharingPolicy","clonedHandle","rawShare","__emval_register","nonConstNoSmartPtrRawPointerToWireType","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","rv","getInheritedInstanceCount","registeredInstances","getLiveInheritedInstances","k","setDelayFunction","getInheritedInstance","class_","getBasestPointer","makeClassHandle","record","RegisteredPointer_fromWireType","rawPointer","getPointee","destructor","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","constPointerType","pointerType","dp","RegisteredPointer","destructorFunction","replacePublicSymbol","embind__requireFunction","signature","rawFunction","fp","argCache","getDynCaller","UnboundTypeError","getTypeName","___getTypeName","_free","throwUnboundTypeError","types","unboundTypes","seen","visit","map","heap32VectorToArray","firstElement","array","craftInvokerFunction","argTypes","classType","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","argumentList","dummy","new_","emval_free_list","emval_handle_array","__emval_decref","refcount","count_emval_handles","get_first_emval","v","t","floatReadValueFromPointer","integerReadValueFromPointer","signed","requireHandle","requireRegisteredType","impl","_emscripten_get_now","emval_symbols","getStringOrSymbol","symbol","emval_get_global","globalThis","dateNow","performance","emscripten_realloc_buffer","grow","ENV","getEnvStrings","strings","env","navigator","languages","__isLeapYear","year","__arraySum","index","sum","__MONTH_DAYS_LEAP","__MONTH_DAYS_REGULAR","__addDays","date","days","newDate","leap","getFullYear","currentMonth","getMonth","daysInCurrentMonth","getDate","setDate","setMonth","setFullYear","_strftime","maxsize","format","tm","tm_zone","tm_sec","tm_min","tm_hour","tm_mday","tm_mon","tm_year","tm_wday","tm_yday","tm_isdst","tm_gmtoff","pattern","EXPANSION_RULES_1","rule","RegExp","WEEKDAYS","MONTHS","leadingSomething","digits","character","leadingNulls","compareByDay","date1","date2","sgn","compare","getFirstWeekStartDate","janFourth","getDay","getWeekBasedYear","thisDate","janFourthThisYear","janFourthNextYear","firstWeekStartThisYear","firstWeekStartNextYear","EXPANSION_RULES_2","substring","twelveHour","janFirst","firstSunday","endDate","februaryFirstUntilEndMonth","daysDifference","firstMonday","off","ahead","bytes","readMode","writeMode","stringy","dontAddNull","u8array","numBytesWritten","codes","embind_init_charCodes","___wasm_call_ctors","calledRun","asmLibraryArg","line","op","argp","rawTupleType","reg","elements","elementsLength","elementTypes","elt","getterReturnType","setterArgumentType","elementTypes2","getterContext","setter","setterContext","structType","fieldRecords","fields","field","fieldTypes2","fieldName","trueValue","falseValue","wt","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","rawInvoker","context","isPureVirtual","unboundTypesHandler","method","className","memberFunction","argTypes2","invokerArgsArray","primitiveType","minRange","maxRange","fromWireType","bitshift","isUnsignedType","dataTypeIndex","TA","decodeMemoryView","stdStringIsUTF8","decodeStartPtr","currentBytePtr","stringSegment","valueIsOfTypeString","Uint8ClampedArray","charCode","charSize","decodeString","encodeString","getHeap","lengthBytesUTF","HEAP","constructorSignature","getterSignature","setterSignature","isVoid","returnType","destructorsRef","rd","argv","__emval_lookupTypes","clk_id","tp","dest","num","copyWithin","requestedSize","oldSize","maxHeapSize","multiple","cutDown","overGrownHeapSize","__environ","environ_buf","bufSize","string","writeAsciiToMemory","penviron_count","penviron_buf_size","pnum","offset_low","offset_high","newOffset","DOUBLE_LIMIT","$i","info","receiveInstance","instance","module2","exports3","receiveInstantiatedSource","instantiateArrayBuffer","receiver","fetch","then","credentials","catch","instantiate","reason","instantiateStreaming","createWasm","callMain","entryFunction","implicit","exit","toLog","run","doRun","shouldRunNow","postRun","preRun","setTimeout","runCaller","ready","define","IFCPROJECT","IFCRELAGGREGATES","IFCRELASSOCIATESMATERIAL","IFCRELCONTAINEDINSPATIALSTRUCTURE","IFCRELDEFINESBYPROPERTIES","IFCRELDEFINESBYTYPE","FromRawLineData","IfcActionRequest","FromTape","ID","IfcActor","IfcActorRole","IfcActuator","IfcActuatorType","IfcAddress","IfcAdvancedBrep","IfcAdvancedBrepWithVoids","IfcAdvancedFace","IfcAirTerminal","IfcAirTerminalBox","IfcAirTerminalBoxType","IfcAirTerminalType","IfcAirToAirHeatRecovery","IfcAirToAirHeatRecoveryType","IfcAlarm","IfcAlarmType","IfcAlignment","IfcAlignment2DHorizontal","IfcAlignment2DHorizontalSegment","IfcAlignment2DSegment","IfcAlignment2DVerSegCircularArc","IfcAlignment2DVerSegLine","IfcAlignment2DVerSegParabolicArc","IfcAlignment2DVertical","IfcAlignment2DVerticalSegment","IfcAlignmentCurve","IfcAnnotation","IfcAnnotationFillArea","IfcApplication","IfcAppliedValue","IfcApproval","IfcApprovalRelationship","IfcArbitraryClosedProfileDef","IfcArbitraryOpenProfileDef","IfcArbitraryProfileDefWithVoids","IfcAsset","IfcAsymmetricIShapeProfileDef","IfcAudioVisualAppliance","IfcAudioVisualApplianceType","IfcAxis1Placement","IfcAxis2Placement2D","IfcAxis2Placement3D","IfcBSplineCurve","IfcBSplineCurveWithKnots","IfcBSplineSurface","IfcBSplineSurfaceWithKnots","IfcBeam","IfcBeamStandardCase","IfcBeamType","IfcBearing","IfcBearingType","IfcBlobTexture","IfcBlock","IfcBoiler","IfcBoilerType","IfcBooleanClippingResult","IfcBooleanResult","IfcBoundaryCondition","IfcBoundaryCurve","IfcBoundaryEdgeCondition","IfcBoundaryFaceCondition","IfcBoundaryNodeCondition","IfcBoundaryNodeConditionWarping","IfcBoundedCurve","IfcBoundedSurface","IfcBoundingBox","IfcBoxedHalfSpace","IfcBridge","IfcBridgePart","IfcBuilding","IfcBuildingElement","IfcBuildingElementPart","IfcBuildingElementPartType","IfcBuildingElementProxy","IfcBuildingElementProxyType","IfcBuildingElementType","IfcBuildingStorey","IfcBuildingSystem","IfcBurner","IfcBurnerType","IfcCShapeProfileDef","IfcCableCarrierFitting","IfcCableCarrierFittingType","IfcCableCarrierSegment","IfcCableCarrierSegmentType","IfcCableFitting","IfcCableFittingType","IfcCableSegment","IfcCableSegmentType","IfcCaissonFoundation","IfcCaissonFoundationType","IfcCartesianPoint","IfcCartesianPointList","IfcCartesianPointList2D","IfcCartesianPointList3D","IfcCartesianTransformationOperator","IfcCartesianTransformationOperator2D","IfcCartesianTransformationOperator2DnonUniform","IfcCartesianTransformationOperator3D","IfcCartesianTransformationOperator3DnonUniform","IfcCenterLineProfileDef","IfcChiller","IfcChillerType","IfcChimney","IfcChimneyType","IfcCircle","IfcCircleHollowProfileDef","IfcCircleProfileDef","IfcCircularArcSegment2D","IfcCivilElement","IfcCivilElementType","IfcClassification","IfcClassificationReference","IfcClosedShell","IfcCoil","IfcCoilType","IfcColourRgb","IfcColourRgbList","IfcColourSpecification","IfcColumn","IfcColumnStandardCase","IfcColumnType","IfcCommunicationsAppliance","IfcCommunicationsApplianceType","IfcComplexProperty","IfcComplexPropertyTemplate","IfcCompositeCurve","IfcCompositeCurveOnSurface","IfcCompositeCurveSegment","IfcCompositeProfileDef","IfcCompressor","IfcCompressorType","IfcCondenser","IfcCondenserType","IfcConic","IfcConnectedFaceSet","IfcConnectionCurveGeometry","IfcConnectionGeometry","IfcConnectionPointEccentricity","IfcConnectionPointGeometry","IfcConnectionSurfaceGeometry","IfcConnectionVolumeGeometry","IfcConstraint","IfcConstructionEquipmentResource","IfcConstructionEquipmentResourceType","IfcConstructionMaterialResource","IfcConstructionMaterialResourceType","IfcConstructionProductResource","IfcConstructionProductResourceType","IfcConstructionResource","IfcConstructionResourceType","IfcContext","IfcContextDependentUnit","IfcControl","IfcController","IfcControllerType","IfcConversionBasedUnit","IfcConversionBasedUnitWithOffset","IfcCooledBeam","IfcCooledBeamType","IfcCoolingTower","IfcCoolingTowerType","IfcCoordinateOperation","IfcCoordinateReferenceSystem","IfcCostItem","IfcCostSchedule","IfcCostValue","IfcCovering","IfcCoveringType","IfcCrewResource","IfcCrewResourceType","IfcCsgPrimitive3D","IfcCsgSolid","IfcCurrencyRelationship","IfcCurtainWall","IfcCurtainWallType","IfcCurve","IfcCurveBoundedPlane","IfcCurveBoundedSurface","IfcCurveSegment2D","IfcCurveStyle","IfcCurveStyleFont","IfcCurveStyleFontAndScaling","IfcCurveStyleFontPattern","IfcCylindricalSurface","IfcDamper","IfcDamperType","IfcDeepFoundation","IfcDeepFoundationType","IfcDerivedProfileDef","IfcDerivedUnit","IfcDerivedUnitElement","IfcDimensionalExponents","IfcDirection","IfcDiscreteAccessory","IfcDiscreteAccessoryType","IfcDistanceExpression","IfcDistributionChamberElement","IfcDistributionChamberElementType","IfcDistributionCircuit","IfcDistributionControlElement","IfcDistributionControlElementType","IfcDistributionElement","IfcDistributionElementType","IfcDistributionFlowElement","IfcDistributionFlowElementType","IfcDistributionPort","IfcDistributionSystem","IfcDocumentInformation","IfcDocumentInformationRelationship","IfcDocumentReference","IfcDoor","IfcDoorLiningProperties","IfcDoorPanelProperties","IfcDoorStandardCase","IfcDoorStyle","IfcDoorType","IfcDraughtingPreDefinedColour","IfcDraughtingPreDefinedCurveFont","IfcDuctFitting","IfcDuctFittingType","IfcDuctSegment","IfcDuctSegmentType","IfcDuctSilencer","IfcDuctSilencerType","IfcEdge","IfcEdgeCurve","IfcEdgeLoop","IfcElectricAppliance","IfcElectricApplianceType","IfcElectricDistributionBoard","IfcElectricDistributionBoardType","IfcElectricFlowStorageDevice","IfcElectricFlowStorageDeviceType","IfcElectricGenerator","IfcElectricGeneratorType","IfcElectricMotor","IfcElectricMotorType","IfcElectricTimeControl","IfcElectricTimeControlType","IfcElement","IfcElementAssembly","IfcElementAssemblyType","IfcElementComponent","IfcElementComponentType","IfcElementQuantity","IfcElementType","IfcElementarySurface","IfcEllipse","IfcEllipseProfileDef","IfcEnergyConversionDevice","IfcEnergyConversionDeviceType","IfcEngine","IfcEngineType","IfcEvaporativeCooler","IfcEvaporativeCoolerType","IfcEvaporator","IfcEvaporatorType","IfcEvent","IfcEventTime","IfcEventType","IfcExtendedProperties","IfcExternalInformation","IfcExternalReference","IfcExternalReferenceRelationship","IfcExternalSpatialElement","IfcExternalSpatialStructureElement","IfcExternallyDefinedHatchStyle","IfcExternallyDefinedSurfaceStyle","IfcExternallyDefinedTextFont","IfcExtrudedAreaSolid","IfcExtrudedAreaSolidTapered","IfcFace","IfcFaceBasedSurfaceModel","IfcFaceBound","IfcFaceOuterBound","IfcFaceSurface","IfcFacetedBrep","IfcFacetedBrepWithVoids","IfcFacility","IfcFacilityPart","IfcFailureConnectionCondition","IfcFan","IfcFanType","IfcFastener","IfcFastenerType","IfcFeatureElement","IfcFeatureElementAddition","IfcFeatureElementSubtraction","IfcFillAreaStyle","IfcFillAreaStyleHatching","IfcFillAreaStyleTiles","IfcFilter","IfcFilterType","IfcFireSuppressionTerminal","IfcFireSuppressionTerminalType","IfcFixedReferenceSweptAreaSolid","IfcFlowController","IfcFlowControllerType","IfcFlowFitting","IfcFlowFittingType","IfcFlowInstrument","IfcFlowInstrumentType","IfcFlowMeter","IfcFlowMeterType","IfcFlowMovingDevice","IfcFlowMovingDeviceType","IfcFlowSegment","IfcFlowSegmentType","IfcFlowStorageDevice","IfcFlowStorageDeviceType","IfcFlowTerminal","IfcFlowTerminalType","IfcFlowTreatmentDevice","IfcFlowTreatmentDeviceType","IfcFooting","IfcFootingType","IfcFurnishingElement","IfcFurnishingElementType","IfcFurniture","IfcFurnitureType","IfcGeographicElement","IfcGeographicElementType","IfcGeometricCurveSet","IfcGeometricRepresentationContext","IfcGeometricRepresentationItem","IfcGeometricRepresentationSubContext","IfcGeometricSet","IfcGrid","IfcGridAxis","IfcGridPlacement","IfcGroup","IfcHalfSpaceSolid","IfcHeatExchanger","IfcHeatExchangerType","IfcHumidifier","IfcHumidifierType","IfcIShapeProfileDef","IfcImageTexture","IfcIndexedColourMap","IfcIndexedPolyCurve","IfcIndexedPolygonalFace","IfcIndexedPolygonalFaceWithVoids","IfcIndexedTextureMap","IfcIndexedTriangleTextureMap","IfcInterceptor","IfcInterceptorType","IfcIntersectionCurve","IfcInventory","IfcIrregularTimeSeries","IfcIrregularTimeSeriesValue","IfcJunctionBox","IfcJunctionBoxType","IfcLShapeProfileDef","IfcLaborResource","IfcLaborResourceType","IfcLagTime","IfcLamp","IfcLampType","IfcLibraryInformation","IfcLibraryReference","IfcLightDistributionData","IfcLightFixture","IfcLightFixtureType","IfcLightIntensityDistribution","IfcLightSource","IfcLightSourceAmbient","IfcLightSourceDirectional","IfcLightSourceGoniometric","IfcLightSourcePositional","IfcLightSourceSpot","IfcLine","IfcLineSegment2D","IfcLinearPlacement","IfcLinearPositioningElement","IfcLocalPlacement","IfcLoop","IfcManifoldSolidBrep","IfcMapConversion","IfcMappedItem","IfcMaterial","IfcMaterialClassificationRelationship","IfcMaterialConstituent","IfcMaterialConstituentSet","IfcMaterialDefinition","IfcMaterialDefinitionRepresentation","IfcMaterialLayer","IfcMaterialLayerSet","IfcMaterialLayerSetUsage","IfcMaterialLayerWithOffsets","IfcMaterialList","IfcMaterialProfile","IfcMaterialProfileSet","IfcMaterialProfileSetUsage","IfcMaterialProfileSetUsageTapering","IfcMaterialProfileWithOffsets","IfcMaterialProperties","IfcMaterialRelationship","IfcMaterialUsageDefinition","IfcMeasureWithUnit","IfcMechanicalFastener","IfcMechanicalFastenerType","IfcMedicalDevice","IfcMedicalDeviceType","IfcMember","IfcMemberStandardCase","IfcMemberType","IfcMetric","IfcMirroredProfileDef","IfcMonetaryUnit","IfcMotorConnection","IfcMotorConnectionType","IfcNamedUnit","IfcObject","IfcObjectDefinition","IfcObjectPlacement","IfcObjective","IfcOccupant","IfcOffsetCurve","IfcOffsetCurve2D","IfcOffsetCurve3D","IfcOffsetCurveByDistances","IfcOpenShell","IfcOpeningElement","IfcOpeningStandardCase","IfcOrganization","IfcOrganizationRelationship","IfcOrientationExpression","IfcOrientedEdge","IfcOuterBoundaryCurve","IfcOutlet","IfcOutletType","IfcOwnerHistory","IfcParameterizedProfileDef","IfcPath","IfcPcurve","IfcPerformanceHistory","IfcPermeableCoveringProperties","IfcPermit","IfcPerson","IfcPersonAndOrganization","IfcPhysicalComplexQuantity","IfcPhysicalQuantity","IfcPhysicalSimpleQuantity","IfcPile","IfcPileType","IfcPipeFitting","IfcPipeFittingType","IfcPipeSegment","IfcPipeSegmentType","IfcPixelTexture","IfcPlacement","IfcPlanarBox","IfcPlanarExtent","IfcPlane","IfcPlate","IfcPlateStandardCase","IfcPlateType","IfcPoint","IfcPointOnCurve","IfcPointOnSurface","IfcPolyLoop","IfcPolygonalBoundedHalfSpace","IfcPolygonalFaceSet","IfcPolyline","IfcPort","IfcPositioningElement","IfcPostalAddress","IfcPreDefinedColour","IfcPreDefinedCurveFont","IfcPreDefinedItem","IfcPreDefinedProperties","IfcPreDefinedPropertySet","IfcPreDefinedTextFont","IfcPresentationItem","IfcPresentationLayerAssignment","IfcPresentationLayerWithStyle","IfcPresentationStyle","IfcPresentationStyleAssignment","IfcProcedure","IfcProcedureType","IfcProcess","IfcProduct","IfcProductDefinitionShape","IfcProductRepresentation","IfcProfileDef","IfcProfileProperties","IfcProject","IfcProjectLibrary","IfcProjectOrder","IfcProjectedCRS","IfcProjectionElement","IfcProperty","IfcPropertyAbstraction","IfcPropertyBoundedValue","IfcPropertyDefinition","IfcPropertyDependencyRelationship","IfcPropertyEnumeratedValue","IfcPropertyEnumeration","IfcPropertyListValue","IfcPropertyReferenceValue","IfcPropertySet","IfcPropertySetDefinition","IfcPropertySetTemplate","IfcPropertySingleValue","IfcPropertyTableValue","IfcPropertyTemplate","IfcPropertyTemplateDefinition","IfcProtectiveDevice","IfcProtectiveDeviceTrippingUnit","IfcProtectiveDeviceTrippingUnitType","IfcProtectiveDeviceType","IfcProxy","IfcPump","IfcPumpType","IfcQuantityArea","IfcQuantityCount","IfcQuantityLength","IfcQuantitySet","IfcQuantityTime","IfcQuantityVolume","IfcQuantityWeight","IfcRailing","IfcRailingType","IfcRamp","IfcRampFlight","IfcRampFlightType","IfcRampType","IfcRationalBSplineCurveWithKnots","IfcRationalBSplineSurfaceWithKnots","IfcRectangleHollowProfileDef","IfcRectangleProfileDef","IfcRectangularPyramid","IfcRectangularTrimmedSurface","IfcRecurrencePattern","IfcReference","IfcReferent","IfcRegularTimeSeries","IfcReinforcementBarProperties","IfcReinforcementDefinitionProperties","IfcReinforcingBar","IfcReinforcingBarType","IfcReinforcingElement","IfcReinforcingElementType","IfcReinforcingMesh","IfcReinforcingMeshType","IfcRelAggregates","IfcRelAssigns","IfcRelAssignsToActor","IfcRelAssignsToControl","IfcRelAssignsToGroup","IfcRelAssignsToGroupByFactor","IfcRelAssignsToProcess","IfcRelAssignsToProduct","IfcRelAssignsToResource","IfcRelAssociates","IfcRelAssociatesApproval","IfcRelAssociatesClassification","IfcRelAssociatesConstraint","IfcRelAssociatesDocument","IfcRelAssociatesLibrary","IfcRelAssociatesMaterial","IfcRelConnects","IfcRelConnectsElements","IfcRelConnectsPathElements","IfcRelConnectsPortToElement","IfcRelConnectsPorts","IfcRelConnectsStructuralActivity","IfcRelConnectsStructuralMember","IfcRelConnectsWithEccentricity","IfcRelConnectsWithRealizingElements","IfcRelContainedInSpatialStructure","IfcRelCoversBldgElements","IfcRelCoversSpaces","IfcRelDeclares","IfcRelDecomposes","IfcRelDefines","IfcRelDefinesByObject","IfcRelDefinesByProperties","IfcRelDefinesByTemplate","IfcRelDefinesByType","IfcRelFillsElement","IfcRelFlowControlElements","IfcRelInterferesElements","IfcRelNests","IfcRelPositions","IfcRelProjectsElement","IfcRelReferencedInSpatialStructure","IfcRelSequence","IfcRelServicesBuildings","IfcRelSpaceBoundary","IfcRelSpaceBoundary1stLevel","IfcRelSpaceBoundary2ndLevel","IfcRelVoidsElement","IfcRelationship","IfcReparametrisedCompositeCurveSegment","IfcRepresentation","IfcRepresentationContext","IfcRepresentationItem","IfcRepresentationMap","IfcResource","IfcResourceApprovalRelationship","IfcResourceConstraintRelationship","IfcResourceLevelRelationship","IfcResourceTime","IfcRevolvedAreaSolid","IfcRevolvedAreaSolidTapered","IfcRightCircularCone","IfcRightCircularCylinder","IfcRoof","IfcRoofType","IfcRoot","IfcRoundedRectangleProfileDef","IfcSIUnit","IfcSanitaryTerminal","IfcSanitaryTerminalType","IfcSchedulingTime","IfcSeamCurve","IfcSectionProperties","IfcSectionReinforcementProperties","IfcSectionedSolid","IfcSectionedSolidHorizontal","IfcSectionedSpine","IfcSensor","IfcSensorType","IfcShadingDevice","IfcShadingDeviceType","IfcShapeAspect","IfcShapeModel","IfcShapeRepresentation","IfcShellBasedSurfaceModel","IfcSimpleProperty","IfcSimplePropertyTemplate","IfcSite","IfcSlab","IfcSlabElementedCase","IfcSlabStandardCase","IfcSlabType","IfcSlippageConnectionCondition","IfcSolarDevice","IfcSolarDeviceType","IfcSolidModel","IfcSpace","IfcSpaceHeater","IfcSpaceHeaterType","IfcSpaceType","IfcSpatialElement","IfcSpatialElementType","IfcSpatialStructureElement","IfcSpatialStructureElementType","IfcSpatialZone","IfcSpatialZoneType","IfcSphere","IfcSphericalSurface","IfcStackTerminal","IfcStackTerminalType","IfcStair","IfcStairFlight","IfcStairFlightType","IfcStairType","IfcStructuralAction","IfcStructuralActivity","IfcStructuralAnalysisModel","IfcStructuralConnection","IfcStructuralConnectionCondition","IfcStructuralCurveAction","IfcStructuralCurveConnection","IfcStructuralCurveMember","IfcStructuralCurveMemberVarying","IfcStructuralCurveReaction","IfcStructuralItem","IfcStructuralLinearAction","IfcStructuralLoad","IfcStructuralLoadCase","IfcStructuralLoadConfiguration","IfcStructuralLoadGroup","IfcStructuralLoadLinearForce","IfcStructuralLoadOrResult","IfcStructuralLoadPlanarForce","IfcStructuralLoadSingleDisplacement","IfcStructuralLoadSingleDisplacementDistortion","IfcStructuralLoadSingleForce","IfcStructuralLoadSingleForceWarping","IfcStructuralLoadStatic","IfcStructuralLoadTemperature","IfcStructuralMember","IfcStructuralPlanarAction","IfcStructuralPointAction","IfcStructuralPointConnection","IfcStructuralPointReaction","IfcStructuralReaction","IfcStructuralResultGroup","IfcStructuralSurfaceAction","IfcStructuralSurfaceConnection","IfcStructuralSurfaceMember","IfcStructuralSurfaceMemberVarying","IfcStructuralSurfaceReaction","IfcStyleModel","IfcStyledItem","IfcStyledRepresentation","IfcSubContractResource","IfcSubContractResourceType","IfcSubedge","IfcSurface","IfcSurfaceCurve","IfcSurfaceCurveSweptAreaSolid","IfcSurfaceFeature","IfcSurfaceOfLinearExtrusion","IfcSurfaceOfRevolution","IfcSurfaceReinforcementArea","IfcSurfaceStyle","IfcSurfaceStyleLighting","IfcSurfaceStyleRefraction","IfcSurfaceStyleRendering","IfcSurfaceStyleShading","IfcSurfaceStyleWithTextures","IfcSurfaceTexture","IfcSweptAreaSolid","IfcSweptDiskSolid","IfcSweptDiskSolidPolygonal","IfcSweptSurface","IfcSwitchingDevice","IfcSwitchingDeviceType","IfcSystem","IfcSystemFurnitureElement","IfcSystemFurnitureElementType","IfcTShapeProfileDef","IfcTable","IfcTableColumn","IfcTableRow","IfcTank","IfcTankType","IfcTask","IfcTaskTime","IfcTaskTimeRecurring","IfcTaskType","IfcTelecomAddress","IfcTendon","IfcTendonAnchor","IfcTendonAnchorType","IfcTendonConduit","IfcTendonConduitType","IfcTendonType","IfcTessellatedFaceSet","IfcTessellatedItem","IfcTextLiteral","IfcTextLiteralWithExtent","IfcTextStyle","IfcTextStyleFontModel","IfcTextStyleForDefinedFont","IfcTextStyleTextModel","IfcTextureCoordinate","IfcTextureCoordinateGenerator","IfcTextureMap","IfcTextureVertex","IfcTextureVertexList","IfcTimePeriod","IfcTimeSeries","IfcTimeSeriesValue","IfcTopologicalRepresentationItem","IfcTopologyRepresentation","IfcToroidalSurface","IfcTransformer","IfcTransformerType","IfcTransitionCurveSegment2D","IfcTransportElement","IfcTransportElementType","IfcTrapeziumProfileDef","IfcTriangulatedFaceSet","IfcTriangulatedIrregularNetwork","IfcTrimmedCurve","IfcTubeBundle","IfcTubeBundleType","IfcTypeObject","IfcTypeProcess","IfcTypeProduct","IfcTypeResource","IfcUShapeProfileDef","IfcUnitAssignment","IfcUnitaryControlElement","IfcUnitaryControlElementType","IfcUnitaryEquipment","IfcUnitaryEquipmentType","IfcValve","IfcValveType","IfcVector","IfcVertex","IfcVertexLoop","IfcVertexPoint","IfcVibrationDamper","IfcVibrationDamperType","IfcVibrationIsolator","IfcVibrationIsolatorType","IfcVirtualElement","IfcVirtualGridIntersection","IfcVoidingFeature","IfcWall","IfcWallElementedCase","IfcWallStandardCase","IfcWallType","IfcWasteTerminal","IfcWasteTerminalType","IfcWindow","IfcWindowLiningProperties","IfcWindowPanelProperties","IfcWindowStandardCase","IfcWindowStyle","IfcWindowType","IfcWorkCalendar","IfcWorkControl","IfcWorkPlan","IfcWorkSchedule","IfcWorkTime","IfcZShapeProfileDef","IfcZone","IfcActionRequestTypeEnum","_createClass","_classCallCheck","EMAIL","FAX","PHONE","POST","VERBAL","USERDEFINED","NOTDEFINED","IfcActionSourceTypeEnum","DEAD_LOAD_G","COMPLETION_G1","LIVE_LOAD_Q","SNOW_S","WIND_W","PRESTRESSING_P","SETTLEMENT_U","TEMPERATURE_T","EARTHQUAKE_E","FIRE","IMPULSE","IMPACT","TRANSPORT","ERECTION","PROPPING","SYSTEM_IMPERFECTION","SHRINKAGE","CREEP","LACK_OF_FIT","BUOYANCY","ICE","CURRENT","WAVE","RAIN","BRAKES","IfcActionTypeEnum","PERMANENT_G","VARIABLE_Q","EXTRAORDINARY_A","IfcActuatorTypeEnum","ELECTRICACTUATOR","HANDOPERATEDACTUATOR","HYDRAULICACTUATOR","PNEUMATICACTUATOR","THERMOSTATICACTUATOR","IfcAddressTypeEnum","OFFICE","SITE","HOME","DISTRIBUTIONPOINT","IfcAirTerminalBoxTypeEnum","CONSTANTFLOW","VARIABLEFLOWPRESSUREDEPENDANT","VARIABLEFLOWPRESSUREINDEPENDANT","IfcAirTerminalTypeEnum","DIFFUSER","GRILLE","LOUVRE","REGISTER","IfcAirToAirHeatRecoveryTypeEnum","FIXEDPLATECOUNTERFLOWEXCHANGER","FIXEDPLATECROSSFLOWEXCHANGER","FIXEDPLATEPARALLELFLOWEXCHANGER","ROTARYWHEEL","RUNAROUNDCOILLOOP","HEATPIPE","TWINTOWERENTHALPYRECOVERYLOOPS","THERMOSIPHONSEALEDTUBEHEATEXCHANGERS","THERMOSIPHONCOILTYPEHEATEXCHANGERS","IfcAlarmTypeEnum","BELL","BREAKGLASSBUTTON","LIGHT","MANUALPULLBOX","SIREN","WHISTLE","IfcAlignmentTypeEnum","IfcAnalysisModelTypeEnum","IN_PLANE_LOADING_2D","OUT_PLANE_LOADING_2D","LOADING_3D","IfcAnalysisTheoryTypeEnum","FIRST_ORDER_THEORY","SECOND_ORDER_THEORY","THIRD_ORDER_THEORY","FULL_NONLINEAR_THEORY","IfcArithmeticOperatorEnum","ADD","DIVIDE","MULTIPLY","SUBTRACT","IfcAssemblyPlaceEnum","FACTORY","IfcAudioVisualApplianceTypeEnum","AMPLIFIER","CAMERA","DISPLAY","MICROPHONE","PLAYER","PROJECTOR","RECEIVER","SPEAKER","SWITCHER","TELEPHONE","TUNER","IfcBSplineCurveForm","POLYLINE_FORM","CIRCULAR_ARC","ELLIPTIC_ARC","PARABOLIC_ARC","HYPERBOLIC_ARC","UNSPECIFIED","IfcBSplineSurfaceForm","PLANE_SURF","CYLINDRICAL_SURF","CONICAL_SURF","SPHERICAL_SURF","TOROIDAL_SURF","SURF_OF_REVOLUTION","RULED_SURF","GENERALISED_CONE","QUADRIC_SURF","SURF_OF_LINEAR_EXTRUSION","IfcBeamTypeEnum","BEAM","JOIST","HOLLOWCORE","LINTEL","SPANDREL","T_BEAM","GIRDER_SEGMENT","DIAPHRAGM","PIERCAP","HATSTONE","CORNICE","EDGEBEAM","IfcBearingTypeDisplacementEnum","FIXED_MOVEMENT","GUIDED_LONGITUDINAL","GUIDED_TRANSVERSAL","FREE_MOVEMENT","IfcBearingTypeEnum","CYLINDRICAL","SPHERICAL","ELASTOMERIC","POT","GUIDE","ROCKER","ROLLER","DISK","IfcBenchmarkEnum","GREATERTHAN","GREATERTHANOREQUALTO","LESSTHAN","LESSTHANOREQUALTO","EQUALTO","NOTEQUALTO","INCLUDES","NOTINCLUDES","INCLUDEDIN","NOTINCLUDEDIN","IfcBoilerTypeEnum","WATER","STEAM","IfcBooleanOperator","UNION","INTERSECTION","DIFFERENCE","IfcBridgePartTypeEnum","ABUTMENT","DECK","DECK_SEGMENT","FOUNDATION","PIER","PIER_SEGMENT","PYLON","SUBSTRUCTURE","SUPERSTRUCTURE","SURFACESTRUCTURE","IfcBridgeTypeEnum","ARCHED","CABLE_STAYED","CANTILEVER","CULVERT","FRAMEWORK","GIRDER","SUSPENSION","TRUSS","IfcBuildingElementPartTypeEnum","INSULATION","PRECASTPANEL","APRON","IfcBuildingElementProxyTypeEnum","COMPLEX","ELEMENT","PARTIAL","PROVISIONFORVOID","PROVISIONFORSPACE","IfcBuildingSystemTypeEnum","FENESTRATION","LOADBEARING","OUTERSHELL","SHADING","REINFORCING","PRESTRESSING","IfcBurnerTypeEnum","IfcCableCarrierFittingTypeEnum","BEND","CROSS","REDUCER","TEE","IfcCableCarrierSegmentTypeEnum","CABLELADDERSEGMENT","CABLETRAYSEGMENT","CABLETRUNKINGSEGMENT","CONDUITSEGMENT","IfcCableFittingTypeEnum","CONNECTOR","ENTRY","EXIT","JUNCTION","TRANSITION","IfcCableSegmentTypeEnum","BUSBARSEGMENT","CABLESEGMENT","CONDUCTORSEGMENT","CORESEGMENT","IfcCaissonFoundationTypeEnum","WELL","CAISSON","IfcChangeActionEnum","NOCHANGE","MODIFIED","ADDED","DELETED","IfcChillerTypeEnum","AIRCOOLED","WATERCOOLED","HEATRECOVERY","IfcChimneyTypeEnum","IfcCoilTypeEnum","DXCOOLINGCOIL","ELECTRICHEATINGCOIL","GASHEATINGCOIL","HYDRONICCOIL","STEAMHEATINGCOIL","WATERCOOLINGCOIL","WATERHEATINGCOIL","IfcColumnTypeEnum","COLUMN","PILASTER","PIERSTEM","PIERSTEM_SEGMENT","STANDCOLUMN","IfcCommunicationsApplianceTypeEnum","ANTENNA","COMPUTER","GATEWAY","MODEM","NETWORKAPPLIANCE","NETWORKBRIDGE","NETWORKHUB","PRINTER","REPEATER","ROUTER","SCANNER","IfcComplexPropertyTemplateTypeEnum","P_COMPLEX","Q_COMPLEX","IfcCompressorTypeEnum","DYNAMIC","RECIPROCATING","ROTARY","SCROLL","TROCHOIDAL","SINGLESTAGE","BOOSTER","OPENTYPE","HERMETIC","SEMIHERMETIC","WELDEDSHELLHERMETIC","ROLLINGPISTON","ROTARYVANE","SINGLESCREW","TWINSCREW","IfcCondenserTypeEnum","EVAPORATIVECOOLED","WATERCOOLEDBRAZEDPLATE","WATERCOOLEDSHELLCOIL","WATERCOOLEDSHELLTUBE","WATERCOOLEDTUBEINTUBE","IfcConnectionTypeEnum","ATPATH","ATSTART","ATEND","IfcConstraintEnum","HARD","SOFT","ADVISORY","IfcConstructionEquipmentResourceTypeEnum","DEMOLISHING","EARTHMOVING","ERECTING","HEATING","LIGHTING","PAVING","PUMPING","TRANSPORTING","IfcConstructionMaterialResourceTypeEnum","AGGREGATES","CONCRETE","DRYWALL","FUEL","GYPSUM","MASONRY","METAL","PLASTIC","WOOD","IfcConstructionProductResourceTypeEnum","ASSEMBLY","FORMWORK","IfcControllerTypeEnum","FLOATING","PROGRAMMABLE","PROPORTIONAL","MULTIPOSITION","TWOPOSITION","IfcCooledBeamTypeEnum","ACTIVE","PASSIVE","IfcCoolingTowerTypeEnum","NATURALDRAFT","MECHANICALINDUCEDDRAFT","MECHANICALFORCEDDRAFT","IfcCostItemTypeEnum","IfcCostScheduleTypeEnum","BUDGET","COSTPLAN","ESTIMATE","TENDER","PRICEDBILLOFQUANTITIES","UNPRICEDBILLOFQUANTITIES","SCHEDULEOFRATES","IfcCoveringTypeEnum","CEILING","FLOORING","CLADDING","ROOFING","MOLDING","SKIRTINGBOARD","MEMBRANE","SLEEVING","WRAPPING","COPING","IfcCrewResourceTypeEnum","IfcCurtainWallTypeEnum","IfcCurveInterpolationEnum","LINEAR","LOG_LINEAR","LOG_LOG","IfcDamperTypeEnum","BACKDRAFTDAMPER","BALANCINGDAMPER","BLASTDAMPER","CONTROLDAMPER","FIREDAMPER","FIRESMOKEDAMPER","FUMEHOODEXHAUST","GRAVITYDAMPER","GRAVITYRELIEFDAMPER","RELIEFDAMPER","SMOKEDAMPER","IfcDataOriginEnum","MEASURED","PREDICTED","SIMULATED","IfcDerivedUnitEnum","ANGULARVELOCITYUNIT","AREADENSITYUNIT","COMPOUNDPLANEANGLEUNIT","DYNAMICVISCOSITYUNIT","HEATFLUXDENSITYUNIT","INTEGERCOUNTRATEUNIT","ISOTHERMALMOISTURECAPACITYUNIT","KINEMATICVISCOSITYUNIT","LINEARVELOCITYUNIT","MASSDENSITYUNIT","MASSFLOWRATEUNIT","MOISTUREDIFFUSIVITYUNIT","MOLECULARWEIGHTUNIT","SPECIFICHEATCAPACITYUNIT","THERMALADMITTANCEUNIT","THERMALCONDUCTANCEUNIT","THERMALRESISTANCEUNIT","THERMALTRANSMITTANCEUNIT","VAPORPERMEABILITYUNIT","VOLUMETRICFLOWRATEUNIT","ROTATIONALFREQUENCYUNIT","TORQUEUNIT","MOMENTOFINERTIAUNIT","LINEARMOMENTUNIT","LINEARFORCEUNIT","PLANARFORCEUNIT","MODULUSOFELASTICITYUNIT","SHEARMODULUSUNIT","LINEARSTIFFNESSUNIT","ROTATIONALSTIFFNESSUNIT","MODULUSOFSUBGRADEREACTIONUNIT","ACCELERATIONUNIT","CURVATUREUNIT","HEATINGVALUEUNIT","IONCONCENTRATIONUNIT","LUMINOUSINTENSITYDISTRIBUTIONUNIT","MASSPERLENGTHUNIT","MODULUSOFLINEARSUBGRADEREACTIONUNIT","MODULUSOFROTATIONALSUBGRADEREACTIONUNIT","PHUNIT","ROTATIONALMASSUNIT","SECTIONAREAINTEGRALUNIT","SECTIONMODULUSUNIT","SOUNDPOWERLEVELUNIT","SOUNDPOWERUNIT","SOUNDPRESSURELEVELUNIT","SOUNDPRESSUREUNIT","TEMPERATUREGRADIENTUNIT","TEMPERATURERATEOFCHANGEUNIT","THERMALEXPANSIONCOEFFICIENTUNIT","WARPINGCONSTANTUNIT","WARPINGMOMENTUNIT","IfcDirectionSenseEnum","POSITIVE","NEGATIVE","IfcDiscreteAccessoryTypeEnum","ANCHORPLATE","BRACKET","SHOE","EXPANSION_JOINT_DEVICE","IfcDistributionChamberElementTypeEnum","FORMEDDUCT","INSPECTIONCHAMBER","INSPECTIONPIT","MANHOLE","METERCHAMBER","SUMP","TRENCH","VALVECHAMBER","IfcDistributionPortTypeEnum","CABLE","CABLECARRIER","DUCT","PIPE","IfcDistributionSystemEnum","AIRCONDITIONING","AUDIOVISUAL","CHEMICAL","CHILLEDWATER","COMMUNICATION","COMPRESSEDAIR","CONDENSERWATER","CONTROL","CONVEYING","DATA","DISPOSAL","DOMESTICCOLDWATER","DOMESTICHOTWATER","DRAINAGE","EARTHING","ELECTRICAL","ELECTROACOUSTIC","EXHAUST","FIREPROTECTION","GAS","HAZARDOUS","LIGHTNINGPROTECTION","MUNICIPALSOLIDWASTE","OIL","OPERATIONAL","POWERGENERATION","RAINWATER","REFRIGERATION","SECURITY","SEWAGE","SIGNAL","STORMWATER","TV","VACUUM","VENT","VENTILATION","WASTEWATER","WATERSUPPLY","IfcDocumentConfidentialityEnum","PUBLIC","RESTRICTED","CONFIDENTIAL","PERSONAL","IfcDocumentStatusEnum","DRAFT","FINALDRAFT","FINAL","REVISION","IfcDoorPanelOperationEnum","SWINGING","DOUBLE_ACTING","SLIDING","FOLDING","REVOLVING","ROLLINGUP","FIXEDPANEL","IfcDoorPanelPositionEnum","LEFT","MIDDLE","RIGHT","IfcDoorStyleConstructionEnum","ALUMINIUM","HIGH_GRADE_STEEL","STEEL","ALUMINIUM_WOOD","ALUMINIUM_PLASTIC","IfcDoorStyleOperationEnum","SINGLE_SWING_LEFT","SINGLE_SWING_RIGHT","DOUBLE_DOOR_SINGLE_SWING","DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_LEFT","DOUBLE_DOOR_SINGLE_SWING_OPPOSITE_RIGHT","DOUBLE_SWING_LEFT","DOUBLE_SWING_RIGHT","DOUBLE_DOOR_DOUBLE_SWING","SLIDING_TO_LEFT","SLIDING_TO_RIGHT","DOUBLE_DOOR_SLIDING","FOLDING_TO_LEFT","FOLDING_TO_RIGHT","DOUBLE_DOOR_FOLDING","IfcDoorTypeEnum","DOOR","GATE","TRAPDOOR","IfcDoorTypeOperationEnum","SWING_FIXED_LEFT","SWING_FIXED_RIGHT","IfcDuctFittingTypeEnum","OBSTRUCTION","IfcDuctSegmentTypeEnum","RIGIDSEGMENT","FLEXIBLESEGMENT","IfcDuctSilencerTypeEnum","FLATOVAL","RECTANGULAR","ROUND","IfcElectricApplianceTypeEnum","DISHWASHER","ELECTRICCOOKER","FREESTANDINGELECTRICHEATER","FREESTANDINGFAN","FREESTANDINGWATERHEATER","FREESTANDINGWATERCOOLER","FREEZER","FRIDGE_FREEZER","HANDDRYER","KITCHENMACHINE","MICROWAVE","PHOTOCOPIER","REFRIGERATOR","TUMBLEDRYER","VENDINGMACHINE","WASHINGMACHINE","IfcElectricDistributionBoardTypeEnum","CONSUMERUNIT","DISTRIBUTIONBOARD","MOTORCONTROLCENTRE","SWITCHBOARD","IfcElectricFlowStorageDeviceTypeEnum","BATTERY","CAPACITORBANK","HARMONICFILTER","INDUCTORBANK","UPS","IfcElectricGeneratorTypeEnum","CHP","ENGINEGENERATOR","STANDALONE","IfcElectricMotorTypeEnum","DC","INDUCTION","POLYPHASE","RELUCTANCESYNCHRONOUS","SYNCHRONOUS","IfcElectricTimeControlTypeEnum","TIMECLOCK","TIMEDELAY","RELAY","IfcElementAssemblyTypeEnum","ACCESSORY_ASSEMBLY","ARCH","BEAM_GRID","BRACED_FRAME","REINFORCEMENT_UNIT","RIGID_FRAME","SLAB_FIELD","CROSS_BRACING","IfcElementCompositionEnum","IfcEngineTypeEnum","EXTERNALCOMBUSTION","INTERNALCOMBUSTION","IfcEvaporativeCoolerTypeEnum","DIRECTEVAPORATIVERANDOMMEDIAAIRCOOLER","DIRECTEVAPORATIVERIGIDMEDIAAIRCOOLER","DIRECTEVAPORATIVESLINGERSPACKAGEDAIRCOOLER","DIRECTEVAPORATIVEPACKAGEDROTARYAIRCOOLER","DIRECTEVAPORATIVEAIRWASHER","INDIRECTEVAPORATIVEPACKAGEAIRCOOLER","INDIRECTEVAPORATIVEWETCOIL","INDIRECTEVAPORATIVECOOLINGTOWERORCOILCOOLER","INDIRECTDIRECTCOMBINATION","IfcEvaporatorTypeEnum","DIRECTEXPANSION","DIRECTEXPANSIONSHELLANDTUBE","DIRECTEXPANSIONTUBEINTUBE","DIRECTEXPANSIONBRAZEDPLATE","FLOODEDSHELLANDTUBE","SHELLANDCOIL","IfcEventTriggerTypeEnum","EVENTRULE","EVENTMESSAGE","EVENTTIME","EVENTCOMPLEX","IfcEventTypeEnum","STARTEVENT","ENDEVENT","INTERMEDIATEEVENT","IfcExternalSpatialElementTypeEnum","EXTERNAL","EXTERNAL_EARTH","EXTERNAL_WATER","EXTERNAL_FIRE","IfcFanTypeEnum","CENTRIFUGALFORWARDCURVED","CENTRIFUGALRADIAL","CENTRIFUGALBACKWARDINCLINEDCURVED","CENTRIFUGALAIRFOIL","TUBEAXIAL","VANEAXIAL","PROPELLORAXIAL","IfcFastenerTypeEnum","GLUE","MORTAR","WELD","IfcFilterTypeEnum","AIRPARTICLEFILTER","COMPRESSEDAIRFILTER","ODORFILTER","OILFILTER","STRAINER","WATERFILTER","IfcFireSuppressionTerminalTypeEnum","BREECHINGINLET","FIREHYDRANT","HOSEREEL","SPRINKLER","SPRINKLERDEFLECTOR","IfcFlowDirectionEnum","SOURCE","SINK","SOURCEANDSINK","IfcFlowInstrumentTypeEnum","PRESSUREGAUGE","THERMOMETER","AMMETER","FREQUENCYMETER","POWERFACTORMETER","PHASEANGLEMETER","VOLTMETER_PEAK","VOLTMETER_RMS","IfcFlowMeterTypeEnum","ENERGYMETER","GASMETER","OILMETER","WATERMETER","IfcFootingTypeEnum","CAISSON_FOUNDATION","FOOTING_BEAM","PAD_FOOTING","PILE_CAP","STRIP_FOOTING","IfcFurnitureTypeEnum","CHAIR","TABLE","DESK","BED","FILECABINET","SHELF","SOFA","IfcGeographicElementTypeEnum","TERRAIN","SOIL_BORING_POINT","IfcGeometricProjectionEnum","GRAPH_VIEW","SKETCH_VIEW","MODEL_VIEW","PLAN_VIEW","REFLECTED_PLAN_VIEW","SECTION_VIEW","ELEVATION_VIEW","IfcGlobalOrLocalEnum","GLOBAL_COORDS","LOCAL_COORDS","IfcGridTypeEnum","RADIAL","TRIANGULAR","IRREGULAR","IfcHeatExchangerTypeEnum","PLATE","SHELLANDTUBE","IfcHumidifierTypeEnum","STEAMINJECTION","ADIABATICAIRWASHER","ADIABATICPAN","ADIABATICWETTEDELEMENT","ADIABATICATOMIZING","ADIABATICULTRASONIC","ADIABATICRIGIDMEDIA","ADIABATICCOMPRESSEDAIRNOZZLE","ASSISTEDELECTRIC","ASSISTEDNATURALGAS","ASSISTEDPROPANE","ASSISTEDBUTANE","ASSISTEDSTEAM","IfcInterceptorTypeEnum","CYCLONIC","GREASE","PETROL","IfcInternalOrExternalEnum","INTERNAL","IfcInventoryTypeEnum","ASSETINVENTORY","SPACEINVENTORY","FURNITUREINVENTORY","IfcJunctionBoxTypeEnum","POWER","IfcKnotType","UNIFORM_KNOTS","QUASI_UNIFORM_KNOTS","PIECEWISE_BEZIER_KNOTS","IfcLaborResourceTypeEnum","ADMINISTRATION","CARPENTRY","CLEANING","ELECTRIC","FINISHING","GENERAL","HVAC","LANDSCAPING","PAINTING","PLUMBING","SITEGRADING","STEELWORK","SURVEYING","IfcLampTypeEnum","COMPACTFLUORESCENT","FLUORESCENT","HALOGEN","HIGHPRESSUREMERCURY","HIGHPRESSURESODIUM","LED","METALHALIDE","OLED","TUNGSTENFILAMENT","IfcLayerSetDirectionEnum","AXIS1","AXIS2","AXIS3","IfcLightDistributionCurveEnum","TYPE_A","TYPE_B","TYPE_C","IfcLightEmissionSourceEnum","LIGHTEMITTINGDIODE","LOWPRESSURESODIUM","LOWVOLTAGEHALOGEN","MAINVOLTAGEHALOGEN","IfcLightFixtureTypeEnum","POINTSOURCE","DIRECTIONSOURCE","SECURITYLIGHTING","IfcLoadGroupTypeEnum","LOAD_GROUP","LOAD_CASE","LOAD_COMBINATION","IfcLogicalOperatorEnum","LOGICALAND","LOGICALOR","LOGICALXOR","LOGICALNOTAND","LOGICALNOTOR","IfcMechanicalFastenerTypeEnum","ANCHORBOLT","BOLT","DOWEL","NAIL","NAILPLATE","RIVET","SCREW","SHEARCONNECTOR","STAPLE","STUDSHEARCONNECTOR","COUPLER","IfcMedicalDeviceTypeEnum","AIRSTATION","FEEDAIRUNIT","OXYGENGENERATOR","OXYGENPLANT","VACUUMSTATION","IfcMemberTypeEnum","BRACE","CHORD","COLLAR","MEMBER","MULLION","PURLIN","RAFTER","STRINGER","STRUT","STUD","STIFFENING_RIB","ARCH_SEGMENT","SUSPENSION_CABLE","SUSPENDER","STAY_CABLE","IfcMotorConnectionTypeEnum","BELTDRIVE","COUPLING","DIRECTDRIVE","IfcNullStyle","NULL","IfcObjectTypeEnum","PRODUCT","PROCESS","RESOURCE","ACTOR","GROUP","PROJECT","IfcObjectiveEnum","CODECOMPLIANCE","CODEWAIVER","DESIGNINTENT","HEALTHANDSAFETY","MERGECONFLICT","MODELVIEW","PARAMETER","REQUIREMENT","SPECIFICATION","TRIGGERCONDITION","IfcOccupantTypeEnum","ASSIGNEE","ASSIGNOR","LESSEE","LESSOR","LETTINGAGENT","OWNER","TENANT","IfcOpeningElementTypeEnum","OPENING","RECESS","IfcOutletTypeEnum","AUDIOVISUALOUTLET","COMMUNICATIONSOUTLET","POWEROUTLET","DATAOUTLET","TELEPHONEOUTLET","IfcPerformanceHistoryTypeEnum","IfcPermeableCoveringOperationEnum","GRILL","LOUVER","SCREEN","IfcPermitTypeEnum","ACCESS","BUILDING","WORK","IfcPhysicalOrVirtualEnum","PHYSICAL","VIRTUAL","IfcPileConstructionEnum","CAST_IN_PLACE","COMPOSITE","PRECAST_CONCRETE","PREFAB_STEEL","IfcPileTypeEnum","BORED","DRIVEN","JETGROUTING","COHESION","FRICTION","SUPPORT","IfcPipeFittingTypeEnum","IfcPipeSegmentTypeEnum","GUTTER","SPOOL","IfcPlateTypeEnum","CURTAIN_PANEL","SHEET","FLANGE_PLATE","WEB_PLATE","STIFFENER_PLATE","GUSSET_PLATE","COVER_PLATE","SPLICE_PLATE","BASE_PLATE","IfcPreferredSurfaceCurveRepresentation","CURVE3D","PCURVE_S1","PCURVE_S2","IfcProcedureTypeEnum","ADVICE_CAUTION","ADVICE_NOTE","ADVICE_WARNING","CALIBRATION","DIAGNOSTIC","SHUTDOWN","STARTUP","IfcProfileTypeEnum","CURVE","AREA","IfcProjectOrderTypeEnum","CHANGEORDER","MAINTENANCEWORKORDER","MOVEORDER","PURCHASEORDER","WORKORDER","IfcProjectedOrTrueLengthEnum","PROJECTED_LENGTH","TRUE_LENGTH","IfcProjectionElementTypeEnum","BLISTER","DEVIATOR","IfcPropertySetTemplateTypeEnum","PSET_TYPEDRIVENONLY","PSET_TYPEDRIVENOVERRIDE","PSET_OCCURRENCEDRIVEN","PSET_PERFORMANCEDRIVEN","QTO_TYPEDRIVENONLY","QTO_TYPEDRIVENOVERRIDE","QTO_OCCURRENCEDRIVEN","IfcProtectiveDeviceTrippingUnitTypeEnum","ELECTRONIC","ELECTROMAGNETIC","RESIDUALCURRENT","THERMAL","IfcProtectiveDeviceTypeEnum","CIRCUITBREAKER","EARTHLEAKAGECIRCUITBREAKER","EARTHINGSWITCH","FUSEDISCONNECTOR","RESIDUALCURRENTCIRCUITBREAKER","RESIDUALCURRENTSWITCH","VARISTOR","IfcPumpTypeEnum","CIRCULATOR","ENDSUCTION","SPLITCASE","SUBMERSIBLEPUMP","SUMPPUMP","VERTICALINLINE","VERTICALTURBINE","IfcRailingTypeEnum","HANDRAIL","GUARDRAIL","BALUSTRADE","IfcRampFlightTypeEnum","STRAIGHT","SPIRAL","IfcRampTypeEnum","STRAIGHT_RUN_RAMP","TWO_STRAIGHT_RUN_RAMP","QUARTER_TURN_RAMP","TWO_QUARTER_TURN_RAMP","HALF_TURN_RAMP","SPIRAL_RAMP","IfcRecurrenceTypeEnum","DAILY","WEEKLY","MONTHLY_BY_DAY_OF_MONTH","MONTHLY_BY_POSITION","BY_DAY_COUNT","BY_WEEKDAY_COUNT","YEARLY_BY_DAY_OF_MONTH","YEARLY_BY_POSITION","IfcReferentTypeEnum","KILOPOINT","MILEPOINT","STATION","IfcReflectanceMethodEnum","BLINN","FLAT","GLASS","MATT","MIRROR","PHONG","STRAUSS","IfcReinforcingBarRoleEnum","MAIN","SHEAR","LIGATURE","PUNCHING","EDGE","RING","ANCHORING","IfcReinforcingBarSurfaceEnum","PLAIN","TEXTURED","IfcReinforcingBarTypeEnum","SPACEBAR","IfcReinforcingMeshTypeEnum","IfcRoleEnum","SUPPLIER","MANUFACTURER","CONTRACTOR","SUBCONTRACTOR","ARCHITECT","STRUCTURALENGINEER","COSTENGINEER","CLIENT","BUILDINGOWNER","BUILDINGOPERATOR","MECHANICALENGINEER","ELECTRICALENGINEER","PROJECTMANAGER","FACILITIESMANAGER","CIVILENGINEER","COMMISSIONINGENGINEER","ENGINEER","CONSULTANT","CONSTRUCTIONMANAGER","FIELDCONSTRUCTIONMANAGER","RESELLER","IfcRoofTypeEnum","FLAT_ROOF","SHED_ROOF","GABLE_ROOF","HIP_ROOF","HIPPED_GABLE_ROOF","GAMBREL_ROOF","MANSARD_ROOF","BARREL_ROOF","RAINBOW_ROOF","BUTTERFLY_ROOF","PAVILION_ROOF","DOME_ROOF","FREEFORM","IfcSIPrefix","EXA","PETA","TERA","GIGA","MEGA","KILO","HECTO","DECA","DECI","CENTI","MILLI","MICRO","NANO","PICO","FEMTO","ATTO","IfcSIUnitName","AMPERE","BECQUEREL","CANDELA","COULOMB","CUBIC_METRE","DEGREE_CELSIUS","FARAD","GRAM","GRAY","HENRY","HERTZ","JOULE","KELVIN","LUMEN","LUX","METRE","MOLE","NEWTON","OHM","PASCAL","RADIAN","SECOND","SIEMENS","SIEVERT","SQUARE_METRE","STERADIAN","TESLA","VOLT","WATT","WEBER","IfcSanitaryTerminalTypeEnum","BATH","BIDET","CISTERN","SHOWER","SANITARYFOUNTAIN","TOILETPAN","URINAL","WASHHANDBASIN","WCSEAT","IfcSectionTypeEnum","UNIFORM","TAPERED","IfcSensorTypeEnum","COSENSOR","CO2SENSOR","CONDUCTANCESENSOR","CONTACTSENSOR","FIRESENSOR","FLOWSENSOR","FROSTSENSOR","GASSENSOR","HEATSENSOR","HUMIDITYSENSOR","IDENTIFIERSENSOR","IONCONCENTRATIONSENSOR","LEVELSENSOR","LIGHTSENSOR","MOISTURESENSOR","MOVEMENTSENSOR","PHSENSOR","PRESSURESENSOR","RADIATIONSENSOR","RADIOACTIVITYSENSOR","SMOKESENSOR","SOUNDSENSOR","TEMPERATURESENSOR","WINDSENSOR","IfcSequenceEnum","START_START","START_FINISH","FINISH_START","FINISH_FINISH","IfcShadingDeviceTypeEnum","JALOUSIE","SHUTTER","AWNING","IfcSimplePropertyTemplateTypeEnum","P_SINGLEVALUE","P_ENUMERATEDVALUE","P_BOUNDEDVALUE","P_LISTVALUE","P_TABLEVALUE","P_REFERENCEVALUE","Q_LENGTH","Q_AREA","Q_VOLUME","Q_COUNT","Q_WEIGHT","Q_TIME","IfcSlabTypeEnum","FLOOR","ROOF","LANDING","BASESLAB","APPROACH_SLAB","WEARING","SIDEWALK","IfcSolarDeviceTypeEnum","SOLARCOLLECTOR","SOLARPANEL","IfcSpaceHeaterTypeEnum","CONVECTOR","RADIATOR","IfcSpaceTypeEnum","SPACE","PARKING","GFA","IfcSpatialZoneTypeEnum","CONSTRUCTION","FIRESAFETY","OCCUPANCY","IfcStackTerminalTypeEnum","BIRDCAGE","COWL","RAINWATERHOPPER","IfcStairFlightTypeEnum","WINDER","CURVED","IfcStairTypeEnum","STRAIGHT_RUN_STAIR","TWO_STRAIGHT_RUN_STAIR","QUARTER_WINDING_STAIR","QUARTER_TURN_STAIR","HALF_WINDING_STAIR","HALF_TURN_STAIR","TWO_QUARTER_WINDING_STAIR","TWO_QUARTER_TURN_STAIR","THREE_QUARTER_WINDING_STAIR","THREE_QUARTER_TURN_STAIR","SPIRAL_STAIR","DOUBLE_RETURN_STAIR","CURVED_RUN_STAIR","TWO_CURVED_RUN_STAIR","IfcStateEnum","READWRITE","READONLY","LOCKED","READWRITELOCKED","READONLYLOCKED","IfcStructuralCurveActivityTypeEnum","CONST","POLYGONAL","EQUIDISTANT","SINUS","PARABOLA","DISCRETE","IfcStructuralCurveMemberTypeEnum","RIGID_JOINED_MEMBER","PIN_JOINED_MEMBER","TENSION_MEMBER","COMPRESSION_MEMBER","IfcStructuralSurfaceActivityTypeEnum","BILINEAR","ISOCONTOUR","IfcStructuralSurfaceMemberTypeEnum","BENDING_ELEMENT","MEMBRANE_ELEMENT","SHELL","IfcSubContractResourceTypeEnum","PURCHASE","IfcSurfaceFeatureTypeEnum","MARK","TAG","TREATMENT","DEFECT","IfcSurfaceSide","BOTH","IfcSwitchingDeviceTypeEnum","CONTACTOR","DIMMERSWITCH","EMERGENCYSTOP","KEYPAD","MOMENTARYSWITCH","SELECTORSWITCH","STARTER","SWITCHDISCONNECTOR","TOGGLESWITCH","IfcSystemFurnitureElementTypeEnum","PANEL","WORKSURFACE","IfcTankTypeEnum","BASIN","BREAKPRESSURE","EXPANSION","FEEDANDEXPANSION","PRESSUREVESSEL","STORAGE","VESSEL","IfcTaskDurationEnum","ELAPSEDTIME","WORKTIME","IfcTaskTypeEnum","ATTENDANCE","DEMOLITION","DISMANTLE","INSTALLATION","LOGISTIC","MAINTENANCE","MOVE","OPERATION","REMOVAL","RENOVATION","IfcTendonAnchorTypeEnum","FIXED_END","TENSIONING_END","IfcTendonConduitTypeEnum","GROUTING_DUCT","TRUMPET","DIABOLO","IfcTendonTypeEnum","BAR","COATED","STRAND","WIRE","IfcTextPath","UP","DOWN","IfcTimeSeriesDataTypeEnum","CONTINUOUS","DISCRETEBINARY","PIECEWISEBINARY","PIECEWISECONSTANT","PIECEWISECONTINUOUS","IfcTransformerTypeEnum","FREQUENCY","INVERTER","RECTIFIER","VOLTAGE","IfcTransitionCode","DISCONTINUOUS","CONTSAMEGRADIENT","CONTSAMEGRADIENTSAMECURVATURE","IfcTransitionCurveType","BIQUADRATICPARABOLA","BLOSSCURVE","CLOTHOIDCURVE","COSINECURVE","CUBICPARABOLA","SINECURVE","IfcTransportElementTypeEnum","ELEVATOR","ESCALATOR","MOVINGWALKWAY","CRANEWAY","LIFTINGGEAR","IfcTrimmingPreference","CARTESIAN","IfcTubeBundleTypeEnum","FINNED","IfcUnitEnum","ABSORBEDDOSEUNIT","AMOUNTOFSUBSTANCEUNIT","AREAUNIT","DOSEEQUIVALENTUNIT","ELECTRICCAPACITANCEUNIT","ELECTRICCHARGEUNIT","ELECTRICCONDUCTANCEUNIT","ELECTRICCURRENTUNIT","ELECTRICRESISTANCEUNIT","ELECTRICVOLTAGEUNIT","ENERGYUNIT","FORCEUNIT","FREQUENCYUNIT","ILLUMINANCEUNIT","INDUCTANCEUNIT","LENGTHUNIT","LUMINOUSFLUXUNIT","LUMINOUSINTENSITYUNIT","MAGNETICFLUXDENSITYUNIT","MAGNETICFLUXUNIT","MASSUNIT","PLANEANGLEUNIT","POWERUNIT","PRESSUREUNIT","RADIOACTIVITYUNIT","SOLIDANGLEUNIT","THERMODYNAMICTEMPERATUREUNIT","TIMEUNIT","VOLUMEUNIT","IfcUnitaryControlElementTypeEnum","ALARMPANEL","CONTROLPANEL","GASDETECTIONPANEL","INDICATORPANEL","MIMICPANEL","HUMIDISTAT","THERMOSTAT","WEATHERSTATION","IfcUnitaryEquipmentTypeEnum","AIRHANDLER","AIRCONDITIONINGUNIT","DEHUMIDIFIER","SPLITSYSTEM","ROOFTOPUNIT","IfcValveTypeEnum","AIRRELEASE","ANTIVACUUM","CHANGEOVER","CHECK","COMMISSIONING","DIVERTING","DRAWOFFCOCK","DOUBLECHECK","DOUBLEREGULATING","FAUCET","FLUSHING","GASCOCK","GASTAP","ISOLATING","MIXING","PRESSUREREDUCING","PRESSURERELIEF","REGULATING","SAFETYCUTOFF","STEAMTRAP","STOPCOCK","IfcVibrationDamperTypeEnum","BENDING_YIELD","SHEAR_YIELD","AXIAL_YIELD","VISCOUS","RUBBER","IfcVibrationIsolatorTypeEnum","COMPRESSION","SPRING","BASE","IfcVoidingFeatureTypeEnum","CUTOUT","NOTCH","HOLE","MITER","CHAMFER","IfcWallTypeEnum","MOVABLE","PARAPET","PARTITIONING","PLUMBINGWALL","SOLIDWALL","STANDARD","ELEMENTEDWALL","RETAININGWALL","IfcWasteTerminalTypeEnum","FLOORTRAP","FLOORWASTE","GULLYSUMP","GULLYTRAP","ROOFDRAIN","WASTEDISPOSALUNIT","WASTETRAP","IfcWindowPanelOperationEnum","SIDEHUNGRIGHTHAND","SIDEHUNGLEFTHAND","TILTANDTURNRIGHTHAND","TILTANDTURNLEFTHAND","TOPHUNG","BOTTOMHUNG","PIVOTHORIZONTAL","PIVOTVERTICAL","SLIDINGHORIZONTAL","SLIDINGVERTICAL","REMOVABLECASEMENT","FIXEDCASEMENT","OTHEROPERATION","IfcWindowPanelPositionEnum","BOTTOM","TOP","IfcWindowStyleConstructionEnum","OTHER_CONSTRUCTION","IfcWindowStyleOperationEnum","SINGLE_PANEL","DOUBLE_PANEL_VERTICAL","DOUBLE_PANEL_HORIZONTAL","TRIPLE_PANEL_VERTICAL","TRIPLE_PANEL_BOTTOM","TRIPLE_PANEL_TOP","TRIPLE_PANEL_LEFT","TRIPLE_PANEL_RIGHT","TRIPLE_PANEL_HORIZONTAL","IfcWindowTypeEnum","WINDOW","SKYLIGHT","LIGHTDOME","IfcWindowTypePartitioningEnum","IfcWorkCalendarTypeEnum","FIRSTSHIFT","SECONDSHIFT","THIRDSHIFT","IfcWorkPlanTypeEnum","ACTUAL","BASELINE","PLANNED","IfcWorkScheduleTypeEnum","expressID","GlobalId","OwnerHistory","Name","Description","ObjectType","Identification","PredefinedType","Status","LongDescription","tape","TheActor","Role","UserDefinedRole","ObjectPlacement","Representation","Tag","ApplicableOccurrence","HasPropertySets","RepresentationMaps","ElementType","Purpose","UserDefinedPurpose","Outer","Voids","Bounds","FaceSurface","SameSense","Axis","StartDistAlong","Segments","TangentialContinuity","StartTag","EndTag","CurveGeometry","HorizontalLength","StartHeight","StartGradient","Radius","IsConvex","ParabolaConstant","Horizontal","Vertical","OuterBoundary","InnerBoundaries","ApplicationDeveloper","Version","ApplicationFullName","ApplicationIdentifier","AppliedValue","UnitBasis","ApplicableDate","FixedUntilDate","Category","Condition","ArithmeticOperator","Components","Identifier","TimeOfApproval","Level","Qualifier","RequestingApproval","GivingApproval","RelatingApproval","RelatedApprovals","ProfileType","ProfileName","OuterCurve","Curve","InnerCurves","OriginalValue","CurrentValue","TotalReplacementCost","Owner","User","ResponsiblePerson","IncorporationDate","DepreciatedValue","Position","BottomFlangeWidth","OverallDepth","WebThickness","BottomFlangeThickness","BottomFlangeFilletRadius","TopFlangeWidth","TopFlangeThickness","TopFlangeFilletRadius","BottomFlangeEdgeRadius","BottomFlangeSlope","TopFlangeEdgeRadius","TopFlangeSlope","Location","RefDirection","Degree","ControlPointsList","CurveForm","ClosedCurve","SelfIntersect","KnotMultiplicities","Knots","KnotSpec","UDegree","VDegree","SurfaceForm","UClosed","VClosed","UMultiplicities","VMultiplicities","UKnots","VKnots","RepeatS","RepeatT","Mode","TextureTransform","Parameter","RasterFormat","RasterCode","XLength","YLength","ZLength","Operator","FirstOperand","SecondOperand","TranslationalStiffnessByLengthX","TranslationalStiffnessByLengthY","TranslationalStiffnessByLengthZ","RotationalStiffnessByLengthX","RotationalStiffnessByLengthY","RotationalStiffnessByLengthZ","TranslationalStiffnessByAreaX","TranslationalStiffnessByAreaY","TranslationalStiffnessByAreaZ","TranslationalStiffnessX","TranslationalStiffnessY","TranslationalStiffnessZ","RotationalStiffnessX","RotationalStiffnessY","RotationalStiffnessZ","WarpingStiffness","Corner","XDim","YDim","ZDim","BaseSurface","AgreementFlag","Enclosure","LongName","CompositionType","ElevationOfRefHeight","ElevationOfTerrain","BuildingAddress","Elevation","Depth","Width","WallThickness","Girth","InternalFilletRadius","Coordinates","CoordList","TagList","Axis1","Axis2","LocalOrigin","Scale","Scale2","Axis3","Scale3","Thickness","StartPoint","StartDirection","SegmentLength","IsCCW","Source","Edition","EditionDate","ReferenceTokens","ReferencedSource","Sort","CfsFaces","Red","Green","Blue","ColourList","UsageName","HasProperties","TemplateType","HasPropertyTemplates","Transition","ParentCurve","Profiles","Label","CurveOnRelatingElement","CurveOnRelatedElement","PointOnRelatingElement","PointOnRelatedElement","EccentricityInX","EccentricityInY","EccentricityInZ","SurfaceOnRelatingElement","SurfaceOnRelatedElement","VolumeOnRelatingElement","VolumeOnRelatedElement","ConstraintGrade","ConstraintSource","CreatingActor","CreationTime","UserDefinedGrade","Usage","BaseCosts","BaseQuantity","ResourceType","Phase","RepresentationContexts","UnitsInContext","Dimensions","UnitType","ConversionFactor","ConversionOffset","SourceCRS","TargetCRS","GeodeticDatum","VerticalDatum","CostValues","CostQuantities","SubmittedOn","UpdateDate","TreeRootExpression","RelatingMonetaryUnit","RelatedMonetaryUnit","ExchangeRate","RateDateTime","RateSource","BasisSurface","Boundaries","ImplicitOuter","CurveFont","CurveWidth","CurveColour","ModelOrDraughting","PatternList","CurveFontScaling","VisibleSegmentLength","InvisibleSegmentLength","ParentProfile","Elements","UserDefinedType","Unit","Exponent","LengthExponent","MassExponent","TimeExponent","ElectricCurrentExponent","ThermodynamicTemperatureExponent","AmountOfSubstanceExponent","LuminousIntensityExponent","DirectionRatios","DistanceAlong","OffsetLateral","OffsetVertical","OffsetLongitudinal","AlongHorizontal","FlowDirection","SystemType","IntendedUse","Scope","Revision","DocumentOwner","Editors","LastRevisionTime","ElectronicFormat","ValidFrom","ValidUntil","Confidentiality","RelatingDocument","RelatedDocuments","RelationshipType","ReferencedDocument","OverallHeight","OverallWidth","OperationType","UserDefinedOperationType","LiningDepth","LiningThickness","ThresholdDepth","ThresholdThickness","TransomThickness","TransomOffset","LiningOffset","ThresholdOffset","CasingThickness","CasingDepth","ShapeAspectStyle","LiningToPanelOffsetX","LiningToPanelOffsetY","PanelDepth","PanelOperation","PanelWidth","PanelPosition","ConstructionType","ParameterTakesPrecedence","Sizeable","EdgeStart","EdgeEnd","EdgeGeometry","EdgeList","AssemblyPlace","MethodOfMeasurement","Quantities","SemiAxis1","SemiAxis2","EventTriggerType","UserDefinedEventTriggerType","EventOccurenceTime","DataOrigin","UserDefinedDataOrigin","ActualDate","EarlyDate","LateDate","ScheduleDate","ProcessType","Properties","RelatingReference","RelatedResourceObjects","SweptArea","ExtrudedDirection","EndSweptArea","FbsmFaces","Bound","Orientation","TensionFailureX","TensionFailureY","TensionFailureZ","CompressionFailureX","CompressionFailureY","CompressionFailureZ","FillStyles","ModelorDraughting","HatchLineAppearance","StartOfNextHatchLine","PointOfReferenceHatchLine","PatternStart","HatchLineAngle","TilingPattern","Tiles","TilingScale","Directrix","StartParam","EndParam","FixedReference","ContextIdentifier","ContextType","CoordinateSpaceDimension","Precision","WorldCoordinateSystem","TrueNorth","ParentContext","TargetScale","TargetView","UserDefinedTargetView","UAxes","VAxes","WAxes","AxisTag","AxisCurve","PlacementRelTo","PlacementLocation","PlacementRefDirection","FlangeThickness","FilletRadius","FlangeEdgeRadius","FlangeSlope","URLReference","MappedTo","Opacity","Colours","ColourIndex","Points","CoordIndex","InnerCoordIndices","Maps","TexCoords","TexCoordIndex","Curve3D","AssociatedGeometry","MasterRepresentation","Jurisdiction","ResponsiblePersons","LastUpdateDate","StartTime","EndTime","TimeSeriesDataType","Values","TimeStamp","ListValues","EdgeRadius","LegSlope","LagValue","DurationType","Publisher","VersionDate","Language","ReferencedLibrary","MainPlaneAngle","SecondaryPlaneAngle","LuminousIntensity","LightDistributionCurve","DistributionData","LightColour","AmbientIntensity","Intensity","ColourAppearance","ColourTemperature","LuminousFlux","LightEmissionSource","LightDistributionDataSource","ConstantAttenuation","DistanceAttenuation","QuadricAttenuation","ConcentrationExponent","SpreadAngle","BeamWidthAngle","Pnt","Dir","PlacementMeasuredAlong","Distance","CartesianPosition","RelativePlacement","Eastings","Northings","OrthogonalHeight","XAxisAbscissa","XAxisOrdinate","MappingSource","MappingTarget","MaterialClassifications","ClassifiedMaterial","Material","Fraction","MaterialConstituents","Representations","RepresentedMaterial","LayerThickness","IsVentilated","Priority","MaterialLayers","LayerSetName","ForLayerSet","LayerSetDirection","DirectionSense","OffsetFromReferenceLine","ReferenceExtent","OffsetDirection","OffsetValues","Materials","Profile","MaterialProfiles","CompositeProfile","ForProfileSet","CardinalPoint","ForProfileEndSet","CardinalEndPoint","RelatingMaterial","RelatedMaterials","Expression","ValueComponent","UnitComponent","NominalDiameter","NominalLength","Benchmark","ValueSource","DataValue","ReferencePath","Currency","BenchmarkValues","LogicalAggregator","ObjectiveQualifier","UserDefinedQualifier","BasisCurve","Roles","Addresses","RelatingOrganization","RelatedOrganizations","LateralAxisDirection","VerticalAxisDirection","EdgeElement","OwningUser","OwningApplication","State","ChangeAction","LastModifiedDate","LastModifyingUser","LastModifyingApplication","CreationDate","ReferenceCurve","LifeCyclePhase","FrameDepth","FrameThickness","FamilyName","GivenName","MiddleNames","PrefixTitles","SuffixTitles","ThePerson","TheOrganization","HasQuantities","Discrimination","Quality","Height","ColourComponents","Pixel","SizeInX","SizeInY","Placement","PointParameter","PointParameterU","PointParameterV","Polygon","PolygonalBoundary","Closed","Faces","PnIndex","InternalLocation","AddressLines","PostalBox","Town","Region","PostalCode","Country","AssignedItems","LayerOn","LayerFrozen","LayerBlocked","LayerStyles","Styles","ProfileDefinition","MapProjection","MapZone","MapUnit","UpperBoundValue","LowerBoundValue","SetPointValue","DependingProperty","DependantProperty","EnumerationValues","EnumerationReference","PropertyReference","ApplicableEntity","NominalValue","DefiningValues","DefinedValues","DefiningUnit","DefinedUnit","CurveInterpolation","ProxyType","AreaValue","Formula","CountValue","LengthValue","TimeValue","VolumeValue","WeightValue","WeightsData","InnerFilletRadius","OuterFilletRadius","U1","V1","U2","V2","Usense","Vsense","RecurrenceType","DayComponent","WeekdayComponent","MonthComponent","Interval","Occurrences","TimePeriods","TypeIdentifier","AttributeIdentifier","InstanceName","ListPositions","InnerReference","RestartDistance","TimeStep","TotalCrossSectionArea","SteelGrade","BarSurface","EffectiveDepth","NominalBarDiameter","BarCount","DefinitionType","ReinforcementSectionDefinitions","CrossSectionArea","BarLength","BendingShapeCode","BendingParameters","MeshLength","MeshWidth","LongitudinalBarNominalDiameter","TransverseBarNominalDiameter","LongitudinalBarCrossSectionArea","TransverseBarCrossSectionArea","LongitudinalBarSpacing","TransverseBarSpacing","RelatingObject","RelatedObjects","RelatedObjectsType","RelatingActor","ActingRole","RelatingControl","RelatingGroup","Factor","RelatingProcess","QuantityInProcess","RelatingProduct","RelatingResource","RelatingClassification","Intent","RelatingConstraint","RelatingLibrary","ConnectionGeometry","RelatingElement","RelatedElement","RelatingPriorities","RelatedPriorities","RelatedConnectionType","RelatingConnectionType","RelatingPort","RelatedPort","RealizingElement","RelatedStructuralActivity","RelatingStructuralMember","RelatedStructuralConnection","AppliedCondition","AdditionalConditions","SupportedLength","ConditionCoordinateSystem","ConnectionConstraint","RealizingElements","ConnectionType","RelatedElements","RelatingStructure","RelatingBuildingElement","RelatedCoverings","RelatingSpace","RelatingContext","RelatedDefinitions","RelatingPropertyDefinition","RelatedPropertySets","RelatingTemplate","RelatingType","RelatingOpeningElement","RelatedBuildingElement","RelatedControlElements","RelatingFlowElement","InterferenceGeometry","InterferenceType","ImpliedOrder","RelatingPositioningElement","RelatedProducts","RelatedFeatureElement","RelatedProcess","TimeLag","SequenceType","UserDefinedSequenceType","RelatingSystem","RelatedBuildings","PhysicalOrVirtualBoundary","InternalOrExternalBoundary","ParentBoundary","CorrespondingBoundary","RelatedOpeningElement","ParamLength","ContextOfItems","RepresentationIdentifier","RepresentationType","Items","MappingOrigin","MappedRepresentation","ScheduleWork","ScheduleUsage","ScheduleStart","ScheduleFinish","ScheduleContour","LevelingDelay","IsOverAllocated","StatusTime","ActualWork","ActualUsage","ActualStart","ActualFinish","RemainingWork","RemainingUsage","Completion","Angle","BottomRadius","RoundingRadius","Prefix","SectionType","StartProfile","EndProfile","LongitudinalStartPosition","LongitudinalEndPosition","TransversePosition","ReinforcementRole","SectionDefinition","CrossSectionReinforcementDefinitions","CrossSections","CrossSectionPositions","FixedAxisVertical","SpineCurve","ShapeRepresentations","ProductDefinitional","PartOfProductDefinitionShape","SbsmBoundary","PrimaryMeasureType","SecondaryMeasureType","Enumerators","PrimaryUnit","SecondaryUnit","AccessState","RefLatitude","RefLongitude","RefElevation","LandTitleNumber","SiteAddress","SlippageX","SlippageY","SlippageZ","ElevationWithFlooring","NumberOfRisers","NumberOfTreads","RiserHeight","TreadLength","AppliedLoad","GlobalOrLocal","DestabilizingLoad","OrientationOf2DPlane","LoadedBy","HasResults","SharedPlacement","ProjectedOrTrue","ActionType","ActionSource","Coefficient","SelfWeightCoefficients","Locations","LinearForceX","LinearForceY","LinearForceZ","LinearMomentX","LinearMomentY","LinearMomentZ","PlanarForceX","PlanarForceY","PlanarForceZ","DisplacementX","DisplacementY","DisplacementZ","RotationalDisplacementRX","RotationalDisplacementRY","RotationalDisplacementRZ","Distortion","ForceX","ForceY","ForceZ","MomentX","MomentY","MomentZ","WarpingMoment","DeltaTConstant","DeltaTY","DeltaTZ","TheoryType","ResultForLoadGroup","IsLinear","Item","ParentEdge","ReferenceSurface","SweptCurve","AxisPosition","SurfaceReinforcement1","SurfaceReinforcement2","ShearReinforcement","Side","DiffuseTransmissionColour","DiffuseReflectionColour","TransmissionColour","ReflectanceColour","RefractionIndex","DispersionFactor","SurfaceColour","Transparency","DiffuseColour","ReflectionColour","SpecularColour","SpecularHighlight","ReflectanceMethod","Textures","InnerRadius","FlangeWidth","WebEdgeRadius","WebSlope","Rows","Columns","RowCells","IsHeading","WorkMethod","IsMilestone","TaskTime","ScheduleDuration","EarlyStart","EarlyFinish","LateStart","LateFinish","FreeFloat","TotalFloat","IsCritical","ActualDuration","RemainingTime","Recurrence","TelephoneNumbers","FacsimileNumbers","PagerNumber","ElectronicMailAddresses","WWWHomePageURL","MessagingIDs","TensionForce","PreStress","FrictionCoefficient","AnchorageSlip","MinCurvatureRadius","SheathDiameter","Literal","Path","Extent","BoxAlignment","TextCharacterAppearance","TextStyle","TextFontStyle","FontFamily","FontStyle","FontVariant","FontWeight","FontSize","Colour","BackgroundColour","TextIndent","TextAlign","TextDecoration","LetterSpacing","WordSpacing","TextTransform","LineHeight","Vertices","TexCoordsList","MajorRadius","MinorRadius","StartRadius","EndRadius","IsStartRadiusCCW","IsEndRadiusCCW","TransitionCurveType","BottomXDim","TopXDim","TopXOffset","Normals","Flags","Trim1","Trim2","SenseAgreement","Units","Magnitude","LoopVertex","VertexGeometry","IntersectingAxes","OffsetDistances","PartitioningType","UserDefinedPartitioningType","MullionThickness","FirstTransomOffset","SecondTransomOffset","FirstMullionOffset","SecondMullionOffset","WorkingTimes","ExceptionTimes","Creators","Duration","FinishTime","RecurrencePattern","Start","Finish","WebIFCWasm","IfcAPI","wasmModule","fs","__this","__arguments","generator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","noInitialRun","sent","stop","fulfilled","step","rejected","throw","settings","COORDINATE_TO_ORIGIN","USE_FAST_BOOLS","CIRCLE_SEGMENTS_LOW","CIRCLE_SEGMENTS_MEDIUM","CIRCLE_SEGMENTS_HIGH","OpenModel","CreateModel","modelID","ExportFileAsIFC","geometryExpressID","GetGeometry","flatten","undefined","rawLineData","GetRawLineData","lineData","FlattenLine","lineObject","_this","propertyName","property","WriteLine","isArray","ToTape","WriteRawLineData","_this2","GetLine","GetLineIDsWithType","GetAllLines","transformationMatrix","SetGeometryTransformation","getSubArray","sizeBytes","CloseModel","meshCallback","StreamAllMeshes","IsModelOpen","LoadAllGeometry","GetFlatMesh","IdAttrName","merge","geoms","createGroups","mergeBufferGeometries","newFloatAttr","BufferAttribute","DEFAULT","PropsNames","aggregates","relating","related","spatial","psets","materials","IFCParser","state","BVH","loadedModels","currentWebIfcID","currentModelID","_parse","_asyncToGenerator","api","Init","newIfcModel","abrupt","loadAllGeometry","_x","webIfcSettings","useJSON","models","mesh","items","jsonData","saveAllPlacedGeometriesByMaterial","generateAllGeometriesByMaterial","_this$getGeometryAndM","getGeometryAndMaterials","geometry","applyThreeMeshBVH","Mesh","mergedByMaterial","materialID","material","geometries","values","flatMeshes","flatMesh","placedGeom","j","savePlacedGeometry","placedGeometry","getBufferGeometry","computeVertexNormals","matrix","getMeshMatrix","flatTransformation","applyMatrix4","saveGeometryByMaterial","placed","vertexData","getVertices","indices","getIndices","_this$extractVertexDa","extractVertexData","vertices","normals","ifcGeomToBufferGeom","vData","GetVertexData","vDataSize","GetVertexDataSize","GetVertexArray","iData","GetIndexData","iDataSize","GetIndexDataSize","GetIndexArray","mat","Matrix4","fromArray","indexData","BufferGeometry","setAttribute","setIndex","isNormalData","geom","color","colorID","y","z","w","storeGeometryAttribute","createMaterial","item","currentGeom","merged","attributes","idAttribute","fill","newIntAttr","col","Color","newMaterial","MeshLambertMaterial","side","DoubleSide","transparent","opacity","SubsetManager","selected","currentMat","matIDNoConfig","remove","config","isConfigValid","isPreviousSelection","isEasySelection","addToPreviousSelection","updatePreviousSelection","scene","createSelectionInScene","filtered","_this$getGeomAndMat","getGeomAndMat","geomsByMaterial","isDefMaterial","isDefaultMat","getMergedGeometry","mats","matID","add","hasDefaultMaterial","isValid","ids","removePrevious","previous","newSelectionGroup","Set","containsIds","previousIds","JSON","stringify","newIds","every","flat","previousGeom","_toConsumableArray","filterGeometries","selectedIDs","includes","parseInt","reduce","_objectSpread","_defineProperty","uuid","IfcElements","IfcTypesMap","PropertyManager","faceIndex","geoIndex","getX","recursive","verbose","getAllItemsOfTypeJSON","getAllItemsOfTypeWebIfcAPI","elementID","getPropertyJSON","getPropertyWebIfcAPI","getSpatialStructureJSON","getSpatialStructureWebIfcAPI","getSpatialTreeChunks","projectID","project","newIfcProject","getSpatialNode","typeName","filterJSONItemsByType","numKey","toUpperCase","propName","resultIDs","getAllRelatedItemsOfTypeJSON","getItemsByIDJSON","getJSONReferencesRecursively","jsonObject","getJSONItem","getMultipleJSONItems","_this3","getAllRelatedItemsOfTypeWebIfcAPI","_this4","lines","children","treeChunks","getChunksJSON","getChunksWebIfcAPI","propNames","_this5","rel","saveChunk","relation","getChildren","_this6","child","newNode","getNodeType","typeID","_this7","IDs","isRelated","getRelated","element","ele","relatedItems","TypeManager","getAllTypesOfModel","_this8","modelIdCounter","nullIfcManagerErrorMessage","IFCModel","_Mesh","_inherits","_super","_createSuper","_this9","ifcManager","_assertThisInitialized","manager","setWasmPath","getExpressId","getAllItemsOfType","getItemProperties","getPropertySets","getTypeProperties","getIfcType","getSpatialStructure","getSubset","removeSubset","modelConfig","createSubset","hideItems","hideAllItems","showItems","showAllItems","BvhManager","computeBoundsTree","disposeBoundsTree","acceleratedRaycast","setupThreeMeshBVH","raycast","ItemsHider","modelCoordinates","expressIDCoordinatesMap","getAttributes","initializeCoordinates","editCoordinates","hide","coords","getCoordinates","initial","needsUpdate","resetCoordinates","coordinates","IFCManager","parser","subsets","hider","_parse2","_callee2","model","_context2","parse","disposeMemory","getAllTypes","processCoordinates","setIFCManager","_x2","SetWasmPath","initializeMeshBVH","getMaterialsProperties","IFCLoader","_Loader","_super2","_this10","onLoad","onProgress","onError","scope","loader","FileLoader","setPath","setResponseType","requestHeader","setWithCredentials","withCredentials","load","_ref","_callee3","_context3","t0","t1","t2","itemError","_x3","Loader","webpackEmptyContext","req"],"sourceRoot":""}