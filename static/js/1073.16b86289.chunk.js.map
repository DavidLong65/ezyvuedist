{"version":3,"file":"static/js/1073.16b86289.chunk.js","mappings":"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","sources":["ezyvuecore/three/examples/jsm/loaders/ColladaLoader.js"],"sourcesContent":["import {\r\n\tAmbientLight,\r\n\tAnimationClip,\r\n\tBone,\r\n\tBufferGeometry,\r\n\tClampToEdgeWrapping,\r\n\tColor,\r\n\tDirectionalLight,\r\n\tDoubleSide,\r\n\tFileLoader,\r\n\tFloat32BufferAttribute,\r\n\tFrontSide,\r\n\tGroup,\r\n\tLine,\r\n\tLineBasicMaterial,\r\n\tLineSegments,\r\n\tLoader,\r\n\tLoaderUtils,\r\n\tMathUtils,\r\n\tMatrix4,\r\n\tMesh,\r\n\tMeshBasicMaterial,\r\n\tMeshLambertMaterial,\r\n\tMeshPhongMaterial,\r\n\tOrthographicCamera,\r\n\tPerspectiveCamera,\r\n\tPointLight,\r\n\tQuaternion,\r\n\tQuaternionKeyframeTrack,\r\n\tRepeatWrapping,\r\n\tScene,\r\n\tSkeleton,\r\n\tSkinnedMesh,\r\n\tSpotLight,\r\n\tTextureLoader,\r\n\tVector2,\r\n\tVector3,\r\n\tVectorKeyframeTrack,\r\n\tsRGBEncoding\r\n} from '../../../build/three';\r\n\r\nimport { TGALoader } from '../loaders/TGALoader.js';\r\n\r\nclass ColladaLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst path = ( scope.path === '' ) ? LoaderUtils.extractUrlBase( url ) : scope.path;\r\n\r\n\t\tconst loader = new FileLoader( scope.manager );\r\n\t\tloader.setPath( scope.path );\r\n\t\tloader.setRequestHeader( scope.requestHeader );\r\n\t\tloader.setWithCredentials( scope.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( text, path ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tparse( text, path ) {\r\n\r\n\t\tfunction getElementsByTagName( xml, name ) {\r\n\r\n\t\t\t// Non recursive xml.getElementsByTagName() ...\r\n\r\n\t\t\tconst array = [];\r\n\t\t\tconst childNodes = xml.childNodes;\r\n\r\n\t\t\tfor ( let i = 0, l = childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeName === name ) {\r\n\r\n\t\t\t\t\tarray.push( child );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseStrings( text ) {\r\n\r\n\t\t\tif ( text.length === 0 ) return [];\r\n\r\n\t\t\tconst parts = text.trim().split( /\\s+/ );\r\n\t\t\tconst array = new Array( parts.length );\r\n\r\n\t\t\tfor ( let i = 0, l = parts.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = parts[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseFloats( text ) {\r\n\r\n\t\t\tif ( text.length === 0 ) return [];\r\n\r\n\t\t\tconst parts = text.trim().split( /\\s+/ );\r\n\t\t\tconst array = new Array( parts.length );\r\n\r\n\t\t\tfor ( let i = 0, l = parts.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = parseFloat( parts[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseInts( text ) {\r\n\r\n\t\t\tif ( text.length === 0 ) return [];\r\n\r\n\t\t\tconst parts = text.trim().split( /\\s+/ );\r\n\t\t\tconst array = new Array( parts.length );\r\n\r\n\t\t\tfor ( let i = 0, l = parts.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = parseInt( parts[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseId( text ) {\r\n\r\n\t\t\treturn text.substring( 1 );\r\n\r\n\t\t}\r\n\r\n\t\tfunction generateId() {\r\n\r\n\t\t\treturn 'three_default_' + ( count ++ );\r\n\r\n\t\t}\r\n\r\n\t\tfunction isEmpty( object ) {\r\n\r\n\t\t\treturn Object.keys( object ).length === 0;\r\n\r\n\t\t}\r\n\r\n\t\t// asset\r\n\r\n\t\tfunction parseAsset( xml ) {\r\n\r\n\t\t\treturn {\r\n\t\t\t\tunit: parseAssetUnit( getElementsByTagName( xml, 'unit' )[ 0 ] ),\r\n\t\t\t\tupAxis: parseAssetUpAxis( getElementsByTagName( xml, 'up_axis' )[ 0 ] )\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseAssetUnit( xml ) {\r\n\r\n\t\t\tif ( ( xml !== undefined ) && ( xml.hasAttribute( 'meter' ) === true ) ) {\r\n\r\n\t\t\t\treturn parseFloat( xml.getAttribute( 'meter' ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn 1; // default 1 meter\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseAssetUpAxis( xml ) {\r\n\r\n\t\t\treturn xml !== undefined ? xml.textContent : 'Y_UP';\r\n\r\n\t\t}\r\n\r\n\t\t// library\r\n\r\n\t\tfunction parseLibrary( xml, libraryName, nodeName, parser ) {\r\n\r\n\t\t\tconst library = getElementsByTagName( xml, libraryName )[ 0 ];\r\n\r\n\t\t\tif ( library !== undefined ) {\r\n\r\n\t\t\t\tconst elements = getElementsByTagName( library, nodeName );\r\n\r\n\t\t\t\tfor ( let i = 0; i < elements.length; i ++ ) {\r\n\r\n\t\t\t\t\tparser( elements[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildLibrary( data, builder ) {\r\n\r\n\t\t\tfor ( const name in data ) {\r\n\r\n\t\t\t\tconst object = data[ name ];\r\n\t\t\t\tobject.build = builder( data[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// get\r\n\r\n\t\tfunction getBuild( data, builder ) {\r\n\r\n\t\t\tif ( data.build !== undefined ) return data.build;\r\n\r\n\t\t\tdata.build = builder( data );\r\n\r\n\t\t\treturn data.build;\r\n\r\n\t\t}\r\n\r\n\t\t// animation\r\n\r\n\t\tfunction parseAnimation( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tsources: {},\r\n\t\t\t\tsamplers: {},\r\n\t\t\t\tchannels: {}\r\n\t\t\t};\r\n\r\n\t\t\tlet hasChildren = false;\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tlet id;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'source':\r\n\t\t\t\t\t\tid = child.getAttribute( 'id' );\r\n\t\t\t\t\t\tdata.sources[ id ] = parseSource( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'sampler':\r\n\t\t\t\t\t\tid = child.getAttribute( 'id' );\r\n\t\t\t\t\t\tdata.samplers[ id ] = parseAnimationSampler( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'channel':\r\n\t\t\t\t\t\tid = child.getAttribute( 'target' );\r\n\t\t\t\t\t\tdata.channels[ id ] = parseAnimationChannel( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'animation':\r\n\t\t\t\t\t\t// hierarchy of related animations\r\n\t\t\t\t\t\tparseAnimation( child );\r\n\t\t\t\t\t\thasChildren = true;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.log( child );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasChildren === false ) {\r\n\r\n\t\t\t\t// since 'id' attributes can be optional, it's necessary to generate a UUID for unqiue assignment\r\n\r\n\t\t\t\tlibrary.animations[ xml.getAttribute( 'id' ) || MathUtils.generateUUID() ] = data;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseAnimationSampler( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tinputs: {},\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'input':\r\n\t\t\t\t\t\tconst id = parseId( child.getAttribute( 'source' ) );\r\n\t\t\t\t\t\tconst semantic = child.getAttribute( 'semantic' );\r\n\t\t\t\t\t\tdata.inputs[ semantic ] = id;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseAnimationChannel( xml ) {\r\n\r\n\t\t\tconst data = {};\r\n\r\n\t\t\tconst target = xml.getAttribute( 'target' );\r\n\r\n\t\t\t// parsing SID Addressing Syntax\r\n\r\n\t\t\tlet parts = target.split( '/' );\r\n\r\n\t\t\tconst id = parts.shift();\r\n\t\t\tlet sid = parts.shift();\r\n\r\n\t\t\t// check selection syntax\r\n\r\n\t\t\tconst arraySyntax = ( sid.indexOf( '(' ) !== - 1 );\r\n\t\t\tconst memberSyntax = ( sid.indexOf( '.' ) !== - 1 );\r\n\r\n\t\t\tif ( memberSyntax ) {\r\n\r\n\t\t\t\t//  member selection access\r\n\r\n\t\t\t\tparts = sid.split( '.' );\r\n\t\t\t\tsid = parts.shift();\r\n\t\t\t\tdata.member = parts.shift();\r\n\r\n\t\t\t} else if ( arraySyntax ) {\r\n\r\n\t\t\t\t// array-access syntax. can be used to express fields in one-dimensional vectors or two-dimensional matrices.\r\n\r\n\t\t\t\tconst indices = sid.split( '(' );\r\n\t\t\t\tsid = indices.shift();\r\n\r\n\t\t\t\tfor ( let i = 0; i < indices.length; i ++ ) {\r\n\r\n\t\t\t\t\tindices[ i ] = parseInt( indices[ i ].replace( /\\)/, '' ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.indices = indices;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdata.id = id;\r\n\t\t\tdata.sid = sid;\r\n\r\n\t\t\tdata.arraySyntax = arraySyntax;\r\n\t\t\tdata.memberSyntax = memberSyntax;\r\n\r\n\t\t\tdata.sampler = parseId( xml.getAttribute( 'source' ) );\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildAnimation( data ) {\r\n\r\n\t\t\tconst tracks = [];\r\n\r\n\t\t\tconst channels = data.channels;\r\n\t\t\tconst samplers = data.samplers;\r\n\t\t\tconst sources = data.sources;\r\n\r\n\t\t\tfor ( const target in channels ) {\r\n\r\n\t\t\t\tif ( Object.prototype.hasOwnProperty.call(channels, target ) ) {\r\n\r\n\t\t\t\t\tconst channel = channels[ target ];\r\n\t\t\t\t\tconst sampler = samplers[ channel.sampler ];\r\n\r\n\t\t\t\t\tconst inputId = sampler.inputs.INPUT;\r\n\t\t\t\t\tconst outputId = sampler.inputs.OUTPUT;\r\n\r\n\t\t\t\t\tconst inputSource = sources[ inputId ];\r\n\t\t\t\t\tconst outputSource = sources[ outputId ];\r\n\r\n\t\t\t\t\tconst animation = buildAnimationChannel( channel, inputSource, outputSource );\r\n\r\n\t\t\t\t\tcreateKeyframeTracks( animation, tracks );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn tracks;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getAnimation( id ) {\r\n\r\n\t\t\treturn getBuild( library.animations[ id ], buildAnimation );\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildAnimationChannel( channel, inputSource, outputSource ) {\r\n\r\n\t\t\tconst node = library.nodes[ channel.id ];\r\n\t\t\tconst object3D = getNode( node.id );\r\n\r\n\t\t\tconst transform = node.transforms[ channel.sid ];\r\n\t\t\tconst defaultMatrix = node.matrix.clone().transpose();\r\n\r\n\t\t\tlet time, stride;\r\n\t\t\tlet i, il, j, jl;\r\n\r\n\t\t\tconst data = {};\r\n\r\n\t\t\t// the collada spec allows the animation of data in various ways.\r\n\t\t\t// depending on the transform type (matrix, translate, rotate, scale), we execute different logic\r\n\r\n\t\t\tswitch ( transform ) {\r\n\r\n\t\t\t\tcase 'matrix':\r\n\r\n\t\t\t\t\tfor ( i = 0, il = inputSource.array.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\ttime = inputSource.array[ i ];\r\n\t\t\t\t\t\tstride = i * outputSource.stride;\r\n\r\n\t\t\t\t\t\tif ( data[ time ] === undefined ) data[ time ] = {};\r\n\r\n\t\t\t\t\t\tif ( channel.arraySyntax === true ) {\r\n\r\n\t\t\t\t\t\t\tconst value = outputSource.array[ stride ];\r\n\t\t\t\t\t\t\tconst index = channel.indices[ 0 ] + 4 * channel.indices[ 1 ];\r\n\r\n\t\t\t\t\t\t\tdata[ time ][ index ] = value;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0, jl = outputSource.stride; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tdata[ time ][ j ] = outputSource.array[ stride + j ];\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'translate':\r\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'rotate':\r\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'scale':\r\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst keyframes = prepareAnimationData( data, defaultMatrix );\r\n\r\n\t\t\tconst animation = {\r\n\t\t\t\tname: object3D.uuid,\r\n\t\t\t\tkeyframes: keyframes\r\n\t\t\t};\r\n\r\n\t\t\treturn animation;\r\n\r\n\t\t}\r\n\r\n\t\tfunction prepareAnimationData( data, defaultMatrix ) {\r\n\r\n\t\t\tconst keyframes = [];\r\n\r\n\t\t\t// transfer data into a sortable array\r\n\r\n\t\t\tfor ( const time in data ) {\r\n\r\n\t\t\t\tkeyframes.push( { time: parseFloat( time ), value: data[ time ] } );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// ensure keyframes are sorted by time\r\n\r\n\t\t\tkeyframes.sort( ascending );\r\n\r\n\t\t\t// now we clean up all animation data, so we can use them for keyframe tracks\r\n\r\n\t\t\tfor ( let i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\t\ttransformAnimationData( keyframes, i, defaultMatrix.elements[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn keyframes;\r\n\r\n\t\t\t// array sort function\r\n\r\n\t\t\tfunction ascending( a, b ) {\r\n\r\n\t\t\t\treturn a.time - b.time;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst position = new Vector3();\r\n\t\tconst scale = new Vector3();\r\n\t\tconst quaternion = new Quaternion();\r\n\r\n\t\tfunction createKeyframeTracks( animation, tracks ) {\r\n\r\n\t\t\tconst keyframes = animation.keyframes;\r\n\t\t\tconst name = animation.name;\r\n\r\n\t\t\tconst times = [];\r\n\t\t\tconst positionData = [];\r\n\t\t\tconst quaternionData = [];\r\n\t\t\tconst scaleData = [];\r\n\r\n\t\t\tfor ( let i = 0, l = keyframes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst keyframe = keyframes[ i ];\r\n\r\n\t\t\t\tconst time = keyframe.time;\r\n\t\t\t\tconst value = keyframe.value;\r\n\r\n\t\t\t\tmatrix.fromArray( value ).transpose();\r\n\t\t\t\tmatrix.decompose( position, quaternion, scale );\r\n\r\n\t\t\t\ttimes.push( time );\r\n\t\t\t\tpositionData.push( position.x, position.y, position.z );\r\n\t\t\t\tquaternionData.push( quaternion.x, quaternion.y, quaternion.z, quaternion.w );\r\n\t\t\t\tscaleData.push( scale.x, scale.y, scale.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( positionData.length > 0 ) tracks.push( new VectorKeyframeTrack( name + '.position', times, positionData ) );\r\n\t\t\tif ( quaternionData.length > 0 ) tracks.push( new QuaternionKeyframeTrack( name + '.quaternion', times, quaternionData ) );\r\n\t\t\tif ( scaleData.length > 0 ) tracks.push( new VectorKeyframeTrack( name + '.scale', times, scaleData ) );\r\n\r\n\t\t\treturn tracks;\r\n\r\n\t\t}\r\n\r\n\t\tfunction transformAnimationData( keyframes, property, defaultValue ) {\r\n\r\n\t\t\tlet keyframe;\r\n\r\n\t\t\tlet empty = true;\r\n\t\t\tlet i, l;\r\n\r\n\t\t\t// check, if values of a property are missing in our keyframes\r\n\r\n\t\t\tfor ( i = 0, l = keyframes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tkeyframe = keyframes[ i ];\r\n\r\n\t\t\t\tif ( keyframe.value[ property ] === undefined ) {\r\n\r\n\t\t\t\t\tkeyframe.value[ property ] = null; // mark as missing\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tempty = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( empty === true ) {\r\n\r\n\t\t\t\t// no values at all, so we set a default value\r\n\r\n\t\t\t\tfor ( i = 0, l = keyframes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tkeyframe = keyframes[ i ];\r\n\r\n\t\t\t\t\tkeyframe.value[ property ] = defaultValue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// filling gaps\r\n\r\n\t\t\t\tcreateMissingKeyframes( keyframes, property );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction createMissingKeyframes( keyframes, property ) {\r\n\r\n\t\t\tlet prev, next;\r\n\r\n\t\t\tfor ( let i = 0, l = keyframes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst keyframe = keyframes[ i ];\r\n\r\n\t\t\t\tif ( keyframe.value[ property ] === null ) {\r\n\r\n\t\t\t\t\tprev = getPrev( keyframes, i, property );\r\n\t\t\t\t\tnext = getNext( keyframes, i, property );\r\n\r\n\t\t\t\t\tif ( prev === null ) {\r\n\r\n\t\t\t\t\t\tkeyframe.value[ property ] = next.value[ property ];\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( next === null ) {\r\n\r\n\t\t\t\t\t\tkeyframe.value[ property ] = prev.value[ property ];\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tinterpolate( keyframe, prev, next, property );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction getPrev( keyframes, i, property ) {\r\n\r\n\t\t\twhile ( i >= 0 ) {\r\n\r\n\t\t\t\tconst keyframe = keyframes[ i ];\r\n\r\n\t\t\t\tif ( keyframe.value[ property ] !== null ) return keyframe;\r\n\r\n\t\t\t\ti --;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getNext( keyframes, i, property ) {\r\n\r\n\t\t\twhile ( i < keyframes.length ) {\r\n\r\n\t\t\t\tconst keyframe = keyframes[ i ];\r\n\r\n\t\t\t\tif ( keyframe.value[ property ] !== null ) return keyframe;\r\n\r\n\t\t\t\ti ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tfunction interpolate( key, prev, next, property ) {\r\n\r\n\t\t\tif ( ( next.time - prev.time ) === 0 ) {\r\n\r\n\t\t\t\tkey.value[ property ] = prev.value[ property ];\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tkey.value[ property ] = ( ( key.time - prev.time ) * ( next.value[ property ] - prev.value[ property ] ) / ( next.time - prev.time ) ) + prev.value[ property ];\r\n\r\n\t\t}\r\n\r\n\t\t// animation clips\r\n\r\n\t\tfunction parseAnimationClip( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tname: xml.getAttribute( 'id' ) || 'default',\r\n\t\t\t\tstart: parseFloat( xml.getAttribute( 'start' ) || 0 ),\r\n\t\t\t\tend: parseFloat( xml.getAttribute( 'end' ) || 0 ),\r\n\t\t\t\tanimations: []\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'instance_animation':\r\n\t\t\t\t\t\tdata.animations.push( parseId( child.getAttribute( 'url' ) ) );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlibrary.clips[ xml.getAttribute( 'id' ) ] = data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildAnimationClip( data ) {\r\n\r\n\t\t\tconst tracks = [];\r\n\r\n\t\t\tconst name = data.name;\r\n\t\t\tconst duration = ( data.end - data.start ) || - 1;\r\n\t\t\tconst animations = data.animations;\r\n\r\n\t\t\tfor ( let i = 0, il = animations.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tconst animationTracks = getAnimation( animations[ i ] );\r\n\r\n\t\t\t\tfor ( let j = 0, jl = animationTracks.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\ttracks.push( animationTracks[ j ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new AnimationClip( name, duration, tracks );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getAnimationClip( id ) {\r\n\r\n\t\t\treturn getBuild( library.clips[ id ], buildAnimationClip );\r\n\r\n\t\t}\r\n\r\n\t\t// controller\r\n\r\n\t\tfunction parseController( xml ) {\r\n\r\n\t\t\tconst data = {};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'skin':\r\n\t\t\t\t\t\t// there is exactly one skin per controller\r\n\t\t\t\t\t\tdata.id = parseId( child.getAttribute( 'source' ) );\r\n\t\t\t\t\t\tdata.skin = parseSkin( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'morph':\r\n\t\t\t\t\t\tdata.id = parseId( child.getAttribute( 'source' ) );\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Morph target animation not supported yet.' );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlibrary.controllers[ xml.getAttribute( 'id' ) ] = data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseSkin( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tsources: {}\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'bind_shape_matrix':\r\n\t\t\t\t\t\tdata.bindShapeMatrix = parseFloats( child.textContent );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'source':\r\n\t\t\t\t\t\tconst id = child.getAttribute( 'id' );\r\n\t\t\t\t\t\tdata.sources[ id ] = parseSource( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'joints':\r\n\t\t\t\t\t\tdata.joints = parseJoints( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'vertex_weights':\r\n\t\t\t\t\t\tdata.vertexWeights = parseVertexWeights( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseJoints( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tinputs: {}\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'input':\r\n\t\t\t\t\t\tconst semantic = child.getAttribute( 'semantic' );\r\n\t\t\t\t\t\tconst id = parseId( child.getAttribute( 'source' ) );\r\n\t\t\t\t\t\tdata.inputs[ semantic ] = id;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseVertexWeights( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tinputs: {}\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'input':\r\n\t\t\t\t\t\tconst semantic = child.getAttribute( 'semantic' );\r\n\t\t\t\t\t\tconst id = parseId( child.getAttribute( 'source' ) );\r\n\t\t\t\t\t\tconst offset = parseInt( child.getAttribute( 'offset' ) );\r\n\t\t\t\t\t\tdata.inputs[ semantic ] = { id: id, offset: offset };\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'vcount':\r\n\t\t\t\t\t\tdata.vcount = parseInts( child.textContent );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'v':\r\n\t\t\t\t\t\tdata.v = parseInts( child.textContent );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildController( data ) {\r\n\r\n\t\t\tconst build = {\r\n\t\t\t\tid: data.id\r\n\t\t\t};\r\n\r\n\t\t\tconst geometry = library.geometries[ build.id ];\r\n\r\n\t\t\tif ( data.skin !== undefined ) {\r\n\r\n\t\t\t\tbuild.skin = buildSkin( data.skin );\r\n\r\n\t\t\t\t// we enhance the 'sources' property of the corresponding geometry with our skin data\r\n\r\n\t\t\t\tgeometry.sources.skinIndices = build.skin.indices;\r\n\t\t\t\tgeometry.sources.skinWeights = build.skin.weights;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn build;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildSkin( data ) {\r\n\r\n\t\t\tconst BONE_LIMIT = 4;\r\n\r\n\t\t\tconst build = {\r\n\t\t\t\tjoints: [], // this must be an array to preserve the joint order\r\n\t\t\t\tindices: {\r\n\t\t\t\t\tarray: [],\r\n\t\t\t\t\tstride: BONE_LIMIT\r\n\t\t\t\t},\r\n\t\t\t\tweights: {\r\n\t\t\t\t\tarray: [],\r\n\t\t\t\t\tstride: BONE_LIMIT\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tconst sources = data.sources;\r\n\t\t\tconst vertexWeights = data.vertexWeights;\r\n\r\n\t\t\tconst vcount = vertexWeights.vcount;\r\n\t\t\tconst v = vertexWeights.v;\r\n\t\t\tconst jointOffset = vertexWeights.inputs.JOINT.offset;\r\n\t\t\tconst weightOffset = vertexWeights.inputs.WEIGHT.offset;\r\n\r\n\t\t\tconst jointSource = data.sources[ data.joints.inputs.JOINT ];\r\n\t\t\tconst inverseSource = data.sources[ data.joints.inputs.INV_BIND_MATRIX ];\r\n\r\n\t\t\tconst weights = sources[ vertexWeights.inputs.WEIGHT.id ].array;\r\n\t\t\tlet stride = 0;\r\n\r\n\t\t\tlet i, j, l;\r\n\r\n\t\t\t// procces skin data for each vertex\r\n\r\n\t\t\tfor ( i = 0, l = vcount.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst jointCount = vcount[ i ]; // this is the amount of joints that affect a single vertex\r\n\t\t\t\tconst vertexSkinData = [];\r\n\r\n\t\t\t\tfor ( j = 0; j < jointCount; j ++ ) {\r\n\r\n\t\t\t\t\tconst skinIndex = v[ stride + jointOffset ];\r\n\t\t\t\t\tconst weightId = v[ stride + weightOffset ];\r\n\t\t\t\t\tconst skinWeight = weights[ weightId ];\r\n\r\n\t\t\t\t\tvertexSkinData.push( { index: skinIndex, weight: skinWeight } );\r\n\r\n\t\t\t\t\tstride += 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// we sort the joints in descending order based on the weights.\r\n\t\t\t\t// this ensures, we only procced the most important joints of the vertex\r\n\r\n\t\t\t\tvertexSkinData.sort( descending );\r\n\r\n\t\t\t\t// now we provide for each vertex a set of four index and weight values.\r\n\t\t\t\t// the order of the skin data matches the order of vertices\r\n\r\n\t\t\t\tfor ( j = 0; j < BONE_LIMIT; j ++ ) {\r\n\r\n\t\t\t\t\tconst d = vertexSkinData[ j ];\r\n\r\n\t\t\t\t\tif ( d !== undefined ) {\r\n\r\n\t\t\t\t\t\tbuild.indices.array.push( d.index );\r\n\t\t\t\t\t\tbuild.weights.array.push( d.weight );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tbuild.indices.array.push( 0 );\r\n\t\t\t\t\t\tbuild.weights.array.push( 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// setup bind matrix\r\n\r\n\t\t\tif ( data.bindShapeMatrix ) {\r\n\r\n\t\t\t\tbuild.bindMatrix = new Matrix4().fromArray( data.bindShapeMatrix ).transpose();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbuild.bindMatrix = new Matrix4().identity();\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// process bones and inverse bind matrix data\r\n\r\n\t\t\tfor ( i = 0, l = jointSource.array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst name = jointSource.array[ i ];\r\n\t\t\t\tconst boneInverse = new Matrix4().fromArray( inverseSource.array, i * inverseSource.stride ).transpose();\r\n\r\n\t\t\t\tbuild.joints.push( { name: name, boneInverse: boneInverse } );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn build;\r\n\r\n\t\t\t// array sort function\r\n\r\n\t\t\tfunction descending( a, b ) {\r\n\r\n\t\t\t\treturn b.weight - a.weight;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction getController( id ) {\r\n\r\n\t\t\treturn getBuild( library.controllers[ id ], buildController );\r\n\r\n\t\t}\r\n\r\n\t\t// image\r\n\r\n\t\tfunction parseImage( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tinit_from: getElementsByTagName( xml, 'init_from' )[ 0 ].textContent\r\n\t\t\t};\r\n\r\n\t\t\tlibrary.images[ xml.getAttribute( 'id' ) ] = data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildImage( data ) {\r\n\r\n\t\t\tif ( data.build !== undefined ) return data.build;\r\n\r\n\t\t\treturn data.init_from;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getImage( id ) {\r\n\r\n\t\t\tconst data = library.images[ id ];\r\n\r\n\t\t\tif ( data !== undefined ) {\r\n\r\n\t\t\t\treturn getBuild( data, buildImage );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t find image with ID:', id );\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// effect\r\n\r\n\t\tfunction parseEffect( xml ) {\r\n\r\n\t\t\tconst data = {};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'profile_COMMON':\r\n\t\t\t\t\t\tdata.profile = parseEffectProfileCOMMON( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlibrary.effects[ xml.getAttribute( 'id' ) ] = data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseEffectProfileCOMMON( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tsurfaces: {},\r\n\t\t\t\tsamplers: {}\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'newparam':\r\n\t\t\t\t\t\tparseEffectNewparam( child, data );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'technique':\r\n\t\t\t\t\t\tdata.technique = parseEffectTechnique( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'extra':\r\n\t\t\t\t\t\tdata.extra = parseEffectExtra( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseEffectNewparam( xml, data ) {\r\n\r\n\t\t\tconst sid = xml.getAttribute( 'sid' );\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'surface':\r\n\t\t\t\t\t\tdata.surfaces[ sid ] = parseEffectSurface( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'sampler2D':\r\n\t\t\t\t\t\tdata.samplers[ sid ] = parseEffectSampler( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseEffectSurface( xml ) {\r\n\r\n\t\t\tconst data = {};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'init_from':\r\n\t\t\t\t\t\tdata.init_from = child.textContent;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseEffectSampler( xml ) {\r\n\r\n\t\t\tconst data = {};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'source':\r\n\t\t\t\t\t\tdata.source = child.textContent;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseEffectTechnique( xml ) {\r\n\r\n\t\t\tconst data = {};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'constant':\r\n\t\t\t\t\tcase 'lambert':\r\n\t\t\t\t\tcase 'blinn':\r\n\t\t\t\t\tcase 'phong':\r\n\t\t\t\t\t\tdata.type = child.nodeName;\r\n\t\t\t\t\t\tdata.parameters = parseEffectParameters( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'extra':\r\n\t\t\t\t\t\tdata.extra = parseEffectExtra( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseEffectParameters( xml ) {\r\n\r\n\t\t\tconst data = {};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'emission':\r\n\t\t\t\t\tcase 'diffuse':\r\n\t\t\t\t\tcase 'specular':\r\n\t\t\t\t\tcase 'bump':\r\n\t\t\t\t\tcase 'ambient':\r\n\t\t\t\t\tcase 'shininess':\r\n\t\t\t\t\tcase 'transparency':\r\n\t\t\t\t\t\tdata[ child.nodeName ] = parseEffectParameter( child );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'transparent':\r\n\t\t\t\t\t\tdata[ child.nodeName ] = {\r\n\t\t\t\t\t\t\topaque: child.hasAttribute( 'opaque' ) ? child.getAttribute( 'opaque' ) : 'A_ONE',\r\n\t\t\t\t\t\t\tdata: parseEffectParameter( child )\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseEffectParameter( xml ) {\r\n\r\n\t\t\tconst data = {};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'color':\r\n\t\t\t\t\t\tdata[ child.nodeName ] = parseFloats( child.textContent );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'float':\r\n\t\t\t\t\t\tdata[ child.nodeName ] = parseFloat( child.textContent );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'texture':\r\n\t\t\t\t\t\tdata[ child.nodeName ] = { id: child.getAttribute( 'texture' ), extra: parseEffectParameterTexture( child ) };\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseEffectParameterTexture( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\ttechnique: {}\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'extra':\r\n\t\t\t\t\t\tparseEffectParameterTextureExtra( child, data );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseEffectParameterTextureExtra( xml, data ) {\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'technique':\r\n\t\t\t\t\t\tparseEffectParameterTextureExtraTechnique( child, data );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseEffectParameterTextureExtraTechnique( xml, data ) {\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'repeatU':\r\n\t\t\t\t\tcase 'repeatV':\r\n\t\t\t\t\tcase 'offsetU':\r\n\t\t\t\t\tcase 'offsetV':\r\n\t\t\t\t\t\tdata.technique[ child.nodeName ] = parseFloat( child.textContent );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'wrapU':\r\n\t\t\t\t\tcase 'wrapV':\r\n\r\n\t\t\t\t\t\t// some files have values for wrapU/wrapV which become NaN via parseInt\r\n\r\n\t\t\t\t\t\tif ( child.textContent.toUpperCase() === 'TRUE' ) {\r\n\r\n\t\t\t\t\t\t\tdata.technique[ child.nodeName ] = 1;\r\n\r\n\t\t\t\t\t\t} else if ( child.textContent.toUpperCase() === 'FALSE' ) {\r\n\r\n\t\t\t\t\t\t\tdata.technique[ child.nodeName ] = 0;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tdata.technique[ child.nodeName ] = parseInt( child.textContent );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'bump':\r\n\t\t\t\t\t\tdata[ child.nodeName ] = parseEffectExtraTechniqueBump( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseEffectExtra( xml ) {\r\n\r\n\t\t\tconst data = {};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'technique':\r\n\t\t\t\t\t\tdata.technique = parseEffectExtraTechnique( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseEffectExtraTechnique( xml ) {\r\n\r\n\t\t\tconst data = {};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'double_sided':\r\n\t\t\t\t\t\tdata[ child.nodeName ] = parseInt( child.textContent );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'bump':\r\n\t\t\t\t\t\tdata[ child.nodeName ] = parseEffectExtraTechniqueBump( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseEffectExtraTechniqueBump( xml ) {\r\n\r\n\t\t\tconst data = {};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'texture':\r\n\t\t\t\t\t\tdata[ child.nodeName ] = { id: child.getAttribute( 'texture' ), texcoord: child.getAttribute( 'texcoord' ), extra: parseEffectParameterTexture( child ) };\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildEffect( data ) {\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getEffect( id ) {\r\n\r\n\t\t\treturn getBuild( library.effects[ id ], buildEffect );\r\n\r\n\t\t}\r\n\r\n\t\t// material\r\n\r\n\t\tfunction parseMaterial( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tname: xml.getAttribute( 'name' )\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'instance_effect':\r\n\t\t\t\t\t\tdata.url = parseId( child.getAttribute( 'url' ) );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlibrary.materials[ xml.getAttribute( 'id' ) ] = data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getTextureLoader( image ) {\r\n\r\n\t\t\tlet loader;\r\n\r\n\t\t\tlet extension = image.slice( ( image.lastIndexOf( '.' ) - 1 >>> 0 ) + 2 ); // http://www.jstips.co/en/javascript/get-file-extension/\r\n\t\t\textension = extension.toLowerCase();\r\n\r\n\t\t\tswitch ( extension ) {\r\n\r\n\t\t\t\tcase 'tga':\r\n\t\t\t\t\tloader = tgaLoader;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tloader = textureLoader;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn loader;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildMaterial( data ) {\r\n\r\n\t\t\tconst effect = getEffect( data.url );\r\n\t\t\tconst technique = effect.profile.technique;\r\n\r\n\t\t\tlet material;\r\n\r\n\t\t\tswitch ( technique.type ) {\r\n\r\n\t\t\t\tcase 'phong':\r\n\t\t\t\tcase 'blinn':\r\n\t\t\t\t\tmaterial = new MeshPhongMaterial();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'lambert':\r\n\t\t\t\t\tmaterial = new MeshLambertMaterial();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tmaterial = new MeshBasicMaterial();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.name = data.name || '';\r\n\r\n\t\t\tfunction getTexture( textureObject, encoding = null ) {\r\n\r\n\t\t\t\tconst sampler = effect.profile.samplers[ textureObject.id ];\r\n\t\t\t\tlet image = null;\r\n\r\n\t\t\t\t// get image\r\n\r\n\t\t\t\tif ( sampler !== undefined ) {\r\n\r\n\t\t\t\t\tconst surface = effect.profile.surfaces[ sampler.source ];\r\n\t\t\t\t\timage = getImage( surface.init_from );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530).' );\r\n\t\t\t\t\timage = getImage( textureObject.id );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create texture if image is avaiable\r\n\r\n\t\t\t\tif ( image !== null ) {\r\n\r\n\t\t\t\t\tconst loader = getTextureLoader( image );\r\n\r\n\t\t\t\t\tif ( loader !== undefined ) {\r\n\r\n\t\t\t\t\t\tconst texture = loader.load( image );\r\n\r\n\t\t\t\t\t\tconst extra = textureObject.extra;\r\n\r\n\t\t\t\t\t\tif ( extra !== undefined && extra.technique !== undefined && isEmpty( extra.technique ) === false ) {\r\n\r\n\t\t\t\t\t\t\tconst technique = extra.technique;\r\n\r\n\t\t\t\t\t\t\ttexture.wrapS = technique.wrapU ? RepeatWrapping : ClampToEdgeWrapping;\r\n\t\t\t\t\t\t\ttexture.wrapT = technique.wrapV ? RepeatWrapping : ClampToEdgeWrapping;\r\n\r\n\t\t\t\t\t\t\ttexture.offset.set( technique.offsetU || 0, technique.offsetV || 0 );\r\n\t\t\t\t\t\t\ttexture.repeat.set( technique.repeatU || 1, technique.repeatV || 1 );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\ttexture.wrapS = RepeatWrapping;\r\n\t\t\t\t\t\t\ttexture.wrapT = RepeatWrapping;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( encoding !== null ) {\r\n\r\n\t\t\t\t\t\t\ttexture.encoding = encoding;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\treturn texture;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Loader for texture %s not found.', image );\r\n\r\n\t\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t create texture with ID:', textureObject.id );\r\n\r\n\t\t\t\t\treturn null;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst parameters = technique.parameters;\r\n\r\n\t\t\tfor ( const key in parameters ) {\r\n\r\n\t\t\t\tconst parameter = parameters[ key ];\r\n\r\n\t\t\t\tswitch ( key ) {\r\n\r\n\t\t\t\t\tcase 'diffuse':\r\n\t\t\t\t\t\tif ( parameter.color ) material.color.fromArray( parameter.color );\r\n\t\t\t\t\t\tif ( parameter.texture ) material.map = getTexture( parameter.texture, sRGBEncoding );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'specular':\r\n\t\t\t\t\t\tif ( parameter.color && material.specular ) material.specular.fromArray( parameter.color );\r\n\t\t\t\t\t\tif ( parameter.texture ) material.specularMap = getTexture( parameter.texture );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'bump':\r\n\t\t\t\t\t\tif ( parameter.texture ) material.normalMap = getTexture( parameter.texture );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'ambient':\r\n\t\t\t\t\t\tif ( parameter.texture ) material.lightMap = getTexture( parameter.texture, sRGBEncoding );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'shininess':\r\n\t\t\t\t\t\tif ( parameter.float && material.shininess ) material.shininess = parameter.float;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'emission':\r\n\t\t\t\t\t\tif ( parameter.color && material.emissive ) material.emissive.fromArray( parameter.color );\r\n\t\t\t\t\t\tif ( parameter.texture ) material.emissiveMap = getTexture( parameter.texture, sRGBEncoding );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.color.convertSRGBToLinear();\r\n\t\t\tif ( material.specular ) material.specular.convertSRGBToLinear();\r\n\t\t\tif ( material.emissive ) material.emissive.convertSRGBToLinear();\r\n\r\n\t\t\t//\r\n\r\n\t\t\tlet transparent = parameters[ 'transparent' ];\r\n\t\t\tlet transparency = parameters[ 'transparency' ];\r\n\r\n\t\t\t// <transparency> does not exist but <transparent>\r\n\r\n\t\t\tif ( transparency === undefined && transparent ) {\r\n\r\n\t\t\t\ttransparency = {\r\n\t\t\t\t\tfloat: 1\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// <transparent> does not exist but <transparency>\r\n\r\n\t\t\tif ( transparent === undefined && transparency ) {\r\n\r\n\t\t\t\ttransparent = {\r\n\t\t\t\t\topaque: 'A_ONE',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tcolor: [ 1, 1, 1, 1 ]\r\n\t\t\t\t\t} };\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( transparent && transparency ) {\r\n\r\n\t\t\t\t// handle case if a texture exists but no color\r\n\r\n\t\t\t\tif ( transparent.data.texture ) {\r\n\r\n\t\t\t\t\t// we do not set an alpha map (see #13792)\r\n\r\n\t\t\t\t\tmaterial.transparent = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconst color = transparent.data.color;\r\n\r\n\t\t\t\t\tswitch ( transparent.opaque ) {\r\n\r\n\t\t\t\t\t\tcase 'A_ONE':\r\n\t\t\t\t\t\t\tmaterial.opacity = color[ 3 ] * transparency.float;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'RGB_ZERO':\r\n\t\t\t\t\t\t\tmaterial.opacity = 1 - ( color[ 0 ] * transparency.float );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'A_ZERO':\r\n\t\t\t\t\t\t\tmaterial.opacity = 1 - ( color[ 3 ] * transparency.float );\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tcase 'RGB_ONE':\r\n\t\t\t\t\t\t\tmaterial.opacity = color[ 0 ] * transparency.float;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Invalid opaque type \"%s\" of transparent tag.', transparent.opaque );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( material.opacity < 1 ) material.transparent = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\r\n\t\t\tif ( technique.extra !== undefined && technique.extra.technique !== undefined ) {\r\n\r\n\t\t\t\tconst techniques = technique.extra.technique;\r\n\r\n\t\t\t\tfor ( const k in techniques ) {\r\n\r\n\t\t\t\t\tconst v = techniques[ k ];\r\n\r\n\t\t\t\t\tswitch ( k ) {\r\n\r\n\t\t\t\t\t\tcase 'double_sided':\r\n\t\t\t\t\t\t\tmaterial.side = ( v === 1 ? DoubleSide : FrontSide );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'bump':\r\n\t\t\t\t\t\t\tmaterial.normalMap = getTexture( v.texture );\r\n\t\t\t\t\t\t\tmaterial.normalScale = new Vector2( 1, 1 );\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn material;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getMaterial( id ) {\r\n\r\n\t\t\treturn getBuild( library.materials[ id ], buildMaterial );\r\n\r\n\t\t}\r\n\r\n\t\t// camera\r\n\r\n\t\tfunction parseCamera( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tname: xml.getAttribute( 'name' )\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'optics':\r\n\t\t\t\t\t\tdata.optics = parseCameraOptics( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlibrary.cameras[ xml.getAttribute( 'id' ) ] = data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseCameraOptics( xml ) {\r\n\r\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'technique_common':\r\n\t\t\t\t\t\treturn parseCameraTechnique( child );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn {};\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseCameraTechnique( xml ) {\r\n\r\n\t\t\tconst data = {};\r\n\r\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'perspective':\r\n\t\t\t\t\tcase 'orthographic':\r\n\r\n\t\t\t\t\t\tdata.technique = child.nodeName;\r\n\t\t\t\t\t\tdata.parameters = parseCameraParameters( child );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseCameraParameters( xml ) {\r\n\r\n\t\t\tconst data = {};\r\n\r\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'xfov':\r\n\t\t\t\t\tcase 'yfov':\r\n\t\t\t\t\tcase 'xmag':\r\n\t\t\t\t\tcase 'ymag':\r\n\t\t\t\t\tcase 'znear':\r\n\t\t\t\t\tcase 'zfar':\r\n\t\t\t\t\tcase 'aspect_ratio':\r\n\t\t\t\t\t\tdata[ child.nodeName ] = parseFloat( child.textContent );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildCamera( data ) {\r\n\r\n\t\t\tlet camera;\r\n\r\n\t\t\tswitch ( data.optics.technique ) {\r\n\r\n\t\t\t\tcase 'perspective':\r\n\t\t\t\t\tcamera = new PerspectiveCamera(\r\n\t\t\t\t\t\tdata.optics.parameters.yfov,\r\n\t\t\t\t\t\tdata.optics.parameters.aspect_ratio,\r\n\t\t\t\t\t\tdata.optics.parameters.znear,\r\n\t\t\t\t\t\tdata.optics.parameters.zfar\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'orthographic':\r\n\t\t\t\t\tlet ymag = data.optics.parameters.ymag;\r\n\t\t\t\t\tlet xmag = data.optics.parameters.xmag;\r\n\t\t\t\t\tconst aspectRatio = data.optics.parameters.aspect_ratio;\r\n\r\n\t\t\t\t\txmag = ( xmag === undefined ) ? ( ymag * aspectRatio ) : xmag;\r\n\t\t\t\t\tymag = ( ymag === undefined ) ? ( xmag / aspectRatio ) : ymag;\r\n\r\n\t\t\t\t\txmag *= 0.5;\r\n\t\t\t\t\tymag *= 0.5;\r\n\r\n\t\t\t\t\tcamera = new OrthographicCamera(\r\n\t\t\t\t\t\t- xmag, xmag, ymag, - ymag, // left, right, top, bottom\r\n\t\t\t\t\t\tdata.optics.parameters.znear,\r\n\t\t\t\t\t\tdata.optics.parameters.zfar\r\n\t\t\t\t\t);\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tcamera = new PerspectiveCamera();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcamera.name = data.name || '';\r\n\r\n\t\t\treturn camera;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getCamera( id ) {\r\n\r\n\t\t\tconst data = library.cameras[ id ];\r\n\r\n\t\t\tif ( data !== undefined ) {\r\n\r\n\t\t\t\treturn getBuild( data, buildCamera );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t find camera with ID:', id );\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// light\r\n\r\n\t\tfunction parseLight( xml ) {\r\n\r\n\t\t\tlet data = {};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'technique_common':\r\n\t\t\t\t\t\tdata = parseLightTechnique( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlibrary.lights[ xml.getAttribute( 'id' ) ] = data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseLightTechnique( xml ) {\r\n\r\n\t\t\tconst data = {};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'directional':\r\n\t\t\t\t\tcase 'point':\r\n\t\t\t\t\tcase 'spot':\r\n\t\t\t\t\tcase 'ambient':\r\n\r\n\t\t\t\t\t\tdata.technique = child.nodeName;\r\n\t\t\t\t\t\tdata.parameters = parseLightParameters( child );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseLightParameters( xml ) {\r\n\r\n\t\t\tconst data = {};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'color':\r\n\t\t\t\t\t\tconst array = parseFloats( child.textContent );\r\n\t\t\t\t\t\tdata.color = new Color().fromArray( array ).convertSRGBToLinear();\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'falloff_angle':\r\n\t\t\t\t\t\tdata.falloffAngle = parseFloat( child.textContent );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'quadratic_attenuation':\r\n\t\t\t\t\t\tconst f = parseFloat( child.textContent );\r\n\t\t\t\t\t\tdata.distance = f ? Math.sqrt( 1 / f ) : 0;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildLight( data ) {\r\n\r\n\t\t\tlet light;\r\n\r\n\t\t\tswitch ( data.technique ) {\r\n\r\n\t\t\t\tcase 'directional':\r\n\t\t\t\t\tlight = new DirectionalLight();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'point':\r\n\t\t\t\t\tlight = new PointLight();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'spot':\r\n\t\t\t\t\tlight = new SpotLight();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'ambient':\r\n\t\t\t\t\tlight = new AmbientLight();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.parameters.color ) light.color.copy( data.parameters.color );\r\n\t\t\tif ( data.parameters.distance ) light.distance = data.parameters.distance;\r\n\r\n\t\t\treturn light;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getLight( id ) {\r\n\r\n\t\t\tconst data = library.lights[ id ];\r\n\r\n\t\t\tif ( data !== undefined ) {\r\n\r\n\t\t\t\treturn getBuild( data, buildLight );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconsole.warn( 'THREE.ColladaLoader: Couldn\\'t find light with ID:', id );\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// geometry\r\n\r\n\t\tfunction parseGeometry( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tname: xml.getAttribute( 'name' ),\r\n\t\t\t\tsources: {},\r\n\t\t\t\tvertices: {},\r\n\t\t\t\tprimitives: []\r\n\t\t\t};\r\n\r\n\t\t\tconst mesh = getElementsByTagName( xml, 'mesh' )[ 0 ];\r\n\r\n\t\t\t// the following tags inside geometry are not supported yet (see https://github.com/mrdoob/three.js/pull/12606): convex_mesh, spline, brep\r\n\t\t\tif ( mesh === undefined ) return;\r\n\r\n\t\t\tfor ( let i = 0; i < mesh.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = mesh.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tconst id = child.getAttribute( 'id' );\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'source':\r\n\t\t\t\t\t\tdata.sources[ id ] = parseSource( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'vertices':\r\n\t\t\t\t\t\t// data.sources[ id ] = data.sources[ parseId( getElementsByTagName( child, 'input' )[ 0 ].getAttribute( 'source' ) ) ];\r\n\t\t\t\t\t\tdata.vertices = parseGeometryVertices( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'polygons':\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Unsupported primitive type: ', child.nodeName );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'lines':\r\n\t\t\t\t\tcase 'linestrips':\r\n\t\t\t\t\tcase 'polylist':\r\n\t\t\t\t\tcase 'triangles':\r\n\t\t\t\t\t\tdata.primitives.push( parseGeometryPrimitive( child ) );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.log( child );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlibrary.geometries[ xml.getAttribute( 'id' ) ] = data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseSource( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tarray: [],\r\n\t\t\t\tstride: 3\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'float_array':\r\n\t\t\t\t\t\tdata.array = parseFloats( child.textContent );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Name_array':\r\n\t\t\t\t\t\tdata.array = parseStrings( child.textContent );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'technique_common':\r\n\t\t\t\t\t\tconst accessor = getElementsByTagName( child, 'accessor' )[ 0 ];\r\n\r\n\t\t\t\t\t\tif ( accessor !== undefined ) {\r\n\r\n\t\t\t\t\t\t\tdata.stride = parseInt( accessor.getAttribute( 'stride' ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseGeometryVertices( xml ) {\r\n\r\n\t\t\tconst data = {};\r\n\r\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tdata[ child.getAttribute( 'semantic' ) ] = parseId( child.getAttribute( 'source' ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseGeometryPrimitive( xml ) {\r\n\r\n\t\t\tconst primitive = {\r\n\t\t\t\ttype: xml.nodeName,\r\n\t\t\t\tmaterial: xml.getAttribute( 'material' ),\r\n\t\t\t\tcount: parseInt( xml.getAttribute( 'count' ) ),\r\n\t\t\t\tinputs: {},\r\n\t\t\t\tstride: 0,\r\n\t\t\t\thasUV: false\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0, l = xml.childNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'input':\r\n\t\t\t\t\t\tconst id = parseId( child.getAttribute( 'source' ) );\r\n\t\t\t\t\t\tconst semantic = child.getAttribute( 'semantic' );\r\n\t\t\t\t\t\tconst offset = parseInt( child.getAttribute( 'offset' ) );\r\n\t\t\t\t\t\tconst set = parseInt( child.getAttribute( 'set' ) );\r\n\t\t\t\t\t\tconst inputname = ( set > 0 ? semantic + set : semantic );\r\n\t\t\t\t\t\tprimitive.inputs[ inputname ] = { id: id, offset: offset };\r\n\t\t\t\t\t\tprimitive.stride = Math.max( primitive.stride, offset + 1 );\r\n\t\t\t\t\t\tif ( semantic === 'TEXCOORD' ) primitive.hasUV = true;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'vcount':\r\n\t\t\t\t\t\tprimitive.vcount = parseInts( child.textContent );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'p':\r\n\t\t\t\t\t\tprimitive.p = parseInts( child.textContent );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn primitive;\r\n\r\n\t\t}\r\n\r\n\t\tfunction groupPrimitives( primitives ) {\r\n\r\n\t\t\tconst build = {};\r\n\r\n\t\t\tfor ( let i = 0; i < primitives.length; i ++ ) {\r\n\r\n\t\t\t\tconst primitive = primitives[ i ];\r\n\r\n\t\t\t\tif ( build[ primitive.type ] === undefined ) build[ primitive.type ] = [];\r\n\r\n\t\t\t\tbuild[ primitive.type ].push( primitive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn build;\r\n\r\n\t\t}\r\n\r\n\t\tfunction checkUVCoordinates( primitives ) {\r\n\r\n\t\t\tlet count = 0;\r\n\r\n\t\t\tfor ( let i = 0, l = primitives.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst primitive = primitives[ i ];\r\n\r\n\t\t\t\tif ( primitive.hasUV === true ) {\r\n\r\n\t\t\t\t\tcount ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( count > 0 && count < primitives.length ) {\r\n\r\n\t\t\t\tprimitives.uvsNeedsFix = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildGeometry( data ) {\r\n\r\n\t\t\tconst build = {};\r\n\r\n\t\t\tconst sources = data.sources;\r\n\t\t\tconst vertices = data.vertices;\r\n\t\t\tconst primitives = data.primitives;\r\n\r\n\t\t\tif ( primitives.length === 0 ) return {};\r\n\r\n\t\t\t// our goal is to create one buffer geometry for a single type of primitives\r\n\t\t\t// first, we group all primitives by their type\r\n\r\n\t\t\tconst groupedPrimitives = groupPrimitives( primitives );\r\n\r\n\t\t\tfor ( const type in groupedPrimitives ) {\r\n\r\n\t\t\t\tconst primitiveType = groupedPrimitives[ type ];\r\n\r\n\t\t\t\t// second, ensure consistent uv coordinates for each type of primitives (polylist,triangles or lines)\r\n\r\n\t\t\t\tcheckUVCoordinates( primitiveType );\r\n\r\n\t\t\t\t// third, create a buffer geometry for each type of primitives\r\n\r\n\t\t\t\tbuild[ type ] = buildGeometryType( primitiveType, sources, vertices );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn build;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildGeometryType( primitives, sources, vertices ) {\r\n\r\n\t\t\tconst build = {};\r\n\r\n\t\t\tconst position = { array: [], stride: 0 };\r\n\t\t\tconst normal = { array: [], stride: 0 };\r\n\t\t\tconst uv = { array: [], stride: 0 };\r\n\t\t\tconst uv2 = { array: [], stride: 0 };\r\n\t\t\tconst color = { array: [], stride: 0 };\r\n\r\n\t\t\tconst skinIndex = { array: [], stride: 4 };\r\n\t\t\tconst skinWeight = { array: [], stride: 4 };\r\n\r\n\t\t\tconst geometry = new BufferGeometry();\r\n\r\n\t\t\tconst materialKeys = [];\r\n\r\n\t\t\tlet start = 0;\r\n\r\n\t\t\tfor ( let p = 0; p < primitives.length; p ++ ) {\r\n\r\n\t\t\t\tconst primitive = primitives[ p ];\r\n\t\t\t\tconst inputs = primitive.inputs;\r\n\r\n\t\t\t\t// groups\r\n\r\n\t\t\t\tlet count = 0;\r\n\r\n\t\t\t\tswitch ( primitive.type ) {\r\n\r\n\t\t\t\t\tcase 'lines':\r\n\t\t\t\t\tcase 'linestrips':\r\n\t\t\t\t\t\tcount = primitive.count * 2;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'triangles':\r\n\t\t\t\t\t\tcount = primitive.count * 3;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'polylist':\r\n\r\n\t\t\t\t\t\tfor ( let g = 0; g < primitive.count; g ++ ) {\r\n\r\n\t\t\t\t\t\t\tconst vc = primitive.vcount[ g ];\r\n\r\n\t\t\t\t\t\t\tswitch ( vc ) {\r\n\r\n\t\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t\tcount += 3; // single triangle\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t\tcount += 6; // quad, subdivided into two triangles\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\tcount += ( vc - 2 ) * 3; // polylist with more than four vertices\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Unknow primitive type:', primitive.type );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.addGroup( start, count, p );\r\n\t\t\t\tstart += count;\r\n\r\n\t\t\t\t// material\r\n\r\n\t\t\t\tif ( primitive.material ) {\r\n\r\n\t\t\t\t\tmaterialKeys.push( primitive.material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// geometry data\r\n\r\n\t\t\t\tfor ( const name in inputs ) {\r\n\r\n\t\t\t\t\tconst input = inputs[ name ];\r\n\r\n\t\t\t\t\tswitch ( name )\t{\r\n\r\n\t\t\t\t\t\tcase 'VERTEX':\r\n\t\t\t\t\t\t\tfor ( const key in vertices ) {\r\n\r\n\t\t\t\t\t\t\t\tconst id = vertices[ key ];\r\n\r\n\t\t\t\t\t\t\t\tswitch ( key ) {\r\n\r\n\t\t\t\t\t\t\t\t\tcase 'POSITION':\r\n\t\t\t\t\t\t\t\t\t\tconst prevLength = position.array.length;\r\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, position.array );\r\n\t\t\t\t\t\t\t\t\t\tposition.stride = sources[ id ].stride;\r\n\r\n\t\t\t\t\t\t\t\t\t\tif ( sources.skinWeights && sources.skinIndices ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources.skinIndices, input.offset, skinIndex.array );\r\n\t\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources.skinWeights, input.offset, skinWeight.array );\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t// see #3803\r\n\r\n\t\t\t\t\t\t\t\t\t\tif ( primitive.hasUV === false && primitives.uvsNeedsFix === true ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tconst count = ( position.array.length - prevLength ) / position.stride;\r\n\r\n\t\t\t\t\t\t\t\t\t\t\tfor ( let i = 0; i < count; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t// fill missing uv coordinates\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\tuv.array.push( 0, 0 );\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\tcase 'NORMAL':\r\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, normal.array );\r\n\t\t\t\t\t\t\t\t\t\tnormal.stride = sources[ id ].stride;\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\tcase 'COLOR':\r\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, color.array );\r\n\t\t\t\t\t\t\t\t\t\tcolor.stride = sources[ id ].stride;\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\tcase 'TEXCOORD':\r\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, uv.array );\r\n\t\t\t\t\t\t\t\t\t\tuv.stride = sources[ id ].stride;\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\tcase 'TEXCOORD1':\r\n\t\t\t\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ id ], input.offset, uv2.array );\r\n\t\t\t\t\t\t\t\t\t\tuv.stride = sources[ id ].stride;\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Semantic \"%s\" not handled in geometry build process.', key );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'NORMAL':\r\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, normal.array );\r\n\t\t\t\t\t\t\tnormal.stride = sources[ input.id ].stride;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'COLOR':\r\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, color.array, true );\r\n\t\t\t\t\t\t\tcolor.stride = sources[ input.id ].stride;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'TEXCOORD':\r\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, uv.array );\r\n\t\t\t\t\t\t\tuv.stride = sources[ input.id ].stride;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'TEXCOORD1':\r\n\t\t\t\t\t\t\tbuildGeometryData( primitive, sources[ input.id ], input.offset, uv2.array );\r\n\t\t\t\t\t\t\tuv2.stride = sources[ input.id ].stride;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// build geometry\r\n\r\n\t\t\tif ( position.array.length > 0 ) geometry.setAttribute( 'position', new Float32BufferAttribute( position.array, position.stride ) );\r\n\t\t\tif ( normal.array.length > 0 ) geometry.setAttribute( 'normal', new Float32BufferAttribute( normal.array, normal.stride ) );\r\n\t\t\tif ( color.array.length > 0 ) geometry.setAttribute( 'color', new Float32BufferAttribute( color.array, color.stride ) );\r\n\t\t\tif ( uv.array.length > 0 ) geometry.setAttribute( 'uv', new Float32BufferAttribute( uv.array, uv.stride ) );\r\n\t\t\tif ( uv2.array.length > 0 ) geometry.setAttribute( 'uv2', new Float32BufferAttribute( uv2.array, uv2.stride ) );\r\n\r\n\t\t\tif ( skinIndex.array.length > 0 ) geometry.setAttribute( 'skinIndex', new Float32BufferAttribute( skinIndex.array, skinIndex.stride ) );\r\n\t\t\tif ( skinWeight.array.length > 0 ) geometry.setAttribute( 'skinWeight', new Float32BufferAttribute( skinWeight.array, skinWeight.stride ) );\r\n\r\n\t\t\tbuild.data = geometry;\r\n\t\t\tbuild.type = primitives[ 0 ].type;\r\n\t\t\tbuild.materialKeys = materialKeys;\r\n\r\n\t\t\treturn build;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildGeometryData( primitive, source, offset, array, isColor = false ) {\r\n\r\n\t\t\tconst indices = primitive.p;\r\n\t\t\tconst stride = primitive.stride;\r\n\t\t\tconst vcount = primitive.vcount;\r\n\r\n\t\t\tfunction pushVector( i ) {\r\n\r\n\t\t\t\tlet index = indices[ i + offset ] * sourceStride;\r\n\t\t\t\tconst length = index + sourceStride;\r\n\r\n\t\t\t\tfor ( ; index < length; index ++ ) {\r\n\r\n\t\t\t\t\tarray.push( sourceArray[ index ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( isColor ) {\r\n\r\n\t\t\t\t\t// convert the vertex colors from srgb to linear if present\r\n\t\t\t\t\tconst startIndex = array.length - sourceStride - 1;\r\n\t\t\t\t\ttempColor.setRGB(\r\n\t\t\t\t\t\tarray[ startIndex + 0 ],\r\n\t\t\t\t\t\tarray[ startIndex + 1 ],\r\n\t\t\t\t\t\tarray[ startIndex + 2 ]\r\n\t\t\t\t\t).convertSRGBToLinear();\r\n\r\n\t\t\t\t\tarray[ startIndex + 0 ] = tempColor.r;\r\n\t\t\t\t\tarray[ startIndex + 1 ] = tempColor.g;\r\n\t\t\t\t\tarray[ startIndex + 2 ] = tempColor.b;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst sourceArray = source.array;\r\n\t\t\tconst sourceStride = source.stride;\r\n\r\n\t\t\tif ( primitive.vcount !== undefined ) {\r\n\r\n\t\t\t\tlet index = 0;\r\n\r\n\t\t\t\tfor ( let i = 0, l = vcount.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tconst count = vcount[ i ];\r\n\r\n\t\t\t\t\tif ( count === 4 ) {\r\n\r\n\t\t\t\t\t\tconst a = index + stride * 0;\r\n\t\t\t\t\t\tconst b = index + stride * 1;\r\n\t\t\t\t\t\tconst c = index + stride * 2;\r\n\t\t\t\t\t\tconst d = index + stride * 3;\r\n\r\n\t\t\t\t\t\tpushVector( a ); pushVector( b ); pushVector( d );\r\n\t\t\t\t\t\tpushVector( b ); pushVector( c ); pushVector( d );\r\n\r\n\t\t\t\t\t} else if ( count === 3 ) {\r\n\r\n\t\t\t\t\t\tconst a = index + stride * 0;\r\n\t\t\t\t\t\tconst b = index + stride * 1;\r\n\t\t\t\t\t\tconst c = index + stride * 2;\r\n\r\n\t\t\t\t\t\tpushVector( a ); pushVector( b ); pushVector( c );\r\n\r\n\t\t\t\t\t} else if ( count > 4 ) {\r\n\r\n\t\t\t\t\t\tfor ( let k = 1, kl = ( count - 2 ); k <= kl; k ++ ) {\r\n\r\n\t\t\t\t\t\t\tconst a = index + stride * 0;\r\n\t\t\t\t\t\t\tconst b = index + stride * k;\r\n\t\t\t\t\t\t\tconst c = index + stride * ( k + 1 );\r\n\r\n\t\t\t\t\t\t\tpushVector( a ); pushVector( b ); pushVector( c );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tindex += stride * count;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( let i = 0, l = indices.length; i < l; i += stride ) {\r\n\r\n\t\t\t\t\tpushVector( i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction getGeometry( id ) {\r\n\r\n\t\t\treturn getBuild( library.geometries[ id ], buildGeometry );\r\n\r\n\t\t}\r\n\r\n\t\t// kinematics\r\n\r\n\t\tfunction parseKinematicsModel( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\r\n\t\t\t\tjoints: {},\r\n\t\t\t\tlinks: []\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'technique_common':\r\n\t\t\t\t\t\tparseKinematicsTechniqueCommon( child, data );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlibrary.kinematicsModels[ xml.getAttribute( 'id' ) ] = data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildKinematicsModel( data ) {\r\n\r\n\t\t\tif ( data.build !== undefined ) return data.build;\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getKinematicsModel( id ) {\r\n\r\n\t\t\treturn getBuild( library.kinematicsModels[ id ], buildKinematicsModel );\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseKinematicsTechniqueCommon( xml, data ) {\r\n\r\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'joint':\r\n\t\t\t\t\t\tdata.joints[ child.getAttribute( 'sid' ) ] = parseKinematicsJoint( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'link':\r\n\t\t\t\t\t\tdata.links.push( parseKinematicsLink( child ) );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseKinematicsJoint( xml ) {\r\n\r\n\t\t\tlet data;\r\n\r\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'prismatic':\r\n\t\t\t\t\tcase 'revolute':\r\n\t\t\t\t\t\tdata = parseKinematicsJointParameter( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseKinematicsJointParameter( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tsid: xml.getAttribute( 'sid' ),\r\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\r\n\t\t\t\taxis: new Vector3(),\r\n\t\t\t\tlimits: {\r\n\t\t\t\t\tmin: 0,\r\n\t\t\t\t\tmax: 0\r\n\t\t\t\t},\r\n\t\t\t\ttype: xml.nodeName,\r\n\t\t\t\tstatic: false,\r\n\t\t\t\tzeroPosition: 0,\r\n\t\t\t\tmiddlePosition: 0\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'axis':\r\n\t\t\t\t\t\tconst array = parseFloats( child.textContent );\r\n\t\t\t\t\t\tdata.axis.fromArray( array );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'limits':\r\n\t\t\t\t\t\tconst max = child.getElementsByTagName( 'max' )[ 0 ];\r\n\t\t\t\t\t\tconst min = child.getElementsByTagName( 'min' )[ 0 ];\r\n\r\n\t\t\t\t\t\tdata.limits.max = parseFloat( max.textContent );\r\n\t\t\t\t\t\tdata.limits.min = parseFloat( min.textContent );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// if min is equal to or greater than max, consider the joint static\r\n\r\n\t\t\tif ( data.limits.min >= data.limits.max ) {\r\n\r\n\t\t\t\tdata.static = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// calculate middle position\r\n\r\n\t\t\tdata.middlePosition = ( data.limits.min + data.limits.max ) / 2.0;\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseKinematicsLink( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tsid: xml.getAttribute( 'sid' ),\r\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\r\n\t\t\t\tattachments: [],\r\n\t\t\t\ttransforms: []\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'attachment_full':\r\n\t\t\t\t\t\tdata.attachments.push( parseKinematicsAttachment( child ) );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'matrix':\r\n\t\t\t\t\tcase 'translate':\r\n\t\t\t\t\tcase 'rotate':\r\n\t\t\t\t\t\tdata.transforms.push( parseKinematicsTransform( child ) );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseKinematicsAttachment( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tjoint: xml.getAttribute( 'joint' ).split( '/' ).pop(),\r\n\t\t\t\ttransforms: [],\r\n\t\t\t\tlinks: []\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'link':\r\n\t\t\t\t\t\tdata.links.push( parseKinematicsLink( child ) );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'matrix':\r\n\t\t\t\t\tcase 'translate':\r\n\t\t\t\t\tcase 'rotate':\r\n\t\t\t\t\t\tdata.transforms.push( parseKinematicsTransform( child ) );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseKinematicsTransform( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\ttype: xml.nodeName\r\n\t\t\t};\r\n\r\n\t\t\tconst array = parseFloats( xml.textContent );\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'matrix':\r\n\t\t\t\t\tdata.obj = new Matrix4();\r\n\t\t\t\t\tdata.obj.fromArray( array ).transpose();\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'translate':\r\n\t\t\t\t\tdata.obj = new Vector3();\r\n\t\t\t\t\tdata.obj.fromArray( array );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'rotate':\r\n\t\t\t\t\tdata.obj = new Vector3();\r\n\t\t\t\t\tdata.obj.fromArray( array );\r\n\t\t\t\t\tdata.angle = MathUtils.degToRad( array[ 3 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\t// physics\r\n\r\n\t\tfunction parsePhysicsModel( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\r\n\t\t\t\trigidBodies: {}\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'rigid_body':\r\n\t\t\t\t\t\tdata.rigidBodies[ child.getAttribute( 'name' ) ] = {};\r\n\t\t\t\t\t\tparsePhysicsRigidBody( child, data.rigidBodies[ child.getAttribute( 'name' ) ] );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlibrary.physicsModels[ xml.getAttribute( 'id' ) ] = data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parsePhysicsRigidBody( xml, data ) {\r\n\r\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'technique_common':\r\n\t\t\t\t\t\tparsePhysicsTechniqueCommon( child, data );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parsePhysicsTechniqueCommon( xml, data ) {\r\n\r\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'inertia':\r\n\t\t\t\t\t\tdata.inertia = parseFloats( child.textContent );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'mass':\r\n\t\t\t\t\t\tdata.mass = parseFloats( child.textContent )[ 0 ];\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// scene\r\n\r\n\t\tfunction parseKinematicsScene( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tbindJointAxis: []\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'bind_joint_axis':\r\n\t\t\t\t\t\tdata.bindJointAxis.push( parseKinematicsBindJointAxis( child ) );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlibrary.kinematicsScenes[ parseId( xml.getAttribute( 'url' ) ) ] = data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseKinematicsBindJointAxis( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\ttarget: xml.getAttribute( 'target' ).split( '/' ).pop()\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'axis':\r\n\t\t\t\t\t\tconst param = child.getElementsByTagName( 'param' )[ 0 ];\r\n\t\t\t\t\t\tdata.axis = param.textContent;\r\n\t\t\t\t\t\tconst tmpJointIndex = data.axis.split( 'inst_' ).pop().split( 'axis' )[ 0 ];\r\n\t\t\t\t\t\tdata.jointIndex = tmpJointIndex.substring( 0, tmpJointIndex.length - 1 );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildKinematicsScene( data ) {\r\n\r\n\t\t\tif ( data.build !== undefined ) return data.build;\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getKinematicsScene( id ) {\r\n\r\n\t\t\treturn getBuild( library.kinematicsScenes[ id ], buildKinematicsScene );\r\n\r\n\t\t}\r\n\r\n\t\tfunction setupKinematics() {\r\n\r\n\t\t\tconst kinematicsModelId = Object.keys( library.kinematicsModels )[ 0 ];\r\n\t\t\tconst kinematicsSceneId = Object.keys( library.kinematicsScenes )[ 0 ];\r\n\t\t\tconst visualSceneId = Object.keys( library.visualScenes )[ 0 ];\r\n\r\n\t\t\tif ( kinematicsModelId === undefined || kinematicsSceneId === undefined ) return;\r\n\r\n\t\t\tconst kinematicsModel = getKinematicsModel( kinematicsModelId );\r\n\t\t\tconst kinematicsScene = getKinematicsScene( kinematicsSceneId );\r\n\t\t\tconst visualScene = getVisualScene( visualSceneId );\r\n\r\n\t\t\tconst bindJointAxis = kinematicsScene.bindJointAxis;\r\n\t\t\tconst jointMap = {};\r\n\r\n\t\t\tfor ( let i = 0, l = bindJointAxis.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst axis = bindJointAxis[ i ];\r\n\r\n\t\t\t\t// the result of the following query is an element of type 'translate', 'rotate','scale' or 'matrix'\r\n\r\n\t\t\t\tconst targetElement = collada.querySelector( '[sid=\"' + axis.target + '\"]' );\r\n\r\n\t\t\t\tif ( targetElement ) {\r\n\r\n\t\t\t\t\t// get the parent of the transform element\r\n\r\n\t\t\t\t\tconst parentVisualElement = targetElement.parentElement;\r\n\r\n\t\t\t\t\t// connect the joint of the kinematics model with the element in the visual scene\r\n\r\n\t\t\t\t\tconnect( axis.jointIndex, parentVisualElement );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction connect( jointIndex, visualElement ) {\r\n\r\n\t\t\t\tconst visualElementName = visualElement.getAttribute( 'name' );\r\n\t\t\t\tconst joint = kinematicsModel.joints[ jointIndex ];\r\n\r\n\t\t\t\tvisualScene.traverse( function ( object ) {\r\n\r\n\t\t\t\t\tif ( object.name === visualElementName ) {\r\n\r\n\t\t\t\t\t\tjointMap[ jointIndex ] = {\r\n\t\t\t\t\t\t\tobject: object,\r\n\t\t\t\t\t\t\ttransforms: buildTransformList( visualElement ),\r\n\t\t\t\t\t\t\tjoint: joint,\r\n\t\t\t\t\t\t\tposition: joint.zeroPosition\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst m0 = new Matrix4();\r\n\r\n\t\t\tkinematics = {\r\n\r\n\t\t\t\tjoints: kinematicsModel && kinematicsModel.joints,\r\n\r\n\t\t\t\tgetJointValue: function ( jointIndex ) {\r\n\r\n\t\t\t\t\tconst jointData = jointMap[ jointIndex ];\r\n\r\n\t\t\t\t\tif ( jointData ) {\r\n\r\n\t\t\t\t\t\treturn jointData.position;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' doesn\\'t exist.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tsetJointValue: function ( jointIndex, value ) {\r\n\r\n\t\t\t\t\tconst jointData = jointMap[ jointIndex ];\r\n\r\n\t\t\t\t\tif ( jointData ) {\r\n\r\n\t\t\t\t\t\tconst joint = jointData.joint;\r\n\r\n\t\t\t\t\t\tif ( value > joint.limits.max || value < joint.limits.min ) {\r\n\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' value ' + value + ' outside of limits (min: ' + joint.limits.min + ', max: ' + joint.limits.max + ').' );\r\n\r\n\t\t\t\t\t\t} else if ( joint.static ) {\r\n\r\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' is static.' );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tconst object = jointData.object;\r\n\t\t\t\t\t\t\tconst axis = joint.axis;\r\n\t\t\t\t\t\t\tconst transforms = jointData.transforms;\r\n\r\n\t\t\t\t\t\t\tmatrix.identity();\r\n\r\n\t\t\t\t\t\t\t// each update, we have to apply all transforms in the correct order\r\n\r\n\t\t\t\t\t\t\tfor ( let i = 0; i < transforms.length; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tconst transform = transforms[ i ];\r\n\r\n\t\t\t\t\t\t\t\t// if there is a connection of the transform node with a joint, apply the joint value\r\n\r\n\t\t\t\t\t\t\t\tif ( transform.sid && transform.sid.indexOf( jointIndex ) !== - 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tswitch ( joint.type ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tcase 'revolute':\r\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeRotationAxis( axis, MathUtils.degToRad( value ) ) );\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\tcase 'prismatic':\r\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeTranslation( axis.x * value, axis.y * value, axis.z * value ) );\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Unknown joint type: ' + joint.type );\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tswitch ( transform.type ) {\r\n\r\n\t\t\t\t\t\t\t\t\t\tcase 'matrix':\r\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( transform.obj );\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\tcase 'translate':\r\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeTranslation( transform.obj.x, transform.obj.y, transform.obj.z ) );\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\tcase 'scale':\r\n\t\t\t\t\t\t\t\t\t\t\tmatrix.scale( transform.obj );\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t\tcase 'rotate':\r\n\t\t\t\t\t\t\t\t\t\t\tmatrix.multiply( m0.makeRotationAxis( transform.obj, transform.angle ) );\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tobject.matrix.copy( matrix );\r\n\t\t\t\t\t\t\tobject.matrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t\t\t\t\tjointMap[ jointIndex ].position = value;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.log( 'THREE.ColladaLoader: ' + jointIndex + ' does not exist.' );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildTransformList( node ) {\r\n\r\n\t\t\tconst transforms = [];\r\n\r\n\t\t\tconst xml = collada.querySelector( '[id=\"' + node.id + '\"]' );\r\n\r\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tlet array, vector;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'matrix':\r\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\r\n\t\t\t\t\t\tconst matrix = new Matrix4().fromArray( array ).transpose();\r\n\t\t\t\t\t\ttransforms.push( {\r\n\t\t\t\t\t\t\tsid: child.getAttribute( 'sid' ),\r\n\t\t\t\t\t\t\ttype: child.nodeName,\r\n\t\t\t\t\t\t\tobj: matrix\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'translate':\r\n\t\t\t\t\tcase 'scale':\r\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\r\n\t\t\t\t\t\tvector = new Vector3().fromArray( array );\r\n\t\t\t\t\t\ttransforms.push( {\r\n\t\t\t\t\t\t\tsid: child.getAttribute( 'sid' ),\r\n\t\t\t\t\t\t\ttype: child.nodeName,\r\n\t\t\t\t\t\t\tobj: vector\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'rotate':\r\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\r\n\t\t\t\t\t\tvector = new Vector3().fromArray( array );\r\n\t\t\t\t\t\tconst angle = MathUtils.degToRad( array[ 3 ] );\r\n\t\t\t\t\t\ttransforms.push( {\r\n\t\t\t\t\t\t\tsid: child.getAttribute( 'sid' ),\r\n\t\t\t\t\t\t\ttype: child.nodeName,\r\n\t\t\t\t\t\t\tobj: vector,\r\n\t\t\t\t\t\t\tangle: angle\r\n\t\t\t\t\t\t} );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn transforms;\r\n\r\n\t\t}\r\n\r\n\t\t// nodes\r\n\r\n\t\tfunction prepareNodes( xml ) {\r\n\r\n\t\t\tconst elements = xml.getElementsByTagName( 'node' );\r\n\r\n\t\t\t// ensure all node elements have id attributes\r\n\r\n\t\t\tfor ( let i = 0; i < elements.length; i ++ ) {\r\n\r\n\t\t\t\tconst element = elements[ i ];\r\n\r\n\t\t\t\tif ( element.hasAttribute( 'id' ) === false ) {\r\n\r\n\t\t\t\t\telement.setAttribute( 'id', generateId() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tconst matrix = new Matrix4();\r\n\t\tconst vector = new Vector3();\r\n\r\n\t\tfunction parseNode( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tname: xml.getAttribute( 'name' ) || '',\r\n\t\t\t\ttype: xml.getAttribute( 'type' ),\r\n\t\t\t\tid: xml.getAttribute( 'id' ),\r\n\t\t\t\tsid: xml.getAttribute( 'sid' ),\r\n\t\t\t\tmatrix: new Matrix4(),\r\n\t\t\t\tnodes: [],\r\n\t\t\t\tinstanceCameras: [],\r\n\t\t\t\tinstanceControllers: [],\r\n\t\t\t\tinstanceLights: [],\r\n\t\t\t\tinstanceGeometries: [],\r\n\t\t\t\tinstanceNodes: [],\r\n\t\t\t\ttransforms: {}\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tif ( child.nodeType !== 1 ) continue;\r\n\r\n\t\t\t\tlet array;\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'node':\r\n\t\t\t\t\t\tdata.nodes.push( child.getAttribute( 'id' ) );\r\n\t\t\t\t\t\tparseNode( child );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'instance_camera':\r\n\t\t\t\t\t\tdata.instanceCameras.push( parseId( child.getAttribute( 'url' ) ) );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'instance_controller':\r\n\t\t\t\t\t\tdata.instanceControllers.push( parseNodeInstance( child ) );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'instance_light':\r\n\t\t\t\t\t\tdata.instanceLights.push( parseId( child.getAttribute( 'url' ) ) );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'instance_geometry':\r\n\t\t\t\t\t\tdata.instanceGeometries.push( parseNodeInstance( child ) );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'instance_node':\r\n\t\t\t\t\t\tdata.instanceNodes.push( parseId( child.getAttribute( 'url' ) ) );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'matrix':\r\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\r\n\t\t\t\t\t\tdata.matrix.multiply( matrix.fromArray( array ).transpose() );\r\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'translate':\r\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\r\n\t\t\t\t\t\tvector.fromArray( array );\r\n\t\t\t\t\t\tdata.matrix.multiply( matrix.makeTranslation( vector.x, vector.y, vector.z ) );\r\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'rotate':\r\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\r\n\t\t\t\t\t\tconst angle = MathUtils.degToRad( array[ 3 ] );\r\n\t\t\t\t\t\tdata.matrix.multiply( matrix.makeRotationAxis( vector.fromArray( array ), angle ) );\r\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'scale':\r\n\t\t\t\t\t\tarray = parseFloats( child.textContent );\r\n\t\t\t\t\t\tdata.matrix.scale( vector.fromArray( array ) );\r\n\t\t\t\t\t\tdata.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'extra':\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.log( child );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasNode( data.id ) ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.', data.id );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlibrary.nodes[ data.id ] = data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseNodeInstance( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tid: parseId( xml.getAttribute( 'url' ) ),\r\n\t\t\t\tmaterials: {},\r\n\t\t\t\tskeletons: []\r\n\t\t\t};\r\n\r\n\t\t\tfor ( let i = 0; i < xml.childNodes.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = xml.childNodes[ i ];\r\n\r\n\t\t\t\tswitch ( child.nodeName ) {\r\n\r\n\t\t\t\t\tcase 'bind_material':\r\n\t\t\t\t\t\tconst instances = child.getElementsByTagName( 'instance_material' );\r\n\r\n\t\t\t\t\t\tfor ( let j = 0; j < instances.length; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tconst instance = instances[ j ];\r\n\t\t\t\t\t\t\tconst symbol = instance.getAttribute( 'symbol' );\r\n\t\t\t\t\t\t\tconst target = instance.getAttribute( 'target' );\r\n\r\n\t\t\t\t\t\t\tdata.materials[ symbol ] = parseId( target );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'skeleton':\r\n\t\t\t\t\t\tdata.skeletons.push( parseId( child.textContent ) );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildSkeleton( skeletons, joints ) {\r\n\r\n\t\t\tconst boneData = [];\r\n\t\t\tconst sortedBoneData = [];\r\n\r\n\t\t\tlet i, j, data;\r\n\r\n\t\t\t// a skeleton can have multiple root bones. collada expresses this\r\n\t\t\t// situtation with multiple \"skeleton\" tags per controller instance\r\n\r\n\t\t\tfor ( i = 0; i < skeletons.length; i ++ ) {\r\n\r\n\t\t\t\tconst skeleton = skeletons[ i ];\r\n\r\n\t\t\t\tlet root;\r\n\r\n\t\t\t\tif ( hasNode( skeleton ) ) {\r\n\r\n\t\t\t\t\troot = getNode( skeleton );\r\n\t\t\t\t\tbuildBoneHierarchy( root, joints, boneData );\r\n\r\n\t\t\t\t} else if ( hasVisualScene( skeleton ) ) {\r\n\r\n\t\t\t\t\t// handle case where the skeleton refers to the visual scene (#13335)\r\n\r\n\t\t\t\t\tconst visualScene = library.visualScenes[ skeleton ];\r\n\t\t\t\t\tconst children = visualScene.children;\r\n\r\n\t\t\t\t\tfor ( let j = 0; j < children.length; j ++ ) {\r\n\r\n\t\t\t\t\t\tconst child = children[ j ];\r\n\r\n\t\t\t\t\t\tif ( child.type === 'JOINT' ) {\r\n\r\n\t\t\t\t\t\t\tconst root = getNode( child.id );\r\n\t\t\t\t\t\t\tbuildBoneHierarchy( root, joints, boneData );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.ColladaLoader: Unable to find root bone of skeleton with ID:', skeleton );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// sort bone data (the order is defined in the corresponding controller)\r\n\r\n\t\t\tfor ( i = 0; i < joints.length; i ++ ) {\r\n\r\n\t\t\t\tfor ( j = 0; j < boneData.length; j ++ ) {\r\n\r\n\t\t\t\t\tdata = boneData[ j ];\r\n\r\n\t\t\t\t\tif ( data.bone.name === joints[ i ].name ) {\r\n\r\n\t\t\t\t\t\tsortedBoneData[ i ] = data;\r\n\t\t\t\t\t\tdata.processed = true;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// add unprocessed bone data at the end of the list\r\n\r\n\t\t\tfor ( i = 0; i < boneData.length; i ++ ) {\r\n\r\n\t\t\t\tdata = boneData[ i ];\r\n\r\n\t\t\t\tif ( data.processed === false ) {\r\n\r\n\t\t\t\t\tsortedBoneData.push( data );\r\n\t\t\t\t\tdata.processed = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// setup arrays for skeleton creation\r\n\r\n\t\t\tconst bones = [];\r\n\t\t\tconst boneInverses = [];\r\n\r\n\t\t\tfor ( i = 0; i < sortedBoneData.length; i ++ ) {\r\n\r\n\t\t\t\tdata = sortedBoneData[ i ];\r\n\r\n\t\t\t\tbones.push( data.bone );\r\n\t\t\t\tboneInverses.push( data.boneInverse );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn new Skeleton( bones, boneInverses );\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildBoneHierarchy( root, joints, boneData ) {\r\n\r\n\t\t\t// setup bone data from visual scene\r\n\r\n\t\t\troot.traverse( function ( object ) {\r\n\r\n\t\t\t\tif ( object.isBone === true ) {\r\n\r\n\t\t\t\t\tlet boneInverse;\r\n\r\n\t\t\t\t\t// retrieve the boneInverse from the controller data\r\n\r\n\t\t\t\t\tfor ( let i = 0; i < joints.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst joint = joints[ i ];\r\n\r\n\t\t\t\t\t\tif ( joint.name === object.name ) {\r\n\r\n\t\t\t\t\t\t\tboneInverse = joint.boneInverse;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( boneInverse === undefined ) {\r\n\r\n\t\t\t\t\t\t// Unfortunately, there can be joints in the visual scene that are not part of the\r\n\t\t\t\t\t\t// corresponding controller. In this case, we have to create a dummy boneInverse matrix\r\n\t\t\t\t\t\t// for the respective bone. This bone won't affect any vertices, because there are no skin indices\r\n\t\t\t\t\t\t// and weights defined for it. But we still have to add the bone to the sorted bone list in order to\r\n\t\t\t\t\t\t// ensure a correct animation of the model.\r\n\r\n\t\t\t\t\t\tboneInverse = new Matrix4();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tboneData.push( { bone: object, boneInverse: boneInverse, processed: false } );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildNode( data ) {\r\n\r\n\t\t\tconst objects = [];\r\n\r\n\t\t\tconst matrix = data.matrix;\r\n\t\t\tconst nodes = data.nodes;\r\n\t\t\tconst type = data.type;\r\n\t\t\tconst instanceCameras = data.instanceCameras;\r\n\t\t\tconst instanceControllers = data.instanceControllers;\r\n\t\t\tconst instanceLights = data.instanceLights;\r\n\t\t\tconst instanceGeometries = data.instanceGeometries;\r\n\t\t\tconst instanceNodes = data.instanceNodes;\r\n\r\n\t\t\t// nodes\r\n\r\n\t\t\tfor ( let i = 0, l = nodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tobjects.push( getNode( nodes[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// instance cameras\r\n\r\n\t\t\tfor ( let i = 0, l = instanceCameras.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst instanceCamera = getCamera( instanceCameras[ i ] );\r\n\r\n\t\t\t\tif ( instanceCamera !== null ) {\r\n\r\n\t\t\t\t\tobjects.push( instanceCamera.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// instance controllers\r\n\r\n\t\t\tfor ( let i = 0, l = instanceControllers.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst instance = instanceControllers[ i ];\r\n\t\t\t\tconst controller = getController( instance.id );\r\n\t\t\t\tconst geometries = getGeometry( controller.id );\r\n\t\t\t\tconst newObjects = buildObjects( geometries, instance.materials );\r\n\r\n\t\t\t\tconst skeletons = instance.skeletons;\r\n\t\t\t\tconst joints = controller.skin.joints;\r\n\r\n\t\t\t\tconst skeleton = buildSkeleton( skeletons, joints );\r\n\r\n\t\t\t\tfor ( let j = 0, jl = newObjects.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tconst object = newObjects[ j ];\r\n\r\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\r\n\r\n\t\t\t\t\t\tobject.bind( skeleton, controller.skin.bindMatrix );\r\n\t\t\t\t\t\tobject.normalizeSkinWeights();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobjects.push( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// instance lights\r\n\r\n\t\t\tfor ( let i = 0, l = instanceLights.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst instanceLight = getLight( instanceLights[ i ] );\r\n\r\n\t\t\t\tif ( instanceLight !== null ) {\r\n\r\n\t\t\t\t\tobjects.push( instanceLight.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// instance geometries\r\n\r\n\t\t\tfor ( let i = 0, l = instanceGeometries.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst instance = instanceGeometries[ i ];\r\n\r\n\t\t\t\t// a single geometry instance in collada can lead to multiple object3Ds.\r\n\t\t\t\t// this is the case when primitives are combined like triangles and lines\r\n\r\n\t\t\t\tconst geometries = getGeometry( instance.id );\r\n\t\t\t\tconst newObjects = buildObjects( geometries, instance.materials );\r\n\r\n\t\t\t\tfor ( let j = 0, jl = newObjects.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tobjects.push( newObjects[ j ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// instance nodes\r\n\r\n\t\t\tfor ( let i = 0, l = instanceNodes.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tobjects.push( getNode( instanceNodes[ i ] ).clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlet object;\r\n\r\n\t\t\tif ( nodes.length === 0 && objects.length === 1 ) {\r\n\r\n\t\t\t\tobject = objects[ 0 ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tobject = ( type === 'JOINT' ) ? new Bone() : new Group();\r\n\r\n\t\t\t\tfor ( let i = 0; i < objects.length; i ++ ) {\r\n\r\n\t\t\t\t\tobject.add( objects[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.name = ( type === 'JOINT' ) ? data.sid : data.name;\r\n\t\t\tobject.matrix.copy( matrix );\r\n\t\t\tobject.matrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t\tconst fallbackMaterial = new MeshBasicMaterial( { color: 0xff00ff } );\r\n\r\n\t\tfunction resolveMaterialBinding( keys, instanceMaterials ) {\r\n\r\n\t\t\tconst materials = [];\r\n\r\n\t\t\tfor ( let i = 0, l = keys.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst id = instanceMaterials[ keys[ i ] ];\r\n\r\n\t\t\t\tif ( id === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Material with key %s not found. Apply fallback material.', keys[ i ] );\r\n\t\t\t\t\tmaterials.push( fallbackMaterial );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmaterials.push( getMaterial( id ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn materials;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildObjects( geometries, instanceMaterials ) {\r\n\r\n\t\t\tconst objects = [];\r\n\r\n\t\t\tfor ( const type in geometries ) {\r\n\r\n\t\t\t\tconst geometry = geometries[ type ];\r\n\r\n\t\t\t\tconst materials = resolveMaterialBinding( geometry.materialKeys, instanceMaterials );\r\n\r\n\t\t\t\t// handle case if no materials are defined\r\n\r\n\t\t\t\tif ( materials.length === 0 ) {\r\n\r\n\t\t\t\t\tif ( type === 'lines' || type === 'linestrips' ) {\r\n\r\n\t\t\t\t\t\tmaterials.push( new LineBasicMaterial() );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tmaterials.push( new MeshPhongMaterial() );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Collada allows to use phong and lambert materials with lines. Replacing these cases with LineBasicMaterial.\r\n\r\n\t\t\t\tif ( type === 'lines' || type === 'linestrips' ) {\r\n\r\n\t\t\t\t\tfor ( let i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tconst material = materials[ i ];\r\n\r\n\t\t\t\t\t\tif ( material.isMeshPhongMaterial === true || material.isMeshLambertMaterial === true ) {\r\n\r\n\t\t\t\t\t\t\tconst lineMaterial = new LineBasicMaterial();\r\n\r\n\t\t\t\t\t\t\t// copy compatible properties\r\n\r\n\t\t\t\t\t\t\tlineMaterial.color.copy( material.color );\r\n\t\t\t\t\t\t\tlineMaterial.opacity = material.opacity;\r\n\t\t\t\t\t\t\tlineMaterial.transparent = material.transparent;\r\n\r\n\t\t\t\t\t\t\t// replace material\r\n\r\n\t\t\t\t\t\t\tmaterials[ i ] = lineMaterial;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// regard skinning\r\n\r\n\t\t\t\tconst skinning = ( geometry.data.attributes.skinIndex !== undefined );\r\n\r\n\t\t\t\t// choose between a single or multi materials (material array)\r\n\r\n\t\t\t\tconst material = ( materials.length === 1 ) ? materials[ 0 ] : materials;\r\n\r\n\t\t\t\t// now create a specific 3D object\r\n\r\n\t\t\t\tlet object;\r\n\r\n\t\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\t\tcase 'lines':\r\n\t\t\t\t\t\tobject = new LineSegments( geometry.data, material );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'linestrips':\r\n\t\t\t\t\t\tobject = new Line( geometry.data, material );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'triangles':\r\n\t\t\t\t\tcase 'polylist':\r\n\t\t\t\t\t\tif ( skinning ) {\r\n\r\n\t\t\t\t\t\t\tobject = new SkinnedMesh( geometry.data, material );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tobject = new Mesh( geometry.data, material );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tobjects.push( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn objects;\r\n\r\n\t\t}\r\n\r\n\t\tfunction hasNode( id ) {\r\n\r\n\t\t\treturn library.nodes[ id ] !== undefined;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getNode( id ) {\r\n\r\n\t\t\treturn getBuild( library.nodes[ id ], buildNode );\r\n\r\n\t\t}\r\n\r\n\t\t// visual scenes\r\n\r\n\t\tfunction parseVisualScene( xml ) {\r\n\r\n\t\t\tconst data = {\r\n\t\t\t\tname: xml.getAttribute( 'name' ),\r\n\t\t\t\tchildren: []\r\n\t\t\t};\r\n\r\n\t\t\tprepareNodes( xml );\r\n\r\n\t\t\tconst elements = getElementsByTagName( xml, 'node' );\r\n\r\n\t\t\tfor ( let i = 0; i < elements.length; i ++ ) {\r\n\r\n\t\t\t\tdata.children.push( parseNode( elements[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlibrary.visualScenes[ xml.getAttribute( 'id' ) ] = data;\r\n\r\n\t\t}\r\n\r\n\t\tfunction buildVisualScene( data ) {\r\n\r\n\t\t\tconst group = new Group();\r\n\t\t\tgroup.name = data.name;\r\n\r\n\t\t\tconst children = data.children;\r\n\r\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\r\n\r\n\t\t\t\tconst child = children[ i ];\r\n\r\n\t\t\t\tgroup.add( getNode( child.id ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn group;\r\n\r\n\t\t}\r\n\r\n\t\tfunction hasVisualScene( id ) {\r\n\r\n\t\t\treturn library.visualScenes[ id ] !== undefined;\r\n\r\n\t\t}\r\n\r\n\t\tfunction getVisualScene( id ) {\r\n\r\n\t\t\treturn getBuild( library.visualScenes[ id ], buildVisualScene );\r\n\r\n\t\t}\r\n\r\n\t\t// scenes\r\n\r\n\t\tfunction parseScene( xml ) {\r\n\r\n\t\t\tconst instance = getElementsByTagName( xml, 'instance_visual_scene' )[ 0 ];\r\n\t\t\treturn getVisualScene( parseId( instance.getAttribute( 'url' ) ) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction setupAnimations() {\r\n\r\n\t\t\tconst clips = library.clips;\r\n\r\n\t\t\tif ( isEmpty( clips ) === true ) {\r\n\r\n\t\t\t\tif ( isEmpty( library.animations ) === false ) {\r\n\r\n\t\t\t\t\t// if there are animations but no clips, we create a default clip for playback\r\n\r\n\t\t\t\t\tconst tracks = [];\r\n\r\n\t\t\t\t\tfor ( const id in library.animations ) {\r\n\r\n\t\t\t\t\t\tconst animationTracks = getAnimation( id );\r\n\r\n\t\t\t\t\t\tfor ( let i = 0, l = animationTracks.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\ttracks.push( animationTracks[ i ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tanimations.push( new AnimationClip( 'default', - 1, tracks ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( const id in clips ) {\r\n\r\n\t\t\t\t\tanimations.push( getAnimationClip( id ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// convert the parser error element into text with each child elements text\r\n\t\t// separated by new lines.\r\n\r\n\t\tfunction parserErrorToText( parserError ) {\r\n\r\n\t\t\tlet result = '';\r\n\t\t\tconst stack = [ parserError ];\r\n\r\n\t\t\twhile ( stack.length ) {\r\n\r\n\t\t\t\tconst node = stack.shift();\r\n\r\n\t\t\t\tif ( node.nodeType === Node.TEXT_NODE ) {\r\n\r\n\t\t\t\t\tresult += node.textContent;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tresult += '\\n';\r\n\t\t\t\t\tstack.push.apply( stack, node.childNodes );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result.trim();\r\n\r\n\t\t}\r\n\r\n\t\tif ( text.length === 0 ) {\r\n\r\n\t\t\treturn { scene: new Scene() };\r\n\r\n\t\t}\r\n\r\n\t\tconst xml = new DOMParser().parseFromString( text, 'application/xml' );\r\n\r\n\t\tconst collada = getElementsByTagName( xml, 'COLLADA' )[ 0 ];\r\n\r\n\t\tconst parserError = xml.getElementsByTagName( 'parsererror' )[ 0 ];\r\n\t\tif ( parserError !== undefined ) {\r\n\r\n\t\t\t// Chrome will return parser error with a div in it\r\n\r\n\t\t\tconst errorElement = getElementsByTagName( parserError, 'div' )[ 0 ];\r\n\t\t\tlet errorText;\r\n\r\n\t\t\tif ( errorElement ) {\r\n\r\n\t\t\t\terrorText = errorElement.textContent;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\terrorText = parserErrorToText( parserError );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconsole.error( 'THREE.ColladaLoader: Failed to parse collada file.\\n', errorText );\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\t// metadata\r\n\r\n\t\tconst version = collada.getAttribute( 'version' );\r\n\t\tconsole.debug( 'THREE.ColladaLoader: File version', version );\r\n\r\n\t\tconst asset = parseAsset( getElementsByTagName( collada, 'asset' )[ 0 ] );\r\n\t\tconst textureLoader = new TextureLoader( this.manager );\r\n\t\ttextureLoader.setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\r\n\r\n\t\tlet tgaLoader;\r\n\r\n\t\tif ( TGALoader ) {\r\n\r\n\t\t\ttgaLoader = new TGALoader( this.manager );\r\n\t\t\ttgaLoader.setPath( this.resourcePath || path );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tconst tempColor = new Color();\r\n\t\tconst animations = [];\r\n\t\tlet kinematics = {};\r\n\t\tlet count = 0;\r\n\r\n\t\t//\r\n\r\n\t\tconst library = {\r\n\t\t\tanimations: {},\r\n\t\t\tclips: {},\r\n\t\t\tcontrollers: {},\r\n\t\t\timages: {},\r\n\t\t\teffects: {},\r\n\t\t\tmaterials: {},\r\n\t\t\tcameras: {},\r\n\t\t\tlights: {},\r\n\t\t\tgeometries: {},\r\n\t\t\tnodes: {},\r\n\t\t\tvisualScenes: {},\r\n\t\t\tkinematicsModels: {},\r\n\t\t\tphysicsModels: {},\r\n\t\t\tkinematicsScenes: {}\r\n\t\t};\r\n\r\n\t\tparseLibrary( collada, 'library_animations', 'animation', parseAnimation );\r\n\t\tparseLibrary( collada, 'library_animation_clips', 'animation_clip', parseAnimationClip );\r\n\t\tparseLibrary( collada, 'library_controllers', 'controller', parseController );\r\n\t\tparseLibrary( collada, 'library_images', 'image', parseImage );\r\n\t\tparseLibrary( collada, 'library_effects', 'effect', parseEffect );\r\n\t\tparseLibrary( collada, 'library_materials', 'material', parseMaterial );\r\n\t\tparseLibrary( collada, 'library_cameras', 'camera', parseCamera );\r\n\t\tparseLibrary( collada, 'library_lights', 'light', parseLight );\r\n\t\tparseLibrary( collada, 'library_geometries', 'geometry', parseGeometry );\r\n\t\tparseLibrary( collada, 'library_nodes', 'node', parseNode );\r\n\t\tparseLibrary( collada, 'library_visual_scenes', 'visual_scene', parseVisualScene );\r\n\t\tparseLibrary( collada, 'library_kinematics_models', 'kinematics_model', parseKinematicsModel );\r\n\t\tparseLibrary( collada, 'library_physics_models', 'physics_model', parsePhysicsModel );\r\n\t\tparseLibrary( collada, 'scene', 'instance_kinematics_scene', parseKinematicsScene );\r\n\r\n\t\tbuildLibrary( library.animations, buildAnimation );\r\n\t\tbuildLibrary( library.clips, buildAnimationClip );\r\n\t\tbuildLibrary( library.controllers, buildController );\r\n\t\tbuildLibrary( library.images, buildImage );\r\n\t\tbuildLibrary( library.effects, buildEffect );\r\n\t\tbuildLibrary( library.materials, buildMaterial );\r\n\t\tbuildLibrary( library.cameras, buildCamera );\r\n\t\tbuildLibrary( library.lights, buildLight );\r\n\t\tbuildLibrary( library.geometries, buildGeometry );\r\n\t\tbuildLibrary( library.visualScenes, buildVisualScene );\r\n\r\n\t\tsetupAnimations();\r\n\t\tsetupKinematics();\r\n\r\n\t\tconst scene = parseScene( getElementsByTagName( collada, 'scene' )[ 0 ] );\r\n\t\tscene.animations = animations;\r\n\r\n\t\tif ( asset.upAxis === 'Z_UP' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.ColladaLoader: You are loading an asset with a Z-UP coordinate system. The loader just rotates the asset to transform it into Y-UP. The vertex data are not converted, see #24289.' );\r\n\t\t\tscene.rotation.set( - Math.PI / 2, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tscene.scale.multiplyScalar( asset.unit );\r\n\r\n\t\treturn {\r\n\t\t\tget animations() {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.ColladaLoader: Please access animations over scene.animations now.' );\r\n\t\t\t\treturn animations;\r\n\r\n\t\t\t},\r\n\t\t\tkinematics: kinematics,\r\n\t\t\tlibrary: library,\r\n\t\t\tscene: scene\r\n\t\t};\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { ColladaLoader };\r\n"],"names":["ColladaLoader","_Loader","_inherits","_super","_createSuper","manager","_classCallCheck","call","_createClass","key","value","url","onLoad","onProgress","onError","scope","this","path","LoaderUtils","extractUrlBase","loader","FileLoader","setPath","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","text","parse","e","console","error","itemError","getElementsByTagName","xml","name","array","childNodes","i","l","length","child","nodeName","push","parseStrings","parts","trim","split","Array","parseFloats","parseFloat","parseInts","parseInt","parseId","substring","isEmpty","object","Object","keys","parseAssetUnit","undefined","hasAttribute","getAttribute","parseAssetUpAxis","textContent","parseLibrary","libraryName","parser","library","elements","buildLibrary","data","builder","build","getBuild","parseAnimationSampler","inputs","nodeType","id","semantic","parseAnimationChannel","shift","sid","arraySyntax","indexOf","memberSyntax","member","indices","replace","sampler","buildAnimation","tracks","channels","samplers","sources","target","prototype","hasOwnProperty","channel","inputId","INPUT","outputId","OUTPUT","createKeyframeTracks","buildAnimationChannel","getAnimation","animations","inputSource","outputSource","time","stride","il","j","jl","node","nodes","object3D","getNode","transform","transforms","defaultMatrix","matrix","clone","transpose","index","warn","keyframes","sort","ascending","transformAnimationData","a","b","prepareAnimationData","uuid","position","Vector3","scale","quaternion","Quaternion","animation","times","positionData","quaternionData","scaleData","keyframe","fromArray","decompose","x","y","z","w","VectorKeyframeTrack","QuaternionKeyframeTrack","property","defaultValue","empty","prev","next","getPrev","getNext","interpolate","createMissingKeyframes","buildAnimationClip","duration","end","start","animationTracks","AnimationClip","getAnimationClip","clips","parseSkin","bindShapeMatrix","parseSource","joints","parseJoints","vertexWeights","parseVertexWeights","offset","vcount","v","buildController","geometry","geometries","skin","BONE_LIMIT","weights","jointOffset","JOINT","weightOffset","WEIGHT","jointSource","inverseSource","INV_BIND_MATRIX","jointCount","vertexSkinData","skinIndex","skinWeight","weight","descending","d","bindMatrix","Matrix4","identity","boneInverse","buildSkin","skinIndices","skinWeights","buildImage","init_from","getImage","images","parseEffectProfileCOMMON","surfaces","parseEffectNewparam","technique","parseEffectTechnique","extra","parseEffectExtra","parseEffectSurface","parseEffectSampler","source","type","parameters","parseEffectParameters","parseEffectParameter","opaque","parseEffectParameterTexture","parseEffectParameterTextureExtra","parseEffectParameterTextureExtraTechnique","toUpperCase","parseEffectExtraTechniqueBump","parseEffectExtraTechnique","texcoord","buildEffect","buildMaterial","material","effect","effects","profile","MeshPhongMaterial","MeshLambertMaterial","MeshBasicMaterial","getTexture","textureObject","encoding","arguments","image","extension","slice","lastIndexOf","toLowerCase","tgaLoader","textureLoader","getTextureLoader","texture","wrapS","wrapU","RepeatWrapping","ClampToEdgeWrapping","wrapT","wrapV","set","offsetU","offsetV","repeat","repeatU","repeatV","parameter","color","map","sRGBEncoding","specular","specularMap","normalMap","lightMap","float","shininess","emissive","emissiveMap","convertSRGBToLinear","transparent","transparency","opacity","techniques","k","side","DoubleSide","FrontSide","normalScale","Vector2","getMaterial","materials","parseCameraOptics","parseCameraTechnique","parseCameraParameters","buildCamera","camera","optics","PerspectiveCamera","yfov","aspect_ratio","znear","zfar","ymag","xmag","aspectRatio","OrthographicCamera","getCamera","cameras","parseLightTechnique","parseLightParameters","Color","falloffAngle","f","distance","Math","sqrt","buildLight","light","DirectionalLight","PointLight","SpotLight","AmbientLight","copy","getLight","lights","accessor","parseGeometryVertices","parseGeometryPrimitive","primitive","count","hasUV","inputname","max","p","checkUVCoordinates","primitives","uvsNeedsFix","buildGeometry","vertices","groupedPrimitives","groupPrimitives","primitiveType","buildGeometryType","normal","uv","uv2","BufferGeometry","materialKeys","g","vc","addGroup","input","prevLength","buildGeometryData","setAttribute","Float32BufferAttribute","isColor","pushVector","sourceStride","sourceArray","startIndex","tempColor","setRGB","r","c","kl","getGeometry","buildKinematicsModel","parseKinematicsTechniqueCommon","parseKinematicsJoint","links","parseKinematicsLink","parseKinematicsJointParameter","axis","limits","min","static","zeroPosition","middlePosition","attachments","parseKinematicsAttachment","parseKinematicsTransform","joint","pop","obj","angle","MathUtils","degToRad","parsePhysicsRigidBody","parsePhysicsTechniqueCommon","inertia","mass","parseKinematicsBindJointAxis","param","tmpJointIndex","jointIndex","buildKinematicsScene","buildTransformList","collada","querySelector","vector","parseNode","instanceCameras","instanceControllers","instanceLights","instanceGeometries","instanceNodes","parseNodeInstance","multiply","makeTranslation","makeRotationAxis","log","hasNode","skeletons","instances","instance","symbol","buildSkeleton","boneData","sortedBoneData","skeleton","buildBoneHierarchy","visualScenes","children","bone","processed","bones","boneInverses","Skeleton","root","traverse","isBone","buildNode","objects","instanceCamera","controller","controllers","newObjects","buildObjects","isSkinnedMesh","bind","normalizeSkinWeights","instanceLight","Bone","Group","add","fallbackMaterial","resolveMaterialBinding","instanceMaterials","LineBasicMaterial","isMeshPhongMaterial","isMeshLambertMaterial","lineMaterial","skinning","attributes","LineSegments","Line","SkinnedMesh","Mesh","buildVisualScene","group","getVisualScene","scene","Scene","DOMParser","parseFromString","parserError","errorText","errorElement","result","stack","Node","TEXT_NODE","apply","parserErrorToText","version","debug","asset","unit","upAxis","parseAsset","TextureLoader","resourcePath","setCrossOrigin","crossOrigin","TGALoader","kinematics","kinematicsModels","physicsModels","kinematicsScenes","parseAnimation","hasChildren","generateUUID","mesh","element","prepareNodes","rigidBodies","bindJointAxis","setupAnimations","kinematicsModelId","kinematicsSceneId","visualSceneId","kinematicsModel","kinematicsScene","getKinematicsScene","visualScene","jointMap","targetElement","parentVisualElement","parentElement","connect","m0","getJointValue","jointData","setJointValue","visualElement","visualElementName","setupKinematics","parseScene","rotation","PI","multiplyScalar","Loader"],"sourceRoot":""}