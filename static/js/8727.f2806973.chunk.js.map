{"version":3,"file":"static/js/8727.f2806973.chunk.js","mappings":"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","sources":["common/loading/circularProgressWithLabel.js","common/loading/loadingOverlay.js","common/ui/contactForm.js","public/productModelling.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nexport default function CircularProgressWithLabel(props) {\r\n  return (\r\n    <Box position=\"relative\" display=\"inline-flex\">\r\n      <CircularProgress {...props} />\r\n      {\r\n        props.variant === 'determinate' &&\r\n        <Box\r\n          top={0}\r\n          left={0}\r\n          bottom={0}\r\n          right={0}\r\n          position=\"absolute\"\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Typography variant=\"caption\" component=\"div\" color=\"textSecondary\">\r\n            <span style={{ fontSize: props.fontSize }}>\r\n              {\r\n                `${Math.round(props.value)}%`\r\n              }\r\n            </span>\r\n          </Typography>\r\n        </Box>\r\n      }\r\n    </Box>\r\n  );\r\n}\r\n\r\nCircularProgressWithLabel.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  fontSize: PropTypes.string,\r\n  variant: PropTypes.string\r\n};\r\n","import React, {Fragment} from 'react';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgressWithLabel from './circularProgressWithLabel';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  backdrop: {\r\n    zIndex: 5,\r\n    color: 'white',\r\n    backgroundColor: 'rgb(255, 255, 255)'\r\n  },\r\n}));\r\n\r\nexport default function LoadingOverlay(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n      <Fragment>\r\n        <Backdrop className={classes.backdrop} open={props.show} transitionDuration={{exit: 1000, enter: 0, appear: 0}}>\r\n            <div style={{textAlign: \"center\"}}>\r\n                <CircularProgressWithLabel variant={props.variant} color=\"primary\" value={props.value} size={85} fontSize='24px' />\r\n            </div>\r\n        </Backdrop>\r\n        {props.children}\r\n      </Fragment>\r\n  );\r\n}\r\n\r\nLoadingOverlay.defaultProps = {\r\n  variant: 'indeterminate',\r\n  value: 0\r\n};\r\n\r\nLoadingOverlay.propTypes = {\r\n  show: PropTypes.bool.isRequired,\r\n  value: PropTypes.number,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.array,\r\n    PropTypes.object\r\n  ]),\r\n  variant: PropTypes.string // indeterminate or determinate\r\n};","import React, { Fragment } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { appConfig } from '../../config/appConfig';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class ContactForm extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: '',\r\n            email: '',\r\n            message: '',\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let script = document.createElement(\"script\");\r\n        script.src = \"https://www.google.com/recaptcha/api.js\";\r\n\r\n        document.head.appendChild(script);\r\n\r\n        script = document.createElement(\"script\");\r\n        script.src = \"https://apis.google.com/js/platform.js\";\r\n\r\n        document.head.appendChild(script);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <h1>{this.props.title}</h1>\r\n                    <p>\r\n                        {this.props.message}\r\n                    </p>\r\n                </div>\r\n                <br />\r\n                <form className='std-form' onSubmit={\r\n                    e => {\r\n                        e.preventDefault();\r\n\r\n                        if (!window.grecaptcha.getResponse()) {\r\n                            alert(\"Please confirm you're not a robot\");\r\n                            return false;\r\n                        }\r\n\r\n                        this.props.onSubmit(e, this.state.name, this.state.email, this.state.message)\r\n                    }\r\n                }>\r\n                    <div>\r\n                        <TextField\r\n                            style={{ width: \"100%\" }}\r\n                            label='Name'\r\n                            variant='outlined'\r\n                            required\r\n                            name='name'\r\n                            value={this.state.name}\r\n                            placeholder=''\r\n                            onChange={this.onChange} />\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            style={{ width: \"100%\" }}\r\n                            label=\"Email\"\r\n                            variant='outlined'\r\n                            required\r\n                            name='email'\r\n                            value={this.state.email}\r\n                            type='email'\r\n                            inputProps={{\r\n                                minLength: '3',\r\n                                maxLength: '256'\r\n                            }}\r\n                            onChange={this.onChange} />\r\n                    </div>\r\n                    <div>\r\n                        <TextField\r\n                            style={{ width: \"100%\" }}\r\n                            label=\"Message\"\r\n                            variant='outlined'\r\n                            required\r\n                            multiline\r\n                            rows={8}\r\n                            name='message'\r\n                            value={this.state.message}\r\n                            onChange={this.onChange} />\r\n                    </div>\r\n                    <div style={{ textAlign: 'center', margin: '20px 0' }}>\r\n                        <div className=\"g-recaptcha\" id='recaptcha' style={{ display: 'inline-block' }} data-sitekey={appConfig.recaptchaKey}></div>\r\n                    </div>\r\n                    <div style={{ display: 'flex' }}>\r\n                        <Button\r\n                            className='center'\r\n                            type='submit'\r\n                            variant='contained'\r\n                            color='primary'\r\n                            size='large'>\r\n                            Submit\r\n                        </Button>\r\n                    </div>\r\n\r\n                </form>\r\n                <br />\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nContactForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n    title: PropTypes.string,\r\n    message: PropTypes.string,\r\n};","import React from \"react\"\r\nimport { Helmet } from \"react-helmet\";\r\nimport Services from 'ezyvuecore/services/services';\r\nimport ContactForm from 'common/ui/contactForm';\r\nimport LoadingOverlay from 'common/loading/loadingOverlay'\r\n\r\nexport default class ProductModelling extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            error: '',\r\n            submitted: false,\r\n            showLoadingScreen: false\r\n        };\r\n\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    displayError(error) {\r\n        this.setState({ error: error, showLoadingScreen: false });\r\n    }\r\n\r\n    async onSubmit(e, name, email, message) {\r\n        try {\r\n            this.setState({ showLoadingScreen: true });\r\n\r\n            const resp = await Services.adminService.sendMessage({\r\n                firstName: name,\r\n                lastName: '',\r\n                email: email,\r\n                message: message,\r\n            });\r\n\r\n            if (!resp.ok)\r\n                throw Error();\r\n\r\n            this.setState({ submitted: true, showLoadingScreen: false });\r\n        }\r\n        catch (e) {\r\n            this.displayError('An error occured submitting the form. Please try again.');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.submitted)\r\n            return (\r\n                <div className='homepage center-page-xy center'>\r\n                    <section style={{ textAlign: 'center' }}>\r\n                        <div>\r\n                            <img src={require('assets/images/emailsent.jpg')} alt='' style={{ width: '128px', marginBottom: '60px' }} />\r\n                        </div>\r\n                        <h3>Thank you for getting in touch!</h3>\r\n                        We&apos;ll get back to you as soon as possible.\r\n                    </section>\r\n                </div>\r\n            );\r\n        return (\r\n            <LoadingOverlay show={this.state.showLoadingScreen}>\r\n                 <Helmet>\r\n                    <meta charSet=\"utf-8\" />\r\n                    <title>Afforadble highly detailed, low polygon 3d models</title>\r\n                    <link rel=\"canonical\" href=\"https://www.ezyvue.com/productModelling\" />\r\n                </Helmet>\r\n                <div className='homepage center-page-xy center' style={{textAlign: 'center'}}>\r\n                    <h1>High quality, web and AR ready 3d models</h1>\r\n                    <p>\r\n                        Contact us today for a free quote from our expert modelling partners\r\n                        <br/>\r\n                        <br/>\r\n                    </p>\r\n                    <section style={{ textAlign: 'center' }}>\r\n                        <div>\r\n                            <img style={{ maxWidth: '500px', width: '100%' }} alt='' src={require('assets/images/modelling.jpg')} loading='lazy' />\r\n                        </div>\r\n                        <br />\r\n                        <br />\r\n                        <ContactForm\r\n                            title='3d Modelling Request'\r\n                            message=\"\"\r\n                            onSubmit={this.onSubmit} />\r\n                    </section>\r\n                </div>\r\n            </LoadingOverlay>\r\n        );\r\n    }\r\n}"],"names":["CircularProgressWithLabel","props","_jsxs","Box","position","display","children","_jsx","CircularProgress","_objectSpread","variant","top","left","bottom","right","alignItems","justifyContent","Typography","component","color","style","fontSize","concat","Math","round","value","useStyles","makeStyles","backdrop","zIndex","backgroundColor","LoadingOverlay","classes","Fragment","Backdrop","className","open","show","transitionDuration","exit","enter","appear","textAlign","size","defaultProps","ContactForm","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","call","state","name","email","message","onChange","bind","_assertThisInitialized","_createClass","key","e","this","setState","_defineProperty","target","script","document","createElement","src","head","appendChild","_this2","title","onSubmit","preventDefault","window","grecaptcha","getResponse","alert","TextField","width","label","required","placeholder","type","inputProps","minLength","maxLength","multiline","rows","margin","id","appConfig","recaptchaKey","Button","React","ProductModelling","error","submitted","showLoadingScreen","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","Services","adminService","sendMessage","firstName","lastName","sent","ok","Error","t0","displayError","stop","_x","_x2","_x3","_x4","apply","arguments","require","alt","marginBottom","Helmet","charSet","rel","href","maxWidth","loading"],"sourceRoot":""}