{"version":3,"file":"static/js/5696.1c895cf7.chunk.js","mappings":"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","sources":["ezyvuecore/three/examples/jsm/loaders/PLYLoader.js"],"sourcesContent":["import {\r\n\tBufferGeometry,\r\n\tFileLoader,\r\n\tFloat32BufferAttribute,\r\n\tLoader,\r\n\tColor\r\n} from '../../../build/three';\r\n\r\n/**\r\n * Description: A THREE loader for PLY ASCII files (known as the Polygon\r\n * File Format or the Stanford Triangle Format).\r\n *\r\n * Limitations: ASCII decoding assumes file is UTF-8.\r\n *\r\n * Usage:\r\n *\tconst loader = new PLYLoader();\r\n *\tloader.load('./models/ply/ascii/dolphins.ply', function (geometry) {\r\n *\r\n *\t\tscene.add( new THREE.Mesh( geometry ) );\r\n *\r\n *\t} );\r\n *\r\n * If the PLY file uses non standard property names, they can be mapped while\r\n * loading. For example, the following maps the properties\r\n * “diffuse_(red|green|blue)” in the file to standard color names.\r\n *\r\n * loader.setPropertyNameMapping( {\r\n *\tdiffuse_red: 'red',\r\n *\tdiffuse_green: 'green',\r\n *\tdiffuse_blue: 'blue'\r\n * } );\r\n *\r\n * Custom properties outside of the defaults for position, uv, normal\r\n * and color attributes can be added using the setCustomPropertyMapping method.\r\n * For example, the following maps the element properties “custom_property_a”\r\n * and “custom_property_b” to an attribute “customAttribute” with an item size of 2.\r\n * Attribute item sizes are set from the number of element properties in the property array.\r\n *\r\n * loader.setCustomPropertyMapping( {\r\n *\tcustomAttribute: ['custom_property_a', 'custom_property_b'],\r\n * } );\r\n *\r\n */\r\n\r\nconst _color = new Color();\r\n\r\nclass PLYLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t\tthis.propertyNameMapping = {};\r\n\t\tthis.customPropertyMapping = {};\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( text ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tsetPropertyNameMapping( mapping ) {\r\n\r\n\t\tthis.propertyNameMapping = mapping;\r\n\r\n\t}\r\n\r\n\tsetCustomPropertyNameMapping( mapping ) {\r\n\r\n\t\tthis.customPropertyMapping = mapping;\r\n\r\n\t}\r\n\r\n\tparse( data ) {\r\n\r\n\t\tfunction parseHeader( data ) {\r\n\r\n\t\t\tconst patternHeader = /^ply([\\s\\S]*)end_header(\\r\\n|\\r|\\n)/;\r\n\t\t\tlet headerText = '';\r\n\t\t\tlet headerLength = 0;\r\n\t\t\tconst result = patternHeader.exec( data );\r\n\r\n\t\t\tif ( result !== null ) {\r\n\r\n\t\t\t\theaderText = result[ 1 ];\r\n\t\t\t\theaderLength = new Blob( [ result[ 0 ] ] ).size;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst header = {\r\n\t\t\t\tcomments: [],\r\n\t\t\t\telements: [],\r\n\t\t\t\theaderLength: headerLength,\r\n\t\t\t\tobjInfo: ''\r\n\t\t\t};\r\n\r\n\t\t\tconst lines = headerText.split( /\\r\\n|\\r|\\n/ );\r\n\t\t\tlet currentElement;\r\n\r\n\t\t\tfunction make_ply_element_property( propertValues, propertyNameMapping ) {\r\n\r\n\t\t\t\tconst property = { type: propertValues[ 0 ] };\r\n\r\n\t\t\t\tif ( property.type === 'list' ) {\r\n\r\n\t\t\t\t\tproperty.name = propertValues[ 3 ];\r\n\t\t\t\t\tproperty.countType = propertValues[ 1 ];\r\n\t\t\t\t\tproperty.itemType = propertValues[ 2 ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tproperty.name = propertValues[ 1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( property.name in propertyNameMapping ) {\r\n\r\n\t\t\t\t\tproperty.name = propertyNameMapping[ property.name ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn property;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\t\tlet line = lines[ i ];\r\n\t\t\t\tline = line.trim();\r\n\r\n\t\t\t\tif ( line === '' ) continue;\r\n\r\n\t\t\t\tconst lineValues = line.split( /\\s+/ );\r\n\t\t\t\tconst lineType = lineValues.shift();\r\n\t\t\t\tline = lineValues.join( ' ' );\r\n\r\n\t\t\t\tswitch ( lineType ) {\r\n\r\n\t\t\t\t\tcase 'format':\r\n\r\n\t\t\t\t\t\theader.format = lineValues[ 0 ];\r\n\t\t\t\t\t\theader.version = lineValues[ 1 ];\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'comment':\r\n\r\n\t\t\t\t\t\theader.comments.push( line );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'element':\r\n\r\n\t\t\t\t\t\tif ( currentElement !== undefined ) {\r\n\r\n\t\t\t\t\t\t\theader.elements.push( currentElement );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tcurrentElement = {};\r\n\t\t\t\t\t\tcurrentElement.name = lineValues[ 0 ];\r\n\t\t\t\t\t\tcurrentElement.count = parseInt( lineValues[ 1 ] );\r\n\t\t\t\t\t\tcurrentElement.properties = [];\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'property':\r\n\r\n\t\t\t\t\t\tcurrentElement.properties.push( make_ply_element_property( lineValues, scope.propertyNameMapping ) );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'obj_info':\r\n\r\n\t\t\t\t\t\theader.objInfo = line;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tconsole.log( 'unhandled', lineType, lineValues );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentElement !== undefined ) {\r\n\r\n\t\t\t\theader.elements.push( currentElement );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn header;\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseASCIINumber( n, type ) {\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase 'char': case 'uchar': case 'short': case 'ushort': case 'int': case 'uint':\r\n\t\t\t\tcase 'int8': case 'uint8': case 'int16': case 'uint16': case 'int32': case 'uint32':\r\n\r\n\t\t\t\t\treturn parseInt( n );\r\n\r\n\t\t\t\tcase 'float': case 'double': case 'float32': case 'float64':\r\n\r\n\t\t\t\t\treturn parseFloat( n );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseASCIIElement( properties, line ) {\r\n\r\n\t\t\tconst values = line.split( /\\s+/ );\r\n\r\n\t\t\tconst element = {};\r\n\r\n\t\t\tfor ( let i = 0; i < properties.length; i ++ ) {\r\n\r\n\t\t\t\tif ( properties[ i ].type === 'list' ) {\r\n\r\n\t\t\t\t\tconst list = [];\r\n\t\t\t\t\tconst n = parseASCIINumber( values.shift(), properties[ i ].countType );\r\n\r\n\t\t\t\t\tfor ( let j = 0; j < n; j ++ ) {\r\n\r\n\t\t\t\t\t\tlist.push( parseASCIINumber( values.shift(), properties[ i ].itemType ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telement[ properties[ i ].name ] = list;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\telement[ properties[ i ].name ] = parseASCIINumber( values.shift(), properties[ i ].type );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn element;\r\n\r\n\t\t}\r\n\r\n\t\tfunction createBuffer() {\r\n\r\n\t\t\tconst buffer = {\r\n\t\t\t  indices: [],\r\n\t\t\t  vertices: [],\r\n\t\t\t  normals: [],\r\n\t\t\t  uvs: [],\r\n\t\t\t  faceVertexUvs: [],\r\n\t\t\t  colors: [],\r\n\t\t\t};\r\n\r\n\t\t\tfor ( const customProperty of Object.keys( scope.customPropertyMapping ) ) {\r\n\r\n\t\t\t  buffer[ customProperty ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t}\r\n\r\n\t\tfunction mapElementAttributes( properties ) {\r\n\r\n\t\t\tconst elementNames = properties.map( property => {\r\n\r\n\t\t\t\treturn property.name;\r\n\r\n\t\t\t} );\r\n\r\n\t\t\tfunction findAttrName( names ) {\r\n\r\n\t\t\t\tfor ( let i = 0, l = names.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tconst name = names[ i ];\r\n\r\n\t\t\t\t\tif ( elementNames.includes( name ) ) return name;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn {\r\n\t\t\t\tattrX: findAttrName( [ 'x', 'px', 'posx' ] ) || 'x',\r\n\t\t\t\tattrY: findAttrName( [ 'y', 'py', 'posy' ] ) || 'y',\r\n\t\t\t\tattrZ: findAttrName( [ 'z', 'pz', 'posz' ] ) || 'z',\r\n\t\t\t\tattrNX: findAttrName( [ 'nx', 'normalx' ] ),\r\n\t\t\t\tattrNY: findAttrName( [ 'ny', 'normaly' ] ),\r\n\t\t\t\tattrNZ: findAttrName( [ 'nz', 'normalz' ] ),\r\n\t\t\t\tattrS: findAttrName( [ 's', 'u', 'texture_u', 'tx' ] ),\r\n\t\t\t\tattrT: findAttrName( [ 't', 'v', 'texture_v', 'ty' ] ),\r\n\t\t\t\tattrR: findAttrName( [ 'red', 'diffuse_red', 'r', 'diffuse_r' ] ),\r\n\t\t\t\tattrG: findAttrName( [ 'green', 'diffuse_green', 'g', 'diffuse_g' ] ),\r\n\t\t\t\tattrB: findAttrName( [ 'blue', 'diffuse_blue', 'b', 'diffuse_b' ] ),\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseASCII( data, header ) {\r\n\r\n\t\t\t// PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\r\n\r\n\t\t\tconst buffer = createBuffer();\r\n\r\n\t\t\tlet result;\r\n\r\n\t\t\tconst patternBody = /end_header\\s([\\s\\S]*)$/;\r\n\t\t\tlet body = '';\r\n\t\t\tif ( ( result = patternBody.exec( data ) ) !== null ) {\r\n\r\n\t\t\t\tbody = result[ 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst lines = body.split( /\\r\\n|\\r|\\n/ );\r\n\t\t\tlet currentElement = 0;\r\n\t\t\tlet currentElementCount = 0;\r\n\t\t\tlet elementDesc = header.elements[ currentElement ];\r\n\t\t\tlet attributeMap = mapElementAttributes( elementDesc.properties );\r\n\r\n\t\t\tfor ( let i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\t\tlet line = lines[ i ];\r\n\t\t\t\tline = line.trim();\r\n\t\t\t\tif ( line === '' ) {\r\n\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( currentElementCount >= elementDesc.count ) {\r\n\r\n\t\t\t\t\tcurrentElement ++;\r\n\t\t\t\t\tcurrentElementCount = 0;\r\n\t\t\t\t\telementDesc = header.elements[ currentElement ];\r\n\r\n\t\t\t\t\tattributeMap = mapElementAttributes( elementDesc.properties );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst element = parseASCIIElement( elementDesc.properties, line );\r\n\r\n\t\t\t\thandleElement( buffer, elementDesc.name, element, attributeMap );\r\n\r\n\t\t\t\tcurrentElementCount ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn postProcess( buffer );\r\n\r\n\t\t}\r\n\r\n\t\tfunction postProcess( buffer ) {\r\n\r\n\t\t\tlet geometry = new BufferGeometry();\r\n\r\n\t\t\t// mandatory buffer data\r\n\r\n\t\t\tif ( buffer.indices.length > 0 ) {\r\n\r\n\t\t\t\tgeometry.setIndex( buffer.indices );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( buffer.vertices, 3 ) );\r\n\r\n\t\t\t// optional buffer data\r\n\r\n\t\t\tif ( buffer.normals.length > 0 ) {\r\n\r\n\t\t\t\tgeometry.setAttribute( 'normal', new Float32BufferAttribute( buffer.normals, 3 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( buffer.uvs.length > 0 ) {\r\n\r\n\t\t\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( buffer.uvs, 2 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( buffer.colors.length > 0 ) {\r\n\r\n\t\t\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( buffer.colors, 3 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( buffer.faceVertexUvs.length > 0 ) {\r\n\r\n\t\t\t\tgeometry = geometry.toNonIndexed();\r\n\t\t\t\tgeometry.setAttribute( 'uv', new Float32BufferAttribute( buffer.faceVertexUvs, 2 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// custom buffer data\r\n\r\n\t\t\tfor ( const customProperty of Object.keys( scope.customPropertyMapping ) ) {\r\n\r\n\t\t\t\tif ( buffer[ customProperty ].length > 0 ) {\r\n\r\n\t\t\t\t  \tgeometry.setAttribute(\r\n\t\t\t\t\t\tcustomProperty,\r\n\t\t\t\t\t\tnew Float32BufferAttribute(\r\n\t\t\t\t\t  \t\tbuffer[ customProperty ],\r\n\t\t\t\t\t  \t\tscope.customPropertyMapping[ customProperty ].length\r\n\t\t\t\t\t\t)\r\n\t\t\t\t  \t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\t\treturn geometry;\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleElement( buffer, elementName, element, cacheEntry ) {\r\n\r\n\t\t\tif ( elementName === 'vertex' ) {\r\n\r\n\t\t\t\tbuffer.vertices.push( element[ cacheEntry.attrX ], element[ cacheEntry.attrY ], element[ cacheEntry.attrZ ] );\r\n\r\n\t\t\t\tif ( cacheEntry.attrNX !== null && cacheEntry.attrNY !== null && cacheEntry.attrNZ !== null ) {\r\n\r\n\t\t\t\t\tbuffer.normals.push( element[ cacheEntry.attrNX ], element[ cacheEntry.attrNY ], element[ cacheEntry.attrNZ ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( cacheEntry.attrS !== null && cacheEntry.attrT !== null ) {\r\n\r\n\t\t\t\t\tbuffer.uvs.push( element[ cacheEntry.attrS ], element[ cacheEntry.attrT ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( cacheEntry.attrR !== null && cacheEntry.attrG !== null && cacheEntry.attrB !== null ) {\r\n\r\n\t\t\t\t\t_color.setRGB(\r\n\t\t\t\t\t\telement[ cacheEntry.attrR ] / 255.0,\r\n\t\t\t\t\t\telement[ cacheEntry.attrG ] / 255.0,\r\n\t\t\t\t\t\telement[ cacheEntry.attrB ] / 255.0\r\n\t\t\t\t\t).convertSRGBToLinear();\r\n\r\n\t\t\t\t\tbuffer.colors.push( _color.r, _color.g, _color.b );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( const customProperty of Object.keys( scope.customPropertyMapping ) ) {\r\n\r\n\t\t\t\t\tfor ( const elementProperty of scope.customPropertyMapping[ customProperty ] ) {\r\n\r\n\t\t\t\t\t  buffer[ customProperty ].push( element[ elementProperty ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( elementName === 'face' ) {\r\n\r\n\t\t\t\tconst vertex_indices = element.vertex_indices || element.vertex_index; // issue #9338\r\n\t\t\t\tconst texcoord = element.texcoord;\r\n\r\n\t\t\t\tif ( vertex_indices.length === 3 ) {\r\n\r\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 2 ] );\r\n\r\n\t\t\t\t\tif ( texcoord && texcoord.length === 6 ) {\r\n\r\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 0 ], texcoord[ 1 ] );\r\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 2 ], texcoord[ 3 ] );\r\n\t\t\t\t\t\tbuffer.faceVertexUvs.push( texcoord[ 4 ], texcoord[ 5 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( vertex_indices.length === 4 ) {\r\n\r\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 0 ], vertex_indices[ 1 ], vertex_indices[ 3 ] );\r\n\t\t\t\t\tbuffer.indices.push( vertex_indices[ 1 ], vertex_indices[ 2 ], vertex_indices[ 3 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction binaryReadElement( at, properties ) {\r\n\r\n\t\t\tconst element = {};\r\n\t\t\tlet read = 0;\r\n\r\n\t\t\tfor ( let i = 0; i < properties.length; i ++ ) {\r\n\r\n\t\t\t\tconst property = properties[ i ];\r\n\t\t\t\tconst valueReader = property.valueReader;\r\n\r\n\t\t\t\tif ( property.type === 'list' ) {\r\n\r\n\t\t\t\t\tconst list = [];\r\n\r\n\t\t\t\t\tconst n = property.countReader.read( at + read );\r\n\t\t\t\t\tread += property.countReader.size;\r\n\r\n\t\t\t\t\tfor ( let j = 0; j < n; j ++ ) {\r\n\r\n\t\t\t\t\t\tlist.push( valueReader.read( at + read ) );\r\n\t\t\t\t\t\tread += valueReader.size;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\telement[ property.name ] = list;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\telement[ property.name ] = valueReader.read( at + read );\r\n\t\t\t\t\tread += valueReader.size;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn [ element, read ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction setPropertyBinaryReaders( properties, body, little_endian ) {\r\n\r\n\t\t\tfunction getBinaryReader( dataview, type, little_endian ) {\r\n\r\n\t\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\t\t// corespondences for non-specific length types here match rply:\r\n\t\t\t\t\tcase 'int8':\tcase 'char':\treturn { read: ( at ) => {\r\n\r\n\t\t\t\t\t\treturn dataview.getInt8( at );\r\n\r\n\t\t\t\t\t}, size: 1 };\r\n\t\t\t\t\tcase 'uint8':\tcase 'uchar':\treturn { read: ( at ) => {\r\n\r\n\t\t\t\t\t\treturn dataview.getUint8( at );\r\n\r\n\t\t\t\t\t}, size: 1 };\r\n\t\t\t\t\tcase 'int16':\tcase 'short':\treturn { read: ( at ) => {\r\n\r\n\t\t\t\t\t\treturn dataview.getInt16( at, little_endian );\r\n\r\n\t\t\t\t\t}, size: 2 };\r\n\t\t\t\t\tcase 'uint16':\tcase 'ushort':\treturn { read: ( at ) => {\r\n\r\n\t\t\t\t\t\treturn dataview.getUint16( at, little_endian );\r\n\r\n\t\t\t\t\t}, size: 2 };\r\n\t\t\t\t\tcase 'int32':\tcase 'int':\t\treturn { read: ( at ) => {\r\n\r\n\t\t\t\t\t\treturn dataview.getInt32( at, little_endian );\r\n\r\n\t\t\t\t\t}, size: 4 };\r\n\t\t\t\t\tcase 'uint32':\tcase 'uint':\treturn { read: ( at ) => {\r\n\r\n\t\t\t\t\t\treturn dataview.getUint32( at, little_endian );\r\n\r\n\t\t\t\t\t}, size: 4 };\r\n\t\t\t\t\tcase 'float32': case 'float':\treturn { read: ( at ) => {\r\n\r\n\t\t\t\t\t\treturn dataview.getFloat32( at, little_endian );\r\n\r\n\t\t\t\t\t}, size: 4 };\r\n\t\t\t\t\tcase 'float64': case 'double':\treturn { read: ( at ) => {\r\n\r\n\t\t\t\t\t\treturn dataview.getFloat64( at, little_endian );\r\n\r\n\t\t\t\t\t}, size: 8 };\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let i = 0, l = properties.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst property = properties[ i ];\r\n\r\n\t\t\t\tif ( property.type === 'list' ) {\r\n\r\n\t\t\t\t\tproperty.countReader = getBinaryReader( body, property.countType, little_endian );\r\n\t\t\t\t\tproperty.valueReader = getBinaryReader( body, property.itemType, little_endian );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tproperty.valueReader = getBinaryReader( body, property.type, little_endian );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseBinary( data, header ) {\r\n\r\n\t\t\tconst buffer = createBuffer();\r\n\r\n\t\t\tconst little_endian = ( header.format === 'binary_little_endian' );\r\n\t\t\tconst body = new DataView( data, header.headerLength );\r\n\t\t\tlet result, loc = 0;\r\n\r\n\t\t\tfor ( let currentElement = 0; currentElement < header.elements.length; currentElement ++ ) {\r\n\r\n\t\t\t\tconst elementDesc = header.elements[ currentElement ];\r\n\t\t\t\tconst properties = elementDesc.properties;\r\n\t\t\t\tconst attributeMap = mapElementAttributes( properties );\r\n\r\n\t\t\t\tsetPropertyBinaryReaders( properties, body, little_endian );\r\n\r\n\t\t\t\tfor ( let currentElementCount = 0; currentElementCount < elementDesc.count; currentElementCount ++ ) {\r\n\r\n\t\t\t\t\tresult = binaryReadElement( loc, properties );\r\n\t\t\t\t\tloc += result[ 1 ];\r\n\t\t\t\t\tconst element = result[ 0 ];\r\n\r\n\t\t\t\t\thandleElement( buffer, elementDesc.name, element, attributeMap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn postProcess( buffer );\r\n\r\n\t\t}\r\n\r\n\t\tfunction extractHeaderText( bytes ) {\r\n\r\n\t\t\tlet i = 0;\r\n\t\t\tlet cont = true;\r\n\r\n\t\t\tlet line = '';\r\n\t\t\tconst lines = [];\r\n\r\n\t\t\tdo {\r\n\r\n\t\t\t\tconst c = String.fromCharCode( bytes[ i ++ ] );\r\n\r\n\t\t\t\tif ( c !== '\\n' && c !== '\\r' ) {\r\n\r\n\t\t\t\t\tline += c;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( line === 'end_header' ) cont = false;\r\n\t\t\t\t\tif ( line !== '' ) {\r\n\r\n\t\t\t\t\t\tlines.push( line );\r\n\t\t\t\t\t\tline = '';\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} while ( cont && i < bytes.length );\r\n\r\n\t\t\treturn lines.join( '\\r' ) + '\\r';\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tlet geometry;\r\n\t\tconst scope = this;\r\n\r\n\t\tif ( data instanceof ArrayBuffer ) {\r\n\r\n\t\t\tconst bytes = new Uint8Array( data );\r\n\t\t\tconst headerText = extractHeaderText( bytes );\r\n\t\t\tconst header = parseHeader( headerText );\r\n\r\n\t\t\tif ( header.format === 'ascii' ) {\r\n\r\n\t\t\t\tconst text = new TextDecoder().decode( bytes );\r\n\r\n\t\t\t\tgeometry = parseASCII( text, header );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgeometry = parseBinary( data, header );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgeometry = parseASCII( data, parseHeader( data ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { PLYLoader };\r\n"],"names":["_color","Color","PLYLoader","_Loader","_inherits","_super","_createSuper","manager","_this","_classCallCheck","call","propertyNameMapping","customPropertyMapping","_createClass","key","value","url","onLoad","onProgress","onError","scope","this","loader","FileLoader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","load","text","parse","e","console","error","itemError","mapping","data","parseHeader","headerText","headerLength","result","exec","Blob","size","currentElement","header","comments","elements","objInfo","lines","split","make_ply_element_property","propertValues","property","type","name","countType","itemType","i","length","line","trim","lineValues","lineType","shift","join","format","version","push","undefined","count","parseInt","properties","log","parseASCIINumber","n","parseFloat","parseASCIIElement","values","element","list","j","createBuffer","buffer","indices","vertices","normals","uvs","faceVertexUvs","colors","_i","_Object$keys","Object","keys","mapElementAttributes","elementNames","map","findAttrName","names","l","includes","attrX","attrY","attrZ","attrNX","attrNY","attrNZ","attrS","attrT","attrR","attrG","attrB","parseASCII","body","currentElementCount","elementDesc","attributeMap","handleElement","postProcess","geometry","BufferGeometry","setIndex","setAttribute","Float32BufferAttribute","toNonIndexed","_i2","_Object$keys2","customProperty","computeBoundingSphere","elementName","cacheEntry","setRGB","convertSRGBToLinear","r","g","b","_i3","_Object$keys3","_step","_iterator","_createForOfIteratorHelper","s","done","elementProperty","err","f","vertex_indices","vertex_index","texcoord","binaryReadElement","at","read","valueReader","countReader","setPropertyBinaryReaders","little_endian","getBinaryReader","dataview","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","ArrayBuffer","bytes","Uint8Array","cont","c","String","fromCharCode","extractHeaderText","TextDecoder","decode","DataView","loc","parseBinary","Loader"],"sourceRoot":""}